# Clean up caches created by BinDiff job
name: Dynamo-CacheCleanup
on:
  workflow_run:
    workflows: [Dynamo-BinDiff]
    types:
      - completed
jobs:
 download-diff-results:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request'
    steps:
      - name: 'Download Diff Results'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            echo RUNID-${{github.event.workflow_run.id }}
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip
      - run: ls -al 

#  cleanup-caches:
#     runs-on: ubuntu-latest
#     permissions: write-all
#     steps:
#       - name: Checkout Dynamo Repo current branch
#         uses: actions/checkout@v3
#         with:
#           path: Dynamo
#           repository: DynamoDS/Dynamo
#       - name: Cleanup Caches
#         run: |
#           gh extension install actions/gh-actions-cache
          
#           REPO=${{ github.repository }}
#           BRANCH="refs/pull/14021/merge"
#           echo "Fetching list of cache key"
#           cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )
#           ## Setting this to not fail the workflow while deleting cache keys. 
#           set +e
#           echo "Deleting caches..."
#           for cacheKey in $cacheKeysForPR
#           do
#               echo "Deleting: $cacheKey
#               gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
#           done
#           echo "::warning file=app.py,line=10,col=5::Code formatting issues detected"
#           echo "Done"
#         env:
#           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}