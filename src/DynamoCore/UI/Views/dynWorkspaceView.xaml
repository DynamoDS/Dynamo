<UserControl x:Class="Dynamo.Views.dynWorkspaceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Dynamo.Controls" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             MouseLeftButtonDown="OnMouseLeftButtonDown"
             MouseUp="OnMouseRelease"
             MouseMove="OnMouseMove" 
             KeyDown="dynWorkspaceView_KeyDown" KeyUp="dynWorkspaceView_KeyUp" 
             IsHitTestVisible="{Binding IsCurrentSpace}">

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >

        <Canvas Name="outerCanvas" 
                 Margin="0,0,0,0" 
                 ClipToBounds="True" 
                 Grid.Row="0" 
                 Grid.Column="2"
                 IsHitTestVisible="{Binding Path=DataContext.ShouldBeHitTestVisible, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}">
            
            <controls:ZoomBorder ClipToBounds="True" BorderThickness="0" x:Name="zoomBorder"
                                 Width="{Binding Path=ActualWidth, ElementName=outerCanvas}"
                                 Height="{Binding Path=ActualHeight, ElementName=outerCanvas}"
                                 Cursor="{Binding CurrentCursor}"
                                 ForceCursor="{Binding IsCursorForced}">
                <Grid>
                    <ItemsControl ItemsSource="{Binding WorkspaceElements}" Name="WorkspaceElements">

                        <!--Resources for the ItemsControl can now be found in DataTemplates.xml-->
                        
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <controls:DragCanvas
                                    UseLayoutRounding="True"
                                    Width="0" 
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    x:Name="DragCanvas"
                                    Visibility="Visible"
                                    ContextMenuOpening="WorkBench_ContextMenuOpening" 
                                    AllowDragOutOfView="True"
                                    Loaded="WorkBench_OnLoaded" IsItemsHost="True">
                                    <Canvas.Background>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Canvas.Background>
                                </controls:DragCanvas>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                            <Setter Property ="Panel.ZIndex" Value="{Binding ZIndex}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    </ItemsControl>

                    <Canvas Name="selectionCanvas"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                        <Rectangle x:Name="selectionBox"
                                   Visibility="Collapsed"
                                   Stroke="Black"
                                   StrokeThickness="1"
                                   IsHitTestVisible="False" />
                    </Canvas>
                </Grid>
                
        </controls:ZoomBorder>
            
            <Canvas.ContextMenu>
                <ContextMenu>

                    <MenuItem  Header="_Align Selection"  Name="Align">
                        <MenuItem  Header="_X Average"  Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalCenter"/>
                        <MenuItem  Header="_Left" Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalLeft"/>
                        <MenuItem  Header="_Right" Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalRight"/>
                        <MenuItem  Header="_Y Average" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalCenter"/>
                        <MenuItem  Header="_Top" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalTop"/>
                        <MenuItem  Header="_Bottom" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalBottom"/>
                        <MenuItem  Header="_Y Distribute" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalDistribute"/>
                        <MenuItem  Header="_X Distribute" Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalDistribute"/>
                    </MenuItem>

                    <MenuItem  Header="_New Node From Selection"  Name="NodeFromSelection" Command="{Binding NodeFromSelectionCommand}" />
                    <MenuItem  Header="_Node to Code"  Name="NodeToCode" Command="{Binding NodeToCodeCommand}" />
                    <MenuItem  Header="_Nodes From Selected Geometry" Visibility="{Binding Path=CanFindNodesFromElements, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"  
                               Name="ShowElementsInContext" Command="{Binding FindNodesFromSelectionCommand}" />
                    <Separator Visibility="{Binding Path=IsHomeSpace, Converter={StaticResource InverseBoolToVisibilityCollapsedConverter}}" ></Separator>
                    <MenuItem  Header="_Edit Custom Node Properties..."  Name="EditProperties" Click="WorkspacePropertyEditClick" Visibility="{Binding Path=IsHomeSpace, Converter={StaticResource InverseBoolToVisibilityCollapsedConverter}}"  />
                    <MenuItem  Header="_Publish This Custom Node..."  Name="Publish" Command="{Binding DynamoViewModel.PublishCurrentWorkspaceCommand}"  Visibility="{Binding Path=IsHomeSpace, Converter={StaticResource InverseBoolToVisibilityCollapsedConverter}}"  />
                
                </ContextMenu>
            </Canvas.ContextMenu>

        </Canvas>
        
    </Grid>
</UserControl>
