<UserControl x:Class="Dynamo.Search.SearchView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:search="clr-namespace:Dynamo.Nodes.Search"
             xmlns:searchElements="clr-namespace:Dynamo.Search.SearchElements"
             xmlns:controls="clr-namespace:Dynamo.Controls" xmlns:clr="clr-namespace:System;assembly=mscorlib"
             xmlns:dynamo="clr-namespace:Dynamo"
             mc:Ignorable="d" 
             Visibility="Visible" 
             d:DesignWidth="300" 
             d:DesignHeight="300"  
             x:Name="SearchControl" 
             MaxHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}, Path=ActualHeight}">

    <UserControl.Resources>
        <ResourceDictionary>
            <controls:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoModern.xaml" />
                <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoConverters.xaml"/>
                <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoColorsAndBrushes.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid Background="Black" >

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBox Name="SearchTextBox" KeyboardNavigation.TabIndex="0" Foreground="WhiteSmoke" Background="#222" BorderThickness="0" FontSize ="12" Padding="10,12,5,8" Margin ="0"
                       IsEnabled="True" TextChanged="SearchTextBox_TextChanged" VerticalAlignment="Stretch" Text="{Binding Path=SearchText,Mode=TwoWay}" Grid.Column="1" MinWidth="280">
            </TextBox>
            
            <TextBlock FontSize ="12" IsHitTestVisible="False" Padding="15,12,5,8" Margin ="0" Foreground="#666" Grid.Column="1" Visibility="{Binding Path=SearchText, Converter={StaticResource NonEmptyStringToCollapsedConverter}}">Search Node Library...</TextBlock>
            
        </Grid>
        
        <ScrollViewer Visibility="{Binding BrowserVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Stretch" Margin="0" Name="BrowserScrollView" VerticalAlignment="Stretch" Focusable="False"
                      VerticalScrollBarVisibility="Visible" Background="Black" BorderThickness="0" Width="{Binding Path=ActualWidth,ElementName=SearchControl}" Grid.Column="0" Grid.ColumnSpan="1" Grid.Row="1" >

            <ScrollViewer.Resources>

                <Style x:Key="SearchTreeView" TargetType="{x:Type TreeView}">
                    <Setter Property="Focusable" Value="False"></Setter>
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeView}">
                                <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ScrollViewer Focusable="false" Background="Transparent" Padding="{TemplateBinding Padding}" CanContentScroll="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                </Style>

                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Width" Value="24"/>
                    <Setter Property="Foreground" Value="#888"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">

                                <Border Width="24" Background="Transparent">
                                    <Border SnapsToDevicePixels="true" Width="24" Height="10" Background="{TemplateBinding Background}" x:Name="border">
                                        <Path HorizontalAlignment="Center" 
                                              Margin="1,1,1,1" x:Name="ExpandPath" Fill="{TemplateBinding Foreground}" 
                                              Data="M 0 10 L 5 5 L 0 0 Z"/>
                                    </Border>
                                </Border>

                                <ControlTemplate.Triggers>

                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Data" TargetName="ExpandPath" Value="M 0 0 L 5 5 L 10 0 Z"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Focusable" Value="False"></Setter>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}"></Setter>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"></Setter>
                    <Setter Property="Visibility" Value="{Binding Visibility, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Collapse}"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">

                                <Button Command="{Binding ToggleIsExpanded}">
                                    <Button.Focusable>False</Button.Focusable>

                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Button.Template>

                                    <Border Name="ContainerLight" BorderThickness="3,0,0,0" BorderBrush="#222">
                                        <Border Name="Bd" BorderThickness="0,1,0,0" BorderBrush="#222" >

                                            <Grid>

                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                
                                                <Grid Background="Transparent" Grid.Row="0">

                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>

                                                    <ToggleButton Margin="5,10,0,0" Grid.Row="0" VerticalAlignment="Top" x:Name="Expander" Background="Transparent" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded}"/>
                                                    
                                                    <Border Margin="5,7,5,5" Name="NodeName" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Center" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                                        <ContentPresenter Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" ContentSource="Header"/>
                                                    </Border>

                                                </Grid>

                                                <Border Grid.Column="0" Grid.ColumnSpan="1" Grid.Row="1" Margin="15 0 0 0" >
                                                    <ItemsPresenter x:Name="ItemsHost" />
                                                </Border>

                                            </Grid>
                                            

                                        </Border>

                                    </Border>
                                </Button>

                                <ControlTemplate.Triggers>

                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>

                                    <Trigger Property="IsExpanded" Value="true">

                                        <!--<Setter Property="BorderBrush" TargetName="ContainerLight" Value="White"/>-->
                                    </Trigger>

                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                                        <Setter Property="Margin" TargetName="NodeName" Value="10,7,5,5"/>
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="#555"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="IsExpanded" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="#333"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="HasItems" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="#444"/>
                                    </MultiTrigger>

                                    <!--<MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>-->

                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ScrollViewer.Resources>

            <!--CATEGORIES-->

            <TreeView ItemsSource="{Binding Path=BrowserRootCategories}" Style="{StaticResource SearchTreeView}" BorderThickness="0" Grid.Column="0" Grid.ColumnSpan="1" >
                
                <TreeView.Resources>

                    <HierarchicalDataTemplate DataType = "{x:Type search:BrowserRootElement}" ItemsSource="{Binding Path=Items}" >

                        <TextBlock Foreground="WhiteSmoke" FontSize="14" Text="{Binding Path=Name}"/>

                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType = "{x:Type search:BrowserInternalElement}" ItemsSource="{Binding Path=Items}">

                        <TextBlock Foreground="WhiteSmoke" Text="{Binding Path=Name}"/>

                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType="{x:Type searchElements:TopSearchElement}">

                        <StackPanel Orientation="Horizontal">

                            <TextBlock Foreground="WhiteSmoke" Text="{Binding Path=Name}" ToolTipService.InitialShowDelay="0">
                            
                                <TextBlock.ToolTip>
                                    <StackPanel Width ="Auto" MaxWidth="235" MaxHeight="200" Height="Auto">
                                        <TextBlock Name="type" TextWrapping="Wrap" HorizontalAlignment="Stretch" FontWeight="Bold" VerticalAlignment="Top" 
                                                 Text="{Binding Path=Type}" FontSize="11" TextTrimming="WordEllipsis" Margin="2" />
                                        
                                        <TextBlock Name="name" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                                                 Text="{Binding Path=Description, Converter={StaticResource TooltipLengthTruncater}}" FontSize="11" TextTrimming="WordEllipsis" Margin="2" Visibility="{Binding Path=Description, Converter={StaticResource EmptyStringToCollapsedConverter}}"/>
                                
                                    </StackPanel>
                                </TextBlock.ToolTip>
                                
                            </TextBlock>

                            <Border Background="#444" Margin="10 0 0 0" CornerRadius="2" >

                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding Type}" Value="Custom Node">
                                                <Setter Property="Visibility" Value="Visible"></Setter>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Type}" Value="Node">
                                                <Setter Property="Visibility" Value="Hidden"></Setter>
                                            </DataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <TextBlock Foreground="Black" FontWeight="Bold" Padding="4" FontSize="9" Text="C" ToolTipService.InitialShowDelay="0">
                                </TextBlock>

                            </Border>

                        </StackPanel>

                    </HierarchicalDataTemplate>
                    
                    <HierarchicalDataTemplate DataType="{x:Type searchElements:NodeSearchElement}">

                        <StackPanel Orientation="Horizontal">
                            
                            <TextBlock Foreground="WhiteSmoke" Text="{Binding Path=Name}" ToolTipService.InitialShowDelay="0">
                            
                                <TextBlock.ToolTip>
                                    <StackPanel Width ="Auto" MaxWidth="235" MaxHeight="200" Height="Auto">
                                        <TextBlock Name="type" TextWrapping="Wrap" HorizontalAlignment="Stretch" FontWeight="Bold" VerticalAlignment="Top" 
                                                 Text="{Binding Path=Type}" FontSize="11" TextTrimming="WordEllipsis" Margin="2" />
                                        
                                        <TextBlock Name="name" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                                                 Text="{Binding Path=Description, Converter={StaticResource TooltipLengthTruncater}}" FontSize="11" TextTrimming="WordEllipsis" Margin="2" Visibility="{Binding Path=Description, Converter={StaticResource EmptyStringToCollapsedConverter}}"/>
                                
                                    </StackPanel>
                                </TextBlock.ToolTip>
                                
                            </TextBlock>

                            <Border Background="#444" Margin="10 0 0 0" CornerRadius="2" >

                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding Type}" Value="Custom Node">
                                                <Setter Property="Visibility" Value="Visible"></Setter>
                                            </DataTrigger>
                                        
                                            <DataTrigger Binding="{Binding Type}" Value="Node">
                                                <Setter Property="Visibility" Value="Hidden"></Setter>
                                            </DataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <TextBlock Foreground="Black" FontWeight="Bold" Padding="4" FontSize="9" Text="C" ToolTipService.InitialShowDelay="0">
                                </TextBlock>
                                
                            </Border>
                            
                        </StackPanel>
                        
                        <!--<Grid>
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualWidth}"></ColumnDefinition>
                            </Grid.ColumnDefinitions> 
                            
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            
                            <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="20"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0">
                                        <TextBlock Foreground="WhiteSmoke" Text="{Binding Path=Name}" />
                                </Border>
                                <Border Grid.Column="1">
                                    <Button Width="14" Height="16" Foreground="Black" Style="{DynamicResource ResourceKey=SBadgeButton}" Command="{Binding Path=ToggleDescriptionVisibilityCommand }">?</Button>
                                </Border>
                                
                            </Grid>

                            <TextBlock Padding="0,8,0,0" Grid.Row="1" Foreground="LightGray" FontSize="10" Text="{Binding Path=Description}" Visibility="{Binding Path=DescriptionVisibility}" TextWrapping="Wrap"/>
                            
                        </Grid>-->
                        
                    </HierarchicalDataTemplate>

                </TreeView.Resources>

            </TreeView>

        </ScrollViewer>

    </Grid>



</UserControl>
  
  