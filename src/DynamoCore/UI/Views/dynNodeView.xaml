<UserControl x:Class="Dynamo.Controls.dynNodeView"
    x:ClassModifier="public"
    x:FieldModifier="public"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:connectors="clr-namespace:Dynamo.Connectors" xmlns:controls="clr-namespace:Dynamo.Views"
             Height="Auto"
    Width="Auto" 
    Name="topControl" 
    Loaded="topControl_Loaded" 
    KeyUp="OnKeyUp" 
    PreviewKeyUp="OnPreviewKeyUp"
    MouseLeftButtonDown="topControl_MouseLeftButtonDown"
    MouseRightButtonDown="topControl_MouseRightButtonDown" 

             Canvas.Left="{Binding Left, Mode=TwoWay}" 
             Canvas.Top="{Binding Top, Mode=TwoWay}">
   
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoColorsAndBrushes.xaml" />
                <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoConverters.xaml" />
                <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoModern.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <UserControl.ToolTip>
        <Grid Width ="Auto" MaxWidth="235"  Height="Auto">
            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <!-- Errors -->
                
                <TextBlock Name="tt_errorTitle" TextWrapping="Wrap" 
                           Text="Error Message" FontSize="11" Margin="2" FontWeight="Bold" Foreground="Red"
                           Visibility="{Binding Path=ToolTipText, Converter={StaticResource EmptyStringToCollapsedConverter}}"/>
                <TextBlock Name="tt_errorText" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                           Text="{Binding Path=ToolTipText}" FontSize="11" TextTrimming="WordEllipsis" Margin="2" Foreground="Red"
                           Visibility="{Binding Path=ToolTipText, Converter={StaticResource EmptyStringToCollapsedConverter}}"/>

            <!-- Description -->
                
                <TextBlock Name="tt_name" TextWrapping="Wrap" 
                           Text="{Binding Path=NickName}" FontSize="11" FontWeight="Bold" TextTrimming="WordEllipsis" Margin="2" 
                           Visibility="{Binding Path=ToolTipText, Converter={StaticResource NonEmptyStringToCollapsedConverter}}"/>
                <TextBlock Name="tt_descript" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                           Text="{Binding Path=Description, Converter={StaticResource TooltipLengthTruncater}}" FontSize="11" TextTrimming="WordEllipsis" Margin="2" 
                           Visibility="{Binding Path=ToolTipText, Converter={StaticResource NonEmptyStringToCollapsedConverter}}"/>

            <!-- Last value -->
                
                <TextBlock Name="tt_lastValueName" 
                           VerticalAlignment="Top" Text="Current Value" FontSize="11" FontWeight="Bold" Margin="2, 7, 2, 2" 
                           Visibility="{Binding Path=ToolTipText, Converter={StaticResource NonEmptyStringToCollapsedConverter}}"/>
                <TextBlock Name="tt_lastValue" TextWrapping="Wrap" 
                           Text="{Binding Path=OldValue}"  FontSize="11" TextTrimming="WordEllipsis" Margin="2" 
                           Visibility="{Binding Path=ToolTipText, Converter={StaticResource NonEmptyStringToCollapsedConverter}}"/>
                
            </StackPanel>
        </Grid>
    </UserControl.ToolTip>

    <Grid Name="grid" x:FieldModifier="public" Canvas.ZIndex="3" Margin="0">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!-- CONTEXT MENU -->
        
        <Grid.ContextMenu>
            <ContextMenu Name="MainContextMenu" x:FieldModifier="public" ContextMenuOpening="MainContextMenu_ContextMenuOpening">
                <MenuItem Name="deleteElem_cm" Header="Delete" Command="{Binding Path=DeleteCommand}"/>
                <MenuItem Header="Lacing" Name="lacingStrategy" Visibility="{Binding Path=ArgumentLacing, Converter={StaticResource LacingToVisibilityConverter}}">
                  <MenuItem Name="lacing_strategy_single" IsCheckable="True" 
                              IsChecked="{Binding Path=ArgumentLacing,Converter={StaticResource EnumToBoolConverter},ConverterParameter=First,Mode=OneWay}" 
                              Command="{Binding Path=SetLacingTypeCommand}" CommandParameter="First" Header="First"/>
                    <MenuItem Name="lacing_strategy_shortest" IsCheckable="True" 
                              IsChecked="{Binding Path=ArgumentLacing,Converter={StaticResource EnumToBoolConverter},ConverterParameter=Shortest, Mode=OneWay}" 
                              Command="{Binding Path=SetLacingTypeCommand}" CommandParameter="Shortest" Header="Shortest"/>
                    <MenuItem Name="lacing_strategy_longest" IsCheckable="True" 
                              IsChecked="{Binding Path=ArgumentLacing,Converter={StaticResource EnumToBoolConverter},ConverterParameter=Longest,Mode=OneWay}" 
                              Command="{Binding Path=SetLacingTypeCommand}" CommandParameter="Longest" Header="Longest"/>
                    <MenuItem Name="lacing_strategy_cross" IsCheckable="True" 
                              IsChecked="{Binding Path=ArgumentLacing,Converter={StaticResource EnumToBoolConverter},ConverterParameter=CrossProduct,Mode=OneWay}" 
                              Command="{Binding Path=SetLacingTypeCommand}" CommandParameter="CrossProduct" Header="Cross Product"/>
                </MenuItem>
                <MenuItem Name="isVisible_cm" Header="Preview" 
                          IsChecked="{Binding Path=IsVisible}" 
                          Command="{Binding Path=ToggleIsVisibleCommand}"
                          Visibility="{Binding Path=ShowsVisibilityToggles, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"/>
                <MenuItem Name="isUpstreamVisible_cm" Header="Preview Upstream" 
                          IsChecked="{Binding Path=IsUpstreamVisible}"
                          Command="{Binding Path=ToggleIsUpstreamVisibleCommand}"
                          Visibility="{Binding Path=ShowsVisibilityToggles, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"/>
                <MenuItem Name="rename_cm" Header="Rename Node..." 
                          Command="{Binding Path=RenameCommand}"/>
                <MenuItem Name="help_cm" Header="Help..." 
                          Command="{Binding Path=ShowHelpCommand}"/>
            </ContextMenu>
        </Grid.ContextMenu>

        <Grid Canvas.ZIndex="4" Grid.Row="1" Margin="3,5,3,5" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*" MinWidth="40"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            
        <!-- INPUT PORTS -->

        
            <DockPanel Name="gridLeft" 
            VerticalAlignment="Stretch"
            IsHitTestVisible="True" 
            Margin="0"
            Background="Transparent"
            Canvas.ZIndex="1" Width="Auto" Grid.Column="0" Grid.Row="0">
            
            <ItemsControl ItemsSource="{Binding Path=InPorts}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <connectors:dynPortView></connectors:dynPortView>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            
        </DockPanel>
        
        <!-- OUTPUT PORTS -->
        
        <DockPanel Name="gridRight" 
              VerticalAlignment="Stretch"
              IsHitTestVisible="True" 
              Background="Transparent"
              Canvas.ZIndex="1" Width="Auto" Grid.Column="2" Grid.Row="0">
            <ItemsControl ItemsSource="{Binding Path=OutPorts}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <connectors:dynPortView></connectors:dynPortView>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
        </DockPanel>

        <!-- INPUT GRID -->
            <Grid Name="inputGrid"
                x:FieldModifier="public"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                Height="Auto"
                Width="Auto"
                Background="Transparent"
                Margin="5,0,5,0"
                Canvas.ZIndex="5"  
                IsEnabled="{Binding Path=IsInteractionEnabled}"
                Grid.Column="1" Grid.Row="0"/>

        </Grid>
        
        <TextBlock Text="{Binding Path=ArgumentLacing, Converter={StaticResource LacingToAbbreviationConverter}}" 
                       ToolTip="{Binding Path=ArgumentLacing, Converter={StaticResource LacingToTooltipConverter}}" 
                       FontFamily="Tahoma" FontSize="8" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="5" 
                       HorizontalAlignment="right" VerticalAlignment="Bottom" Visibility="{Binding Path=ArgumentLacing, Converter={StaticResource LacingToVisibilityConverter}}"
                       Foreground="#99000000" FontWeight="Bold" Canvas.ZIndex="6"/>
        <Border Background="#C8505050" 
                VerticalAlignment="Stretch" 
                HorizontalAlignment="Stretch" 
                IsHitTestVisible="False" Canvas.ZIndex="5" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="2,2,2,0"></Border>
        <TextBlock  Name="nickNameBlock" 
                         VerticalAlignment="Top" 
                         HorizontalAlignment="Stretch"
                         Text="{Binding NickName, UpdateSourceTrigger=PropertyChanged}"
                            Margin="2,2,2,0"
                         Padding="5"
                         FontSize="11"
                         FontWeight="Bold" 
                         TextAlignment="Center" 
                         IsHitTestVisible="True" 
                         Canvas.ZIndex="5" 
                         Height ="25"
                         Background="{x:Null}" FontStyle="Normal" Foreground="LightGray"
                    Visibility="{Binding Path=DataContext.Zoom, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:dynWorkspaceView}}, Converter={StaticResource ZoomToVisibilityConverter}}"
            Grid.Row="0" Grid.Column="0"
                  MouseDown="NickNameBlock_OnMouseDown">
        </TextBlock>
        
        <!-- CENTER CANVAS -->

        <Canvas Canvas.Left="0" 
                Canvas.Top="0" 
                Name="elementCanvas" 
                Grid.Row="0" Grid.RowSpan="2" Grid.Column="0">

            <Rectangle Canvas.Left="8" Canvas.Top="8" Canvas.ZIndex="1"  Width="{Binding ElementName=topControl, Path=ActualWidth}"
                       Height="{Binding ElementName=topControl, Path=ActualHeight}"
                       Name="customNodeRectangle2" 
                       Stroke="DarkGray" 
                       StrokeThickness="2" StrokeDashArray="4,1"
                       Fill="{x:Null}" 
                       RadiusX="2" RadiusY="2"
                       Visibility="{Binding Path=IsCustomFunction, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
            </Rectangle>
            
            <!--<Rectangle Canvas.Left="5" Canvas.Top="5" Canvas.ZIndex="1"  Width="{Binding ElementName=topControl, Path=ActualWidth}"
                       Height="{Binding ElementName=topControl, Path=ActualHeight}"
                       Name="customNodeRectangle1" 
                       Stroke="DarkGray" 
                       StrokeThickness="2" StrokeDashArray="4,1"
                       Fill="{x:Null}" 
                       RadiusX="2" RadiusY="2"
                       Visibility="{Binding Path=IsCustomFunction, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
            </Rectangle>-->

            <Rectangle Width="{Binding ElementName=topControl, Path=ActualWidth}"
                       Height="{Binding ElementName=topControl, Path=ActualHeight}"
                       Name="elementRectangle" 
                       Stroke="{Binding Path=IsSelected, Converter={StaticResource BooleanToBrushConverter}, Mode=OneWay}" 
                       StrokeThickness="2"
                       Fill="{Binding Path=State, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StateToColorConverter}}" 
                       RadiusX="2" RadiusY="2" Canvas.ZIndex="2">
                <Rectangle.Effect>
                    <DropShadowEffect
                    ShadowDepth="0"
                    Color="#222"
                    Opacity="0.45"
                    BlurRadius="12.0" />
                </Rectangle.Effect>
            </Rectangle>
        </Canvas>

        
        
    </Grid>

</UserControl>

    