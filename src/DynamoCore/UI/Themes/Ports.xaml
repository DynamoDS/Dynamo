<ResourceDictionary   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                      xmlns:controls="clr-namespace:Dynamo.Views"
                      xmlns:viewModels="clr-namespace:Dynamo.ViewModels"
                      xmlns:interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                      xmlns:views="clr-namespace:Dynamo.UI.Views">
  
    <!-- Templates
        
    Use this to add color resources:
    ==========================================
    <Color x:Key="ColorKey" >#FFFFFFAE</Color>
    
    You can use this to create a style for a button, just change the TargetType or add 
    other control separated by commas and add setter nodes to change properties:
    ==========================================
    <Style x:Key="SimpleStyle" TargetType="Button">
        <Setter Property="Background" Value="Red" />
    </Style>
        
    -->
    
    <!-- Add your resources here -->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoConverters.xaml" />
        <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoModern.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type viewModels:PortViewModel}">
        <Grid Name="mainGrid" Background="Transparent" IsHitTestVisible="True" Height="20" Width="{Binding Path=PortName, Converter={StaticResource PortNameToWidthConverter}}">
            <interactivity:Interaction.Triggers>
                <views:HandlingEventTrigger EventName="MouseLeftButtonDown">
                    <interactivity:InvokeCommandAction Command="{Binding Path=ConnectCommand}"/>
                </views:HandlingEventTrigger>
            </interactivity:Interaction.Triggers>
            <Grid Name="portGrid" Background="Transparent" IsHitTestVisible="True">
                
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Use Default Value"
                          IsCheckable="True"
                          IsEnabled="{Binding Path=DefaultValueEnabled, Mode=TwoWay}"
                          IsChecked="{Binding Path=UsingDefaultValue, Mode=TwoWay}" />
                    </ContextMenu>
                </Grid.ContextMenu>

                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                    Name="portRect" IsHitTestVisible="True">
                    <Canvas.Style>
                        <Style TargetType="{x:Type Canvas}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="White"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="1.0"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="White"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Opacity" Value=".5"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Style>
                </Canvas>

                <TextBlock Name="portNameTb" Width="Auto" Style="{StaticResource SZoomFadeText}"
                   Text="{Binding Path=PortName, Converter={StaticResource PortNameConverter} }"
                   VerticalAlignment="Center"
                   FontSize="12" FontFamily="Trebuchet"
                   Padding="6,7,6,7"
                   IsHitTestVisible="False" 
                   Background="{x:Null}" 
                   Foreground="#FF505050">
                    </TextBlock>
            </Grid>
        </Grid>
    </DataTemplate>

</ResourceDictionary>