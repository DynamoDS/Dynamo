<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BuiltInNodes</name>
    </assembly>
    <members>
		<member name="List.Rank">
      <summary>Returns the deepest depth of the list</summary>
      <param name="list">list of values</param>
            <search>rank,depth,nesting,ranks</search>
        </member>
		<member name="List.RemoveIfNot">
		  <summary>
        Removes the members of the list which are not members of the specified type.
      </summary>
			<param name="list">list of values</param>
			<param name="type">type of element</param>
      <search>remove,not,ofType,filtertype</search>
    </member>
		<member name="List.Equals">
      <summary>Determines whether two object instances are equal.</summary>
      <param name="first object"></param>
			<param name="second object"></param>
            <search>equals</search>
        </member>
    <member name="List.SortByFunction">
            <summary>Use a function to determine how list items should be sorted</summary>
            <param name="list">list of values</param>
            <param name="function"></param>
            <search>sort,order</search>
    </member>
		<member name="Print">
            <param name="msg"></param>
            <search>print</search>
        </member>
		<member name="GetElapsedTime">
            <search>time,elapsed</search>
        </member>
		<member name="ToString">
            <param name="object">some object</param>
            <search>string</search>
        </member>
		<member name="__ToStringFromObject">
            <param name="object">some object</param>
            <search>string,from,object</search>
        </member>
		<member name="__ToStringFromArray">
            <param name="list">some list</param>
            <search>string,from,array</search>
        </member>
		<member name="ImportData">
            <param name="appname"></param>
			<param name="connectionParameters"></param>
            <search>import,data</search>
        </member>
		<member name="GetKeys">
			<param name="list">list of values</param>
            <search>keys</search>
        </member>
		<member name="GetValues">
			<param name="list">list of values</param>
            <search>values</search>
        </member>
		<member name="RemoveKey">
			<param name="list">list of values</param>
			<param name="key"></param>
            <search>remove,key</search>
        </member>
		<member name="ContainsKey">
			<param name="list">list of values</param>
			<param name="key"></param>
            <search>contain,key</search>
        </member>
		<member name="Evaluate">
			<param name="functionPointer"></param>
			<param name="params"></param>
			<param name="unpackParams"></param>
            <search>evaluate</search>
        </member>
		<member name="__Apply">
			<param name="functionObject"></param>
			<param name="param"></param>
            <search>apply</search>
        </member>
		<member name="__ApplyList">
			<param name="functionObject"></param>
			<param name="param"></param>
            <search>apply,list</search>
        </member>
		<member name="__GetOutput">
			<param name="outputs"></param>
			<param name="key"></param>
            <search>output</search>
        </member>
		<member name="__Compose">
			<param name="funcs"></param>
            <search>compose,functionchain</search>
        </member>
		<member name="__ComposeBuffered">
			<param name="funcs"></param>
			<param name="amt"></param>
			<param name="arg"></param>
            <search>compose,buffered</search>
        </member>
		<member name="MinimumItemByKey">
			<param name="list">list of values</param>
			<param name="keyProjector"></param>
            <search>min,item,key</search>
        </member>
		<member name="MaximumItemByKey">
			<param name="list">list of values</param>
			<param name="keyProjector"></param>
            <search>max,item,key</search>
        </member>
		<member name="__Replace">
			<param name="list">list of values</param>
			<param name="with"></param>
			<param name="predicate"></param>
            <search>replace</search>
        </member>
		<member name="__Filter">
			<param name="list">list of values</param>
			<param name="predicate"></param>
            <search>filter</search>
        </member>
		<member name="__Combine">
			<param name="func">function</param>
			<param name="lists"></param>
            <search>combine</search>
        </member>
		<member name="__Map">
			<param name="func">function</param>
			<param name="arg"></param>
            <search>map</search>
        </member>
		<member name="__LaceShortest">
			<param name="func">function</param>
			<param name="lists"></param>
            <search>lace,shortest</search>
        </member>
		<member name="__LaceLongest">
			<param name="func">function</param>
			<param name="lists"></param>
            <search>lace,longest</search>
        </member>
		<member name="__ApplyNested">
			<param name="fs">function</param>
			<param name="xs"></param>
			<param name="amt"></param>
            <search>apply,nested</search>
        </member>
		<member name="__CartesianProduct">
			<param name="func">function</param>
			<param name="lists"></param>
            <search>cartesian,product</search>
        </member>
		<member name="__Scan">
			<param name="accumulator"></param>
			<param name="seed"></param>
			<param name="lists"></param>
            <search>scan</search>
        </member>
		<member name="__Reduce">
			<param name="accumulator"></param>
			<param name="seed"></param>
			<param name="lists"></param>
            <search>reduce</search>
        </member>
		<member name="GroupByFunction">
      <summary>Use a function to determine how list items should be grouped</summary>
      <param name="list">list of values</param>
      <param name="function"></param>
      <search>group,function</search>
    </member>
		<member name="TrueForAll">
			<param name="list">list of values</param>
			<param name="predicate"></param>
            <search>true,all</search>
        </member>
		<member name="TrueForAny">
			<param name="list">list of values</param>
			<param name="predicate"></param>
            <search>true,any</search>
        </member>
		<member name="__ForEach">
			<param name="functionObject"></param>
			<param name="lists"></param>
            <search>foreach</search>
        </member>
		<member name="LoopWhile">
			<param name="init"></param>
			<param name="continueWhile"></param>
			<param name="loopBody"></param>
            <search>loop,while,repeat</search>
        </member>
    </members>
</doc>
