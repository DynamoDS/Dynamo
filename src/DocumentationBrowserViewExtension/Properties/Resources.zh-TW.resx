<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BrowserViewCannotBeAddedToSidebar" xml:space="preserve">
    <value>瀏覽器檢視尚未初始化，無法加入到側邊欄。</value>
  </data>
  <data name="ExtensionName" xml:space="preserve">
    <value>文件瀏覽器</value>
  </data>
  <data name="FileNotFoundFailureMessage" xml:space="preserve">
    <value>找不到檔案</value>
  </data>
  <data name="ImageFitToolTip" xml:space="preserve">
    <value>縮放至佈滿</value>
  </data>
  <data name="ImageInsertToolTip" xml:space="preserve">
    <value>加入工作區\n\n將範例檔以群組方式加入工作區。為了避免發生潛在問題，執行模式將變更為「手動」。</value>
  </data>
  <data name="ImageZoomInToolTip" xml:space="preserve">
    <value>拉近</value>
  </data>
  <data name="ImageZoomOutToolTip" xml:space="preserve">
    <value>拉遠</value>
  </data>
  <data name="InputDefaultValue" xml:space="preserve">
    <value>預設值</value>
  </data>
  <data name="InsertedGroupSubTitle" xml:space="preserve">
    <value>插入的 Dynamo 圖表</value>
  </data>
  <data name="InsertGraphContainsNodesAlertMessage" xml:space="preserve">
    <value>圖表已包含要插入的節點。</value>
  </data>
  <data name="InternalErrorNoDetailsAvailable" xml:space="preserve">
    <value>此錯誤沒有進一步的詳細資料。</value>
  </data>
  <data name="InvalidDocumentationLink" xml:space="preserve">
    <value>文件連結不是有效的 URI。</value>
  </data>
  <data name="MenuItemText" xml:space="preserve">
    <value>展示文件瀏覽器(_D)</value>
  </data>
  <data name="NodeDocumentationCategory" xml:space="preserve">
    <value>品類</value>
  </data>
  <data name="NodeDocumentationDescription" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="NodeDocumentationInputs" xml:space="preserve">
    <value>輸入</value>
  </data>
  <data name="NodeDocumentationInputsAndOutputs" xml:space="preserve">
    <value>輸入與輸出</value>
  </data>
  <data name="NodeDocumentationIssueHelp" xml:space="preserve">
    <value>節點問題說明</value>
  </data>
  <data name="NodeDocumentationNodeInfo" xml:space="preserve">
    <value>節點資訊</value>
  </data>
  <data name="NodeDocumentationOriginalNodeName" xml:space="preserve">
    <value>節點類型</value>
  </data>
  <data name="NodeDocumentationOutputs" xml:space="preserve">
    <value>輸出</value>
  </data>
  <data name="NodeInputsDataType" xml:space="preserve">
    <value>資料類型</value>
  </data>
  <data name="NodeInputsDescription" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="NodeInputsName" xml:space="preserve">
    <value>名稱</value>
  </data>
  <data name="NodeInputsType" xml:space="preserve">
    <value>類型</value>
  </data>
  <data name="NodeInputsValue" xml:space="preserve">
    <value>預設值</value>
  </data>
  <data name="ScriptTagsRemovalWarning" xml:space="preserve">
    <value>在說明文件中偵測到的指令碼標籤已移除。</value>
  </data>
  <data name="ToastFileNotFoundLocationNotificationText" xml:space="preserve">
    <value>在 {0} 找不到範例檔案</value>
  </data>
  <data name="ToastInsertGraphNotificationText" xml:space="preserve">
    <value>範例檔已加入工作區。執行模式已變更為「手動」。</value>
  </data>
</root>