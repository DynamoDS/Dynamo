<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BrowserViewCannotBeAddedToSidebar" xml:space="preserve">
    <value>浏览器视图尚未初始化，无法添加到侧栏。</value>
  </data>
  <data name="ExtensionName" xml:space="preserve">
    <value>文档浏览器</value>
  </data>
  <data name="FileNotFoundFailureMessage" xml:space="preserve">
    <value>文件未找到</value>
  </data>
  <data name="ImageFitToolTip" xml:space="preserve">
    <value>缩放匹配</value>
  </data>
  <data name="ImageInsertToolTip" xml:space="preserve">
    <value>添加到工作空间\n\n将示例文件作为组添加到工作空间。为了避免可能出现问题，运行模式将更改为“手动”。</value>
  </data>
  <data name="ImageZoomInToolTip" xml:space="preserve">
    <value>放大</value>
  </data>
  <data name="ImageZoomOutToolTip" xml:space="preserve">
    <value>缩小</value>
  </data>
  <data name="InputDefaultValue" xml:space="preserve">
    <value>默认值</value>
  </data>
  <data name="InsertedGroupSubTitle" xml:space="preserve">
    <value>插入的 Dynamo 图形</value>
  </data>
  <data name="InsertGraphContainsNodesAlertMessage" xml:space="preserve">
    <value>图形已包含要插入的节点。</value>
  </data>
  <data name="InternalErrorNoDetailsAvailable" xml:space="preserve">
    <value>此错误没有可用的更多详细信息。</value>
  </data>
  <data name="InvalidDocumentationLink" xml:space="preserve">
    <value>文档链接不是有效的 URI。</value>
  </data>
  <data name="MenuItemText" xml:space="preserve">
    <value>显示文档浏览器(_D)</value>
  </data>
  <data name="NodeDocumentationCategory" xml:space="preserve">
    <value>类别</value>
  </data>
  <data name="NodeDocumentationDescription" xml:space="preserve">
    <value>说明</value>
  </data>
  <data name="NodeDocumentationInputs" xml:space="preserve">
    <value>输入</value>
  </data>
  <data name="NodeDocumentationInputsAndOutputs" xml:space="preserve">
    <value>输入和输出</value>
  </data>
  <data name="NodeDocumentationIssueHelp" xml:space="preserve">
    <value>节点问题帮助</value>
  </data>
  <data name="NodeDocumentationNodeInfo" xml:space="preserve">
    <value>节点信息</value>
  </data>
  <data name="NodeDocumentationOriginalNodeName" xml:space="preserve">
    <value>节点类型</value>
  </data>
  <data name="NodeDocumentationOutputs" xml:space="preserve">
    <value>输出</value>
  </data>
  <data name="NodeInputsDataType" xml:space="preserve">
    <value>数据类型</value>
  </data>
  <data name="NodeInputsDescription" xml:space="preserve">
    <value>说明</value>
  </data>
  <data name="NodeInputsName" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="NodeInputsType" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="NodeInputsValue" xml:space="preserve">
    <value>默认值</value>
  </data>
  <data name="ScriptTagsRemovalWarning" xml:space="preserve">
    <value>在帮助文档中检测到的脚本标记已被删除。</value>
  </data>
  <data name="ToastFileNotFoundLocationNotificationText" xml:space="preserve">
    <value>找不到 {0} 中的样例文件</value>
  </data>
  <data name="ToastInsertGraphNotificationText" xml:space="preserve">
    <value>示例文件已添加到工作空间。运行模式已更改为“手动”。</value>
  </data>
</root>