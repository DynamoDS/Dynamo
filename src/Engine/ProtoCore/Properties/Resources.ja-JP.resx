<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttributeArgMustBeConstant" xml:space="preserve">
    <value>属性引数は定数式にする必要があります</value>
  </data>
  <data name="BaseIsExpectedToCallBaseConstructor" xml:space="preserve">
    <value>ベース クラスのコンストラクタを呼び出すには、ここにキーワード「base」が必要です</value>
  </data>
  <data name="CheckIfTheElementsInListAreSameType" xml:space="preserve">
    <value>指定したリスト内のすべての要素が同じタイプかどうかを確認します</value>
  </data>
  <data name="ChecksIfLengthsAreSameInMultiDimentionalList" xml:space="preserve">
    <value>多次元のリスト内にあるそれぞれの行の要素の数が同じかどうかを確認します</value>
  </data>
  <data name="ChecksIfListContainsTheElement" xml:space="preserve">
    <value>指定した要素が指定したリストにあるかどうかを確認します</value>
  </data>
  <data name="ChecksIfTheListIsAllFalse" xml:space="preserve">
    <value>指定したリスト内のすべての要素が false かどうかを確認します</value>
  </data>
  <data name="ChecksIfTheListIsAllTrue" xml:space="preserve">
    <value>指定したリスト内のすべての要素が True かどうかを確認します</value>
  </data>
  <data name="ChecksListWithUniformDepth" xml:space="preserve">
    <value>リストの深さが一定であるかどうかを確認します</value>
  </data>
  <data name="CloseBracketExpected" xml:space="preserve">
    <value>')' がありません - 括弧が不完全です</value>
  </data>
  <data name="ContainsKeys" xml:space="preserve">
    <value>指定したキーが指定したキー値ペアのリストにあるかどうかを確認します</value>
  </data>
  <data name="DeterminesObjectsAreEqual" xml:space="preserve">
    <value>2 つのオブジェクト インスタンスが等しいかどうかを判断します</value>
  </data>
  <data name="EmptyCharacterLiteral" xml:space="preserve">
    <value>空の文字リテラル</value>
  </data>
  <data name="FailedToImport" xml:space="preserve">
    <value>{0} の読み込みに失敗しました</value>
  </data>
  <data name="FunctionCallCannotBeAtLeftSide" xml:space="preserve">
    <value>割り当ての左側では、関数呼び出しが許可されていません</value>
  </data>
  <data name="GetKeys" xml:space="preserve">
    <value>指定したキーと値のペアのリストからすべてのキーを取得します</value>
  </data>
  <data name="Gettypes" xml:space="preserve">
    <value>現在のインスタンスの Type を取得します</value>
  </data>
  <data name="GetValues" xml:space="preserve">
    <value>指定したキーと値のペアのリストに格納されているすべての要素を返します。シンプルなリストの場合は、リストのすべての要素を返します</value>
  </data>
  <data name="ImportFileByGivenFilePath" xml:space="preserve">
    <value>カンマで区切られた値を含むテキスト ファイルからデータを 2 次元のリストに読み込みます</value>
  </data>
  <data name="ImportFileByGivenFilePathWithMode" xml:space="preserve">
    <value>カンマで区切られた値を含むテキスト ファイルからデータを 2 次元のリストに読み込み、指定した場合は、出力リストを転置します</value>
  </data>
  <data name="ImportStatementNotSupported" xml:space="preserve">
    <value>CodeBlock Node では Imports ステートメントはサポートされていません。代わりに Library UI を使用してください</value>
  </data>
  <data name="ClassDeclarationNotSupported" xml:space="preserve">
    <value>CodeBlock ノードでは、クラス宣言はサポートされていません。サポートされているのは、関数定義と割り当てステートメントだけです</value>
  </data>
  <data name="InsertsAnElementIntoList" xml:space="preserve">
    <value>インデックスを指定し、要素をリストに挿入します</value>
  </data>
  <data name="InvalidLanguageBlockIdentifier" xml:space="preserve">
    <value>\"{0}\" は有効な言語ブロック識別子ではありません。\"Associative\" または \"Imperative\" を使用しますか?</value>
  </data>
  <data name="InvalidSymbol" xml:space="preserve">
    <value>構文エラー: 無効な記号 '{0}' です。(Modifier Stack \" =&gt; \" を使用しますか)</value>
  </data>
  <data name="kAlreadyImported" xml:space="preserve">
    <value>ファイル: '{0}' は読み込み済みです</value>
  </data>
  <data name="kAmbigousMethodDispatch" xml:space="preserve">
    <value>内部エラーです。次の内容を報告してください。最後のディスパッチに関数が見つかりませんでした</value>
  </data>
  <data name="kArgumentTypeUndefined" xml:space="preserve">
    <value>引数 '{1}' のタイプ '{0}' が設定されていません</value>
  </data>
  <data name="kArrayOverIndexed" xml:space="preserve">
    <value>インデックスは指定した範囲の外です href=kArrayOverIndexed.html</value>
  </data>
  <data name="kArrayRankReduction" xml:space="preserve">
    <value>タイプ変換により配列ランクが減少することがあります。この操作は複製以外では実行できません。{511ED65F-FB66-4709-BDDA-DCD5E053B87F}</value>
  </data>
  <data name="kAssignNonCharacterToString" xml:space="preserve">
    <value>文字列は文字で構成する必要があります</value>
  </data>
  <data name="kAssingToThis" xml:space="preserve">
    <value>'this' は読み込み専用であり、割り当てることはできません</value>
  </data>
  <data name="kCallingConstructorInConstructor" xml:space="preserve">
    <value>コンストラクタ '{0}()' をそれ自身の中で呼び出すことはできません。</value>
  </data>
  <data name="KCallingConstructorOnInstance" xml:space="preserve">
    <value>コンストラクタ '{0}()' を既存のオブジェクト上で呼び出すことはできません</value>
  </data>
  <data name="kCallingNonStaticMethod" xml:space="preserve">
    <value>'{0}.{1}()' は静的メソッドではありません</value>
  </data>
  <data name="kCallingNonStaticProperty" xml:space="preserve">
    <value>'{0}.{1}' は静的プロパティではありません</value>
  </data>
  <data name="kConsoleWarningMessage" xml:space="preserve">
    <value>&gt; ランタイム警告: {0}\n - \"{1}\" &lt;行: {2}、列: {3}&gt;</value>
  </data>
  <data name="kConvertArrayToNonArray" xml:space="preserve">
    <value>配列を {0} に変換すると、配列のランクが減りますが、これは許容されていません href=kConvertArrayToNonArray.html</value>
  </data>
  <data name="kConvertDoubleToInt" xml:space="preserve">
    <value>倍精度浮動小数点数を整数に変換すると、情報が失われる場合があります。</value>
  </data>
  <data name="kConvertNonConvertibleTypes" xml:space="preserve">
    <value>変換できないタイプの変換を要求しました</value>
  </data>
  <data name="kCyclicDependency" xml:space="preserve">
    <value>2 つの変数間に循環従属関係が存在します href=kCyclicDependency.html</value>
  </data>
  <data name="kDereferencingNonPointer" xml:space="preserve">
    <value>内部エラーです。次の内容を報告してください: ポインタ以外の参照解除。href=DereferencingNonPointer.html</value>
  </data>
  <data name="kExceptionTypeUndefined" xml:space="preserve">
    <value>例外タイプ '{0}' が設定されていません</value>
  </data>
  <data name="keywordCannotBeUsedAsConstructorName" xml:space="preserve">
    <value>\"{0}\" はキーワードであり、コンストラクタ名として使用できません</value>
  </data>
  <data name="keywordCantBeUsedAsIdentifier" xml:space="preserve">
    <value>\"{0}\" はキーワードですが、識別子が必要です</value>
  </data>
  <data name="kFailToConverToFunction" xml:space="preserve">
    <value>オブジェクトを関数ポインタに変換することはできません</value>
  </data>
  <data name="kFailToConverToNull" xml:space="preserve">
    <value>他の要素を NULL に変換することはできません</value>
  </data>
  <data name="kFailToConverToPointer" xml:space="preserve">
    <value>オブジェクトを関数ポインタに変換できません</value>
  </data>
  <data name="kFFIFailedToObtainObject" xml:space="preserve">
    <value>'{1}.{2}' のオブジェクト '{0}' を取得できませんでした</value>
  </data>
  <data name="kFFIFailedToObtainThisObject" xml:space="preserve">
    <value>'{0}.{1}' のこのオブジェクトを取得できませんでした</value>
  </data>
  <data name="kFFIInvalidCast" xml:space="preserve">
    <value>'{0}' が '{1}' にキャストされますが、許容範囲は[{2}..{3}]です</value>
  </data>
  <data name="kFileNotFound" xml:space="preserve">
    <value>ファイル : '{0}' が見つかりません</value>
  </data>
  <data name="kFunctionNotFound" xml:space="preserve">
    <value>候補の関数が見つかりませんでした</value>
  </data>
  <data name="kFunctionNotReturnAtAllCodePaths" xml:space="preserve">
    <value>メソッド '{0}()' が値を返す、すべてのパス</value>
  </data>
  <data name="kIndexOutOfRange" xml:space="preserve">
    <value>インデックスが範囲外です href=kIndexOutOfRange.html</value>
  </data>
  <data name="kInvalidAmountInRangeExpression" xml:space="preserve">
    <value>範囲式の数量は正の整数である必要があります</value>
  </data>
  <data name="kInvalidArguments" xml:space="preserve">
    <value>引数が無効です</value>
  </data>
  <data name="kInvalidArgumentsInRangeExpression" xml:space="preserve">
    <value>範囲式で使用する値は数値または文字にする必要があります</value>
  </data>
  <data name="kInvalidBreakForFunction" xml:space="preserve">
    <value>内部エラーです。次の内容を報告してください。break ステートメントにより関数が誤って NULL を返しました</value>
  </data>
  <data name="kInvalidContinueForFunction" xml:space="preserve">
    <value>内部エラーです。次の内容を報告してください。continue ステートメントにより関数が誤って NULL を返しました</value>
  </data>
  <data name="kInvalidStaticCyclicDependency" xml:space="preserve">
    <value>2 つの変数間に循環従属関係が存在します</value>
  </data>
  <data name="kInvalidThis" xml:space="preserve">
    <value>'this' はクラスのメンバーであるメソッドのみに使用できます</value>
  </data>
  <data name="kInvokeMethodOnInvalidObject" xml:space="preserve">
    <value>メソッド '{0}() ' が無効なオブジェクトに関して呼び出されています。</value>
  </data>
  <data name="kMethodAlreadyDefined" xml:space="preserve">
    <value>メソッド '{0}()' は既に設定されています</value>
  </data>
  <data name="kMethodHasInvalidArguments" xml:space="preserve">
    <value>'{0}()' has some invalid arguments href=kMethodHasInvalidArguments</value>
  </data>
  <data name="kMethodIsInaccessible" xml:space="preserve">
    <value>メソッド '{0}()' はここから利用できません</value>
  </data>
  <data name="kMethodNotFound" xml:space="preserve">
    <value>メソッド '{0}()' が見つかりません href=kMethodNotFound.html</value>
  </data>
  <data name="kMethodResolutionFailure" xml:space="preserve">
    <value>Internal error, please report: Method resolution failure on: {0}().</value>
  </data>
  <data name="kMethodResolutionFailureForOperator" xml:space="preserve">
    <value>演算子 '{0}' はタイプ '{1}' および '{2}' のオペランドには適用できません</value>
  </data>
  <data name="kMethodResolutionFailureWithTypes" xml:space="preserve">
    <value>引数タイプ({1})を受け入れる {0} のバージョンはありません。 href=NonOverloadMethodResolutionError.html</value>
  </data>
  <data name="kMethodStackOverflow" xml:space="preserve">
    <value>'{0}()' は Dynamo のメモリが不足するまで再帰的に処理されました。基本ケースを追加してください。</value>
  </data>
  <data name="kMultipleSymbolFound" xml:space="preserve">
    <value>'{0}' の複数の設定が {1} として見つかりました href=kMultipleSymbolFound.html</value>
  </data>
  <data name="kMultipleSymbolFoundFromName" xml:space="preserve">
    <value>'{0}' の複数の設定が {1} として見つかりました</value>
  </data>
  <data name="kMethodDeprecated" xml:space="preserve">
    <value>Method '{0}' has been deprecated, please use method '{1}' instead. href=Deprecated.html</value>
  </data>
  <data name="kNoStepSizeInAmountRangeExpression" xml:space="preserve">
    <value>量の範囲の式にステップ サイズが指定されていません</value>
  </data>
  <data name="kPropertyInaccessible" xml:space="preserve">
    <value>プロパティ '{0}' にアクセスできません</value>
  </data>
  <data name="kPropertyIsInaccessible" xml:space="preserve">
    <value>プロパティ '{0}' にアクセスできません</value>
  </data>
  <data name="kPropertyNotFound" xml:space="preserve">
    <value>プロパティ '{0}' が見つかりません</value>
  </data>
  <data name="kPropertyOfClassNotFound" xml:space="preserve">
    <value>No property called {0} on {1} could be found href=kPropertyOfClassNotFound</value>
  </data>
  <data name="kRangeExpressionConflictOperator" xml:space="preserve">
    <value>数量の演算子を昇降演算子とともに使用することはできません</value>
  </data>
  <data name="kRangeExpressionWithInvalidAmount" xml:space="preserve">
    <value>ステップの数量が無効です。</value>
  </data>
  <data name="kRangeExpressionWithInvalidStepSize" xml:space="preserve">
    <value>範囲式のステップ サイズが無効です。</value>
  </data>
  <data name="kRangeExpressionWithNegativeStepNumber" xml:space="preserve">
    <value>範囲式のステップ数は 0 より大きくする必要があります</value>
  </data>
  <data name="kRangeExpressionWithNonIntegerStepNumber" xml:space="preserve">
    <value>範囲式のステップ数は整数にする必要があります</value>
  </data>
  <data name="kRangeExpressionWithStepSizeZero" xml:space="preserve">
    <value>範囲式のステップ サイズを 0 にすることはできません</value>
  </data>
  <data name="kReturnTypeUndefined" xml:space="preserve">
    <value>メソッド '{1}()' の戻り値のタイプ '{0}' が設定されていません</value>
  </data>
  <data name="kStaticMethodNotFound" xml:space="preserve">
    <value>静的メソッドまたはコンストラクタ {0}.{1}() が見つかりません</value>
  </data>
  <data name="kStringIndexingCannotBeAssigned" xml:space="preserve">
    <value>文字列インデックスを割り当てることはできません。読み込み専用です</value>
  </data>
  <data name="kStringIndexOutOfRange" xml:space="preserve">
    <value>文字列のインデックスが範囲外です</value>
  </data>
  <data name="kStringOverIndexed" xml:space="preserve">
    <value>String には範囲外のインデックスが設定されています</value>
  </data>
  <data name="kTypeUndefined" xml:space="preserve">
    <value>タイプ '{0}' が設定されていません</value>
  </data>
  <data name="kUnboundIdentifierMsg" xml:space="preserve">
    <value>変数 '{0}' はまだ設定されていません</value>
  </data>
  <data name="kUsingNonStaticMemberInStaticContext" xml:space="preserve">
    <value>'{0}' は静的プロパティではないため、静的プロパティに割り当てたり、静的メソッドで使用することはできません。</value>
  </data>
  <data name="kUsingThisInStaticFunction" xml:space="preserve">
    <value>'this' を静的メソッドで使用することはできません</value>
  </data>
  <data name="MapsValueFromOneRangeToAnotherRange" xml:space="preserve">
    <value>ある範囲の値を別の範囲にマッピングします</value>
  </data>
  <data name="MapsValueIntoInputRange" xml:space="preserve">
    <value>入力範囲に値をマッピングします</value>
  </data>
  <data name="NoConstructorForAttribute" xml:space="preserve">
    <value>Attribute '{0}' のコンストラクタで {1} 引数を取るものはありません</value>
  </data>
  <data name="NoSuchFileOrDirectoryToImport" xml:space="preserve">
    <value>ファイルを読み込めません: '{0}': このようなファイルまたはフォルダはありません</value>
  </data>
  <data name="ObjectsContainsInList1NotInList2" xml:space="preserve">
    <value>List1 に含まれるが、List2 では除外されているオブジェクトを返します</value>
  </data>
  <data name="ProducesTheSetIntersection" xml:space="preserve">
    <value>2 つのシーケンスの交点のセットを生成します</value>
  </data>
  <data name="ProducesTheSetUnion" xml:space="preserve">
    <value>既定の均等性比較ツールを使用して 2 つのシーケンスの和集合を生成します</value>
  </data>
  <data name="RemoveKeys" xml:space="preserve">
    <value>リストからキーを削除します</value>
  </data>
  <data name="RemovesTheMembersofTheList" xml:space="preserve">
    <value>指定したタイプのメンバーではないリストのメンバーを削除します</value>
  </data>
  <data name="ReordersList" xml:space="preserve">
    <value>指定したインデックスを使用してリストを並べ替えます</value>
  </data>
  <data name="ReturnsConcatenatingList" xml:space="preserve">
    <value>2 つのリストを 1 つのリストに結合します</value>
  </data>
  <data name="ReturnsListWithRankDepth" xml:space="preserve">
    <value>指定したランクに従って、多次元のリストを返します</value>
  </data>
  <data name="ReturnsListWithUniformDepth" xml:space="preserve">
    <value>入力深さで指定し、深さが一定のリストを返します</value>
  </data>
  <data name="ReturnsNumberOfItems" xml:space="preserve">
    <value>指定したリスト内の項目の数を返します</value>
  </data>
  <data name="ReturnStatementIsNotAllowedInConstructor" xml:space="preserve">
    <value>return ステートメントはコンストラクタでは使用できません</value>
  </data>
  <data name="ReturnsTheDeepestDepthOfTheList" xml:space="preserve">
    <value>リストの最も深い深さを返します</value>
  </data>
  <data name="ReturnsTheFlattened1DList" xml:space="preserve">
    <value>多次元リストの入力をフラットにした 1 次元のリストを返します。 入力が単一の値の場合は、その値を返します。</value>
  </data>
  <data name="ReturnsTheIndex" xml:space="preserve">
    <value>リスト内のメンバーのインデックスを返します</value>
  </data>
  <data name="ReturnsTheNumberOfFalseValueInList" xml:space="preserve">
    <value>リスト内の false 値の数を返します</value>
  </data>
  <data name="ReturnsTheNumberOfTrueValue" xml:space="preserve">
    <value>リスト内の true 値の数を返します</value>
  </data>
  <data name="SemiColonExpected" xml:space="preserve">
    <value>';' が必要です</value>
  </data>
  <data name="SortsListByValue" xml:space="preserve">
    <value>メンバーの値で指定したリストを、昇順または降順のいずれかに並べ替えます</value>
  </data>
  <data name="SortsListByValueInAscending" xml:space="preserve">
    <value>メンバーの値で指定したリストを昇順に並べ替えます</value>
  </data>
  <data name="TooManyCharacters" xml:space="preserve">
    <value>文字リテラルの文字数が多すぎます</value>
  </data>
  <data name="UnknownAttribute" xml:space="preserve">
    <value>不明な属性 {0}</value>
  </data>
  <data name="UseInlineConditional" xml:space="preserve">
    <value>'{0}' 条件文は命令型言語ブロックにのみ使用できます。代わりにインライン条件文を使用しますか?</value>
  </data>
  <data name="UseListJoinNode" xml:space="preserve">
    <value>代わりに List.Join ノードを使用</value>
  </data>
  <data name="ValidForImperativeBlockOnly" xml:space="preserve">
    <value>'{0}' 条件文は命令型言語ブロックにのみ使用できます。</value>
  </data>
  <data name="ModuloByZero" xml:space="preserve">
    <value>ゼロで整数モジュロ</value>
  </data>
  <data name="addadd_expected" xml:space="preserve">
    <value>"++" が必要です</value>
  </data>
  <data name="add_expected" xml:space="preserve">
    <value>"+" が必要です</value>
  </data>
  <data name="andand_expected" xml:space="preserve">
    <value>"&amp;&amp;" が必要です</value>
  </data>
  <data name="and_expected" xml:space="preserve">
    <value>"&amp;" が必要です</value>
  </data>
  <data name="asterisk_expected" xml:space="preserve">
    <value>"*" が必要です</value>
  </data>
  <data name="catch_expected" xml:space="preserve">
    <value>"catch" が必要です</value>
  </data>
  <data name="char_expected" xml:space="preserve">
    <value>char が必要です</value>
  </data>
  <data name="closebrace_expected" xml:space="preserve">
    <value>"}" が必要です</value>
  </data>
  <data name="closebracket_expected" xml:space="preserve">
    <value>closebracket が必要です</value>
  </data>
  <data name="closeparen_expected" xml:space="preserve">
    <value>closeparen が必要です</value>
  </data>
  <data name="comma_expected" xml:space="preserve">
    <value>"," が必要です</value>
  </data>
  <data name="curvedash_expected" xml:space="preserve">
    <value>"~\" が必要です</value>
  </data>
  <data name="dashdash_expected" xml:space="preserve">
    <value>"--" が必要です</value>
  </data>
  <data name="divider_expected" xml:space="preserve">
    <value>"/" が必要です</value>
  </data>
  <data name="doublecolumn_expected" xml:space="preserve">
    <value>":" が必要です</value>
  </data>
  <data name="endline_expected" xml:space="preserve">
    <value>終端が必要です</value>
  </data>
  <data name="EOF_expected" xml:space="preserve">
    <value>EOF が必要です</value>
  </data>
  <data name="equalmark_expected" xml:space="preserve">
    <value>"=" が必要です</value>
  </data>
  <data name="equalright_expected" xml:space="preserve">
    <value>"=&gt;" が必要です</value>
  </data>
  <data name="equal_expected" xml:space="preserve">
    <value>= が必要です</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="float_expected" xml:space="preserve">
    <value>float expected</value>
  </data>
  <data name="greaterequal_expected" xml:space="preserve">
    <value>&gt;= が必要です</value>
  </data>
  <data name="greaterthan_expected" xml:space="preserve">
    <value>&gt; が必要です</value>
  </data>
  <data name="hax_expected" xml:space="preserve">
    <value>"#" が必要です</value>
  </data>
  <data name="ident_expected" xml:space="preserve">
    <value>識別子が必要です</value>
  </data>
  <data name="invalid_Associative_AccessSpecifier" xml:space="preserve">
    <value>Associative_AccessSpecifier が無効です</value>
  </data>
  <data name="invalid_Associative_AddOp" xml:space="preserve">
    <value>invalid_Associative_AddOp</value>
  </data>
  <data name="invalid_Associative_BinaryOps" xml:space="preserve">
    <value>Associative_BinaryOps が無効です</value>
  </data>
  <data name="invalid_Associative_BitOp" xml:space="preserve">
    <value>Associative_BitOp が無効です</value>
  </data>
  <data name="invalid_Associative_classdecl" xml:space="preserve">
    <value>Associative_classdecl が無効です</value>
  </data>
  <data name="invalid_Associative_ComparisonOp" xml:space="preserve">
    <value>Associative_ComparisonOp が無効です</value>
  </data>
  <data name="invalid_Associative_DecoratedIdentifier" xml:space="preserve">
    <value>Associative_DecoratedIdentifier が無効です</value>
  </data>
  <data name="invalid_Associative_Factor" xml:space="preserve">
    <value>Associative_Factor が無効です</value>
  </data>
  <data name="invalid_Associative_FunctionalStatement" xml:space="preserve">
    <value>Associative_FunctionalStatement が無効です</value>
  </data>
  <data name="invalid_Associative_functiondecl" xml:space="preserve">
    <value>Associative_functiondecl が無効です</value>
  </data>
  <data name="invalid_Associative_LanguageBlock" xml:space="preserve">
    <value>Associative_LanguageBlock が無効です</value>
  </data>
  <data name="invalid_Associative_LogicalOp" xml:space="preserve">
    <value>Associative_LogicalOp が無効です</value>
  </data>
  <data name="invalid_Associative_MulOp" xml:space="preserve">
    <value>Associative_MulOp が無効です</value>
  </data>
  <data name="invalid_Associative_NameReference" xml:space="preserve">
    <value>Associative_NameReference が無効です</value>
  </data>
  <data name="invalid_Associative_negop" xml:space="preserve">
    <value>Associative_negop が無効です</value>
  </data>
  <data name="invalid_Associative_Number" xml:space="preserve">
    <value>Associative_Number が無効です</value>
  </data>
  <data name="invalid_Associative_PostFixOp" xml:space="preserve">
    <value>Associative_PostFixOp が無効です</value>
  </data>
  <data name="invalid_Associative_Statement" xml:space="preserve">
    <value>Associative_Statement が無効です</value>
  </data>
  <data name="invalid_Associative_UnaryExpression" xml:space="preserve">
    <value>Associative_UnaryExpression が無効です</value>
  </data>
  <data name="invalid_Associative_unaryop" xml:space="preserve">
    <value>Associative_unaryop が無効です</value>
  </data>
  <data name="invalid_Hydrogen" xml:space="preserve">
    <value>Hydrogen が無効です</value>
  </data>
  <data name="invalid_Imperative_addop" xml:space="preserve">
    <value>Imperative_addop が無効です</value>
  </data>
  <data name="invalid_Imperative_assignstmt" xml:space="preserve">
    <value>Imperative_assignstmt が無効です</value>
  </data>
  <data name="invalid_Imperative_bitop" xml:space="preserve">
    <value>Imperative_bitop が無効です</value>
  </data>
  <data name="invalid_Imperative_decoratedIdentifier" xml:space="preserve">
    <value>Imperative_decoratedIdentifier が無効です</value>
  </data>
  <data name="invalid_Imperative_factor" xml:space="preserve">
    <value>Imperative_factor が無効です</value>
  </data>
  <data name="invalid_Imperative_forloop" xml:space="preserve">
    <value>Imperative_forloop が無効です</value>
  </data>
  <data name="invalid_Imperative_functiondecl" xml:space="preserve">
    <value>Imperative_functiondecl が無効です</value>
  </data>
  <data name="invalid_Imperative_ifstmt" xml:space="preserve">
    <value>Imperative_ifstmt が無効です</value>
  </data>
  <data name="invalid_Imperative_languageblock" xml:space="preserve">
    <value>Imperative_languageblock が無効です</value>
  </data>
  <data name="invalid_Imperative_logicalop" xml:space="preserve">
    <value>Imperative_logicalop が無効です</value>
  </data>
  <data name="invalid_Imperative_mulop" xml:space="preserve">
    <value>Imperative_mulop が無効です</value>
  </data>
  <data name="invalid_Imperative_NameReference" xml:space="preserve">
    <value>Imperative_NameReference が無効です</value>
  </data>
  <data name="invalid_Imperative_num" xml:space="preserve">
    <value>Imperative_num が無効です</value>
  </data>
  <data name="invalid_Imperative_PostFixOp" xml:space="preserve">
    <value>Imperative_PostFixOp が無効です</value>
  </data>
  <data name="invalid_Imperative_relop" xml:space="preserve">
    <value>Imperative_relop が無効です</value>
  </data>
  <data name="invalid_Imperative_stmt" xml:space="preserve">
    <value>Imperative_stmt が無効です</value>
  </data>
  <data name="invalid_Imperative_unaryexpr" xml:space="preserve">
    <value>Imperative_unaryexpr が無効です</value>
  </data>
  <data name="invalid_Imperative_unaryop" xml:space="preserve">
    <value>Imperative_unaryop が無効です</value>
  </data>
  <data name="invalid_Import_Statement" xml:space="preserve">
    <value>Import_Statement が無効です</value>
  </data>
  <data name="in_expected" xml:space="preserve">
    <value>"in" が必要です</value>
  </data>
  <data name="kw_break_expected" xml:space="preserve">
    <value>kw_break が必要です</value>
  </data>
  <data name="kw_class_expected" xml:space="preserve">
    <value>kw_class が必要です</value>
  </data>
  <data name="kw_constructor_expected" xml:space="preserve">
    <value>kw_constructor が必要です</value>
  </data>
  <data name="kw_continue_expected" xml:space="preserve">
    <value>kw_continue が必要です</value>
  </data>
  <data name="kw_def_expected" xml:space="preserve">
    <value>kw_def が必要です</value>
  </data>
  <data name="kw_elseif_expected" xml:space="preserve">
    <value>kw_elseif が必要です</value>
  </data>
  <data name="kw_else_expected" xml:space="preserve">
    <value>kw_else が必要です</value>
  </data>
  <data name="kw_extend_expected" xml:space="preserve">
    <value>kw_extend が必要です</value>
  </data>
  <data name="kw_external_expected" xml:space="preserve">
    <value>kw_external が必要です</value>
  </data>
  <data name="kw_for_expected" xml:space="preserve">
    <value>kw_for が必要です</value>
  </data>
  <data name="kw_from_expected" xml:space="preserve">
    <value>kw_from が必要です</value>
  </data>
  <data name="kw_heap_expected" xml:space="preserve">
    <value>kw_heap が必要です</value>
  </data>
  <data name="kw_if_expected" xml:space="preserve">
    <value>kw_if が必要です</value>
  </data>
  <data name="kw_import_expected" xml:space="preserve">
    <value>kw_import が必要です</value>
  </data>
  <data name="kw_local_expected" xml:space="preserve">
    <value>kw_local が必要です</value>
  </data>
  <data name="kw_native_expected" xml:space="preserve">
    <value>kw_native が必要です</value>
  </data>
  <data name="kw_prefix_expected" xml:space="preserve">
    <value>kw_prefix が必要です</value>
  </data>
  <data name="kw_static_expected" xml:space="preserve">
    <value>kw_static が必要です</value>
  </data>
  <data name="kw_while_expected" xml:space="preserve">
    <value>kw_while が必要です</value>
  </data>
  <data name="lessequal_expected" xml:space="preserve">
    <value>&lt;= が必要です</value>
  </data>
  <data name="lessthan_expected" xml:space="preserve">
    <value>&lt; が必要です</value>
  </data>
  <data name="literal_false_expected" xml:space="preserve">
    <value>literal_false が必要です</value>
  </data>
  <data name="literal_null_expected" xml:space="preserve">
    <value>literal_null が必要です</value>
  </data>
  <data name="literal_true_expected" xml:space="preserve">
    <value>literal_true が必要です</value>
  </data>
  <data name="neg_expected" xml:space="preserve">
    <value>neg が必要です</value>
  </data>
  <data name="notequal_expected" xml:space="preserve">
    <value>!= が必要です</value>
  </data>
  <data name="not_expected" xml:space="preserve">
    <value>not が必要です</value>
  </data>
  <data name="number_expected" xml:space="preserve">
    <value>数値が必要です</value>
  </data>
  <data name="openbrace_expected" xml:space="preserve">
    <value>"{" が必要です</value>
  </data>
  <data name="openbracket_expected" xml:space="preserve">
    <value>openbracket が必要です</value>
  </data>
  <data name="openparen_expected" xml:space="preserve">
    <value>openparen が必要です</value>
  </data>
  <data name="oror_expected" xml:space="preserve">
    <value>"||" が必要です</value>
  </data>
  <data name="period_expected" xml:space="preserve">
    <value>period が必要です</value>
  </data>
  <data name="pipe_expected" xml:space="preserve">
    <value>pipe が必要です</value>
  </data>
  <data name="postfixed_replicationguide_expected" xml:space="preserve">
    <value>postfixed replicationguide が必要です</value>
  </data>
  <data name="power_expected" xml:space="preserve">
    <value>"^" が必要です</value>
  </data>
  <data name="private_expected" xml:space="preserve">
    <value>"private" が必要です</value>
  </data>
  <data name="protected_expected" xml:space="preserve">
    <value>"protected" が必要です</value>
  </data>
  <data name="public_expected" xml:space="preserve">
    <value>"public" が必要です</value>
  </data>
  <data name="question_expected" xml:space="preserve">
    <value>"?" が必要です</value>
  </data>
  <data name="rangeop_expected" xml:space="preserve">
    <value>rangeop が必要です</value>
  </data>
  <data name="reminder_expected" xml:space="preserve">
    <value>"%" が必要です</value>
  </data>
  <data name="replicationguide_postfix_expected" xml:space="preserve">
    <value>replicationguide_postfix が必要です</value>
  </data>
  <data name="textstring_expected" xml:space="preserve">
    <value>textstring が必要です</value>
  </data>
  <data name="this_symbol_not_expected_in_Associative_FunctionalStatement" xml:space="preserve">
    <value>この記号は Associative_FunctionalStatement には必要ありません</value>
  </data>
  <data name="this_symbol_not_expected_in_Associative_FunctionCallStatement" xml:space="preserve">
    <value>この記号は Associative_FunctionCallStatement には必要ありません</value>
  </data>
  <data name="this_symbol_not_expected_in_Associative_Statement" xml:space="preserve">
    <value>この記号は Associative_Statement には必要ありません</value>
  </data>
  <data name="this_symbol_not_expected_in_Import_Statement" xml:space="preserve">
    <value>この記号は Import_Statement には必要ありません</value>
  </data>
  <data name="this_symbol_no_expected_in_Associative_FunctionalStatement" xml:space="preserve">
    <value>この記号は Associative_FunctionalStatement には必要ありません</value>
  </data>
  <data name="this_symbo_no_expected_in_Associative_NonAssignmentStatement" xml:space="preserve">
    <value>この記号は Associative_NonAssignmentStatement には必要ありません</value>
  </data>
  <data name="throw_expected" xml:space="preserve">
    <value>throw が必要です</value>
  </data>
  <data name="triquestionmark_expected" xml:space="preserve">
    <value>??? が必要です</value>
  </data>
  <data name="try_expected" xml:space="preserve">
    <value>"try" が必要です</value>
  </data>
  <data name="kInvalidType" xml:space="preserve">
    <value>タイプが無効です</value>
  </data>
  <data name="AlgorithmNotSupported" xml:space="preserve">
    <value>選択したアルゴリズムはサポートされていません</value>
  </data>
  <data name="ArrayWithNotSupported" xml:space="preserve">
    <value>共通のスーパークラスを持たない配列はまだサポートされていません。{0}</value>
  </data>
  <data name="FailedToResolveSortingFunction" xml:space="preserve">
    <value>並べ替えの比較関数の解決に失敗しました。def ソータが必要です: int(x,y)</value>
  </data>
  <data name="FunctionDispatchFailed" xml:space="preserve">
    <value>関数ディスパッチを完了できませんでした {0}</value>
  </data>
  <data name="MaxDimensionExceeded" xml:space="preserve">
    <value>必要な複製の数が配列で使用可能な寸法を超えています。このようなケースはまだサポートされていません {0}</value>
  </data>
  <data name="MultipleFunctionsFound" xml:space="preserve">
    <value>実行する関数を決定できませんでした。より具体的なタイプ情報を指定してください。使用可能な関数:</value>
  </data>
  <data name="MultipleGuidesNotSupported" xml:space="preserve">
    <value>1 つの引数における、昇順になっていない複数のガイドはまだサポートされていません。代わりに for ループを使用してください。</value>
  </data>
  <data name="OneDArrayExpected" xml:space="preserve">
    <value>両方の引数は 1 次元配列である必要があります!</value>
  </data>
  <data name="OperationFailType1" xml:space="preserve">
    <value>{0}{1} 操作に失敗しました。</value>
  </data>
  <data name="OperationFailType2" xml:space="preserve">
    <value>{0}{1} 操作に失敗しました。
{2}</value>
  </data>
  <data name="ZipAlgorithmError" xml:space="preserve">
    <value>最長および最短の圧縮されたコレクションはサポートされません</value>
  </data>
  <data name="FailedToCastFromNull" xml:space="preserve">
    <value>NULL 値を {0} にキャストできません href=FailedToCastFromNull.html</value>
  </data>
  <data name="ArgumentNullException" xml:space="preserve">
    <value>Value cannot be null.
Parameter name: {0}. href=ArgumentNullException.html</value>
  </data>
  <data name="FunctionGroupNotFound" xml:space="preserve">
    <value>{0} という関数が {1} に見つかりません</value>
  </data>
  <data name="FunctionGroupWithParameterNotFound" xml:space="preserve">
    <value>{2} を使用する {0} という関数が {1} に見つかりません</value>
  </data>
  <data name="kInvalidStringArgumentInRangeExpression" xml:space="preserve">
    <value>開始値には数字または単一の文字のみを設定できます</value>
  </data>
  <data name="kInvalidUnicodeArgumentInRangeExpression" xml:space="preserve">
    <value>範囲とシーケンスの式は、ASCII 文字だけをサポートします</value>
  </data>
  <data name="MoreThanOneDominantList" xml:space="preserve">
    <value>優先リストは 1 つのみ使用できます</value>
  </data>
  <data name="RangeExpressionOutOfMemory" xml:space="preserve">
    <value>項目数が範囲式の限界を超えています</value>
  </data>
  <data name="IndexIntoNonArrayObject" xml:space="preserve">
    <value>項目が指定したインデックス アドレスに存在しません</value>
  </data>
  <data name="RunOutOfMemory" xml:space="preserve">
    <value>操作を終了するためのメモリが足りません。</value>
  </data>
  <data name="InvalidFunction" xml:space="preserve">
    <value>有効な関数ではありません。</value>
  </data>
  <data name="kInvalidListLevelName" xml:space="preserve">
    <value>'{0}' をリスト レベル名として使用することはできません。レベル 1 の場合は L1 を使用することをお勧めします。</value>
  </data>
  <data name="invalid_Associative_Level" xml:space="preserve">
    <value>list@level 構文が正しくありません。レベル 1 の場合は @L1 を使用することをお勧めします。</value>
  </data>
  <data name="VariableRedifinitionError" xml:space="preserve">
    <value>変数 {0} はこのコード ブロック ノードで定義されています。変数を複数回定義することはできません。</value>
  </data>
  <data name="VariableRecursiveReference" xml:space="preserve">
    <value>変数 {0} は、定義した同じステートメントで使用されています。循環従属は許可されていません。</value>
  </data>
  <data name="InvalidArrayIndexType" xml:space="preserve">
    <value>リスト インデックスは数値である必要があります。href=InvalidArrayIndexType.html</value>
  </data>
  <data name="FailedToConvertArrayToDictionary" xml:space="preserve">
    <value>リストをディクショナリ タイプに変換できません。</value>
  </data>
  <data name="NonOverloadMethodResolutionError" xml:space="preserve">
    <value>{0} には引数タイプ({1})が必要ですが、({2})で呼び出されました。href=NonOverloadMethodResolutionError.html</value>
  </data>
  <data name="DeprecatedListInitializationSyntax" xml:space="preserve">
    <value>中括弧はリストの作成に使用されなくなりました。代わりに[]や[1,2,3]のように角括弧を使用します。</value>
  </data>
  <data name="ListMethodDeprecated" xml:space="preserve">
    <value>メソッド '{0}' は廃止されました。代わりにディクショナリ タイプのメソッド '{1}' を使用してください</value>
  </data>
  <data name="IntegerOverflow" xml:space="preserve">
    <value>演算の結果、整数オーバーフローが発生しました。予期しない結果になる可能性があります。</value>
  </data>
</root>