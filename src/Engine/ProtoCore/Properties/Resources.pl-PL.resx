<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttributeArgMustBeConstant" xml:space="preserve">
    <value>Argument atrybutu musi być wyrażeniem stałym</value>
  </data>
  <data name="BaseIsExpectedToCallBaseConstructor" xml:space="preserve">
    <value>Słowo kluczowe 'baza' jest tutaj oczekiwane, aby przywołać konstruktor klasy bazowej</value>
  </data>
  <data name="CheckIfTheElementsInListAreSameType" xml:space="preserve">
    <value>Sprawdza, czy wszystkie elementy z określonej listy są tego samego typu</value>
  </data>
  <data name="ChecksIfLengthsAreSameInMultiDimentionalList" xml:space="preserve">
    <value>Sprawdza, czy każdy z wierszy na liście wielowymiarowej ma taką samą liczbę elementów</value>
  </data>
  <data name="ChecksIfListContainsTheElement" xml:space="preserve">
    <value>Sprawdza, czy określony element znajduje się na określonej liście</value>
  </data>
  <data name="ChecksIfTheListIsAllFalse" xml:space="preserve">
    <value>Sprawdza, czy wszystkie elementy z określonej listy mają wartość fałsz</value>
  </data>
  <data name="ChecksIfTheListIsAllTrue" xml:space="preserve">
    <value>Sprawdza, czy wszystkie elementy z określonej listy mają wartość prawda</value>
  </data>
  <data name="ChecksListWithUniformDepth" xml:space="preserve">
    <value>Sprawdza, czy lista ma jednolitą głębokość</value>
  </data>
  <data name="CloseBracketExpected" xml:space="preserve">
    <value>Oczekiwano „)” — niepełne zamknięcie</value>
  </data>
  <data name="ContainsKeys" xml:space="preserve">
    <value>Sprawdza, czy podany klucz jest obecny na określonej liście par klucz-wartość</value>
  </data>
  <data name="DeterminesObjectsAreEqual" xml:space="preserve">
    <value>Określa, czy dwa wystąpienia obiektu są równe</value>
  </data>
  <data name="EmptyCharacterLiteral" xml:space="preserve">
    <value>Pusty literał znakowy</value>
  </data>
  <data name="FailedToImport" xml:space="preserve">
    <value>Nie udało się zaimportować {0}</value>
  </data>
  <data name="FunctionCallCannotBeAtLeftSide" xml:space="preserve">
    <value>Wywołanie funkcji nie jest dozwolone po lewej stronie przypisania</value>
  </data>
  <data name="GetKeys" xml:space="preserve">
    <value>Pobiera wszystkie klucze z określonej listy par klucz-wartość</value>
  </data>
  <data name="Gettypes" xml:space="preserve">
    <value>Pobiera typ bieżącego wystąpienia</value>
  </data>
  <data name="GetValues" xml:space="preserve">
    <value>Pobiera wszystkie wartości przechowywane na określonej liście par klucz-wartość, a dla prostej listy zwraca wszystkie elementy z listy</value>
  </data>
  <data name="ImportFileByGivenFilePath" xml:space="preserve">
    <value>Importuje dane z pliku tekstowego zawierającego wartości oddzielone przecinkami do listy dwuwymiarowej</value>
  </data>
  <data name="ImportFileByGivenFilePathWithMode" xml:space="preserve">
    <value>Importuje dane z pliku tekstowego zawierającego wartości oddzielone przecinkami do listy dwuwymiarowej, a także przestawia listę wyników, jeśli określono</value>
  </data>
  <data name="ImportStatementNotSupported" xml:space="preserve">
    <value>Instrukcje importu nie są obsługiwane w węzłach CodeBlock, należy zamiast tego użyć interfejsu użytkownika biblioteki</value>
  </data>
  <data name="ClassDeclarationNotSupported" xml:space="preserve">
    <value>Klasy deklaracji nie są obsługiwane w węzłach CodeBlock, tylko definicje funkcji i instrukcje przypisania</value>
  </data>
  <data name="InsertsAnElementIntoList" xml:space="preserve">
    <value>Wstawia element na listę o określonym indeksie</value>
  </data>
  <data name="InvalidLanguageBlockIdentifier" xml:space="preserve">
    <value>\"{0}\" nie jest prawidłowym identyfikatorem bloku języka, czy powinno być \"Skojarzony\" lub \"Imperatywny\"?</value>
  </data>
  <data name="InvalidSymbol" xml:space="preserve">
    <value>Błąd składni: nieprawidłowy symbol '{0}'. (Czy chcesz użyć stosu modyfikatorów \" =&gt; \")</value>
  </data>
  <data name="kAlreadyImported" xml:space="preserve">
    <value>Plik: '{0}' został już zaimportowany</value>
  </data>
  <data name="kAmbigousMethodDispatch" xml:space="preserve">
    <value>Błąd wewnętrzny, raportuj: funkcja nie może być odnaleziona w ostatecznej wysyłce.</value>
  </data>
  <data name="kArgumentTypeUndefined" xml:space="preserve">
    <value>Typ '{0}' argumentu '{1}' nie jest zdefiniowany</value>
  </data>
  <data name="kArrayOverIndexed" xml:space="preserve">
    <value>Indeks jest poza podanym zakresem href=kArrayOverIndexed.html</value>
  </data>
  <data name="kArrayRankReduction" xml:space="preserve">
    <value>Konwersja typu może spowodować zmniejszenie rangi szyku. Operacja ta jest niedozwolona poza replikacją. {511ED65F-FB66-4709-BDDA-DCD5E053B87F}</value>
  </data>
  <data name="kAssignNonCharacterToString" xml:space="preserve">
    <value>Ciąg musi składać się ze znaków</value>
  </data>
  <data name="kAssingToThis" xml:space="preserve">
    <value>'ten' jest tylko do odczytu i nie może być przypisany</value>
  </data>
  <data name="kCallingConstructorInConstructor" xml:space="preserve">
    <value>Nie można przywołać konstruktora '{0}()' wewnątrz niego</value>
  </data>
  <data name="KCallingConstructorOnInstance" xml:space="preserve">
    <value>Nie można przywołać konstruktora '{0}()' na istniejącym obiekcie</value>
  </data>
  <data name="kCallingNonStaticMethod" xml:space="preserve">
    <value>'.{0} {1}()' nie jest metodą statyczną</value>
  </data>
  <data name="kCallingNonStaticProperty" xml:space="preserve">
    <value>'{0}.{1}' nie jest właściwością statyczną</value>
  </data>
  <data name="kConsoleWarningMessage" xml:space="preserve">
    <value>&gt; Ostrzeżenie dla środowiska uruchomieniowego: {0}\n - \"{1}\" &lt;line: {2}, col: {3}&gt;</value>
  </data>
  <data name="kConvertArrayToNonArray" xml:space="preserve">
    <value>Przekonwertowanie szyku na {0} może spowodować zmniejszenie rangi szyku i nie jest dozwolone href=kConvertArrayToNonArray.html</value>
  </data>
  <data name="kConvertDoubleToInt" xml:space="preserve">
    <value>Przekonwertowanie liczby o podwójnej precyzji (double) na liczbę całkowitą (int) może spowodować utratę informacji.</value>
  </data>
  <data name="kConvertNonConvertibleTypes" xml:space="preserve">
    <value>Monit o przekształcenie typów niemożliwych do przekształcenia</value>
  </data>
  <data name="kCyclicDependency" xml:space="preserve">
    <value>Istnieje cykliczna zależność między dwiema zmiennymi href=kCyclicDependency.html</value>
  </data>
  <data name="kDereferencingNonPointer" xml:space="preserve">
    <value>Błąd wewnętrzny, zgłoś: odwołanie do elementu nie będącego wskaźnikiem. href=DereferencingNonPointer.html</value>
  </data>
  <data name="kExceptionTypeUndefined" xml:space="preserve">
    <value>Typ wyjątku '{0}' nie jest zdefiniowany</value>
  </data>
  <data name="keywordCannotBeUsedAsConstructorName" xml:space="preserve">
    <value>\"{0}\" jest słowem kluczowym, nie może być użyte jako nazwa konstruktora</value>
  </data>
  <data name="keywordCantBeUsedAsIdentifier" xml:space="preserve">
    <value>\"{0}\" jest słowem kluczowym, ale oczekiwano identyfikatora</value>
  </data>
  <data name="kFailToConverToFunction" xml:space="preserve">
    <value>Przekształcanie obiektów we wskaźnik do funkcji jest niedozwolone</value>
  </data>
  <data name="kFailToConverToNull" xml:space="preserve">
    <value>Przekształcanie innych elementów na puste nie jest dozwolone</value>
  </data>
  <data name="kFailToConverToPointer" xml:space="preserve">
    <value>Nie można przekształcić obiektów na wskaźniki do funkcji</value>
  </data>
  <data name="kFFIFailedToObtainObject" xml:space="preserve">
    <value>Nie można pobrać obiektu '{0}' dla {1}.{2}'</value>
  </data>
  <data name="kFFIFailedToObtainThisObject" xml:space="preserve">
    <value>Nie można pobrać tego obiektu dla '{0}.{1}'</value>
  </data>
  <data name="kFFIInvalidCast" xml:space="preserve">
    <value>'{0}' jest rzutowany na '{1}', ale dozwolony zakres to [{2}..{3}]</value>
  </data>
  <data name="kFileNotFound" xml:space="preserve">
    <value>Plik: '{0}' nie został odnaleziony</value>
  </data>
  <data name="kFunctionNotFound" xml:space="preserve">
    <value>Nie można odnaleźć potencjalnej funkcji</value>
  </data>
  <data name="kFunctionNotReturnAtAllCodePaths" xml:space="preserve">
    <value>Wszystkie ścieżki prowadzące przez metodę '{0}()' muszą zwracać wartość</value>
  </data>
  <data name="kIndexOutOfRange" xml:space="preserve">
    <value>Indeks jest poza zakresem href=kIndexOutOfRange.html</value>
  </data>
  <data name="kInvalidAmountInRangeExpression" xml:space="preserve">
    <value>Wielkość w wyrażeniu zakresu powinna być dodatnią liczbą całkowitą</value>
  </data>
  <data name="kInvalidArguments" xml:space="preserve">
    <value>Argument jest nieprawidłowy</value>
  </data>
  <data name="kInvalidArgumentsInRangeExpression" xml:space="preserve">
    <value>Wartość używana w wyrażeniu zakresu musi być liczbą lub literą</value>
  </data>
  <data name="kInvalidBreakForFunction" xml:space="preserve">
    <value>Błąd wewnętrzny, raportuj: Instrukcja Przerwij powoduje, że funkcja błędnie zwraca pustą wartość.</value>
  </data>
  <data name="kInvalidContinueForFunction" xml:space="preserve">
    <value>Błąd wewnętrzny, raportuj: Instrukcja Kontynuuj powoduje, że funkcja błędnie zwraca pustą wartość.</value>
  </data>
  <data name="kInvalidStaticCyclicDependency" xml:space="preserve">
    <value>Istnieje cykliczna zależność między dwiema zmiennymi</value>
  </data>
  <data name="kInvalidThis" xml:space="preserve">
    <value>'ten' może być używany wyłącznie w metodach, które są elementami klasy</value>
  </data>
  <data name="kInvokeMethodOnInvalidObject" xml:space="preserve">
    <value>Metoda '{0}()' jest wywoływana na nieprawidłowym obiekcie.</value>
  </data>
  <data name="kMethodAlreadyDefined" xml:space="preserve">
    <value>Metoda '{0}()' jest już zdefiniowana</value>
  </data>
  <data name="kMethodHasInvalidArguments" xml:space="preserve">
    <value>'{0}()' ma pewne nieprawidłowe argumenty href=kMethodHasInvalidArguments</value>
  </data>
  <data name="kMethodIsInaccessible" xml:space="preserve">
    <value>Metoda '{0}()' nie może zostać osiągnięta z tego miejsca</value>
  </data>
  <data name="kMethodNotFound" xml:space="preserve">
    <value>Metoda „{0}()” nie została odnaleziona href=kMethodNotFound.html</value>
  </data>
  <data name="kMethodResolutionFailure" xml:space="preserve">
    <value>Błąd wewnętrzny, zgłoś: błąd rozpoznania metody na etapie: {0}().</value>
  </data>
  <data name="kMethodResolutionFailureForOperator" xml:space="preserve">
    <value>Operator '{0}' nie może być zastosowany do argumentów typu '{1}' i '{2}'</value>
  </data>
  <data name="kMethodResolutionFailureWithTypes" xml:space="preserve">
    <value>Brak wersji {0}, która przyjmuje typ/typy argumentu ({1}). href=NonOverloadMethodResolutionError.html</value>
  </data>
  <data name="kMethodStackOverflow" xml:space="preserve">
    <value>'{0}()' powtarzał się, aż zabrakło pamięci w dodatku Dynamo. Należy dodać przypadek bazowy.</value>
  </data>
  <data name="kMultipleSymbolFound" xml:space="preserve">
    <value>Wiele definicji dla „{0}” jest dostępnych jako {1} href=kMultipleSymbolFound.html</value>
  </data>
  <data name="kMultipleSymbolFoundFromName" xml:space="preserve">
    <value>Wiele definicji dla '{0}' jest dostępnych jako {1}</value>
  </data>
  <data name="kMethodDeprecated" xml:space="preserve">
    <value>Metoda '{0}' została wycofana, zamiast niej użyj metody '{1}'. href=Deprecated.html</value>
  </data>
  <data name="kNoStepSizeInAmountRangeExpression" xml:space="preserve">
    <value>W wyrażeniu zakresu ilości nie jest określona wielkość kroku</value>
  </data>
  <data name="kPropertyInaccessible" xml:space="preserve">
    <value>Właściwość '{0}' jest niedostępna</value>
  </data>
  <data name="kPropertyIsInaccessible" xml:space="preserve">
    <value>Właściwość '{0}' jest niedostępna</value>
  </data>
  <data name="kPropertyNotFound" xml:space="preserve">
    <value>Właściwość '{0}' nie została odnaleziona</value>
  </data>
  <data name="kPropertyOfClassNotFound" xml:space="preserve">
    <value>Nie można znaleźć właściwości wywołanej {0} w {1} href=kPropertyOfClassNotFound</value>
  </data>
  <data name="kRangeExpressionConflictOperator" xml:space="preserve">
    <value>Operator ilości nie może być użyty razem z operatorem kroku</value>
  </data>
  <data name="kRangeExpressionWithInvalidAmount" xml:space="preserve">
    <value>Wielkość kroku jest nieprawidłowa.</value>
  </data>
  <data name="kRangeExpressionWithInvalidStepSize" xml:space="preserve">
    <value>Wielkość kroku wyrażenia przedziału jest nieprawidłowa.</value>
  </data>
  <data name="kRangeExpressionWithNegativeStepNumber" xml:space="preserve">
    <value>Numer kroku wyrażenia zakresu powinien być większy niż 0</value>
  </data>
  <data name="kRangeExpressionWithNonIntegerStepNumber" xml:space="preserve">
    <value>Liczba kroku wyrażenia zakresu powinna być liczbą całkowitą</value>
  </data>
  <data name="kRangeExpressionWithStepSizeZero" xml:space="preserve">
    <value>Rozmiar kroku wyrażenia zakresu powinien być inny niż 0.</value>
  </data>
  <data name="kReturnTypeUndefined" xml:space="preserve">
    <value>Typ zwrotny '{0}' metody '{1}()' nie jest zdefiniowany</value>
  </data>
  <data name="kStaticMethodNotFound" xml:space="preserve">
    <value>Nie można znaleźć metody statycznej lub konstruktora. {0}.{1}()</value>
  </data>
  <data name="kStringIndexingCannotBeAssigned" xml:space="preserve">
    <value>Indeksowanie ciągu nie może być przypisane, jest przeznaczone tylko do odczytu</value>
  </data>
  <data name="kStringIndexOutOfRange" xml:space="preserve">
    <value>Indeks od ciągu jest poza zakresem</value>
  </data>
  <data name="kStringOverIndexed" xml:space="preserve">
    <value>Ciąg jest nadindeksowany</value>
  </data>
  <data name="kTypeUndefined" xml:space="preserve">
    <value>Typ '{0}' nie jest zdefiniowany</value>
  </data>
  <data name="kUnboundIdentifierMsg" xml:space="preserve">
    <value>Zmienna '{0}' nie została jeszcze zdefiniowana</value>
  </data>
  <data name="kUsingNonStaticMemberInStaticContext" xml:space="preserve">
    <value>'{0}' nie jest właściwością statyczną, dlatego nie może być przypisana do właściwości statycznych ani używana w metodach statycznych.</value>
  </data>
  <data name="kUsingThisInStaticFunction" xml:space="preserve">
    <value>'ten' nie może być użyty w metodzie statycznej</value>
  </data>
  <data name="MapsValueFromOneRangeToAnotherRange" xml:space="preserve">
    <value>Przypisuje wartość z jednego zakresu do drugiego</value>
  </data>
  <data name="MapsValueIntoInputRange" xml:space="preserve">
    <value>Przypisuje wartość do zakresu danych wejściowych</value>
  </data>
  <data name="NoConstructorForAttribute" xml:space="preserve">
    <value>Brak konstruktorów dla atrybutu '{0}' wymaga {1} argumentów</value>
  </data>
  <data name="NoSuchFileOrDirectoryToImport" xml:space="preserve">
    <value>Nie można zaimportować pliku: '{0}': plik lub katalog nie istnieje</value>
  </data>
  <data name="ObjectsContainsInList1NotInList2" xml:space="preserve">
    <value>Zwraca obiekty, które są uwzględnione na List1, ale wyłączone z List2</value>
  </data>
  <data name="ProducesTheSetIntersection" xml:space="preserve">
    <value>Tworzy ustawione przecięcie dwóch sekwencji</value>
  </data>
  <data name="ProducesTheSetUnion" xml:space="preserve">
    <value>Tworzy zestaw dwóch sekwencji za pomocą domyślnej funkcji porównywania zrównania</value>
  </data>
  <data name="RemoveKeys" xml:space="preserve">
    <value>Usuwa z listy kluczy</value>
  </data>
  <data name="RemovesTheMembersofTheList" xml:space="preserve">
    <value>Usuwa z listy elementy, które nie należą do określonego typu</value>
  </data>
  <data name="ReordersList" xml:space="preserve">
    <value>Zmienia porządek listy za pomocą określonych indeksów</value>
  </data>
  <data name="ReturnsConcatenatingList" xml:space="preserve">
    <value>Łączy dwie listy w jedną</value>
  </data>
  <data name="ReturnsListWithRankDepth" xml:space="preserve">
    <value>Zwraca listę wielowymiarową zgodnie z podaną kolejnością</value>
  </data>
  <data name="ReturnsListWithUniformDepth" xml:space="preserve">
    <value>Zwraca listę z jednolitą głębokością określoną przez głębokość wejściową</value>
  </data>
  <data name="ReturnsNumberOfItems" xml:space="preserve">
    <value>Zwraca liczbę elementów z określonej listy</value>
  </data>
  <data name="ReturnStatementIsNotAllowedInConstructor" xml:space="preserve">
    <value>instrukcja zwrotu nie jest dozwolona w konstruktorze</value>
  </data>
  <data name="ReturnsTheDeepestDepthOfTheList" xml:space="preserve">
    <value>Zwraca najgłębszą głębokość listy</value>
  </data>
  <data name="ReturnsTheFlattened1DList" xml:space="preserve">
    <value>Zwraca spłaszczoną listę 1D listy wielowymiarowej danych wejściowych. Jeśli dane są wartością pojedynczą, zwraca tę wartość.</value>
  </data>
  <data name="ReturnsTheIndex" xml:space="preserve">
    <value>Zwraca indeks elementu na liście</value>
  </data>
  <data name="ReturnsTheNumberOfFalseValueInList" xml:space="preserve">
    <value>Zwraca liczbę wartości fałsz na liście</value>
  </data>
  <data name="ReturnsTheNumberOfTrueValue" xml:space="preserve">
    <value>Zwraca liczbę wartości prawda na liście</value>
  </data>
  <data name="SemiColonExpected" xml:space="preserve">
    <value>oczekuje się ';'</value>
  </data>
  <data name="SortsListByValue" xml:space="preserve">
    <value>Sortuje określoną listę według wartości jej elementów w porządku rosnącym lub malejącym</value>
  </data>
  <data name="SortsListByValueInAscending" xml:space="preserve">
    <value>Sortuje określoną listę według wartości jej elementów w porządku rosnącym</value>
  </data>
  <data name="TooManyCharacters" xml:space="preserve">
    <value>Zbyt dużo znaków w literale znakowym</value>
  </data>
  <data name="UnknownAttribute" xml:space="preserve">
    <value>Nieznany atrybut {0}</value>
  </data>
  <data name="UseInlineConditional" xml:space="preserve">
    <value>Instrukcja '{0}' może być używana tylko w bloku języku imperatywnego. Czy użyć zamiast tego wewnętrznego warunku?</value>
  </data>
  <data name="UseListJoinNode" xml:space="preserve">
    <value>Zamiast tego należy użyć węzła List.Join</value>
  </data>
  <data name="ValidForImperativeBlockOnly" xml:space="preserve">
    <value>Instrukcja '{0}' może być używana tylko w bloku języka imperatywnego</value>
  </data>
  <data name="ModuloByZero" xml:space="preserve">
    <value>Modulo liczby całkowitej przez zero</value>
  </data>
  <data name="addadd_expected" xml:space="preserve">
    <value>oczekiwano "++"</value>
  </data>
  <data name="add_expected" xml:space="preserve">
    <value>oczekiwano "+"</value>
  </data>
  <data name="andand_expected" xml:space="preserve">
    <value>oczekiwano "&amp;&amp;"</value>
  </data>
  <data name="and_expected" xml:space="preserve">
    <value>oczekiwano "&amp;"</value>
  </data>
  <data name="asterisk_expected" xml:space="preserve">
    <value>oczekiwano "*"</value>
  </data>
  <data name="catch_expected" xml:space="preserve">
    <value>oczekiwano "zatrzask"</value>
  </data>
  <data name="char_expected" xml:space="preserve">
    <value>oczekiwano znaku</value>
  </data>
  <data name="closebrace_expected" xml:space="preserve">
    <value>oczekiwano "}"</value>
  </data>
  <data name="closebracket_expected" xml:space="preserve">
    <value>oczekiwano closebracket</value>
  </data>
  <data name="closeparen_expected" xml:space="preserve">
    <value>oczekiwano closeparen</value>
  </data>
  <data name="comma_expected" xml:space="preserve">
    <value>oczekiwano ","</value>
  </data>
  <data name="curvedash_expected" xml:space="preserve">
    <value>oczekiwano "~\"</value>
  </data>
  <data name="dashdash_expected" xml:space="preserve">
    <value>oczekiwano "--"</value>
  </data>
  <data name="divider_expected" xml:space="preserve">
    <value>oczekiwano "/"</value>
  </data>
  <data name="doublecolumn_expected" xml:space="preserve">
    <value>oczekiwano ":"</value>
  </data>
  <data name="endline_expected" xml:space="preserve">
    <value>oczekiwano endline</value>
  </data>
  <data name="EOF_expected" xml:space="preserve">
    <value>Oczekiwano końca elementów (EOF)</value>
  </data>
  <data name="equalmark_expected" xml:space="preserve">
    <value>oczekiwano "="</value>
  </data>
  <data name="equalright_expected" xml:space="preserve">
    <value>oczekiwano "=&gt;"</value>
  </data>
  <data name="equal_expected" xml:space="preserve">
    <value>oczekiwano równości</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>błąd</value>
  </data>
  <data name="float_expected" xml:space="preserve">
    <value>oczekiwano float</value>
  </data>
  <data name="greaterequal_expected" xml:space="preserve">
    <value>oczekiwano greaterequal</value>
  </data>
  <data name="greaterthan_expected" xml:space="preserve">
    <value>oczekiwano greaterthan</value>
  </data>
  <data name="hax_expected" xml:space="preserve">
    <value>oczekiwano "#"</value>
  </data>
  <data name="ident_expected" xml:space="preserve">
    <value>oczekiwano ident</value>
  </data>
  <data name="invalid_Associative_AccessSpecifier" xml:space="preserve">
    <value>nieprawidłowy Associative_AccessSpecifier</value>
  </data>
  <data name="invalid_Associative_AddOp" xml:space="preserve">
    <value>invalid_Associative_AddOp</value>
  </data>
  <data name="invalid_Associative_BinaryOps" xml:space="preserve">
    <value>nieprawidłowy Associative_BinaryOps</value>
  </data>
  <data name="invalid_Associative_BitOp" xml:space="preserve">
    <value>nieprawidłowy Associative_BitOp</value>
  </data>
  <data name="invalid_Associative_classdecl" xml:space="preserve">
    <value>nieprawidłowy Associative_classdecl</value>
  </data>
  <data name="invalid_Associative_ComparisonOp" xml:space="preserve">
    <value>nieprawidłowy Associative_ComparisonOp</value>
  </data>
  <data name="invalid_Associative_DecoratedIdentifier" xml:space="preserve">
    <value>nieprawidłowy Associative_DecoratedIdentifier</value>
  </data>
  <data name="invalid_Associative_Factor" xml:space="preserve">
    <value>nieprawidłowy Associative_Factor</value>
  </data>
  <data name="invalid_Associative_FunctionalStatement" xml:space="preserve">
    <value>nieprawidłowy Associative_FunctionalStatement</value>
  </data>
  <data name="invalid_Associative_functiondecl" xml:space="preserve">
    <value>nieprawidłowy Associative_functiondecl</value>
  </data>
  <data name="invalid_Associative_LanguageBlock" xml:space="preserve">
    <value>nieprawidłowy Associative_LanguageBlock</value>
  </data>
  <data name="invalid_Associative_LogicalOp" xml:space="preserve">
    <value>nieprawidłowy Associative_LogicalOp</value>
  </data>
  <data name="invalid_Associative_MulOp" xml:space="preserve">
    <value>nieprawidłowy Associative_MulOp</value>
  </data>
  <data name="invalid_Associative_NameReference" xml:space="preserve">
    <value>nieprawidłowy Associative_NameReference</value>
  </data>
  <data name="invalid_Associative_negop" xml:space="preserve">
    <value>nieprawidłowy Associative_negop</value>
  </data>
  <data name="invalid_Associative_Number" xml:space="preserve">
    <value>nieprawidłowy Associative_Number</value>
  </data>
  <data name="invalid_Associative_PostFixOp" xml:space="preserve">
    <value>nieprawidłowy Associative_PostFixOp</value>
  </data>
  <data name="invalid_Associative_Statement" xml:space="preserve">
    <value>nieprawidłowy Associative_Statement</value>
  </data>
  <data name="invalid_Associative_UnaryExpression" xml:space="preserve">
    <value>nieprawidłowy Associative_UnaryExpression</value>
  </data>
  <data name="invalid_Associative_unaryop" xml:space="preserve">
    <value>nieprawidłowy Associative_unaryop</value>
  </data>
  <data name="invalid_Hydrogen" xml:space="preserve">
    <value>nieprawidłowy Wodór</value>
  </data>
  <data name="invalid_Imperative_addop" xml:space="preserve">
    <value>nieprawidłowy Imperative_addop</value>
  </data>
  <data name="invalid_Imperative_assignstmt" xml:space="preserve">
    <value>nieprawidłowy Imperative_assignstmt</value>
  </data>
  <data name="invalid_Imperative_bitop" xml:space="preserve">
    <value>nieprawidłowy Imperative_bitop</value>
  </data>
  <data name="invalid_Imperative_decoratedIdentifier" xml:space="preserve">
    <value>nieprawidłowy Imperative_decoratedIdentifier</value>
  </data>
  <data name="invalid_Imperative_factor" xml:space="preserve">
    <value>nieprawidłowy Imperative_factor</value>
  </data>
  <data name="invalid_Imperative_forloop" xml:space="preserve">
    <value>nieprawidłowy Imperative_forloop</value>
  </data>
  <data name="invalid_Imperative_functiondecl" xml:space="preserve">
    <value>nieprawidłowy Imperative_functiondecl</value>
  </data>
  <data name="invalid_Imperative_ifstmt" xml:space="preserve">
    <value>nieprawidłowy Imperative_ifstmt</value>
  </data>
  <data name="invalid_Imperative_languageblock" xml:space="preserve">
    <value>nieprawidłowy Imperative_languageblock</value>
  </data>
  <data name="invalid_Imperative_logicalop" xml:space="preserve">
    <value>nieprawidłowy Imperative_logicalop</value>
  </data>
  <data name="invalid_Imperative_mulop" xml:space="preserve">
    <value>nieprawidłowy Imperative_mulop</value>
  </data>
  <data name="invalid_Imperative_NameReference" xml:space="preserve">
    <value>nieprawidłowy Imperative_NameReference</value>
  </data>
  <data name="invalid_Imperative_num" xml:space="preserve">
    <value>nieprawidłowy Imperative_num</value>
  </data>
  <data name="invalid_Imperative_PostFixOp" xml:space="preserve">
    <value>nieprawidłowy Imperative_PostFixOp</value>
  </data>
  <data name="invalid_Imperative_relop" xml:space="preserve">
    <value>nieprawidłowy Imperative_relop</value>
  </data>
  <data name="invalid_Imperative_stmt" xml:space="preserve">
    <value>nieprawidłowy Imperative_stmt</value>
  </data>
  <data name="invalid_Imperative_unaryexpr" xml:space="preserve">
    <value>nieprawidłowy Imperative_unaryexpr</value>
  </data>
  <data name="invalid_Imperative_unaryop" xml:space="preserve">
    <value>nieprawidłowy Imperative_unaryop</value>
  </data>
  <data name="invalid_Import_Statement" xml:space="preserve">
    <value>nieprawidłowy Import_Statement</value>
  </data>
  <data name="in_expected" xml:space="preserve">
    <value>oczekiwano "w"</value>
  </data>
  <data name="kw_break_expected" xml:space="preserve">
    <value>oczekiwano kw_break</value>
  </data>
  <data name="kw_class_expected" xml:space="preserve">
    <value>oczekiwano kw_class</value>
  </data>
  <data name="kw_constructor_expected" xml:space="preserve">
    <value>oczekiwano kw_constructor</value>
  </data>
  <data name="kw_continue_expected" xml:space="preserve">
    <value>oczekiwano kw_continue</value>
  </data>
  <data name="kw_def_expected" xml:space="preserve">
    <value>oczekiwano kw_def</value>
  </data>
  <data name="kw_elseif_expected" xml:space="preserve">
    <value>oczekiwano kw_elseif</value>
  </data>
  <data name="kw_else_expected" xml:space="preserve">
    <value>oczekiwano kw_else</value>
  </data>
  <data name="kw_extend_expected" xml:space="preserve">
    <value>oczekiwano kw_extend</value>
  </data>
  <data name="kw_external_expected" xml:space="preserve">
    <value>oczekiwano kw_external</value>
  </data>
  <data name="kw_for_expected" xml:space="preserve">
    <value>oczekiwano kw_for</value>
  </data>
  <data name="kw_from_expected" xml:space="preserve">
    <value>oczekiwano kw_from</value>
  </data>
  <data name="kw_heap_expected" xml:space="preserve">
    <value>oczekiwano kw_heap</value>
  </data>
  <data name="kw_if_expected" xml:space="preserve">
    <value>oczekiwano kw_if</value>
  </data>
  <data name="kw_import_expected" xml:space="preserve">
    <value>oczekiwano kw_import</value>
  </data>
  <data name="kw_local_expected" xml:space="preserve">
    <value>oczekiwano kw_local</value>
  </data>
  <data name="kw_native_expected" xml:space="preserve">
    <value>oczekiwano kw_native</value>
  </data>
  <data name="kw_prefix_expected" xml:space="preserve">
    <value>oczekiwano kw_prefix</value>
  </data>
  <data name="kw_static_expected" xml:space="preserve">
    <value>oczekiwano kw_static</value>
  </data>
  <data name="kw_while_expected" xml:space="preserve">
    <value>oczekiwano kw_while</value>
  </data>
  <data name="lessequal_expected" xml:space="preserve">
    <value>oczekiwano lessequal</value>
  </data>
  <data name="lessthan_expected" xml:space="preserve">
    <value>oczekiwano lessthan</value>
  </data>
  <data name="literal_false_expected" xml:space="preserve">
    <value>oczekiwano literal_false</value>
  </data>
  <data name="literal_null_expected" xml:space="preserve">
    <value>oczekiwano literal_null</value>
  </data>
  <data name="literal_true_expected" xml:space="preserve">
    <value>oczekiwano literal_true</value>
  </data>
  <data name="neg_expected" xml:space="preserve">
    <value>oczekiwano wartości ujem</value>
  </data>
  <data name="notequal_expected" xml:space="preserve">
    <value>oczekiwano notequal</value>
  </data>
  <data name="not_expected" xml:space="preserve">
    <value>nieoczekiwane</value>
  </data>
  <data name="number_expected" xml:space="preserve">
    <value>oczekiwano liczby</value>
  </data>
  <data name="openbrace_expected" xml:space="preserve">
    <value>oczekiwano "{"</value>
  </data>
  <data name="openbracket_expected" xml:space="preserve">
    <value>oczekiwano openbracket</value>
  </data>
  <data name="openparen_expected" xml:space="preserve">
    <value>oczekiwano openparen</value>
  </data>
  <data name="oror_expected" xml:space="preserve">
    <value>oczekiwano "||"</value>
  </data>
  <data name="period_expected" xml:space="preserve">
    <value>oczekiwany okres</value>
  </data>
  <data name="pipe_expected" xml:space="preserve">
    <value>oczekiwano rury</value>
  </data>
  <data name="postfixed_replicationguide_expected" xml:space="preserve">
    <value>oczekiwano postfixed replicationguide</value>
  </data>
  <data name="power_expected" xml:space="preserve">
    <value>oczekiwano "^"</value>
  </data>
  <data name="private_expected" xml:space="preserve">
    <value>oczekiwano "prywatny"</value>
  </data>
  <data name="protected_expected" xml:space="preserve">
    <value>oczekiwano "zabezpieczony"</value>
  </data>
  <data name="public_expected" xml:space="preserve">
    <value>oczekiwano "publiczny"</value>
  </data>
  <data name="question_expected" xml:space="preserve">
    <value>oczekiwano "?"</value>
  </data>
  <data name="rangeop_expected" xml:space="preserve">
    <value>oczekiwano rangeop</value>
  </data>
  <data name="reminder_expected" xml:space="preserve">
    <value>oczekiwano "%"</value>
  </data>
  <data name="replicationguide_postfix_expected" xml:space="preserve">
    <value>oczekiwano replicationguide_postfix</value>
  </data>
  <data name="textstring_expected" xml:space="preserve">
    <value>oczekiwano textstring</value>
  </data>
  <data name="this_symbol_not_expected_in_Associative_FunctionalStatement" xml:space="preserve">
    <value>nie oczekiwano tego symbolu w Associative_FunctionalStatement</value>
  </data>
  <data name="this_symbol_not_expected_in_Associative_FunctionCallStatement" xml:space="preserve">
    <value>ten symbol nie był oczekiwany w Associative_FunctionCallStatement</value>
  </data>
  <data name="this_symbol_not_expected_in_Associative_Statement" xml:space="preserve">
    <value>nie oczekiwano tego symbolu w Associative_Statement</value>
  </data>
  <data name="this_symbol_not_expected_in_Import_Statement" xml:space="preserve">
    <value>nie oczekiwano tego symbolu w Import_Statement</value>
  </data>
  <data name="this_symbol_no_expected_in_Associative_FunctionalStatement" xml:space="preserve">
    <value>nie oczekiwano tego symbolu w Associative_FunctionalStatement</value>
  </data>
  <data name="this_symbo_no_expected_in_Associative_NonAssignmentStatement" xml:space="preserve">
    <value>nie oczekiwano tego symbolu w Associative_NonAssignmentStatement</value>
  </data>
  <data name="throw_expected" xml:space="preserve">
    <value>oczekiwano rzutu</value>
  </data>
  <data name="triquestionmark_expected" xml:space="preserve">
    <value>oczekiwano ???</value>
  </data>
  <data name="try_expected" xml:space="preserve">
    <value>oczekiwano "spróbuj"</value>
  </data>
  <data name="kInvalidType" xml:space="preserve">
    <value>Typ jest nieprawidłowy</value>
  </data>
  <data name="AlgorithmNotSupported" xml:space="preserve">
    <value>Wybrany algorytm nie jest obsługiwany</value>
  </data>
  <data name="ArrayWithNotSupported" xml:space="preserve">
    <value>Szyk bez wspólnej klasy nadrzędnej nie jest jeszcze obsługiwany: {0}</value>
  </data>
  <data name="FailedToResolveSortingFunction" xml:space="preserve">
    <value>Nie udało się rozwiązać funkcji porównania dla sortowania, oczekiwane narzędzie sortowania definicji: int(x,y)</value>
  </data>
  <data name="FunctionDispatchFailed" xml:space="preserve">
    <value>Nie można wykonać wysyłania funkcji {0}</value>
  </data>
  <data name="MaxDimensionExceeded" xml:space="preserve">
    <value>Żądana replikacja przekracza dostępne wymiary szyku. Ten przypadek nie jest jeszcze obsługiwany {0}</value>
  </data>
  <data name="MultipleFunctionsFound" xml:space="preserve">
    <value>Nie można zdecydować, którą funkcję wykonać. Podaj bardziej szczegółowe informacje o typie. Możliwe funkcje:</value>
  </data>
  <data name="MultipleGuidesNotSupported" xml:space="preserve">
    <value>Niestety, funkcja wielu prowadnic na jednym argumencie, które nie są w porządku rosnącym, nie jest jeszcze obsługiwana, zamiast tego należy użyć pętli.</value>
  </data>
  <data name="OneDArrayExpected" xml:space="preserve">
    <value>Oba argumenty powinny być typu jednowymiarowy szyk!</value>
  </data>
  <data name="OperationFailType1" xml:space="preserve">
    <value>{0}.{1} operacja nie powiodła się.</value>
  </data>
  <data name="OperationFailType2" xml:space="preserve">
    <value>{0}.{1} operacja nie powiodła się.
{2}</value>
  </data>
  <data name="ZipAlgorithmError" xml:space="preserve">
    <value>Najdłuższe i najkrótsze spakowane kolekcje nie są obsługiwane</value>
  </data>
  <data name="FailedToCastFromNull" xml:space="preserve">
    <value>Wartości nieznanej (null) nie można rzutować na {0} href=FailedToCastFromNull.html</value>
  </data>
  <data name="ArgumentNullException" xml:space="preserve">
    <value>Wartość nie może być równa null.
Nazwa parametru: {0}. href=ArgumentNullException.html</value>
  </data>
  <data name="FunctionGroupNotFound" xml:space="preserve">
    <value>Nie można znaleźć funkcji o nazwie {0} na {1}</value>
  </data>
  <data name="FunctionGroupWithParameterNotFound" xml:space="preserve">
    <value>Nie można znaleźć funkcji o nazwie {0} na {1}, która zajmuje {2}</value>
  </data>
  <data name="kInvalidStringArgumentInRangeExpression" xml:space="preserve">
    <value>Początkowa wartość może być tylko liczbą lub literą</value>
  </data>
  <data name="kInvalidUnicodeArgumentInRangeExpression" xml:space="preserve">
    <value>Wyrażenia Zakres i Sekwencja obsługują tylko znaki zgodne ze standardem ASCII</value>
  </data>
  <data name="MoreThanOneDominantList" xml:space="preserve">
    <value>Dozwolona jest tylko jedna lista główna</value>
  </data>
  <data name="RangeExpressionOutOfMemory" xml:space="preserve">
    <value>Liczba elementów w wyrażeniu zakresu przekracza określony limit</value>
  </data>
  <data name="IndexIntoNonArrayObject" xml:space="preserve">
    <value>Brak elementów w określonym adresie indeksu</value>
  </data>
  <data name="RunOutOfMemory" xml:space="preserve">
    <value>Za mało pamięci, aby zakończyć operację.</value>
  </data>
  <data name="InvalidFunction" xml:space="preserve">
    <value>Funkcja nie jest poprawna.</value>
  </data>
  <data name="kInvalidListLevelName" xml:space="preserve">
    <value>'{0}' nie może być użyte jako nazwa poziomu listy, należy rozważyć użycie L1 dla poziomu 1.</value>
  </data>
  <data name="invalid_Associative_Level" xml:space="preserve">
    <value>Nieprawidłowa składnia list@level, należy rozważyć użycie @L1 dla poziomu 1.</value>
  </data>
  <data name="VariableRedifinitionError" xml:space="preserve">
    <value>Zmienna {0} została zdefiniowana w tym węźle bloku kodu. Zmiennej nie można zdefiniować więcej niż jeden raz.</value>
  </data>
  <data name="VariableRecursiveReference" xml:space="preserve">
    <value>Zmienna {0} jest używana w tej instrukcji, którą zdefiniowano. Rekurencyjna zależność nie jest dozwolona.</value>
  </data>
  <data name="InvalidArrayIndexType" xml:space="preserve">
    <value>Indeksy list muszą być liczbami. href=InvalidArrayIndexType.html</value>
  </data>
  <data name="FailedToConvertArrayToDictionary" xml:space="preserve">
    <value>Nie można przekształcić listy na słownik.</value>
  </data>
  <data name="NonOverloadMethodResolutionError" xml:space="preserve">
    <value>{0} oczekuje typu/typów argumentu ({1}), a został wywołany z ({2}). href=NonOverloadMethodResolutionError.html</value>
  </data>
  <data name="DeprecatedListInitializationSyntax" xml:space="preserve">
    <value>Nawiasy klamrowe nie są już używane do tworzenia list. Użyj nawiasów kwadratowych, jak [] lub [1,2,3].</value>
  </data>
  <data name="ListMethodDeprecated" xml:space="preserve">
    <value>Metoda '{0}' została wycofana; zamiast niej użyj metody '{1}' z typem słownik</value>
  </data>
  <data name="IntegerOverflow" xml:space="preserve">
    <value>Operacja spowodowała przepełnienie liczby całkowitej. Jej wynik może być nieoczekiwany.</value>
  </data>
</root>