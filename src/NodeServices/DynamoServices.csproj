<Project Sdk="Microsoft.NET.Sdk">
    <ImportGroup Label="PropertySheets">
        <Import Project="$(SolutionDir)Config\CS_SDK.props" />
    </ImportGroup>
    <PropertyGroup>
        <ProductVersion>8.0.30703</ProductVersion>
        <SchemaVersion>2.0</SchemaVersion>
        <ProjectGuid>{EF879A10-041D-4C68-83E7-3192685F1BAE}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>DynamoServices</RootNamespace>
        <AssemblyName>DynamoServices</AssemblyName>
        <DocumentationFile>$(OutputPath)\DynamoServices.XML</DocumentationFile>
        <!--seems like an msbuild build bug - if both targetframework and
      targetframeworks are set targetframeworks is ignored
      even though it should take precedence according to the docs.
      Dotnet build and builds in vs seem to work fine without this hack.-->
        <TargetFramework>$(Undefined)</TargetFramework>
        <TargetFrameworks>netstandard2.0;net8.0;net10.0</TargetFrameworks>
    </PropertyGroup>
    <PropertyGroup>
        <NoWarn>MSB3539;CS1591;NUnit2005;NUnit2007;CS0618;CS0612;CS0672</NoWarn>
    </PropertyGroup>
    <ItemGroup>
        <!--exclude these dependencies as Sys.Ref.MetadataLoadContext.dll is already pulled in from other projects and the transitive deps are part of the .net8/net10 runtime.-->
        <PackageReference Include="System.Reflection.MetadataLoadContext" Version="8.0.0" ExcludeAssets="runtime" />
    </ItemGroup>
    <ItemGroup>
      <Compile Update="Properties\Resources.Designer.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>Resources.resx</DependentUpon>
      </Compile>
    </ItemGroup>
    <ItemGroup>
      <EmbeddedResource Update="Properties\Resources.en-US.resx">
        <Generator></Generator>
      </EmbeddedResource>
      <EmbeddedResource Update="Properties\Resources.resx">
        <Generator>ResXFileCodeGenerator</Generator>
        <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      </EmbeddedResource>
    </ItemGroup>
</Project>