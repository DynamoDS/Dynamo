<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptButtonTooltip" xml:space="preserve">
    <value>現在のコードの変更を受け入れます。</value>
  </data>
  <data name="CustomNodesPythonDependencyHeader" xml:space="preserve">
    <value>IronPython2 依存関係のあるカスタム ノード</value>
  </data>
  <data name="DiffButtonTooltip" xml:space="preserve">
    <value>サイドバイサイドとインラインのどちらかのビューで差分を表示します。</value>
  </data>
  <data name="IronPythonDialogDescription" xml:space="preserve">
    <value>Dynamo のエンジンは、旧来の IronPython2 (Python 2)から新しい CPython3 (Python 3)に移行されました。
IronPython エンジンも 1 つのパッケージとして Dynamo Package Manager から引き続きご利用いただけますが、サポートされるのは CPython3 のみとなります。</value>
  </data>
  <data name="IronPythonDialogSummary" xml:space="preserve">
    <value>このグラフには、古い Python エンジンを参照するノードが含まれています。</value>
  </data>
  <data name="IronPythonDialogTitle" xml:space="preserve">
    <value>グラフに古い Python エンジンが含まれています</value>
  </data>
  <data name="IronPythonDisableAlertMessage" xml:space="preserve">
    <value>次回からこのダイアログを表示しない</value>
  </data>
  <data name="IronPythonNotificationDetailedMessage" xml:space="preserve">
    <value>現在このグラフには、廃止された旧式の IronPython エンジンを使用する Python ノードが含まれています。このノードを更新し、新しい CPython 3.7 エンジンを使用することをご検討ください。</value>
  </data>
  <data name="IronPythonNotificationShortMessage" xml:space="preserve">
    <value>現在このグラフには、廃止された旧式の IronPython2 (Python 2)エンジンを使用したノードが含まれています。新しい CPython3 (Python 3)が実装されており、Python エディタ内で利用可能です。</value>
  </data>
  <data name="MigrationAssistantDisclaimerContinueButtonContent" xml:space="preserve">
    <value>続行</value>
  </data>
  <data name="MigrationAssistantDisclaimerDecline" xml:space="preserve">
    <value>拒否</value>
  </data>
  <data name="MigrationAssistantDisclaimerDisable" xml:space="preserve">
    <value>次回からこれを表示しない</value>
  </data>
  <data name="MigrationAssistantDisclaimerHeader" xml:space="preserve">
    <value>Python コードを変更しようとしています</value>
  </data>
  <data name="MigrationAssistantDisclaimerMessage" xml:space="preserve">
    <value>マイグレーション アシスタントを使用すると、Python 2 から Python 3 にスクリプトを更新できます。
[続行]をクリックすると、マイグレーション アシスタントによって推奨されたソース コードへの構文変更の適用に同意したものとみなされます。マイグレーション アシスタントはオープン ソース Dynamo のコンポーネントであり、Apache License 2.0 (https://www.apache.org/licenses/LICENSE-2.0)の条件の下でユーザにライセンスされます。Apache License 2.0、Dynamo、およびマイグレーション アシスタントは「現状有姿」で提供されます。</value>
  </data>
  <data name="MigrationAssistantDisclaimerWindowTitle" xml:space="preserve">
    <value>マイグレーション アシスタントの免責条項</value>
  </data>
  <data name="MigrationAssistantNoChangesStateHeader" xml:space="preserve">
    <value>ここに表示するものはありません</value>
  </data>
  <data name="MigrationAssistantNoChangesStateMessage" xml:space="preserve">
    <value>Python 3 エンジンを使用してコードを実行する準備が整いました。[適用]をクリックすると、Python 3 エンジンに切り替わります。</value>
  </data>
  <data name="MigrationAssistantErrorStateHeader" xml:space="preserve">
    <value>コードの中にエラーがあります!</value>
  </data>
  <data name="MigrationAssistantErrorStateMessage" xml:space="preserve">
    <value>エラーをすべて修正してからコードのマイグレーションを行ってください。</value>
  </data>
  <data name="PackagedCustomNodesHeader" xml:space="preserve">
    <value>パッケージ化</value>
  </data>
  <data name="PackagedCustomNodesTooltip" xml:space="preserve">
    <value>パッケージを更新するようパッケージの作成者に通知してしてください</value>
  </data>
  <data name="PythonMigrationAssistantCodeAfter" xml:space="preserve">
    <value>後</value>
  </data>
  <data name="PythonMigrationAssistantCodeBefore" xml:space="preserve">
    <value>前</value>
  </data>
  <data name="PythonMigrationAssistantInlinePaneTitle" xml:space="preserve">
    <value>前 -&gt; 後</value>
  </data>
  <data name="PythonMigrationAssistantWindowTitle" xml:space="preserve">
    <value>マイグレーション アシスタント</value>
  </data>
  <data name="PythonMigrationBackupExtension" xml:space="preserve">
    <value>Python2</value>
  </data>
  <data name="PythonMigrationBackupFileCreatedMessage" xml:space="preserve">
    <value>Python コードのマイグレーションを適用する前の、このグラフのバックアップが、設定済みのバックアップ場所 {0} に保存されました。</value>
  </data>
  <data name="RejectButtonTooltip" xml:space="preserve">
    <value>現在のコードの変更を拒否します。</value>
  </data>
  <data name="UserDefinitionCustomNodesTooltip" xml:space="preserve">
    <value>カスタム ノードをダブルクリックして、そのワークスペースを開きます</value>
  </data>
  <data name="UserDefinitionsHeader" xml:space="preserve">
    <value>定義</value>
  </data>
  <data name="MoreInformationButton" xml:space="preserve">
    <value>詳細情報</value>
  </data>
  <data name="AcceptButton" xml:space="preserve">
    <value>了解</value>
  </data>
  <data name="RejectButton" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="SwitchViewButton" xml:space="preserve">
    <value>ビューを切り替え</value>
  </data>
</root>