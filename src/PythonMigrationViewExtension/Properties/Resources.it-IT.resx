<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptButtonTooltip" xml:space="preserve">
    <value>Accettare le modifiche al codice corrente.</value>
  </data>
  <data name="CustomNodesPythonDependencyHeader" xml:space="preserve">
    <value>Nodi personalizzati con dipendenza IronPython2</value>
  </data>
  <data name="DiffButtonTooltip" xml:space="preserve">
    <value>Passare dalla vista affiancata a quella in linea e viceversa.</value>
  </data>
  <data name="IronPythonDialogDescription" xml:space="preserve">
    <value>In Dynamo si sta passando dal vecchio motore IronPython2 (Python 2) verso un nuovo motore CPython3 (Python 3). 
Il motore IronPython è ancora disponibile come pacchetto in Dynamo Package Manager, ma sarà supportato solo il motore CPython3.</value>
  </data>
  <data name="IronPythonDialogSummary" xml:space="preserve">
    <value>Questo grafico contiene nodi che fanno riferimento ad un motore Python obsoleto.</value>
  </data>
  <data name="IronPythonDialogTitle" xml:space="preserve">
    <value>Il grafico contiene il motore Python obsoleto</value>
  </data>
  <data name="IronPythonDisableAlertMessage" xml:space="preserve">
    <value>Non mostrare di nuovo.</value>
  </data>
  <data name="IronPythonNotificationDetailedMessage" xml:space="preserve">
    <value>Questo grafico attualmente contiene nodi Python che utilizzano il vecchio motore IronPython, il quale è stato dichiarato obsoleto. Provare ad aggiornare questi nodi per utilizzare il nuovo motore CPython 3.7.</value>
  </data>
  <data name="IronPythonNotificationShortMessage" xml:space="preserve">
    <value>Questo grafico attualmente contiene nodi che utilizzano il vecchio motore IronPython2 (Python 2), il quale è stato dichiarato obsoleto. È stato implementato un nuovo motore CPython3 (Python 3), che è accessibile all'interno dell'editor di Python.</value>
  </data>
  <data name="MigrationAssistantDisclaimerContinueButtonContent" xml:space="preserve">
    <value>Continua</value>
  </data>
  <data name="MigrationAssistantDisclaimerDecline" xml:space="preserve">
    <value>Rifiuta</value>
  </data>
  <data name="MigrationAssistantDisclaimerDisable" xml:space="preserve">
    <value>Non mostrare di nuovo.</value>
  </data>
  <data name="MigrationAssistantDisclaimerHeader" xml:space="preserve">
    <value>Si stanno per apportare modifiche al codice Python</value>
  </data>
  <data name="MigrationAssistantDisclaimerMessage" xml:space="preserve">
    <value>Migration Assistant consente agli utenti di aggiornare gli script da Python 2 a Python 3.
Facendo clic su "Continua", si accettano di implementare le modifiche della sintassi nel codice sorgente come suggerito da Migration Assistant. Migration Assistant è un componente di Dynamo open source e, in quanto tale, viene concesso in licenza in base ai termini della licenza Apache License 2.0 (https://www.apache.org/licenses/LICENSE-2.0). Secondo i termini della licenza Apache License 2.0, Dynamo e Migration Assistant vengono forniti all'utente "COSÌ COME SONO".</value>
  </data>
  <data name="MigrationAssistantDisclaimerWindowTitle" xml:space="preserve">
    <value>Declinazione di responsabilità di Migration Assistant</value>
  </data>
  <data name="MigrationAssistantNoChangesStateHeader" xml:space="preserve">
    <value>Nessun elemento da visualizzare.</value>
  </data>
  <data name="MigrationAssistantNoChangesStateMessage" xml:space="preserve">
    <value>Il codice è pronto per essere eseguito con il motore Python 3. Fare clic su Accetta e si passerà al motore Python 3.</value>
  </data>
  <data name="MigrationAssistantErrorStateHeader" xml:space="preserve">
    <value>È presente un errore nel codice.</value>
  </data>
  <data name="MigrationAssistantErrorStateMessage" xml:space="preserve">
    <value>Correggere tutti gli errori prima di tentare di eseguire la migrazione del codice.</value>
  </data>
  <data name="PackagedCustomNodesHeader" xml:space="preserve">
    <value>In pacchetto</value>
  </data>
  <data name="PackagedCustomNodesTooltip" xml:space="preserve">
    <value>Inviare una notifica all'autore del pacchetto per aggiornare il pacchetto.</value>
  </data>
  <data name="PythonMigrationAssistantCodeAfter" xml:space="preserve">
    <value>Dopo</value>
  </data>
  <data name="PythonMigrationAssistantCodeBefore" xml:space="preserve">
    <value>Prima</value>
  </data>
  <data name="PythonMigrationAssistantInlinePaneTitle" xml:space="preserve">
    <value>Prima -&gt; Dopo</value>
  </data>
  <data name="PythonMigrationAssistantWindowTitle" xml:space="preserve">
    <value>Migration Assistant</value>
  </data>
  <data name="PythonMigrationBackupExtension" xml:space="preserve">
    <value>Python2</value>
  </data>
  <data name="PythonMigrationBackupFileCreatedMessage" xml:space="preserve">
    <value>Prima di applicare la migrazione del codice Python, è stato salvato un backup di questo grafico nel percorso di backup configurato: {0}</value>
  </data>
  <data name="RejectButtonTooltip" xml:space="preserve">
    <value>Rifiutare le modifiche del codice correnti.</value>
  </data>
  <data name="UserDefinitionCustomNodesTooltip" xml:space="preserve">
    <value>Fare doppio clic sul nodo personalizzato per aprire la relativa area di lavoro.</value>
  </data>
  <data name="UserDefinitionsHeader" xml:space="preserve">
    <value>Definizioni</value>
  </data>
  <data name="MoreInformationButton" xml:space="preserve">
    <value>Ulteriori informazioni</value>
  </data>
  <data name="AcceptButton" xml:space="preserve">
    <value>Accetta</value>
  </data>
  <data name="RejectButton" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="SwitchViewButton" xml:space="preserve">
    <value>Cambia vista</value>
  </data>
</root>