<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptButtonTooltip" xml:space="preserve">
    <value>Übernimmt die aktuellen Codeänderungen.</value>
  </data>
  <data name="CustomNodesPythonDependencyHeader" xml:space="preserve">
    <value>Benutzerdefinierte Blöcke mit einer IronPython2-Abhängigkeit</value>
  </data>
  <data name="DiffButtonTooltip" xml:space="preserve">
    <value>Wechselt zwischen der parallelen und der Inline-Ansicht.</value>
  </data>
  <data name="IronPythonDialogDescription" xml:space="preserve">
    <value>Dynamo verwendet statt der alten IronPython2-Engine (Python 2) jetzt eine neue CPython3-Engine (Python 3). 
Die IronPython-Engine ist noch als Paket im Dynamo Package Manager verfügbar, allerdings wird nur noch die CPython3-Engine unterstützt.</value>
  </data>
  <data name="IronPythonDialogSummary" xml:space="preserve">
    <value>Dieses Diagramm enthält Blöcke, die auf eine veraltete Python-Engine verweisen.</value>
  </data>
  <data name="IronPythonDialogTitle" xml:space="preserve">
    <value>Diagramm enthält veraltete Python-Engine</value>
  </data>
  <data name="IronPythonDisableAlertMessage" xml:space="preserve">
    <value>Nicht mehr anzeigen.</value>
  </data>
  <data name="IronPythonNotificationDetailedMessage" xml:space="preserve">
    <value>Dieses Diagramm enthält derzeit Python-Blöcke, die die alte IronPython-Engine verwenden, die in neueren Versionen nicht mehr unterstützt wird. Aktualisieren Sie diese Blöcke ggf., um die neue CPython 3.7-Engine zu verwenden.</value>
  </data>
  <data name="IronPythonNotificationShortMessage" xml:space="preserve">
    <value>Dieses Diagramm enthält derzeit Blöcke, die die alte IronPython2-Engine (Python 2) verwenden, die in neueren Versionen nicht mehr unterstützt wird. Eine neue CPython3-Engine (Python 3) wurde implementiert und kann im Python-Editor aufgerufen werden.</value>
  </data>
  <data name="MigrationAssistantDisclaimerContinueButtonContent" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="MigrationAssistantDisclaimerDecline" xml:space="preserve">
    <value>Ablehnen</value>
  </data>
  <data name="MigrationAssistantDisclaimerDisable" xml:space="preserve">
    <value>Nicht mehr anzeigen.</value>
  </data>
  <data name="MigrationAssistantDisclaimerHeader" xml:space="preserve">
    <value>Sie sind im Begriff, Änderungen am Python-Code vorzunehmen</value>
  </data>
  <data name="MigrationAssistantDisclaimerMessage" xml:space="preserve">
    <value>Der Migrationsassistent unterstützt Benutzer beim Aktualisieren von Skripten aus Python 2 auf Python 3.
Durch Klicken auf Weiter erklären Sie sich damit einverstanden, die Syntaxänderungen in Ihrem Quellcode zu implementieren, die vom Migrationsassistenten vorgeschlagen wurden. Der Migrationsassistent ist eine Komponente von Dynamo (Open Source) und entsprechend unter den Bedingungen von Apache License 2.0 (https://www.apache.org/licenses/LICENSE-2.0) lizenziert. Dynamo und der Migrationsassistent werden Ihnen unter den Bedingungen von Apache License 2.0 "wie gesehen" zur Verfügung gestellt.</value>
  </data>
  <data name="MigrationAssistantDisclaimerWindowTitle" xml:space="preserve">
    <value>Haftungsausschluss des Migrationsassistenten</value>
  </data>
  <data name="MigrationAssistantNoChangesStateHeader" xml:space="preserve">
    <value>Keine Inhalte vorhanden!</value>
  </data>
  <data name="MigrationAssistantNoChangesStateMessage" xml:space="preserve">
    <value>Der Code kann jetzt mit der Python 3-Engine ausgeführt werden. Wenn Sie auf Übernehmen klicken, führen wir den Wechsel zur Python 3-Engine für Sie durch.</value>
  </data>
  <data name="MigrationAssistantErrorStateHeader" xml:space="preserve">
    <value>Ihr Code enthält einen Fehler!</value>
  </data>
  <data name="MigrationAssistantErrorStateMessage" xml:space="preserve">
    <value>Beheben Sie vor der Code-Migration alle Fehler.</value>
  </data>
  <data name="PackagedCustomNodesHeader" xml:space="preserve">
    <value>Kompakt</value>
  </data>
  <data name="PackagedCustomNodesTooltip" xml:space="preserve">
    <value>Benachrichtigen Sie den Paketersteller, um das Paket zu aktualisieren</value>
  </data>
  <data name="PythonMigrationAssistantCodeAfter" xml:space="preserve">
    <value>Nachher</value>
  </data>
  <data name="PythonMigrationAssistantCodeBefore" xml:space="preserve">
    <value>Vorher</value>
  </data>
  <data name="PythonMigrationAssistantInlinePaneTitle" xml:space="preserve">
    <value>Vorher -&gt; Nachher</value>
  </data>
  <data name="PythonMigrationAssistantWindowTitle" xml:space="preserve">
    <value>Migrationsassistent</value>
  </data>
  <data name="PythonMigrationBackupExtension" xml:space="preserve">
    <value>Python2</value>
  </data>
  <data name="PythonMigrationBackupFileCreatedMessage" xml:space="preserve">
    <value>Vor dem Anwenden der Python-Codemigration wurde eine Sicherungskopie dieses Diagramms im konfigurierten Verzeichnis für Sicherungskopien gespeichert: {0}</value>
  </data>
  <data name="RejectButtonTooltip" xml:space="preserve">
    <value>Lehnt die aktuellen Codeänderungen ab.</value>
  </data>
  <data name="UserDefinitionCustomNodesTooltip" xml:space="preserve">
    <value>Doppelklicken Sie auf den benutzerdefinierten Block, um seinen Arbeitsbereich zu öffnen</value>
  </data>
  <data name="UserDefinitionsHeader" xml:space="preserve">
    <value>Definitionen</value>
  </data>
  <data name="MoreInformationButton" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="AcceptButton" xml:space="preserve">
    <value>Akzeptieren</value>
  </data>
  <data name="RejectButton" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="SwitchViewButton" xml:space="preserve">
    <value>Ansicht wechseln</value>
  </data>
</root>