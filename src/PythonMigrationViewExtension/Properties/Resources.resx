<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptButtonTooltip" xml:space="preserve">
    <value>Accept the current code changes.</value>
  </data>
  <data name="CustomNodesPythonDependencyHeader" xml:space="preserve">
    <value>Custom Nodes that have an IronPython2 dependency</value>
  </data>
  <data name="DiffButtonTooltip" xml:space="preserve">
    <value>Change between Side-by-Side and Inline view.</value>
  </data>
  <data name="IronPythonDialogDescription" xml:space="preserve">
    <value>Dynamo is moving away from the old IronPython2 (Python 2) engine towards a new CPython3 (Python 3) engine. 
There will be a time of transition where both versions of Python node will work inside of Dynamo, but eventually the CPython3 engine will be set as default.</value>
  </data>
  <data name="IronPythonDialogSummary" xml:space="preserve">
    <value>This graph contains nodes that reference an outdated Python engine.</value>
  </data>
  <data name="IronPythonDialogTitle" xml:space="preserve">
    <value>Graph contains outdated Python engine</value>
  </data>
  <data name="IronPythonDisableAlertMessage" xml:space="preserve">
    <value>Do not show again.</value>
  </data>
  <data name="IronPythonNotificationDetailedMessage" xml:space="preserve">
    <value>This graph currently contains python nodes that are using the old IronPython Engine which will be deprecated in later versions.Consider updating these nodes to use the new CPython 3.7 Engine.</value>
  </data>
  <data name="IronPythonNotificationShortMessage" xml:space="preserve">
    <value>This graph currently contains nodes that are using the old IronPython2 (Python 2) engine which will be deprecated in later versions. A new CPython3 (Python 3) has been implemented and is accessible inside the Python editor.</value>
  </data>
  <data name="MigrationAssistantDisclaimerContinueButtonContent" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="MigrationAssistantDisclaimerDecline" xml:space="preserve">
    <value>Decline</value>
  </data>
  <data name="MigrationAssistantDisclaimerDisable" xml:space="preserve">
    <value>Do not show again.</value>
  </data>
  <data name="MigrationAssistantDisclaimerHeader" xml:space="preserve">
    <value>You are about to make changes to your Python code</value>
  </data>
  <data name="MigrationAssistantDisclaimerMessage" xml:space="preserve">
    <value>The Migration Assistant helps users to update scripts from Python 2 to Python 3.
By clicking “Continue”, you are agreeing to implement the syntax changes to your source code as suggested by the Migration Assistant. The Migration Assistant is a component of open source Dynamo, and as such it is licensed to you under the terms of the Apache License 2.0 (https://www.apache.org/licenses/LICENSE-2.0 ). Under the terms of the Apache License 2.0, Dynamo and the Migration Assistant are provided to you on an “AS IS” basis.</value>
  </data>
  <data name="MigrationAssistantDisclaimerWindowTitle" xml:space="preserve">
    <value>Migration Assistant Disclaimer</value>
  </data>
  <data name="MigrationAssistantNoChangesStateHeader" xml:space="preserve">
    <value>Nothing to see here!</value>
  </data>
  <data name="MigrationAssistantNoChangesStateMessage" xml:space="preserve">
    <value>Your code is ready to run with the Python 3 engine. Click accept and we'll switch to the Python 3 engine for you.</value>
  </data>
  <data name="MigrationAssistantErrorStateHeader" xml:space="preserve">
    <value>There is an error in your code!</value>
  </data>
  <data name="MigrationAssistantErrorStateMessage" xml:space="preserve">
    <value>Fix all errors before attempting code migration.</value>
  </data>
  <data name="PackagedCustomNodesHeader" xml:space="preserve">
    <value>Packaged</value>
  </data>
  <data name="PackagedCustomNodesTooltip" xml:space="preserve">
    <value>Please notify the package author to update the package</value>
  </data>
  <data name="PythonMigrationAssistantCodeAfter" xml:space="preserve">
    <value>After</value>
  </data>
  <data name="PythonMigrationAssistantCodeBefore" xml:space="preserve">
    <value>Before</value>
  </data>
  <data name="PythonMigrationAssistantInlinePaneTitle" xml:space="preserve">
    <value>Before -&gt; After</value>
  </data>
  <data name="PythonMigrationAssistantWindowTitle" xml:space="preserve">
    <value>Migration Assistant</value>
  </data>
  <data name="PythonMigrationBackupExtension" xml:space="preserve">
    <value>Python2</value>
  </data>
  <data name="PythonMigrationBackupFileCreatedMessage" xml:space="preserve">
    <value>Before applying the Python code migration, a backup of this graph has been saved to the configured backup location : {0}</value>
  </data>
  <data name="RejectButtonTooltip" xml:space="preserve">
    <value>Reject the current code changes.</value>
  </data>
  <data name="UserDefinitionCustomNodesTooltip" xml:space="preserve">
    <value>Double-click on the custom node to open its workspace</value>
  </data>
  <data name="UserDefinitionsHeader" xml:space="preserve">
    <value>Definitions</value>
  </data>
</root>