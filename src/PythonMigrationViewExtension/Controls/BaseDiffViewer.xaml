<Window x:Class="Dynamo.PythonMigration.Controls.BaseDiffViewer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:p="clr-namespace:Dynamo.PythonMigration.Properties"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:ui="clr-namespace:Dynamo.UI;assembly=DynamoCoreWpf"
        xmlns:viewModels="clr-namespace:Dynamo.PythonMigration.Differ"
        xmlns:local="clr-namespace:Dynamo.PythonMigration.Controls"
        mc:Ignorable="d"
        d:DesignHeight="450"
        d:DesignWidth="800"
        Height="500"
        MinWidth="500"
        MinHeight="450"
        Title="{x:Static p:Resources.PythonMigrationAssistantWindowTitle}"
        WindowStartupLocation="CenterOwner"
        Background="#272822">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <viewModels:DiffStateToVisibilityConverter x:Key="DiffStateToVis" />
            <DataTemplate DataType="{x:Type viewModels:InLineViewModel}">
                <local:InLineControl DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:SideBySideViewModel}">
                <local:SideBySideControl DataContext="{Binding}" />
            </DataTemplate>
            <Style x:Key="HasDifferenceController"
                   TargetType="{x:Type ContentControl}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=CurrentViewModel.DiffState}"
                                 Value="{x:Static viewModels:State.HasChanges}">
                        <Setter Property="Content"
                                Value="{Binding Path=CurrentViewModel}">
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentViewModel.DiffState}"
                                 Value="{x:Static viewModels:State.NoChanges}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical"
                                                VerticalAlignment="Center"
                                                Width="400">
                                        <TextBlock Text="{x:Static p:Resources.MigrationAssistantNoChangesStateHeader}"
                                                   TextAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontSize="24"
                                                   Foreground="{StaticResource WorkspaceTabHeaderActiveTextBrush}"
                                                   TextWrapping="Wrap" />
                                        <TextBlock Text="{x:Static p:Resources.MigrationAssistantNoChangesStateMessage}"
                                                   TextAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontSize="14"
                                                   Foreground="{StaticResource WorkspaceTabHeaderActiveTextBrush}"
                                                   TextWrapping="Wrap" />
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=CurrentViewModel.DiffState}"
                                 Value="{x:Static viewModels:State.Error}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical"
                                                VerticalAlignment="Center"
                                                Width="400">
                                        <TextBlock Text="{x:Static p:Resources.MigrationAssistantErrorStateHeader}"
                                                   TextAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontSize="24"
                                                   Foreground="{StaticResource WorkspaceTabHeaderActiveTextBrush}"
                                                   TextWrapping="Wrap" />
                                        <TextBlock Text="{x:Static p:Resources.MigrationAssistantErrorStateMessage}"
                                                   TextAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontSize="14"
                                                   Foreground="{StaticResource WorkspaceTabHeaderActiveTextBrush}"
                                                   TextWrapping="Wrap" />
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="44" />
        </Grid.RowDefinitions>

        <Grid.Resources>
            <Style TargetType="Button"
                   BasedOn="{StaticResource SButtonWithShapeIcon}">
                <Setter Property="Margin"
                        Value="1" />
                <Setter Property="VerticalAlignment"
                        Value="Bottom" />
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping"
                        Value="Wrap" />
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="TextWrapping"
                        Value="Wrap" />
            </Style>
        </Grid.Resources>
        
        <ContentControl Style="{StaticResource HasDifferenceController}"
                        Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        

        <!-- Buttons row -->
        <Grid HorizontalAlignment="Stretch"
              Grid.Row="1"
              Background="Black">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Left"
                        Grid.Column="0">
                <Button  Name="DiffButton"
                         Visibility="{Binding Path=CurrentViewModel.DiffState, Converter={StaticResource DiffStateToVis}}"
                         Click="OnDiffButtonClick"
                         HorizontalAlignment="Right"
                         ToolTip="{x:Static p:Resources.DiffButtonTooltip}"
                         Height="44">
                    <Button.Resources>
                        <fa:ImageAwesome x:Key="Shape"
                                         Icon="Exchange"
                                         Foreground="#bbbbbb"
                                         Height="17"
                                         Margin="13,0,13,0" />
                    </Button.Resources>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        Grid.Column="1">
                <Button  x:Name="AcceptButton"
                         Visibility="{Binding Path=CurrentViewModel.DiffState, Converter={StaticResource DiffStateToVis}}"
                         Click="OnAcceptButtonClicked"
                         HorizontalAlignment="Right"
                         ToolTip="{x:Static p:Resources.AcceptButtonTooltip}"
                         Height="44">
                    <Button.Resources>
                        <fa:ImageAwesome x:Key="Shape"
                                         Icon="Check"
                                         Foreground="#bbbbbb"
                                         Height="17"
                                         Margin="13,0,13,0" />
                    </Button.Resources>
                </Button>
                <Button  x:Name="RejectButton"
                         Click="OnRejectButtonClicked"
                         HorizontalAlignment="Right"
                         ToolTip="{x:Static p:Resources.RejectButtonTooltip}"
                         Height="44">
                    <Button.Resources>
                        <fa:ImageAwesome x:Key="Shape"
                                         Icon="Close"
                                         Foreground="#bbbbbb"
                                         Height="17"
                                         Margin="13,0,13,0" />
                    </Button.Resources>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
