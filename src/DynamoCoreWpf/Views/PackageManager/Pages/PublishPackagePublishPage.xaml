<Page x:Class="Dynamo.PackageManager.UI.PublishPackagePublishPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:Dynamo.PackageManager.UI"
      mc:Ignorable="d"
      xmlns:controls="clr-namespace:Dynamo.Controls"
      xmlns:p="clr-namespace:Dynamo.Wpf.Properties"
      xmlns:ui="clr-namespace:Dynamo.UI"
      xmlns:packagemanager="clr-namespace:Dynamo.PackageManager"
      d:DesignHeight="450"
      d:DesignWidth="800"
      UseLayoutRounding="True"
      d:DataContext="{d:DesignInstance Type=packagemanager:PublishPackageViewModel}"
      Title="PublishPackagePublishPage">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <controls:EmptyStringToFalseConverter x:Key="EmptyStringToFalseConverter" />
            <controls:EmptyListToVisibilityConverter x:Key="EmptyListToVisibilityConverter" />
            <controls:ListHasMoreThanNItemsToVisibilityConverter x:Key="ListHasMoreThanNItemsToVisibilityConverter"/>
            <controls:ToTitleCaseStringConverter x:Key="ToTitleCaseStringConverter" />
            <controls:NullOrEmptyStringToVisibiltyCollapsedConverter x:Key="NullOrEmptyStringToVisibiltyCollapsedConverter" />
            <controls:StringEqualsZeroToVisibilityCollapsedConverter x:Key="StringEqualsZeroToVisibilityCollapsedConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style x:Key="ComboBoxCheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <BulletDecorator VerticalAlignment="Center" Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border"
                                            Width="13"
                                            Height="13"
                                            Background="Transparent"
                                            BorderThickness="0">
                                        <Path x:Name="CheckBoxTick"
                                               Width="12"
                                               Height="12"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Visibility="Hidden"
                                               Data="M5 3.94L2 1C1.7132 0.863026 1.37119 0.921704 1.14645 1.14645C0.921704 1.37119 0.863026 1.7132 1 2L4.5 5.5C4.79282 5.79246 5.26718 5.79246 5.56 5.5L9 2C9.13698 1.7132 9.0783 1.37119 8.85356 1.14645C8.62881 0.921704 8.28681 0.863026 8 1L5 3.94Z"
                                               Fill="#38ABDF" />
                                    </Border>
                                </BulletDecorator.Bullet>

                                <ContentPresenter x:Name="contentPresent"
                                          Margin="5,0,5,0"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          TextBlock.FontSize="14px"
                                          TextBlock.Foreground="#bbbbbb" />
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="CheckBoxTick" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter TargetName="contentPresent" Property="TextBlock.Foreground" Value="#bbbbbb" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="contentPresent" Property="TextBlock.Foreground" Value="#444444" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxToggleButton"
                             TargetType="{x:Type ToggleButton}">
                <Grid Height="38px"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Background="Transparent" />
                    <Border x:Name="Border"
                            Grid.Column="1" />
                    <Border Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Background="#343434"
                            BorderBrush="#8F8F8F"
                            BorderThickness="0,0,0,1" />
                    <Rectangle x:Name="BlueUnderline"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Height="1px"
                               VerticalAlignment="Bottom" />
                    <Path x:Name="Arrow"
                          Grid.Column="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M5 3.94L2 1C1.7132 0.863026 1.37119 0.921704 1.14645 1.14645C0.921704 1.37119 0.863026 1.7132 1 2L4.5 5.5C4.79282 5.79246 5.26718 5.79246 5.56 5.5L9 2C9.13698 1.7132 9.0783 1.37119 8.85356 1.14645C8.62881 0.921704 8.28681 0.863026 8 1L5 3.94Z"
                          Fill="White" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsMouseOver"
                             Value="true">
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="#808080" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked"
                             Value="true">
                        <Setter TargetName="Arrow"
                                Property="Fill"
                                Value="#6AC0E7" />
                        <Setter TargetName="Arrow"
                                Property="Data"
                                Value="M 5 2.56 L 8 5.5 C 8.2868 5.637 8.6288 5.5783 8.8535 5.3536 C 9.0783 5.1288 9.137 4.7868 9 4.5 L 5.5 1 C 5.2072 0.7075 4.7328 0.7075 4.44 1 L 1 4.5 C 0.863 4.7868 0.9217 5.1288 1.1464 5.3536 C 1.3712 5.5783 1.7132 5.637 2 5.5 L 5 2.56 Z" />
                        <Setter TargetName="BlueUnderline"
                                Property="Fill"
                                Value="#6AC0E7" />
                    </Trigger>
                    <Trigger Property="IsEnabled"
                             Value="False">
                        <Setter TargetName="Border"
                                Property="Background"
                                Value="#EEEEEE" />
                        <Setter TargetName="Border"
                                Property="BorderBrush"
                                Value="#AAAAAA" />
                        <Setter Property="Foreground"
                                Value="#888888" />
                        <Setter TargetName="Arrow"
                                Property="Fill"
                                Value="#888888" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="Margin" Value="-6,0,0,0" />
                <Setter Property="Foreground" Value="#DCDCDC" />
                <Setter Property="Background" Value="#353535" />
                <Setter Property="FontSize" Value="12px" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="FontFamily" Value="{StaticResource ArtifaktElementRegular}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton Name="ToggleButton"
                                              Grid.Column="2"
                                              ClickMode="Press"
                                              Focusable="false"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Template="{StaticResource ComboBoxToggleButton}" />
                                <ContentPresenter Name="ContentSite"
                                                  Margin="3,0,0,0"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  IsHitTestVisible="False" />
                                <TextBox x:Name="PART_EditableTextBox"
                                         Margin="0,0,25,4"
                                         Padding="3,0"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Center"
                                         Focusable="True"
                                         FontFamily="{StaticResource ArtifaktElementRegular}"
                                         FontSize="10px"
                                         Foreground="#F5F5F5"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                         Visibility="Hidden" />
                                <Popup Name="Popup"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       Placement="Bottom"
                                       PopupAnimation="Slide"
                                       VerticalOffset="0">
                                    <Grid Name="DropDown"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                          SnapsToDevicePixels="True">
                                        <Border x:Name="DropDownBorder"
                                                Background="#666666" />
                                        <ScrollViewer Margin="0"
                                                      HorizontalAlignment="Stretch"
                                                      SnapsToDevicePixels="True"
                                                      VerticalScrollBarVisibility="Visible">
                                            <StackPanel Margin="-5,0,0,0"
                                                        IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems"
                                         Value="false">
                                    <Setter TargetName="DropDownBorder"
                                            Property="MinHeight"
                                            Value="95" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="#888888" />
                                </Trigger>
                                <Trigger Property="IsGrouping"
                                         Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                                            Value="false" />
                                </Trigger>
                                <Trigger SourceName="Popup"
                                         Property="Popup.AllowsTransparency"
                                         Value="true">
                                    <Setter TargetName="DropDownBorder"
                                            Property="CornerRadius"
                                            Value="0" />
                                    <Setter TargetName="DropDownBorder"
                                            Property="Margin"
                                            Value="0,0,0,0" />
                                </Trigger>
                                <Trigger Property="IsEditable"
                                         Value="true">
                                    <Setter Property="IsTabStop"
                                            Value="false" />
                                    <Setter TargetName="PART_EditableTextBox"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="ContentSite"
                                            Property="Visibility"
                                            Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- TabControl -->
            <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0"/>
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                    <RowDefinition x:Name="RowDefinition1" Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                                <Border x:Name="contentPanel" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- TabItem -->
            <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Foreground" Value="#F5F5F5"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontFamily" Value="{DynamicResource ArtifaktElementRegular}"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    Padding="10 5"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Header}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#434343"/>
                                    <Setter Property="FontFamily" Value="{StaticResource ArtifaktElementBold}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

                <!-- Custom validation adorner style -->
                <Style x:Key="CustomAdornerInputStyle"
                       TargetType="{x:Type TextBox}"
                       BasedOn="{StaticResource InputStyleWithIcon}">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border BorderBrush="#EB5555" BorderThickness="0 0 0 1" Padding="0">
                                        <AdornedElementPlaceholder/>
                                    </Border>                                
                                
                                    <StackPanel x:Name="errorMessage"
                                                Grid.Row="1"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Margin="4 10 0 0">
                                        <Viewbox Width="20" Height="20" VerticalAlignment="Center">
                                            <Path x:Name="Folder"
                                                  Fill="#EB5555"
                                                  Data="M10 0L0 10L10 20L20 10L10 0ZM1.41 10L10 1.41L18.59 10L10 18.59L1.41 10ZM9 13C9 13.5523 9.44771 14 10 14C10.5523 14 11 13.5523 11 13C11 12.4477 10.5523 12 10 12C9.44771 12 9 12.4477 9 13ZM10.4859 10.8536C10.3862 10.9459 10.2559 10.9981 10.12 11H9.88C9.74412 10.9981 9.61376 10.9459 9.51405 10.8536C9.41434 10.7613 9.35234 10.6353 9.34 10.5L9 6C9 5.73478 9.10536 5.48043 9.29289 5.29289C9.48043 5.10536 9.73478 5 10 5C10.2652 5 10.5196 5.10536 10.7071 5.29289C10.8946 5.48043 11 5.73478 11 6L10.66 10.5C10.6477 10.6353 10.5857 10.7613 10.4859 10.8536Z"
                                                  StrokeThickness="0">
                                            </Path>
                                        </Viewbox>
                                        <TextBlock VerticalAlignment="Center"
                                                   Margin="10 5 0 0"                            
                                                   FontSize="10"
                                                   FontFamily="{StaticResource ArtifaktElementRegular}"
                                                   Foreground="{StaticResource TextColorBrush}" 
                                                   Text="{x:Static p:Resources.NameNeedMoreCharacters}"/>
                                    </StackPanel>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>   

                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="Margin" Value="0 0 0 30"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <!--  Mid-Section: Details + Datagrid  -->
        <Grid Name="midSectionGrid" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="250" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="1.5*" MinWidth="365" />
            </Grid.ColumnDefinitions>

            <!--  Background Border  -->
            <Border Grid.Column="0"
                    Grid.ColumnSpan="3"
                    BorderBrush="#7E7E7E"
                    BorderThickness="0,0,0,1"
                    Focusable="False" />

            <!--  Left: Details  -->
            <ScrollViewer Grid.Row="1"
                            Grid.Column="0"
                            Margin="0,5"
                            VerticalScrollBarVisibility="Visible">
                <StackPanel Margin="15,6,10,6"
                            Orientation="Vertical">

                    <!--  Name  -->
                    <TextBlock Name="packageNameLabel"
                                Style="{StaticResource LabelStyle}"
                                Text="{x:Static p:Resources.PublishPackageViewPackageName}">
                        <TextBlock.ToolTip>
                            <ToolTip Content="{x:Static p:Resources.PublishPackageViewPackageNameTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <TextBox Name="packageNameInput"
                             Tag="{x:Static p:Resources.PublishPackageViewPackageNameWatermark}"
                             Style="{StaticResource CustomAdornerInputStyle}"                             
                             PreviewKeyDown="textBoxInput_PreviewKeyDown"
                             IsEnabled="{Binding Path=CanEditName}"
                             TabIndex="0" >
                        <TextBox.Text>
                            <Binding Path="Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PackageNameLengthValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!--  Description  -->
                    <TextBlock Name="descriptionLabel"
                               Margin="0 10 0 0"
                               Style="{StaticResource LabelStyle}"
                               Text="{x:Static p:Resources.PublishPackageViewPackageDescription}">
                        <TextBlock.ToolTip>
                            <ToolTip Content="{x:Static p:Resources.PublishPackageViewPackageDescriptionTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <TextBox Name="descriptionInput"
                             MinHeight="81px"
                             VerticalContentAlignment="Top"
                             Style="{StaticResource InputStyle}"
                             PreviewKeyDown="textBoxInput_PreviewKeyDown"
                             Tag="{x:Static p:Resources.PublishPackageViewPackageDescription}"
                             Text="{Binding Path=Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             TabIndex="1" />

                    <!--  Version  -->
                    <TextBlock Name="versionLabel"
                                Style="{StaticResource LabelStyle}"
                                Text="{x:Static p:Resources.PublishPackageViewPackageVersion}">
                        <TextBlock.ToolTip>
                            <ToolTip Content="{x:Static p:Resources.PublishPackageViewPackageVersionTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <UniformGrid Margin="-5,0,-5,12"
                                    Rows="1">

                        <local:NumericUpDownControl x:Name="versionMajorInput"
                                                    Margin="5,0,5,0"
                                                    Watermark="{x:Static p:Resources.PublishPackageVersionMajorWatermark}"
                                                    Value="{Binding Path=MajorVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TabIndex="2"
                                                    Label="{x:Static p:Resources.PublishPackageViewMajorPackageVersionLabel}"/>
                        <local:NumericUpDownControl x:Name="versionMinorInput"
                                                    Margin="5,0,5,0"
                                                    Watermark="{x:Static p:Resources.PublishPackageVersionMinorWatermark}"
                                                    Value="{Binding Path=MinorVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TabIndex="3"
                                                    Label="{x:Static p:Resources.PublishPackageViewMinorPackageVersionLabel}" />
                        <local:NumericUpDownControl x:Name="versionBuildInput"
                                                    Margin="5 0 5 0"
                                                    Watermark="{x:Static p:Resources.PublishPackageVersionBuildWatermark}"
                                                    Value="{Binding Path=BuildVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TabIndex="4"
                                                    Label="{x:Static p:Resources.PublishPackageViewBuildPackageVersionLabel}" />
                    </UniformGrid>
                    <StackPanel x:Name="versionErrorMessage"
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                Visibility="{Binding MajorVersion, Mode=TwoWay, Converter={StaticResource StringEqualsZeroToVisibilityCollapsedConverter}}"
                                Margin="4 0 0 15">
                        <Viewbox Width="20" Height="20" VerticalAlignment="Center">
                            <Path x:Name="Folder"
                                  Fill="#EB5555"
                                  Data="M10 0L0 10L10 20L20 10L10 0ZM1.41 10L10 1.41L18.59 10L10 18.59L1.41 10ZM9 13C9 13.5523 9.44771 14 10 14C10.5523 14 11 13.5523 11 13C11 12.4477 10.5523 12 10 12C9.44771 12 9 12.4477 9 13ZM10.4859 10.8536C10.3862 10.9459 10.2559 10.9981 10.12 11H9.88C9.74412 10.9981 9.61376 10.9459 9.51405 10.8536C9.41434 10.7613 9.35234 10.6353 9.34 10.5L9 6C9 5.73478 9.10536 5.48043 9.29289 5.29289C9.48043 5.10536 9.73478 5 10 5C10.2652 5 10.5196 5.10536 10.7071 5.29289C10.8946 5.48043 11 5.73478 11 6L10.66 10.5C10.6477 10.6353 10.5857 10.7613 10.4859 10.8536Z"
                                  StrokeThickness="0">
                            </Path>
                        </Viewbox>
                        <TextBlock VerticalAlignment="Center"
                                   Margin="10 5 0 0"
                                   MaxWidth="255"
                                   FontSize="10"
                                   FontFamily="{StaticResource ArtifaktElementRegular}"
                                   Foreground="{StaticResource TextColorBrush}"
                                   Text="{x:Static p:Resources.MajorVersionNonNegative}"                                   
                                   TextTrimming="CharacterEllipsis">
                            <TextBlock.ToolTip>
                                <ToolTip Content="{x:Static p:Resources.MajorVersionNonNegative}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </StackPanel>

                    <!--  External Dependency  -->
                    <TextBlock Name="hostLabel"
                                Margin="0,0,0,10"
                                Style="{StaticResource LabelStyle}"
                                Text="{x:Static p:Resources.PublishPackageViewPackageHostDependency}">
                        <TextBlock.ToolTip>
                            <ToolTip Content="{x:Static p:Resources.PublishPackageViewPackageHostDependencyTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <ComboBox Margin="0,0,0,20"
                                IsEditable="False"
                                ItemsSource="{Binding KnownHosts}"
                                OverridesDefaultStyle="True"
                                Style="{StaticResource ComboBoxStyle}"
                                TabIndex="5">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Name="HostEntry"
                                              Checked="HostEntry_CheckStateChanged"
                                              Content="{Binding HostName}"
                                              IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource ComboBoxCheckBoxStyle}"
                                              Tag="{RelativeSource FindAncestor,
                                                            AncestorType={x:Type ComboBox}}"
                                              Unchecked="HostEntry_CheckStateChanged" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.Template>
                            <ControlTemplate TargetType="ComboBox">
                                <Grid Height="38px">
                                    <ToggleButton Name="ToggleButton"
                                                    ClickMode="Press"
                                                    Focusable="false"
                                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Template="{StaticResource ComboBoxToggleButton}" />
                                    <ContentPresenter Name="ContentSite"
                                                        Margin="10,3,23,3"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Content="{Binding Path=SelectedHostsString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                        IsHitTestVisible="False" />
                                    <Popup Name="Popup"
                                            MinWidth="{TemplateBinding ActualWidth}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            Focusable="False"
                                            IsOpen="{TemplateBinding IsDropDownOpen}"
                                            Placement="Bottom"
                                            PopupAnimation="Slide">
                                        <Grid Name="DropDown"
                                                SnapsToDevicePixels="True">
                                            <Border Name="DropDownBorder"
                                                    Background="#343434"
                                                    BorderBrush="#444444"
                                                    BorderThickness="1,0,1,1" />
                                            <ScrollViewer Margin="4,6,4,6"
                                                            DataContext="{Binding}"
                                                            SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True"
                                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Grid>
                                    </Popup>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasItems"
                                                Value="false">
                                        <Setter TargetName="DropDownBorder"
                                                Property="MinHeight"
                                                Value="95" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ComboBox.Template>
                    </ComboBox>
                    
                    <!--  Keywords  -->
                    <TextBlock Name="keywordsLabel"
                                Style="{StaticResource LabelStyle}"
                                Text="{x:Static p:Resources.PublishPackageViewPackageKeywords}">
                        <TextBlock.ToolTip>
                            <ToolTip Content="{x:Static p:Resources.PublishPackageViewPackageKeywordsTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <TextBox Name="keywordsInput"
                             Margin="0 5"                           
                             PreviewKeyDown="textBoxInput_PreviewKeyDown"
                             Style="{StaticResource InputStyle}"
                             Text="{Binding Keywords, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Tag="{x:Static p:Resources.PublishPackageKeywordsWatermark}"
                             TabIndex="7">
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding SetKeywordsCommand}" Key="Return" />
                        </TextBox.InputBindings>
                    </TextBox>

                    <!-- Bar containing all keywords -->
                    <ItemsControl x:Name="KeywordsItemControl" Margin="0 0 0 2">
                        <ItemsControl.Resources>
                            <CollectionViewSource x:Key="KeywordItems" Source="{Binding KeywordsCollection}" />
                        </ItemsControl.Resources>
                        <ItemsControl.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer Collection="{Binding Source={StaticResource KeywordItems}}" />
                            </CompositeCollection>
                        </ItemsControl.ItemsSource>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type local:FilterTagControl}">
                                <local:FilterTagControl TagName="{Binding Name}"
                                                    IsFilterOn="{Binding OnChecked, Mode=TwoWay}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    
                    <!--  Group  -->
                    <TextBlock Name="groupLabel"
                                Style="{StaticResource LabelStyle}"
                                Text="{x:Static p:Resources.PublishPackageViewPackageGroup}">
                        <TextBlock.ToolTip>
                            <ToolTip Content="{x:Static p:Resources.PublishPackageViewPackageGroupTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <TextBox Name="groupInput"                           
                             PreviewKeyDown="textBoxInput_PreviewKeyDown"
                             Style="{StaticResource InputStyle}"
                             Text="{Binding Path=Group, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Tag="{x:Static p:Resources.PublishPackageGroupWatermark}"
                             TabIndex="6" />


                    <!--  More  -->
                    <Expander x:Name="detailsExpander"
                                Margin="-2,6,-2,0"
                                Header="{x:Static p:Resources.MoreButton}"
                                Style="{StaticResource MenuExpanderStyle}"
                                KeyboardNavigation.TabNavigation="Local"
                                TabIndex="8">
                        <StackPanel Margin="-10,10,0,0"
                                    KeyboardNavigation.TabNavigation="Local">

                            <!--  Website URL  -->
                            <TextBlock Name="websiteUrlLabel"
                                       Style="{StaticResource LabelStyle}"
                                       Text="{x:Static p:Resources.PublishPackageViewPublisherWebSite}" >
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{x:Static p:Resources.PublishPackageViewPublisherWebsiteTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                            <TextBox Name="websiteUrlInput"                           
                                     PreviewKeyDown="textBoxInput_PreviewKeyDown"
                                     Style="{StaticResource InputStyle}"
                                     Text="{Binding SiteUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Tag="{x:Static p:Resources.PublishPackageViewPublisherURLWatermark}"
                                     TabIndex="9" />

                            <!--  Repository URL  -->
                            <TextBlock Name="repositoryUrlLabel"
                                        Style="{StaticResource LabelStyle}"
                                        Text="{x:Static p:Resources.PublishPackageViewRepositoryUrl}">
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{x:Static p:Resources.PublishPackageViewGithubLinkTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                            <TextBox Name="repositoryUrlInput"   
                                     PreviewKeyDown="textBoxInput_PreviewKeyDown"
                                     Style="{StaticResource InputStyle}"
                                     Text="{Binding RepositoryUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Tag="{x:Static p:Resources.PublishPackageViewPublisherURLWatermark}"
                                     TabIndex="10" />

                            <!--  License  -->
                            <TextBlock Name="licenseLabel"                           
                                       PreviewKeyDown="textBoxInput_PreviewKeyDown"
                                       Style="{StaticResource LabelStyle}"
                                       Text="{x:Static p:Resources.PublishPackageViewLicense}" >
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{x:Static p:Resources.PublishPackageViewLicenceTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                            <TextBlock Name="licenseSubLabel"
                                        Style="{StaticResource SubLabelStyle}"
                                        TextWrapping="Wrap">
                            <Run Text="{x:Static p:Resources.PublishPackageViewLicenseSubLabel}" />
                            <Hyperlink Cursor="Hand"
                                       NavigateUri="https://opensource.org/licenses/MIT"
                                       RequestNavigate="Hyperlink_RequestNavigate"
                                       KeyboardNavigation.TabIndex="11">
                                MIT
                                <Hyperlink.Style>
                                    <Style TargetType="Hyperlink">
                                        <Setter Property="Foreground"
                                                Value="#6AC0E7" />
                                        <Setter Property="FontFamily"
                                                Value="{StaticResource ArtifaktElementRegular}" />
                                        <Setter Property="FontSize"
                                                Value="12px" />
                                    </Style>
                                </Hyperlink.Style>
                            </Hyperlink>
                            </TextBlock>
                            <TextBox Name="licenseInput"                           
                                     PreviewKeyDown="textBoxInput_PreviewKeyDown"
                                     Text="{Binding License, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource InputStyle}"
                                     Tag="{x:Static p:Resources.PublishPackageViewLicenseWatermark}"
                                     TabIndex="12" />

                            <!--  Copyright Holder  -->
                            <TextBlock Name="copyrightHolderLabel"
                                       Style="{StaticResource LabelStyle}"
                                       Text="{x:Static p:Resources.PublishPackageViewCopyrightHolder}" >
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{x:Static p:Resources.PublishPackageViewCopyrightHolderTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                            <TextBlock Name="copyrightHolderSubLabel"
                                        Style="{StaticResource SubLabelStyle}"
                                        Text="{x:Static p:Resources.PublishPackageViewCopyrightHolderSubLabel}" />
                            <TextBox Name="CopyrightHolder"                           
                                     PreviewKeyDown="textBoxInput_PreviewKeyDown"
                                     Style="{StaticResource InputStyle}"
                                     Text="{Binding CopyrightHolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Tag="{x:Static p:Resources.PublishPackageViewCopyrightHolderWatermark}"
                                     TabIndex="13" />

                            <!--  Copyright Year  -->
                            <TextBlock Name="copyrightYearLabel"
                                       Style="{StaticResource LabelStyle}"
                                       Text="{x:Static p:Resources.PublishPackageViewCopyrightYear}" >
                                <TextBlock.ToolTip>
                                    <ToolTip Content="{x:Static p:Resources.PublishPackageViewCopyrightYearTooltip}"
                                        Style="{StaticResource GenericToolTipLight}"></ToolTip>
                                </TextBlock.ToolTip>
                            </TextBlock>
                            <TextBlock Name="copyrightYearSubLabel"
                                       Style="{StaticResource SubLabelStyle}"
                                       Text="{x:Static p:Resources.PublishPackageViewCopyrightYearSubLabel}" />
                            <TextBox Name="CopyrightYear"                           
                                     PreviewKeyDown="textBoxInput_PreviewKeyDown"
                                     Margin="0,0,0,0"
                                     Style="{StaticResource InputStyle}"
                                     Text="{Binding CopyrightYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Tag="{x:Static p:Resources.PublishPackageViewCopyrightYearWatermark}"
                                     TabIndex="14" />
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </ScrollViewer>

            <!--  Right: DataGrid  -->
            <Grid Name="packageContentsGrid"
                    Grid.Column="2"
                    Margin="25,16,25,15"
                    VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!--  Package Contents Label  -->
                    <DockPanel>                        
                        <TextBlock DockPanel.Dock="Left"
                                   Style="{StaticResource LabelStyle}"
                                   Text="{x:Static p:Resources.PublishPackagePackageContent}" />


                        <Button Content="Edit"
                                Tag="Next"
                                DockPanel.Dock="Right"
                                Click="NavigationButton_Click"
                                HorizontalAlignment="Right"
                                Foreground="#38ABDF"
                                FontSize="12"
                                FontFamily="{StaticResource ArtifaktElementRegular}"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                Visibility="{Binding PreviewPackageContents, Converter={StaticResource ListHasMoreThanNItemsToVisibilityConverter}}" />
                    </DockPanel>

                    <Border Grid.Row="1"
                            Background="#343434"
                            Padding="0"
                            Margin="0 10 0 20">

                        <Grid>                            
                             <!--  Top Row: Buttons and Label  -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"
                                        Margin="30"
                                        Visibility="{Binding PreviewPackageContents,                                
                                                             UpdateSourceTrigger=PropertyChanged,
                                                             Mode=TwoWay,
                                                             Converter={StaticResource EmptyListToVisibilityConverter}}">
                            
                                <!--  Add Files  -->
                                <Button Click="NavigationButton_Click"
                                        Tag="Next"
                                        Command="{Binding Path=ShowAddFileDialogAndAddCommand}" 
                                        Content="{x:Static p:Resources.PublishPackageViewAddFileButton}"
                                        Margin="0,0,20,0"
                                        Background="#0696D7"
                                        Foreground="White"
                                        BorderBrush="#0696D7"
                                        Style="{StaticResource CtaButtonStyle}"
                                        TabIndex="15">
                                    <Button.ToolTip>
                                        <ToolTip Content="{x:Static p:Resources.PublishPackageViewAddFileButtonTooltip}"
                                                 Style="{StaticResource GenericToolTipLight}"></ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            
                                <!--  Add Directory  -->
                                <Button Click="NavigationButton_Click"
                                        Tag="Next"
                                        Command="{Binding Path=SelectDirectoryAndAddFilesRecursivelyCommand}"
                                        Content="{x:Static p:Resources.PublishPackageViewAddDirectoryButton}"
                                        Margin="20,0,0,0"
                                        Background="#0696D7"
                                        Foreground="White"
                                        BorderBrush="#0696D7"
                                        Style="{StaticResource CtaButtonStyle}"
                                        TabIndex="16">
                                    <Button.ToolTip>
                                        <ToolTip Content="{x:Static p:Resources.PublishPackageViewAddDirectoryButtonTooltip}"
                                                 Style="{StaticResource GenericToolTipLight}"></ToolTip>
                                    </Button.ToolTip>
                                </Button>                    
                            </StackPanel>
                            
                            <local:CustomBrowserControl x:Name="previewBrowserControl"
                                                        Loaded="previewBrowserControl_Loaded"
                                                        IsEnabled="False"
                                                        Margin="0 5"
                                                        Root="{Binding PreviewPackageContents, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                                        Visibility="{Binding PreviewPackageContents,
                                                                             UpdateSourceTrigger=PropertyChanged,
                                                                             Mode=TwoWay,
                                                                             Converter={StaticResource ListHasMoreThanNItemsToVisibilityConverter}}"/>
                        </Grid>

                    </Border>
                </Grid>

                <!--  Bottom: Markdown Files & Depende  ncies  -->
                <StackPanel Grid.Row="1"
                            Margin="0,0,0,0"
                            VerticalAlignment="Top">

                    <!--  Markdown Files Directory  -->
                    <DockPanel LastChildFill="False" Margin="0 0 0 4">
                        <DockPanel.ToolTip>
                            <ToolTip Content="{x:Static p:Resources.PreferencesViewMarkdownDirectoryTooltip}"
                                        Style="{StaticResource GenericToolTipLight}" />
                        </DockPanel.ToolTip>
                        <TextBlock Style="{StaticResource LabelStyle}"
                                    Text="{x:Static p:Resources.PublishPackageViewMarkdownFilesDirectory}" />
                        <Border Background="Transparent" 
                                DockPanel.Dock="Left"
                                Margin="8,3,0,0">
                            <Viewbox Width="14"
                                     Height="14"
                                     VerticalAlignment="Top">
                                <Path x:Name="Info"
                                     Fill="#999999"
                                     Data="M7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14C10.866 14 14 10.866 14 7C14 5.14348 13.2625 3.36301 11.9497 2.05025C10.637 0.737498 8.85652 0 7 0ZM8 11H6V6H8V11ZM7 5.25C6.30964 5.25 5.75 4.69036 5.75 4C5.75 3.30964 6.30964 2.75 7 2.75C7.69036 2.75 8.25 3.30964 8.25 4C8.25 4.33152 8.1183 4.64946 7.88388 4.88388C7.64946 5.1183 7.33152 5.25 7 5.25Z"
                                     StrokeThickness="0">
                                </Path>
                            </Viewbox>
                        </Border>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal"
                                Margin="0,0,0,15"
                                Visibility="{Binding MarkdownFilesDirectory, UpdateSourceTrigger=PropertyChanged,
                                                                 Converter={StaticResource NullOrEmptyStringToVisibiltyCollapsedConverter},
                                                                 ConverterParameter=invert}">
                        <!--  Add Markup Folder  -->
                        <Button Command="{Binding Path=SelectMarkdownDirectoryCommand}"
                                Background="{StaticResource PrimaryCharcoal300Brush}"
                                BorderThickness="0"
                                Cursor="Hand">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="Transparent" Margin="0 -1 0 0">
                                        <Viewbox Width="16"
                                                 Height="16"
                                                 VerticalAlignment="Top">
                                            <Path x:Name="Folder"
                                                  Fill="#999999"
                                                  Data="M2.00016 6.66667H6.84016L7.8535 6H13.3335V12H14.0002V5.33333H7.86016L6.00016 4H1.3335V14.6667H8.66683V14H2.00016V6.66667ZM2.00016 4.66667H6.00016L7.20016 5.61333L6.66683 6H2.00016V4.66667ZM12.6668 10.6667V12.6667H14.6668V14H12.6668V16H11.3335V14H9.3335V12.6667H11.3335V10.6667H12.6668Z"
                                                  StrokeThickness="0">
                                            </Path>
                                        </Viewbox>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Folder"
                                                    Property="Fill"
                                                    Value="#6AC0E7" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <TextBlock Style="{StaticResource SubLabelStyle}" Text="{x:Static p:Resources.PackagePathAddPathButtonName}" Margin="10 0 0 0"/>
                    </StackPanel>
                    <Grid Margin="0,0,0,15"
                          Visibility="{Binding MarkdownFilesDirectory, UpdateSourceTrigger=PropertyChanged,
                                                                 Converter={StaticResource NullOrEmptyStringToVisibiltyCollapsedConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0"
                                 Margin="0"
                                 HorizontalAlignment="Stretch"
                                 Background="#343434"
                                 IsHitTestVisible="False"
                                 IsReadOnly="True"
                                 Style="{StaticResource InputStyle}"    
                                 Tag="{Binding Source={x:Static p:Resources.NoneString}, Converter={StaticResource ToTitleCaseStringConverter}}"
                                 Text="{Binding MarkdownFilesDirectory, UpdateSourceTrigger=PropertyChanged}" />

                        <StackPanel Orientation="Horizontal"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Margin="0 0 0 5">    
                            
                            <Button Name="markdownFilesDirectoryButton"
                                    Grid.Column="1"
                                    Width="20"
                                    Height="20"
                                    Margin="5 0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    BorderThickness="0"
                                    Command="{Binding SelectMarkdownDirectoryCommand}"
                                    Cursor="Hand"
                                    DockPanel.Dock="Right"
                                    IsHitTestVisible="True"
                                    TabIndex="18">
                                <Button.ToolTip>
                                    <ToolTip Content="{x:Static p:Resources.PublishPackageViewMarkdownFilesDirectoryToolTip}"
                                                Style="{StaticResource GenericToolTipLight}"></ToolTip>
                                </Button.ToolTip>
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="Transparent">
                                            <Viewbox Width="16" Height="16" VerticalAlignment="Center">
                                                <Path x:Name="Folder"
                                                    Fill="#F5F5F5"
                                                    Data="M12.3807 13.3333H1.34863V2.66663H5.83292L7.85591 3.99996H13.4866V5.99996H14.6262L12.3807 13.3333ZM2.82532 12.6666H11.895L13.6955 6.66663H4.62578L2.82532 12.6666ZM2.02296 3.33329V12.6666H2.11737L4.14036 5.99996H12.8122V4.66663H7.65361L5.63063 3.33329H2.02296Z"
                                                    StrokeThickness="0">
                                                </Path>
                                            </Viewbox>                                           
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Folder" Property="Fill" Value="#6AC0E7" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button Command="{Binding Path=ClearMarkdownDirectoryCommand}"
                                    IsEnabled="{Binding Path=MarkdownFilesDirectory, Converter={StaticResource EmptyStringToFalseConverter}}"
                                    Style="{StaticResource TextButtonStyle}"
                                    Margin="0"
                                    VerticalAlignment="Center"
                                    TabIndex="17">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="Transparent">
                                            <Viewbox Width="14" Height="14" VerticalAlignment="Center">
                                                <Path x:Name="Folder"
                                                        Fill="#999999"
                                                        Data="M13.3996 3.39998L12.5996 2.59998L7.99961 7.29998L3.39961 2.59998L2.59961 3.39998L7.29961 7.99998L2.59961 12.6L3.39961 13.4L7.99961 8.69998L12.5996 13.4L13.3996 12.6L8.69961 7.99998L13.3996 3.39998Z"
                                                        StrokeThickness="0">
                                                </Path>
                                            </Viewbox>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                        Value="True">
                                                <Setter TargetName="Folder"
                                                        Property="Fill"
                                                        Value="#6AC0E7" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                                <Button.ToolTip>
                                    <ToolTip Content="{x:Static p:Resources.PublishPackageViewResetMarkdownDirectoryButtonToolTip}"
                                                Style="{StaticResource GenericToolTipLight}"></ToolTip>
                                </Button.ToolTip>
                            </Button>
                        </StackPanel>

                    </Grid>

                    <!--  External Package Dependencies  -->
                    <TextBlock Style="{StaticResource LabelStyle}"
                                Text="{x:Static p:Resources.PublishPackageExternalPackageDependencies}" />
                    <TextBlock Style="{StaticResource SubLabelStyle}"
                                Text="{Binding DependencyNames, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </Grid>

            <!--  Grid Splitter  -->
            <GridSplitter Grid.Column="1"
                          Margin="0"
                          HorizontalAlignment="Stretch"
                          BorderBrush="#FFFFFF"
                          BorderThickness="1,0"
                          Opacity="0.1"
                          ResizeBehavior="PreviousAndNext"
                          ResizeDirection="Columns"
                          Focusable="False" />
        </Grid>
    </Grid>
</Page>
