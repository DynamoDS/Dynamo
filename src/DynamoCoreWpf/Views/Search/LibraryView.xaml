<UserControl x:Class="Dynamo.UI.Views.LibraryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ui="clr-namespace:Dynamo.UI"
             xmlns:controls="clr-namespace:Dynamo.Controls"
             xmlns:uicontrols="clr-namespace:Dynamo.UI.Controls"
             xmlns:p="clr-namespace:Dynamo.Wpf.Properties"
             mc:Ignorable="d"
             d:DesignHeight="525"
             d:DesignWidth="350">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.MenuStyleDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.SidebarGridDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="LibraryTreeViewItem"
                   TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded"
                        Value="{Binding IsExpanded, Mode=OneWay}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Button Command="{Binding ClickedCommand}">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Button.Template>
                                <Border Name="Bd"
                                        BorderThickness="0">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <Border BorderBrush="{StaticResource LibraryItemHostBackground}">
                                            <Grid Background="Transparent">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>

                                                <ToggleButton x:Name="Expander"
                                                              Background="Transparent"
                                                              IsHitTestVisible="False"
                                                              Style="{StaticResource LibraryExpandCollapseToggleStyle}"
                                                              ClickMode="Press"
                                                              IsChecked="{Binding IsExpanded, Mode=OneWay}">
                                                    <ToggleButton.Margin>
                                                        <Binding Path="FullCategoryName"
                                                                 Converter="{StaticResource FullCategoryNameToMarginConverter}" />
                                                    </ToggleButton.Margin>
                                                </ToggleButton>

                                                <ContentPresenter Grid.Column="1"
                                                                  VerticalAlignment="Center"
                                                                  ContentSource="Header" />

                                                <TextBlock x:Name="ElementTypeText"
                                                           Grid.Column="2"
                                                           Text="{Binding Path=ElementType,Converter={StaticResource ElementTypeToShortConverter}}"
                                                           VerticalAlignment="Center"
                                                           HorizontalAlignment="Right"
                                                           TextBlock.FontSize="10"
                                                           TextBlock.Foreground="{StaticResource NestedMemberTextColor}"
                                                           Margin="0,0,10,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility"
                                                                    Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, 
                                                                                              AncestorType={x:Type Grid}}}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=DataContext,
                                                                                     Converter={StaticResource RootElementToBoolConverter}}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <MultiDataTrigger.Setters>
                                                                        <Setter Property="Visibility"
                                                                                Value="Visible" />
                                                                    </MultiDataTrigger.Setters>
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>


                                            </Grid>

                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Style.Triggers>

                                                        <!-- Root element & mouse over => dark grey + light border at the bottom. -->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=IsMouseOver}"
                                                                           Value="True" />
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=DataContext,
                                                                                     Converter={StaticResource RootElementToBoolConverter}}"
                                                                           Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="BorderThickness"
                                                                        Value="0,0,0,1" />
                                                                <Setter Property="Background"
                                                                        Value="{StaticResource RootElementOnHover}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>

                                                        <!-- Usual element & mouse over => light grey. -->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=IsMouseOver}"
                                                                           Value="True" />
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=DataContext,
                                                                                     Converter={StaticResource RootElementToBoolConverter}}"
                                                                           Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Background"
                                                                        Value="{StaticResource LibraryMemberOnHover}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>

                                                        <!-- Usual element & mouse not over => grey. -->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=IsMouseOver}"
                                                                           Value="False" />
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=DataContext,
                                                                                     Converter={StaticResource RootElementToBoolConverter}}"
                                                                           Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Background"
                                                                        Value="{StaticResource LibraryItemHostBackground}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>

                                                        <!-- Root element & mouse not over => dark dark grey + light border at the bottom. -->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=IsMouseOver}"
                                                                           Value="False" />
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                                                     Path=DataContext,
                                                                                     Converter={StaticResource RootElementToBoolConverter}}"
                                                                           Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="BorderThickness"
                                                                        Value="0,0,0,1" />
                                                                <Setter Property="Background"
                                                                        Value="{StaticResource RootElementBackground}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>

                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>

                                        <Border Grid.Row="1"
                                                Background="{StaticResource LibraryItemHostBackground}">
                                            <ItemsPresenter x:Name="ItemsHost">
                                                <ItemsPresenter.Visibility>
                                                    <Binding Converter="{StaticResource LibraryTreeItemsHostVisibilityConverter}" />
                                                </ItemsPresenter.Visibility>

                                                <ItemsPresenter.Style>
                                                    <Style TargetType="{x:Type ItemsPresenter}">
                                                        <Setter Property="Margin"
                                                                Value="0,0,0,0" />
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <Binding RelativeSource="{RelativeSource Self}"
                                                                             Path="DataContext"
                                                                             Converter="{StaticResource RootElementToBoolConverter}" />
                                                                </DataTrigger.Binding>
                                                                <Setter Property="Margin"
                                                                        Value="0,3,0,3" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ItemsPresenter.Style>

                                            </ItemsPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Button>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded"
                                         Value="false">
                                    <Setter Property="Visibility"
                                            TargetName="ItemsHost"
                                            Value="Collapsed" />
                                </Trigger>

                                <Trigger Property="HasItems"
                                         Value="false">
                                    <Setter Property="Visibility"
                                            TargetName="Expander"
                                            Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <EventSetter Event="MouseEnter"
                             Handler="OnMemberMouseEnter" />
                <EventSetter Event="MouseLeave"
                             Handler="OnPopupMouseLeave" />
            </Style>



            <!-- Region DataContext Templates -->

            <!-- This data template is used to show single member. -->
            <DataTemplate x:Key="MemberControlTemplate">
                <StackPanel Name="ImageAndNodeName"
                            Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <Image Margin="16,0,16,0"
                           Height="36"
                           Width="32"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Source="{Binding SmallIcon}"
                           Name="SmallIcon" />
                    <TextBlock Name="memberName"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Text="{Binding Name}"
                               Margin="5,0,0,0"
                               Foreground="{StaticResource CommonSidebarTextColor}"
                               FontSize="13" />
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="Width">
                                <Setter.Value>
                                    <Binding Path="ActualWidth"
                                             RelativeSource="{RelativeSource FindAncestor, AncestorType=TreeView}" />
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="{StaticResource LibraryMemberOnHover}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
            </DataTemplate>

            <!-- This data template is used to show 2nd level subcategory.
            This helps in controlling the margin in the tree view.-->
            <DataTemplate  x:Key="ClassDetailsDataTemplate">
                <StackPanel Orientation="Horizontal"                           
                            VerticalAlignment="Center" Margin="0,0,0,-10">
                    <Image Margin="16,0,16,0"
                           Height="36"
                           Width="24"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Source="{Binding SmallIcon}"/>
                    <TextBlock HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="5,0,0,0"
                               Foreground="{StaticResource CommonSidebarTextColor}"
                               FontSize="13"
                               Text="{Binding Name}" />
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="Width">
                                <Setter.Value>
                                    <Binding Path="ActualWidth"
                                             RelativeSource="{RelativeSource FindAncestor, AncestorType=TreeView}" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="{StaticResource LibraryMemberOnHover}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
            </DataTemplate>

            <!-- This data template is used to show one subcategory. -->
            <HierarchicalDataTemplate  x:Key="ClassObjectDataTemplate"
                                       ItemsSource="{Binding Entries}"
                                       ItemTemplate="{StaticResource ClassDetailsDataTemplate }">
                <StackPanel Name ="SubClassTreeNodes" Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <Image Margin="-25,0,16,0"
                           Height="36"
                           Width="24"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Source="{Binding SmallIcon}" />
                    <TextBlock HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="5,0,0,0"
                               Foreground="{StaticResource CommonSidebarTextColor}"
                               FontSize="13"
                               Text="{Binding Name}" />
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="Width">
                                <Setter.Value>
                                    <Binding Path="ActualWidth"
                                             RelativeSource="{RelativeSource FindAncestor, AncestorType=TreeView}" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="{StaticResource LibraryMemberOnHover}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
            </HierarchicalDataTemplate>

            <!-- This data template is used to show the list of subcategories. -->
            <HierarchicalDataTemplate x:Key="SubclassesTemplate">
                <TreeView Name="SubCategoryListView"
                          ItemsSource="{Binding Items}"
                          ItemTemplate="{StaticResource ClassObjectDataTemplate}"
                          Background="{StaticResource LibraryItemHostBackground}"
                          ItemContainerStyle="{StaticResource LibraryTreeViewItem}"
                          BorderThickness="0"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          ScrollViewer.VerticalScrollBarVisibility="Hidden"
                          ScrollViewer.CanContentScroll="False"
                          ScrollViewer.IsDeferredScrollingEnabled="False">
                </TreeView>

            </HierarchicalDataTemplate>

            <!-- Used for nested categories. E.g. nodes stucture for Revit root. -->
            <HierarchicalDataTemplate x:Key="NestedCategoryTemplate"
                                      ItemsSource="{Binding Path=Items}">
                <TextBlock Foreground="{StaticResource NestedMemberTextColor}"
                           FontSize="13"
                           Text="{Binding Path=Name}"
                           VerticalAlignment="Center"
                           Name="CategoryName">
                    <TextBlock.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExpanded, 
                                                               RelativeSource={RelativeSource FindAncestor, 
                                                                                              AncestorType={x:Type TreeViewItem}}}"
                                             Value="True">
                                    <Setter Property="TextBlock.FontWeight"
                                            Value="SemiBold" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </HierarchicalDataTemplate>

            <!--EndRegion-->

            <!-- Region Selectors -->
            <controls:LibraryTreeTemplateSelector x:Key="LibraryTreeTemplateSelector"
                                                  MemberTemplate="{StaticResource MemberControlTemplate}"
                                                  SubclassesTemplate="{StaticResource SubclassesTemplate}"
                                                  NestedCategoryTemplate="{StaticResource NestedCategoryTemplate}" />

            <!--EndRegion-->

            <!-- Region Styles -->

            <!-- Region CategoriesTreeView -->



            <Style x:Key="LibraryTreeView"
                   TargetType="{x:Type TreeView}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeView}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ItemsPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--EndRegion-->

            <Style x:Key="AddButtonContextMenu"
                   TargetType="{x:Type ContextMenu}">
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="HasDropShadow"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border"
                                    Background="#414141"
                                    Padding="1,5,1,5">
                                <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Resources>
                    <Style x:Key="{x:Type MenuItem}"
                           TargetType="MenuItem"
                           BasedOn="{StaticResource MenuItemStyle}">
                    </Style>
                </Style.Resources>
            </Style>

            <!--EndRegion-->

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Name="LibraryGrid">
        <ScrollViewer CanContentScroll="True"
                      PreviewMouseWheel="OnPreviewMouseWheel"
                      Background="Transparent"
                      Name="ScrollLibraryViewer"
                      Template="{DynamicResource LibraryScrollViewerControlTemplate}"
                      Style="{DynamicResource LibraryScrollViewerStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="60" />
                </Grid.RowDefinitions>
                <TreeView ItemsSource="{Binding BrowserRootCategories}"
                          ItemTemplateSelector="{StaticResource LibraryTreeTemplateSelector}"
                          ItemContainerStyle="{StaticResource LibraryTreeViewItem}"
                          Name="CategoryTreeView">
                    <TreeView.Template>
                        <ControlTemplate>
                            <ItemsPresenter />
                        </ControlTemplate>
                    </TreeView.Template>
                </TreeView>
                <Button Grid.Row="2"
                        Height="23"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        PreviewMouseUp="OnAddButtonPreviewMouseDown"
                        Content="Add">
                    <Button.Template>
                        <ControlTemplate>
                            <Border x:Name="container"
                                    BorderBrush="#555555"
                                    BorderThickness="1">
                                <Grid x:Name="inner">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="text"
                                               VerticalAlignment="Center"
                                               Margin="10, 0, 10, 0"
                                               Foreground="{StaticResource NestedMemberTextColor}"
                                               FontSize="13"
                                               Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />

                                    <TextBlock x:Name="arrow"
                                               Grid.Column="1"
                                               VerticalAlignment="Center"
                                               Margin="0, 0, 10, 0"
                                               Foreground="#787879"
                                               FontSize="14"
                                               Text="&#x25BE;" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="container"
                                            Property="Background"
                                            Value="{StaticResource RootElementOnHover}" />
                                    <Setter TargetName="arrow"
                                            Property="Foreground"
                                            Value="#AAABAB" />
                                </Trigger>
                                <DataTrigger Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource Self}}"
                                             Value="True">
                                    <Setter TargetName="container"
                                            Property="Background"
                                            Value="{StaticResource RootElementOnHover}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.ContextMenu>
                        <ContextMenu Style="{StaticResource AddButtonContextMenu}">
                            <MenuItem Focusable="False"
                                      Header="{x:Static p:Resources.DynamoViewFileMenuImport}"
                                      Command="{Binding Path=ImportLibraryCommand}" />
                            <MenuItem Focusable="False"
                                      Header="{x:Static p:Resources.DynamoViewPackageMenuSearchPackage}"
                                      Command="{Binding Path=ShowPackageManagerSearchCommand}" />
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
            </Grid>
        </ScrollViewer>

        <uicontrols:LibraryToolTipPopup x:Name="libraryToolTipPopup"
                                        StaysOpen="True"
                                        AllowsTransparency="True"
                                        MouseLeave="OnPopupMouseLeave" />
    </Grid>
</UserControl>