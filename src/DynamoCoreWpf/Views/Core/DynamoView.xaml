<Window x:Class="Dynamo.Controls.DynamoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:configuration="clr-namespace:Dynamo.Configuration;assembly=DynamoCore"
        xmlns:controls="clr-namespace:Dynamo.Controls"
        xmlns:workspaces="clr-namespace:Dynamo.Graph.Workspaces;assembly=DynamoCore"
        xmlns:ui="clr-namespace:Dynamo.UI"
        xmlns:uictrls="clr-namespace:Dynamo.UI.Controls"
        xmlns:service="clr-namespace:Dynamo.Services"
        xmlns:viewModels="clr-namespace:Dynamo.ViewModels"
        xmlns:views="clr-namespace:Dynamo.Views"
        xmlns:controls1="clr-namespace:Dynamo.Wpf.Controls"
        xmlns:p="clr-namespace:Dynamo.Wpf.Properties;assembly=DynamoCoreWpf"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        d:DataContext="{d:DesignInstance viewModels:DynamoViewModel, IsDesignTimeCreatable=False}"
        mc:Ignorable="d"
        x:Name="_this"
        Height="768"
        Width="1024"
        Closing="WindowClosing"
        Closed="WindowClosed"
        MinHeight="600"
        MinWidth="800"
        AllowsTransparency="False"
        KeyDown="DynamoView_KeyDown"
        KeyUp="DynamoView_KeyUp"
        Background="#3C3C3C"
        SnapsToDevicePixels="True"
        ResizeMode="CanResizeWithGrip"
        UseLayoutRounding="True"
        Activated="DynamoView_Activated"
        Deactivated="DynamoView_Deactivated"
        Style="{DynamicResource DynamoWindowStyle}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.MenuStyleDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>

        <KeyBinding Key="Tab"
                    Command="{Binding Path=DataContext.SelectNeighborsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />

        <KeyBinding Key="Delete"
                    Command="{Binding Path=DataContext.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="N"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.NewHomeWorkspaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="N"
                    Modifiers="Control+Shift"
                    Command="{Binding Path=DataContext.ShowNewFunctionDialogCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="R"
                    Modifiers="Control+Shift"
                    Command="{Binding Path=DataContext.SaveRecordedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Q"
                    Modifiers="Control+Shift"
                    Command="{Binding Path=DataContext.InsertPausePlaybackCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="L"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.GraphAutoLayoutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="I"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.BackgroundPreviewViewModel.ToggleIsolationModeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Tab"
                    Command="{Binding Path=DataContext.SelectNeighborsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />

        <KeyBinding Key="C"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.CopyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Z"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.UndoCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Y"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.RedoCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="A"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.SelectAllCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />

        <KeyBinding Key="D"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.NodeFromSelectionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="V"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />

        <KeyBinding Key="B"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.BackgroundPreviewViewModel.ToggleCanNavigateBackgroundCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />

        <KeyBinding Key="W"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.AddNoteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="V"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="S"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.ShowSaveDialogIfNeededAndSaveResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="S"
                    Modifiers="Control+Shift"
                    Command="{Binding Path=DataContext.ShowSaveDialogAndSaveResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="O"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.ShowOpenDialogAndOpenResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="I"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.ShowInsertDialogAndInsertResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="H"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.HomeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Up"
                    Modifiers="Control+Shift"
                    Command="{Binding Path=DataContext.ToggleConsoleShowingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="F4"
                    Modifiers="Alt"
                    Command="{Binding Path=DataContext.ExitCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="D"
                    Modifiers="Ctrl+Alt"
                    Command="{Binding Path=DataContext.DumpLibraryToXmlCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="G"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.AddAnnotationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="U"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.UngroupAnnotationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Left"
                    Modifiers="Ctrl+Alt"
                    CommandParameter="Left"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Right"
                    Modifiers="Ctrl+Alt"
                    CommandParameter="Right"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Up"
                    Modifiers="Ctrl+Alt"
                    CommandParameter="Up"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Down"
                    Modifiers="Ctrl+Alt"
                    CommandParameter="Down"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="OemPlus"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DataContext.ZoomInCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="OemMinus"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DataContext.ZoomOutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Add"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DataContext.ZoomInCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="Subtract"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DataContext.ZoomOutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="D0"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DataContext.FitViewCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="P"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DataContext.BackgroundPreviewViewModel.TogglePanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />

        <KeyBinding Key="F5"
                    Modifiers="Shift"
                    Command="{Binding Path=DataContext.HomeSpaceViewModel.RunSettingsViewModel.CancelRunCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="F5"
                    Command="{Binding Path=DataContext.HomeSpaceViewModel.RunSettingsViewModel.RunExpressionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    CommandParameter="{Binding Path=DataContext.HomeSpaceViewModel.RunSettingsViewModel.RunInDebug, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <MouseBinding Gesture="Shift+LeftDoubleClick"
                      Command="{Binding Path=DataContext.HomeSpaceViewModel.ShowInCanvasSearchCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                      CommandParameter="{x:Static viewModels:ShowHideFlags.Show}"/>
        <KeyBinding Key="T"
                    Modifiers="Control"
                    Command="{Binding Path=DataContext.ShowNewPresetsDialogCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="F1"
                    Command="{Binding Path=DataContext.ShowNodeDocumentationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
    </Window.InputBindings>

    <Grid Name="mainGrid"
          FocusManager.IsFocusScope="True"
          PreviewMouseDown="Window_PreviewMouseDown"
          PreviewMouseUp="Window_PreviewMouseUp"
          PreviewMouseLeftButtonUp="Window_PreviewMouseLeftButtonUp">

        <Grid.RowDefinitions>
            <RowDefinition Height="37px" />
            <RowDefinition Height="40px" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Name="consoleRow"
                           Height="{Binding ConsoleHeight, Mode=TwoWay, Converter={StaticResource ConsoleHeightConverter}}" />
            <RowDefinition Height="48" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="500"
                              MinWidth="1"
                              Name="LeftExtensionsViewColumn">
                <ColumnDefinition.Width>
                    <Binding Path="LibraryWidth"
                             Mode="TwoWay"
                             Converter="{StaticResource ConsoleHeightConverter}" />
                </ColumnDefinition.Width>
            </ColumnDefinition>
            <!--MinWidth fix for GridSplitter dragging in frameless window-->
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="5*" MinWidth="200" Name="CanvasColumn" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="0"
                              MinWidth="1"
                              Name="RightExtensionsViewColumn">
            </ColumnDefinition>
        </Grid.ColumnDefinitions>

        <!--Titlebar-->
        <Border Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="5"
                Name="titleBar">
            <Grid Name="titleBarGrid" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--Menu-->
                <Menu IsMainMenu="True"
                      Name="menu1"
                      Style="{StaticResource MainMenu}">
                    <!--Accessor key = false. This is to include underscore in header(only for SubMenuItem-->
                    <Menu.Resources>
                        <Style x:Key="SubMenuItemOverride"
                            BasedOn="{StaticResource MenuItemStyle}"
                            TargetType="{x:Type MenuItem}">

                            <Style.Resources>
                                <!--  SubmenuItem  -->
                                <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                                                          TargetType="MenuItem">

                                    <Border Name="Border"
                                            Height="25" Background="Transparent">
                                        <Grid MinWidth="200">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Name="HeaderHost"
                                                              Grid.Column="0"
                                                              TextBlock.FontSize="14px"
                                                              TextBlock.FontFamily="{StaticResource ArtifaktElementRegular}"
                                                              TextBlock.Foreground="{StaticResource NormalForegroundBrush}"
                                                              Margin="5,0,0,0"
                                                              HorizontalAlignment="Stretch"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Header"
                                                              RecognizesAccessKey="False" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted"
                                                           Value="true">
                                            <Setter TargetName="Border"
                                                              Property="Background"
                                                              Value="{StaticResource HighlightedBrush}" />
                                            <Setter TargetName="HeaderHost"
                                                               Property="TextBlock.Foreground"
                                                               Value="{StaticResource ActiveForegroundBrush}" />
                                            <Setter TargetName="Border"
                                                                Property="BorderBrush"
                                                                Value="Transparent" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                                                                Value="false">
                                            <Setter Property="Foreground"
                                                                 Value="{StaticResource DisabledForegroundBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Role"
                                    Value="SubmenuItem">
                                    <Setter Property="Template"
                                      Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Menu.Resources>

                    <MenuItem Header="{x:Static p:Resources.DynamoViewDynamoMenu}"
                              Name="dynamoMenu"
                              Focusable="False">
                        <MenuItem Header="{x:Static p:Resources.DynamoViewDynamoMenuAbout}"
                                  Command="{Binding ShowAboutWindowCommand}"/>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewSettingMenuShowDataReportingDialog}"
                                  Name="ToggleIsAnalyticsReportingApprovedCommand"
                                  Command="{Binding Path=ToggleIsAnalyticsReportingApprovedCommand, Source={x:Static service:UsageReportingManager.Instance} }"
                                  CommandParameter="{Binding  RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Visibility="{Binding HideReportOptions, Converter={StaticResource InverseBoolToVisibilityCollapsedConverter}}">
                            <MenuItem.ToolTip>
                                <ToolTip Content="{x:Static p:Resources.DynamoViewSettingMenuShowDataReportingDialogTooltip}" Style="{StaticResource GenericToolTipLight}"/>
                            </MenuItem.ToolTip>
                        </MenuItem>
                            <Separator />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewDynamoMenuPreferences}"
                                  Click="OnPreferencesWindowClick"
                                  Name="preferencesOption"/>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewDynamoMenuExit}"
                                  Command="{Binding ExitCommand}"
                                  Name="exit"
                                  InputGestureText="Alt + F4"/>
                    </MenuItem>

                    <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenu}"
                              Name="fileMenu"
                              Focusable="False">
                        <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuNew}"
                                  Name="newMenu">
                            <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuNewHomeWorkSpace}"
                                      Command="{Binding NewHomeWorkspaceCommand}"
                                      Name="newHomeWorkspace"
                                      InputGestureText="Ctrl + N">
                            </MenuItem>
                            <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuNewCustomNode}"
                                      Command="{Binding ShowNewFunctionDialogCommand}"
                                      Name="newFuncButton"
                                      InputGestureText="Ctrl + Shift + N">
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuOpen}"
                                  Command="{Binding ShowOpenDialogAndOpenResultCommand}"
                                  Name="openButton"
                                  InputGestureText="Ctrl + O">
                        </MenuItem>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuInsert}"
                                  Command="{Binding ShowInsertDialogAndInsertResultCommand}"
                                  Name="insertButton"
                                  InputGestureText="Ctrl + I">
                        </MenuItem>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuRecentFiles}"
                                  ItemsSource="{Binding RecentFiles}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Header"
                                            Value="{Binding Converter={StaticResource FilePathDisplayConverter}}" />
                                    <Setter Property="Command"
                                            Value="{Binding DataContext.OpenRecentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}" />
                                    <Setter Property="CommandParameter"
                                            Value="{Binding}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuSave}"
                                  Command="{Binding ShowSaveDialogIfNeededAndSaveResultCommand}"
                                  Name="saveThisButton"
                                  InputGestureText="Ctrl + S">
                        </MenuItem>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuSaveAs}"
                                  Command="{Binding ShowSaveDialogAndSaveResultCommand}"
                                  Name="saveButton"
                                  InputGestureText="Ctrl + Shift + S">
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuImport}"
                                  Command="{Binding Path=DataContext.ImportLibraryCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Name="importLibrary" />
                        <Separator />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuExport}"
                                  Name="exportMenu"
                                  Tag="NoDownArrow">
                            <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuExportAsImage}"
                                      Command="{Binding ShowSaveImageDialogAndSaveResultCommand}"
                                      Name="saveImage">
                            </MenuItem>
                            <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuExport3DAsImage}"
                                      Command="{Binding ShowSaveImageDialogAndSaveResultCommand}"
                                      CommandParameter="{x:Static p:Resources.ScreenShotFrom3DParameter}"
                                      Name="save3DImage">
                            </MenuItem>
                            <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuExportToSTL}"
                                      Command="{Binding ExportToSTLCommand}"
                                      Name="saveSTL">
                            </MenuItem>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenu}"
                              Name="editMenu"
                              Focusable="False">
                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuUndo}"
                                  Command="{Binding UndoCommand}"
                                  Name="undo"
                                  InputGestureText="Ctrl + Z" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuRedo}"
                                  Command="{Binding RedoCommand}"
                                  Name="redo"
                                  InputGestureText="Ctrl + Y" />
                        <Separator />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuCopy}"
                                  Command="{Binding CopyCommand}"
                                  Name="copy"
                                  InputGestureText="Ctrl + C" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuPaste}"
                                  Command="{Binding PasteCommand}"
                                  Name="paste"
                                  InputGestureText="Ctrl + V" />
                        <Separator />

                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuCreateNote}"
                                  Command="{Binding AddNoteCommand}"
                                  Name="noteMenuItem"
                                  InputGestureText="Ctrl + W" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuCreateGroup}"
                                  Command="{Binding AddAnnotationCommand}"
                                  Name="noteMenuAnnotation"
                                  InputGestureText="Ctrl + G" />
                        <MenuItem Header="{x:Static p:Resources.GroupContextMenuUngroup}"
                                  Command="{Binding UngroupAnnotationCommand}"
                                  Name="ungroupGroup"
                                  InputGestureText="Ctrl + U" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuCreateCustomNode}"
                                  Command="{Binding Path=NodeFromSelectionCommand}"
                                  Name="nodeFromSelection"
                                  InputGestureText="Ctrl + D" />

                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuSelectAll}"
                                  Command="{Binding SelectAllCommand}"
                                  Name="selectAll"
                                  InputGestureText="Ctrl + A" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuDeleteSelected}"
                                  Command="{Binding DeleteCommand}"
                                  Name="deleteSelected"
                                  InputGestureText="Delete" />
                        <!--<MenuItem Focusable="False" Header="{x:Static p:Resources.DynamoViewEditMenuSelectNeighbours}" Command="{Binding Path=ExpandSelectionCommand}"  Name="expandSelect" InputGestureText="Tab"/>-->
                        <MenuItem  Header="{x:Static p:Resources.DynamoViewEditMenuAlignSelection}"
                                   Name="Align">
                            <MenuItem Command="{Binding AlignSelectedCommand}"
                                  CommandParameter="HorizontalCenter">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14" Height="14" Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_x_average.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignXAverage}" Foreground="White"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}"
                                  CommandParameter="HorizontalLeft">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14" Height="14" Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_left.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignLeft}" Foreground="White"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}"
                                  CommandParameter="HorizontalRight">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14" Height="14" Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_right.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignRight}" Foreground="White"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}"
                                  CommandParameter="VerticalCenter">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14" Height="14" Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_y_average.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignYAverage}" Foreground="White"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}"
                                  CommandParameter="VerticalTop">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14" Height="14" Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_top.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignTop}" Foreground="White"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}"
                                  CommandParameter="VerticalBottom">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14" Height="14" Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_bottom.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlighBottom}" Foreground="White"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}"
                                  CommandParameter="VerticalDistribute">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14" Height="14" Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_y_distribute.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignYDistribute}" Foreground="White"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}"
                                  CommandParameter="HorizontalDistribute">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14" Height="14" Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_X_distribute.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignXDistribute}" Foreground="White"/>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewEditMenuCleanupLayout}"
                                  Command="{Binding GraphAutoLayoutCommand}"
                                  Name="GraphAutoLayout"
                                  InputGestureText="Ctrl + L" />
                    </MenuItem>

                    <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenu}"
                              Name="viewMenu"
                              Focusable="False">
                        <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenuZoom}"
                                  Name="zoomMenu">
                            <MenuItem  Header="{x:Static p:Resources.DynamoViewViewMenuZoomIn}"
                                       Command="{Binding ZoomInCommand}"
                                       InputGestureText="Ctrl + =" />
                            <MenuItem  Header="{x:Static p:Resources.DynamoViewViewMenuZoomOut}"
                                       Command="{Binding ZoomOutCommand}"
                                       InputGestureText="Ctrl + -" />
                        </MenuItem>

                        <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenuPan}"
                                  Name="panMenu">
                            <MenuItem  Header="{x:Static p:Resources.DynamoViewViewMenuPanLeft}"
                                       Command="{Binding PanCommand}"
                                       CommandParameter="Left"
                                       InputGestureText="Ctrl + Alt + Left" />
                            <MenuItem  Header="{x:Static p:Resources.DynamoViewViewMenuPanRight}"
                                       Command="{Binding PanCommand}"
                                       CommandParameter="Right"
                                       InputGestureText="Ctrl + Alt + Right" />
                            <MenuItem  Header="{x:Static p:Resources.DynamoViewViewMenuPanUp}"
                                       Command="{Binding PanCommand}"
                                       CommandParameter="Up"
                                       InputGestureText="Ctrl + Alt + Up" />
                            <MenuItem  Header="{x:Static p:Resources.DynamoViewViewMenuPanDown}"
                                       Command="{Binding PanCommand}"
                                       CommandParameter="Down"
                                       InputGestureText="Ctrl + Alt + Down" />
                        </MenuItem>

                        <MenuItem IsCheckable="True"
                                  IsChecked="{Binding Path=ConsoleHeight, Converter={StaticResource ConsoleHeightToBoolConverter},Mode=TwoWay}"
                                  Header="{x:Static p:Resources.DynamoViewViewMenuShowConsole}"
                                  Command="{Binding ToggleConsoleShowingCommand}"
                                  InputGestureText="Ctrl + Shift + Up" />

                        <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenuConnector}"
                                  Name="connectorMenu">
                            <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenuShowConnectors}"
                                      IsCheckable="True"
                                      Name="ShowHideConnectorsMenuItem"
                                      IsChecked="{Binding Path=IsShowingConnectors}"/>
                            <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenuConnectorShowTooltip}"
                                      IsCheckable="True"
                                      Name="ShowHideConnectorTooltipMenuItem"
                                      IsChecked="{Binding Path=IsShowingConnectorTooltip}"/>
                        </MenuItem>

                        <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenu3DPreview}"
                                  Name="background3dMenu">

                            <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenuAvailablePreviews}" ItemsSource="{Binding Watch3DViewModels}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding Name}"/>
                                        <Setter Property="IsCheckable" Value="True"/>
                                        <Setter Property="IsChecked" Value="{Binding Active}"/>
                                        <Setter Property="IsEnabled" Value="{Binding CanBeActivated}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>

                            <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenuShowGrid}"
                                      IsEnabled="True"
                                      IsChecked="{Binding PreferenceSettings.IsBackgroundGridVisible}"
                                      Command="{Binding ToggleBackgroundGridVisibilityCommand}" />

                            <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenuPreviewNavigate}"
                                      IsEnabled="{Binding BackgroundPreviewActive}"
                                      IsChecked="{Binding Path=BackgroundPreviewViewModel.CanNavigateBackground}"
                                      InputGestureText="Ctrl + B"
                                      Command="{Binding Path=BackgroundPreviewViewModel.ToggleCanNavigateBackgroundCommand}" />
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="{x:Static p:Resources.DynamoViewPackageMenu}"
                              Name="PackageManagerMenu"
                              Focusable="False"
                              IsEnabled="True">
                        <MenuItem Header="{x:Static p:Resources.DynamoViewPackageMenuSearchPackage}"
                                  Command="{Binding Path=DataContext.ShowPackageManagerSearchCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Name="showPMSearch" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewPackageMenuPublishPackage}"
                                  Command="{Binding Path=DataContext.PublishNewPackageCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Name="publishNewPackage" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewPackageMenuPublishNodes}"
                                  Command="{Binding Path=DataContext.PublishSelectedNodesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Name="publishSelected" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewPackageMenuPublishWorkspace}"
                                  Command="{Binding Path=DataContext.PublishCurrentWorkspaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Name="publishCurrent" />
                    </MenuItem>

                    <MenuItem Header="{x:Static p:Resources.DynamoViewHelpMenu}"
                              Name="HelpMenu"
                              Focusable="False">
                        <MenuItem Header="{x:Static p:Resources.InteractiveGuides}"
                                  x:Name="InteractiveGuidesMenuItem"
                                  Command="{Binding DisplayInteractiveGuideCommand}">
                            <MenuItem x:Name="GetStartedMenuItem"
                                      Header="{x:Static p:Resources.GetStartedGuide}"
                                      Click="GetStartedMenuItem_Click">
                            </MenuItem>
                            <MenuItem x:Name="OnBoardingMenuGuide"
                                      Header="{x:Static p:Resources.OnboardingGuide}"
                                      Command="{Binding GettingStartedGuideCommand}">
                            </MenuItem>
                            <MenuItem x:Name="PackagesMenuGuide"
                                      Header="{x:Static p:Resources.PackagesGuide}"
                                      Click="PackagesMenuGuide_Click">
                            </MenuItem>                            
                        </MenuItem>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewHepMenuSamples}"
                                  Name="SamplesMenu"
                                  IsEnabled="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunEnabled}">
                        </MenuItem>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewHelpDictionary}"
                                  Name="ViewDictionary"
                                  Command="{Binding GoToDictionaryCommand}">
                        </MenuItem>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewHelpMenuGotoWebsite}"
                                  Command="{Binding GoToSourceCodeCommand}"
                                  Name="ViewDynamoWebsite"/>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewHelpMenuGotoWiki}"
                                  Command="{Binding GoToWikiCommand}"
                                  Name="ViewDynamoWiki"/>
                        <MenuItem Header="{x:Static p:Resources.DynamoViewHelpMenuDisplayStartPage}"
                                  Command="{Binding DisplayStartPageCommand}"
                                  Name="DisplayStartupPage"/>
                        <Separator />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewHelpMenuReportBug}"
                                  Command="{Binding ReportABugCommand}"
                                  Name="ReportBug"/>
                    </MenuItem>

                    <!--The menu will be enabled when at least one MenuItem is added-->
                    <MenuItem Header="{x:Static p:Resources.DynamoViewExtensionsMenu}"
                              Style="{StaticResource ExtensionsStyle}"
                              Name="ExtensionsMenu"
                              Focusable="False"
                              IsEnabled="True">
                        <MenuItem.Icon>
                            <Image Source="/DynamoCoreWpf;component/UI/Images/pin.png"
                                   Width="14"
                                   Height="14"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="{x:Static p:Resources.DynamoViewDebugMenu}"
                              Focusable="False"
                              Visibility="{Binding IsDebugBuild, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                        <MenuItem Name="VerboseLogging"
                                  IsCheckable="True"
                                  IsChecked="{Binding VerboseLogging}"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuVerboseLogging}" />
                        <MenuItem Name="ShowDebugASTs"
                                  IsCheckable="True"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuShowDebugAST}"
                                  IsChecked="{Binding ShowDebugASTs}"></MenuItem>
                        <MenuItem Name="ForceReexec"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuForceReExecute}"
                                  Command="{Binding ForceRunExpressionCommand}"
                                  CommandParameter="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunInDebug}"
                                  IsEnabled="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunButtonEnabled}"></MenuItem>
                        <MenuItem Name="MutateTest"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuRunMutationTest}"
                                  Command="{Binding MutateTestDelegateCommand}"
                                  CommandParameter="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunInDebug}"
                                  IsEnabled="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunButtonEnabled}"></MenuItem>
                        <MenuItem Name="CheckDailyBuilds"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuCheckDailyBuild}"
                                  DataContext="{Binding Path=Model.UpdateManager}"
                                  IsCheckable="True"
                                  IsChecked="{Binding Path=CheckNewerDailyBuilds, Mode=TwoWay}"></MenuItem>
                        <MenuItem Name="ForceUpdate"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuForceUpdate}"
                                  DataContext="{Binding Path=Model.UpdateManager}"
                                  IsCheckable="True"
                                  IsChecked="{Binding Path=ForceUpdate, Mode=TwoWay}" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewDebugMenuDumpLibrary}"
                                  Command="{Binding DumpLibraryToXmlCommand}"
                                  IsEnabled="True" />
                        <MenuItem Name="DebugModes"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuDebugModes}"
                                  Click="OnDebugModesClick"
                                  IsCheckable="False" />
                        <MenuItem Name="FileTrustWarning"
                                  Header="{x:Static p:Resources.DynamoShowFileTrustWarning}"
                                  Click="FileTrustWarning_Click"
                                  IsCheckable="False" />
                    </MenuItem>
                </Menu>

                <!--Titlebar buttons-->
                <Grid Name="titleBarButtonsGrid"
                      Grid.Column="1">
                </Grid>

            </Grid>
        </Border>

        <!--Shortcuts Toolbar-->
        <Grid Grid.Row="1"
              Grid.Column="0"
              Canvas.ZIndex="1"
              VerticalAlignment="Top"
              Grid.ColumnSpan="5"
              Name="shortcutsBarGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Border Name="shortcutBarBorder"
                    BorderThickness="0"
                    HorizontalAlignment="Stretch"
                    Margin="0,-1"
                    Grid.Row="0"
                Grid.Column="0">
                <Grid Name="shortcutBarGrid">
                </Grid>
            </Border>

        </Grid>

        <!--Canvas-->
        <Grid HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Grid.Row="2"
              Grid.Column="2"
              Grid.RowSpan="3"
              Background="#232323"
              Name="background_grid"
              IsHitTestVisible="{Binding BackgroundPreviewViewModel.CanNavigateBackground}">
            <Canvas Name="backgroundCanvas"
                    Margin="0,0,0,0"
                    ClipToBounds="True">
                <Canvas.Background>
                    <SolidColorBrush Color="{Binding ViewingHomespace, Converter={StaticResource WorkspaceBackgroundColorConverter}}" />
                </Canvas.Background>
            </Canvas>

            <!-- The BackgroundPreview is now created in the DynamoView_Loaded method.-->

        </Grid>

        <!--
            Do not style the background of this border,
            Background3DPreview controls will be blocked if you do so.
            Please ensure that mouse events will be able to pass through this layer,
            when Navigate Background 3D Preview is set to true.
        -->
        <!--Workspace-->
        <Border Margin="0"
                BorderBrush="Black"
                BorderThickness="0"
                Name="border"
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="2"
                SizeChanged="Workspace_SizeChanged">
            <Grid AllowDrop="True"
                  Drop="DynamoView_OnDrop" Margin="0,0,0,0">
                <TabControl ItemsSource="{Binding Path=Workspaces, NotifyOnTargetUpdated=True}"
                            Name="WorkspaceTabs"
                            SelectedIndex="{Binding CurrentWorkspaceIndex}"
                            Padding="0"
                            TargetUpdated="WorkspaceTabs_TargetUpdated"
                            SelectionChanged="WorkspaceTabs_SelectionChanged"
                            SizeChanged="WorkspaceTabs_SizeChanged">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabControl}">
                            <Setter Property="OverridesDefaultStyle"
                                    Value="True" />
                            <Setter Property="SnapsToDevicePixels"
                                    Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabControl}">
                                        <Grid KeyboardNavigation.TabNavigation="Local">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Border Background="Transparent" Grid.Row="0">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollViewer Grid.Column="0"
                                                                  Margin="0,0,150,0"
                                                                  HorizontalScrollBarVisibility="Auto"
                                                                  VerticalScrollBarVisibility="Disabled">
                                                        <TabPanel x:Name="HeaderPanel"
                                                                  IsItemsHost="True"
                                                                  KeyboardNavigation.TabIndex="1"
                                                                  Background="Transparent" />
                                                    </ScrollViewer>
                                                    <Menu x:Name="TabControlMenu"
                                                          Grid.Column="1"
                                                          VerticalAlignment="Center"
                                                          Margin="10,0,0,0"
                                                          Background="Transparent"
                                                          SnapsToDevicePixels="True">
                                                        <Menu.Resources>
                                                            <sys:Double x:Key="ButtonWidthAndHeight">19</sys:Double>
                                                            <Style x:Key="TabMenuButtonStyle"
                                                                   TargetType="{x:Type MenuItem}">
                                                                <Setter Property="Focusable"
                                                                        Value="False" />
                                                                <Setter Property="Height"
                                                                        Value="{StaticResource ButtonWidthAndHeight}" />
                                                                <Setter Property="Width"
                                                                        Value="{StaticResource ButtonWidthAndHeight}" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type MenuItem}">
                                                                            <Border Name="ButtonBorder"
                                                                                    Margin="0"
                                                                                    Background="Transparent"
                                                                                    BorderThickness="0"
                                                                                    VerticalAlignment="Center"
                                                                                    HorizontalAlignment="Center"
                                                                                    Padding="0">
                                                                                <Grid VerticalAlignment="Center"
                                                                                      HorizontalAlignment="Center">
                                                                                    <ContentPresenter ContentSource="Header"
                                                                                                      HorizontalAlignment="Center"
                                                                                                      VerticalAlignment="Center" />
                                                                                </Grid>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>

                                                            <!-- The style for MenuItems that represent TabItems -->
                                                            <Style x:Key="TabMenuItem"
                                                                   BasedOn="{StaticResource MenuItemStyle}"
                                                                   TargetType="{x:Type MenuItem}">

                                                                <Style.Resources>
                                                                    <!--  SubmenuHeader  -->
                                                                    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                                                                                     TargetType="MenuItem">
                                                                        <Border Name="Border"
                                                                                Height="25">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="*"
                                                                                                      MinWidth="100" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <ContentPresenter Name="HeaderHost"
                                                                                                  Grid.Column="0"
                                                                                                  Margin="5,0"
                                                                                                  HorizontalAlignment="Stretch"
                                                                                                  VerticalAlignment="Center"
                                                                                                  ContentSource="Header"
                                                                                                  RecognizesAccessKey="True" />
                                                                                <Popup Name="Popup"
                                                                                       AllowsTransparency="True"
                                                                                       Focusable="False"
                                                                                       HorizontalOffset="-2"
                                                                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                                                                       Placement="Right"
                                                                                       PopupAnimation="Fade">
                                                                                    <Border Name="SubmenuBorder"
                                                                                            Margin="0 0 5 5"
                                                                                            Background="{StaticResource NormalBackgroundBrush}"
                                                                                            BorderBrush="{StaticResource NormalBorderBrush}"
                                                                                            BorderThickness="1"
                                                                                            SnapsToDevicePixels="True">
                                                                                        <StackPanel IsItemsHost="True"
                                                                                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                                                        <Border.Effect>
                                                                                            <DropShadowEffect BlurRadius="5"
                                                                                                              Opacity="0.4"
                                                                                                              ShadowDepth="3" />
                                                                                        </Border.Effect>
                                                                                    </Border>
                                                                                </Popup>
                                                                            </Grid>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsHighlighted"
                                                                                     Value="true">
                                                                                <Setter TargetName="Border"
                                                                                        Property="Background"
                                                                                        Value="{StaticResource HighlightedBrush}" />
                                                                                <Setter TargetName="HeaderHost"
                                                                                        Property="TextBlock.Foreground"
                                                                                        Value="{StaticResource ActiveForegroundBrush}" />
                                                                                <Setter TargetName="Border"
                                                                                        Property="BorderBrush"
                                                                                        Value="Transparent" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled"
                                                                                     Value="false">
                                                                                <Setter Property="Foreground"
                                                                                        Value="{StaticResource DisabledForegroundBrush}" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>

                                                                    <!--  SubmenuItem  -->
                                                                    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                                                                                     TargetType="MenuItem">
                                                                        <Border Name="Border"
                                                                                Height="25">
                                                                            <Grid MinWidth="200">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="Auto" />
                                                                                    <ColumnDefinition Width="*" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <ContentPresenter Name="HeaderHost"
                                                                                                  Grid.Column="0"
                                                                                                  Margin="5,0,0,0"
                                                                                                  HorizontalAlignment="Stretch"
                                                                                                  VerticalAlignment="Center"
                                                                                                  ContentSource="Header"
                                                                                                  RecognizesAccessKey="True" />
                                                                                <ContentPresenter Name="SaveStateHost"
                                                                                                  Grid.Column="1"
                                                                                                  Margin="0,0,5,0"
                                                                                                  HorizontalAlignment="Stretch"
                                                                                                  VerticalAlignment="Center"
                                                                                                  ContentSource="Tag"
                                                                                                  RecognizesAccessKey="True" />
                                                                            </Grid>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsHighlighted"
                                                                                     Value="true">
                                                                                <Setter TargetName="Border"
                                                                                        Property="Background"
                                                                                        Value="{StaticResource HighlightedBrush}" />
                                                                                <Setter TargetName="HeaderHost"
                                                                                        Property="TextBlock.Foreground"
                                                                                        Value="{StaticResource ActiveForegroundBrush}" />
                                                                                <Setter TargetName="Border"
                                                                                        Property="BorderBrush"
                                                                                        Value="Transparent" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled"
                                                                                     Value="false">
                                                                                <Setter Property="Foreground"
                                                                                        Value="{StaticResource DisabledForegroundBrush}" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Style.Resources>

                                                                <EventSetter Event="Click"
                                                                             Handler="TabControlMenuItem_Click" />

                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}"
                                                                                 Value="Unsaved">
                                                                        <Setter Property="Header"
                                                                                Value="{Binding Name}" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}"
                                                                                 Value="Saved">
                                                                        <Setter Property="Header"
                                                                                Value="{Binding FileName, Converter={StaticResource PathToFileNameConverter}}" />
                                                                    </DataTrigger>

                                                                    <DataTrigger Binding="{Binding HasUnsavedChanges}"
                                                                                 Value="True">
                                                                        <Setter Property="Tag"
                                                                                Value="*" />
                                                                    </DataTrigger>

                                                                    <DataTrigger Binding="{Binding HasUnsavedChanges}"
                                                                                 Value="False">
                                                                        <Setter Property="Tag"
                                                                                Value="" />
                                                                    </DataTrigger>

                                                                    <Trigger Property="Role"
                                                                             Value="SubmenuHeader">
                                                                        <Setter Property="Template"
                                                                                Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                                                                    </Trigger>
                                                                    <Trigger Property="Role"
                                                                             Value="SubmenuItem">
                                                                        <Setter Property="Template"
                                                                                Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Menu.Resources>
                                                        <MenuItem Style="{StaticResource TabMenuButtonStyle}"
                                                                  ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TabControl}},Path=Items}"
                                                                  ItemContainerStyle="{StaticResource TabMenuItem}">
                                                        </MenuItem>
                                                    </Menu>
                                                </Grid>
                                            </Border>
                                            <Border x:Name="Border"
                                                    Grid.Row="1"
                                                    BorderBrush="{Binding Path=ViewingHomespace, Converter={StaticResource WorkspaceBackgroundBrushConverter}}"
                                                    BorderThickness="0,0,0,0">
                                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                                  ContentSource="SelectedContent" />
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type Button}"
                               x:Key="CloseButtonStyle">
                            <Setter Property="OverridesDefaultStyle"
                                    Value="True" />
                            <Setter Property="SnapsToDevicePixels"
                                    Value="true" />
                            <Setter Property="VerticalAlignment"
                                    Value="Center" />
                            <Setter Property="HorizontalAlignment"
                                    Value="Center" />
                            <Setter Property="Margin"
                                    Value="0,0,10,0" />
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="BorderThickness"
                                    Value="0" />
                            <Setter Property="Padding"
                                    Value="0" />
                            <!--<EventSetter Event="Click"
                                         Handler="TabCloseButton_Click" />-->
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="Border"
                                                Background="Transparent"
                                                BorderThickness="0 0 0 0">
                                            <ContentPresenter Margin="0 1 0 0" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <!-- The close button for workspace is no longer hidden on the HOME 
                                 tab page, since it is used to bring up the Start Page when pressed.
                            
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}"
                                             Value="{x:Type models:HomeWorkspaceModel}">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            -->

                        </Style>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="MaxWidth"
                                    Value="{Binding Source={x:Static configuration:Configurations.TabDefaultWidth}}" />
                            <Setter Property="MinWidth"
                                    Value="{Binding Source={x:Static configuration:Configurations.TabDefaultWidth}}" />
                            <Setter Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource TabSizeConverter}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" />
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}"
                                                 Path="ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}"
                                                 Path="Items.Count" />
                                        <!--<Binding Path="Visibility" />-->
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <Border Name="Border"
                                                BorderThickness="0,0,0,5"
                                                CornerRadius="0,0,0,0">
                                            <Border.ToolTip>
                                                <uictrls:DynamoToolTip AttachmentSide="Bottom" Style="{DynamicResource ResourceKey=SLightToolTip}">
                                                    <StackPanel Margin="5" MaxWidth="250">
                                                        <TextBlock x:Name="FileName" Margin="0,0,0,5"  Text="{Binding Path=FileName, Converter={StaticResource PathToFileNameConverter}}" TextWrapping="Wrap"/>
                                                        <TextBlock x:Name="topMessage"
                                                                   FontFamily="{StaticResource ArtifaktElementBold}"
                                                                   FontSize="11px"
                                                                   Foreground="Black">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Path=HasUnsavedChanges}" Value="True">
                                                                            <Setter Property="Text" Value="{x:Static p:Resources.WorkspaceTabSavingNecessary}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Path=HasUnsavedChanges}" Value="False">
                                                                            <Setter Property="Text" Value="{x:Static p:Resources.WorkspaceTabSavingUnnecessary}"/>
                                                                        </DataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding Path=FileName}" Value=""/>
                                                                                <Condition Binding="{Binding Path=HasUnsavedChanges}" Value="True"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <MultiDataTrigger.Setters>
                                                                                <Setter Property="Text" Value="{x:Static p:Resources.WorkspaceTabNotSavedYet}"/>
                                                                            </MultiDataTrigger.Setters>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding Path=FileName}" Value=""/>
                                                                                <Condition Binding="{Binding Path=HasUnsavedChanges}" Value="False"/>
                                                                            </MultiDataTrigger.Conditions>
                                                                            <MultiDataTrigger.Setters>
                                                                                <Setter Property="Text" Value="{x:Static p:Resources.WorkspaceTabSavingBrandNewFile}"/>
                                                                            </MultiDataTrigger.Setters>
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                        <TextBlock x:Name="bottomMessage"
                                                                   FontFamily="{StaticResource ArtifaktElementRegular}"
                                                                   FontSize="11px"
                                                                   Foreground="Black">
                                                            <Run Text="{x:Static p:Resources.PreferencesViewSavedChangesTooltip}"/>
                                                            <Run Text="{Binding DynamoViewModel.HomeSpace.LastSaved}"/>
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Unsaved">
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Saved">
                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </StackPanel>
                                                </uictrls:DynamoToolTip>
                                            </Border.ToolTip>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrushWhite}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}"
                                                                     Value="False">
                                                            <Setter Property="Background"
                                                                    Value="{StaticResource WorkspaceTabBorderSelectedFalse}" />
                                                            <Setter Property="BorderBrush"
                                                                    Value="{StaticResource BorderBrushWhite}" />
                                                            <Setter Property="Margin"
                                                                    Value="0,0,0,-1" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}"
                                                                     Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{StaticResource WorkspaceTabBorderSelectedTrue}" />
                                                            <Setter Property="BorderBrush"
                                                                    Value="#ADE4DE" />
                                                            <Setter Property="Margin"
                                                                    Value="0" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter x:Name="ContentSite"
                                                                  Grid.Column="0"
                                                                  VerticalAlignment="Center"
                                                                  ContentSource="Header" />
                                                <Button Style="{StaticResource CloseButtonStyle}"
                                                        Command="{Binding HideCommand}"
                                                        Cursor="Hand"
                                                        Margin="0"
                                                        Grid.Column="1">
                                                    <Image Width="16"
                                                           Margin="0,0,10,0"
                                                           Height="16">
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver"
                                                                             Value="False">
                                                                        <Setter Property="Source"
                                                                            Value="/DynamoCoreWpf;component/UI/Images/closetab_normal.png" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver"
                                                                             Value="True">
                                                                        <Setter Property="Source"
                                                                            Value="/DynamoCoreWpf;component/UI/Images/closetab_hover.png" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Button>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </TabControl.Resources>

                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Height="35" Margin="12,0,5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="5" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Ellipse Name="UnsavedChangesIcon"
                                         Grid.Column="0"
                                         Margin="0,5,5,0"
                                         Height="9"
                                         Width="9"
                                         Fill="{StaticResource YellowOrange500Brush}"
                                         VerticalAlignment="Center">
                                    <Ellipse.Style>
                                        <Style TargetType="Ellipse">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasUnsavedChanges}"
                                                                 Value="True">
                                                    <Setter Property="Visibility"
                                                                Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding HasUnsavedChanges}"
                                                                 Value="False">
                                                    <Setter Property="Visibility"
                                                                Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ellipse.Style>
                                </Ellipse>
                                <Rectangle Grid.Column="1" Width="16" Height="16" Margin="0,5,7,0" VerticalAlignment="Center">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="/DynamoCoreWpf;component/UI/Images/custom-node.png"/>
                                    </Rectangle.Fill>
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsHomeSpace}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsHomeSpace}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <TextBlock Name="WorkspaceName"
                                           Grid.Column="2"
                                           Margin="0,7,0,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Center"
                                           FontSize="16px"
                                           FontFamily="{StaticResource ArtifaktElementRegular}"
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource WorkspaceTabHeaderActiveTextBrush}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}" Value="False">
                                                    <Setter Property="Foreground" Value="{StaticResource WorkspaceTabHeaderInactiveTextBrush}" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}" Value="{x:Type workspaces:HomeWorkspaceModel}" />
                                                        <Condition Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Unsaved" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="Home" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}" Value="{x:Type workspaces:HomeWorkspaceModel}" />
                                                        <Condition Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Saved" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="{Binding Path=FileName, Converter={StaticResource PathToFileNameConverter}}" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}" Value="{x:Type workspaces:CustomNodeWorkspaceModel}" />
                                                        <Condition Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Unsaved" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="{Binding Name}" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}" Value="{x:Type workspaces:CustomNodeWorkspaceModel}" />
                                                        <Condition Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Saved" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="{Binding Path=FileName, Converter={StaticResource PathToFileNameConverter}}" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>

                    </TabControl.ItemTemplate>

                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <views:WorkspaceView></views:WorkspaceView>
                        </DataTemplate>
                    </TabControl.ContentTemplate>

                </TabControl>
            </Grid>

        </Border>

        <!--Collapsed Left Sidebar-->
        <StackPanel Grid.Row="2"
                    Grid.Column="2"
                    Orientation="Vertical"
                    Name="collapsedLibrarySidebar"
                    Width="Auto"
                    Height="Auto"
                    Background="{StaticResource HighlightedBrush}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Margin="0,310,0,0">
            <Grid Background="#353535"
                  Width="Auto"
                  Cursor="Hand">
                <Button Click="OnCollapsedLeftSidebarClick"
                        Template="{DynamicResource BackgroundButton}">
                    <Button.Resources>
                        <ControlTemplate x:Key="BackgroundButton"
                                         TargetType="Button">
                            <Border Name="border"
                                    BorderThickness="0"
                                    BorderBrush="Black"
                                    VerticalAlignment="Stretch"
                                    Padding="5,0,5,0">
                                <ContentPresenter HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch" />
                            </Border>
                        </ControlTemplate>
                    </Button.Resources>
                    <Grid Mouse.MouseEnter="LibraryHandle_MouseEnter"
                          Mouse.MouseLeave="LibraryHandle_MouseLeave">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Center">
                            <TextBlock Grid.Column="0"
                                   Name="LibrarySidebarText"
                                   VerticalAlignment="Center"
                                   Foreground="#aaaaaa"
                                   FontWeight="Normal"
                                   Margin="5,0,0,5"
                                   Text="{x:Static p:Resources.LibraryViewTitle}">
                            </TextBlock>
                            <Image Grid.Column="0"
                               Name="LibrarySidebarIcon"
                               Source="/DynamoCoreWpf;component/UI/Images/expand_normal.png"
                               Visibility="Visible"
                               Width="10"
                               Height="10"
                               Margin="5,5,5,5"
                               RenderTransformOrigin="0.5, 0.5">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="-90" />
                                </Image.RenderTransform>
                            </Image>
                        </StackPanel>
                    </Grid>
                </Button>
            </Grid>

            <StackPanel.RenderTransform>
                <RotateTransform Angle="-90" />
            </StackPanel.RenderTransform>
        </StackPanel>

        <!--Collapsed Extension Sidebar-->
        <StackPanel Grid.Row="2"
                    Grid.Column="2"
                    Orientation="Vertical"
                    Name="collapsedExtensionSidebar"
                    Width="Auto"
                    Height="Auto"
                    Background="{StaticResource HighlightedBrush}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Margin="0,310,0,0"
                    RenderTransformOrigin="1,0">
            <Grid Background="#353535"
                  Width="Auto"
                  Cursor="Hand">
                <Button Click="OnCollapsedRightSidebarClick"
                        Template="{DynamicResource BackgroundButton}">
                    <Button.Resources>
                        <ControlTemplate x:Key="BackgroundButton"
                                         TargetType="Button">
                            <Border Name="border"
                                    BorderThickness="0"
                                    BorderBrush="Black"
                                    VerticalAlignment="Stretch"
                                    Padding="5,0,5,0">
                                <ContentPresenter HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch" />
                            </Border>
                        </ControlTemplate>
                    </Button.Resources>
                    <Grid Mouse.MouseEnter="ExtensionHandle_MouseEnter"
                          Mouse.MouseLeave="ExtensionHandle_MouseLeave">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Center">
                            <Image Grid.Column="0"
                               Name="ExtensionSidebarIcon"
                               Source="/DynamoCoreWpf;component/UI/Images/expand_normal.png"
                               Visibility="Visible"
                               Width="10"
                               Height="10"
                               Margin="5,5,5,5"
                               RenderTransformOrigin="0.5, 0.5">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="-90" />
                                </Image.RenderTransform>
                            </Image>
                            <TextBlock Grid.Column="0"
                                   Name="ExtensionSidebarText"
                                   VerticalAlignment="Center"
                                   Foreground="#aaaaaa"
                                   FontWeight="Normal"
                                   Margin="0,5,5,0"
                                   Text="{x:Static p:Resources.ExtensionsViewTitle}"
                                   RenderTransformOrigin="0.5,0.5">
                                <TextBlock.RenderTransform>
                                    <RotateTransform Angle="180"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </Button>

            </Grid>

            <StackPanel.RenderTransform>
                <RotateTransform Angle="90" />
            </StackPanel.RenderTransform>
        </StackPanel>

        <!--Console Log Area-->
        <ScrollViewer Name="LogScroller"
                      VerticalAlignment="Stretch"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalAlignment="Stretch"
                      HorizontalScrollBarVisibility="Hidden"
                      Background="Black"
                      Opacity="1"
                      Visibility="Visible"
                      Grid.Row="4"
                      Grid.Column="0"
                      Grid.ColumnSpan="5">

            <ScrollViewer.ContextMenu>
                <ContextMenu Style="{StaticResource ContextMenuStyle}">
                    <MenuItem Header="{x:Static p:Resources.DynamoViewContextMenuClearLog}"
                              Command="{Binding ClearLogCommand}" />
                </ContextMenu>
            </ScrollViewer.ContextMenu>

            <TextBox Text="{Binding Path=LogText, Mode=OneWay}"
                     Foreground="#FF888888"
                     BorderThickness="0"
                     BorderBrush="#00000000"
                     Background="Black"
                     Margin="0"
                     TextWrapping="Wrap"
                     IsReadOnly="True"
                     IsReadOnlyCaretVisible="True"
                     IsUndoEnabled="False"
                     IsTabStop="False"
                     FontFamily="Consolas"
                     TextChanged="TextBoxBase_OnTextChanged" />
        </ScrollViewer>

        <!--Left Sidebar Library-->
        <Grid Height="Auto"
              Width="Auto"
              HorizontalAlignment="Stretch"
              Name="sidebarGrid"
              VerticalAlignment="Stretch"
              Visibility="Visible"
              Grid.Row="2"
              Grid.Column="0"
              Grid.RowSpan="2">
        </Grid>

        <!--Right Extensions Sidebar-->
        <Grid Height="Auto"
              Width="Auto"
              HorizontalAlignment="Stretch"
              Name="sidebarExtensionsGrid"
              VerticalAlignment="Stretch"
              Visibility="Visible"
              Grid.Row="2"
              Grid.Column="4"
              Grid.RowSpan="2">
            <TabControl Name="tabDynamic" Background="#353535" BorderThickness="0" ItemsSource="{Binding}">
                <TabControl.Resources>
                    <!--Styling for the close button in the tab-->
                    <Style TargetType="{x:Type Button}"
                               x:Key="CloseButtonStyle">
                        <Setter Property="OverridesDefaultStyle"
                                    Value="True" />
                        <Setter Property="SnapsToDevicePixels"
                                    Value="true" />
                        <Setter Property="VerticalAlignment"
                                    Value="Center" />
                        <Setter Property="HorizontalAlignment"
                                    Value="Right" />
                        <Setter Property="Margin"
                                    Value="8,2,0,0" />
                        <Setter Property="Background"
                                    Value="Transparent" />
                        <Setter Property="BorderThickness"
                                    Value="0" />
                        <Setter Property="Padding"
                                    Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border"
                                                Background="Transparent"
                                                BorderThickness="0 0 0 0">
                                        <ContentPresenter Margin="0 0 0 0" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--Template for tab header in the extensions side bar-->
                    <DataTemplate x:Key="TabHeader" DataType="TabItem">
                        <DockPanel HorizontalAlignment="Stretch" Name ="TabPanel" MinWidth="{Binding Source={x:Static configuration:Configurations.ExtensionsSideBarTabMinWidth}}">
                            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Header}" HorizontalAlignment="Stretch"/>
                            <!--Button to close a particular tab-->
                            <Button Name="CloseButton" Style="{StaticResource CloseButtonStyle}" DockPanel.Dock="Right" Click="CloseExtensionTab"
                                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Name}">
                                <Image Width="14" Height="14" HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Source"
                                                            Value="/DynamoCoreWpf;component/UI/Images/closetab_normal.png" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Source"
                                                            Value="/DynamoCoreWpf;component/UI/Images/closetab_hover.png" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <!-- Undock -->
                            <Button Name="UndockButton" Style="{StaticResource CloseButtonStyle}" DockPanel.Dock="Right" Click="UndockExtensionTab"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Name}">
                                <Image Width="14" Height="14" HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Source"
                                                            Value="/DynamoCoreWpf;component/UI/Images/undock_normal.png" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Source"
                                                            Value="/DynamoCoreWpf;component/UI/Images/undock_hover.png" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                        </DockPanel>
                    </DataTemplate>

                    <!--Styling for the tab in the extensions side bar-->
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="MinWidth" Value="{Binding Source={x:Static configuration:Configurations.ExtensionsSideBarTabMinWidth}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid>
                                        <Border Name="Border" Margin="0,0,0,0"  BorderThickness="1 0 1 0" 
                                                        BorderBrush="{StaticResource BorderBrushWhite}">
                                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                                     HorizontalAlignment="Stretch"
                                                     ContentSource="Header" Margin="3,0,0,3"
                                                     RecognizesAccessKey="True">
                                            </ContentPresenter>
                                        </Border>
                                    </Grid>
                                    <!--Properties for selected and unselected tabs-->
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Foreground"
                                                         Value="{StaticResource WorkspaceTabHeaderActiveTextBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="false">
                                            <Setter Property="Foreground"
                                                         Value="{StaticResource WorkspaceTabHeaderInactiveTextBrush}" />
                                            <Setter TargetName="Border" Property="Background"
                                                         Value="{StaticResource HighlightedBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
            </TabControl>
        </Grid>

        <!--Bottom Panel including RunMode etc-->
        <Grid Grid.Row="5"
              Grid.Column="0"
              Grid.RowSpan="1"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Grid.ColumnSpan="5"
              Background="#3C3C3C">
            <Grid Name="bottomBarGrid"
                  Grid.Row="4"
                  Grid.Column="0"
                  Grid.RowSpan="1"
                  Grid.ColumnSpan="5"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <WrapPanel Orientation="Horizontal"
                           Grid.Row="0"
                           Grid.Column="0"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Visibility="{Binding IsAbleToGoHome, Converter={StaticResource InverseBoolToVisibilityConverter}}">

                    <controls1:RunSettingsControl x:Name="RunSettingsControl"
                                                  Margin="2.5,5,5,5"
                                                  VerticalAlignment="Stretch"
                                                  DataContext="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel}" />
                </WrapPanel>

                <!--NotificationControl for showing run-time notifications-->
                <controls1:NotificationsControl Grid.Column="1" />
            </Grid>
        </Grid>

        <!--Split Between Console and Canvas-->
        <GridSplitter ResizeDirection="Rows"
                      Grid.Column="2"
                      Grid.ColumnSpan="1"
                      Grid.Row="3"
                      Grid.RowSpan="1"
                      Width="Auto"
                      Height="2"
                      Name="horizontalSplitter"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Margin="0"
                      Background="#999"
                      Cursor="/DynamoCoreWpf;component/UI/Images/resize_vertical.cur" />

        <!--Split Between Library and Canvas-->
        <GridSplitter ResizeDirection="Auto"
                      Grid.Column="1"
                      Grid.Row="2"
                      Grid.RowSpan="2"
                      Height="Auto"
                      Width="3"
                      Name="verticalSplitter"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Margin="0"
                      Background="Transparent"
                      Cursor="/DynamoCoreWpf;component/UI/Images/resize_horizontal.cur" />

        <!--Split Between Extension and Canvas-->
        <GridSplitter ResizeDirection="Auto"
                      Grid.Column="3"
                      Grid.Row="2"
                      Grid.RowSpan="2"
                      Height="Auto"
                      Width="3"
                      Name="extensionSplitter"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Margin="0"
                      Background="Transparent"
                      DragCompleted="RightExtensionSidebar_DragCompleted"
                      Cursor="/DynamoCoreWpf;component/UI/Images/resize_horizontal.cur" />

        <!--Start Page-->
        <ItemsControl Name="startPageItemsControl"
                      Grid.Row="2"
                      Grid.RowSpan="4"
                      Grid.Column="0"
                      Grid.ColumnSpan="5">
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type uictrls:StartPageViewModel}">
                    <Grid>
                        <Grid.Height>
                            <Binding Path="ActualHeight"
                                     Mode="OneWay"
                                     RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}" />
                        </Grid.Height>
                        <uictrls:StartPageView />
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.Visibility>
                <Binding Path="DataContext.ShowStartPage"
                         Mode="OneWay"
                         RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}"
                         Converter="{StaticResource BooleanToVisibilityConverter}"
                         UpdateSourceTrigger="Explicit" />
            </ItemsControl.Visibility>
        </ItemsControl>

        <Grid Name="FocusableGrid" Width="0" Height="0" Focusable="True"/>
    </Grid>
</Window>
