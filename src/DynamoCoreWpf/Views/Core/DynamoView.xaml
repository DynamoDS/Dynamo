<Window x:Class="Dynamo.Controls.DynamoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:configuration="clr-namespace:Dynamo.Configuration;assembly=DynamoCore"
        xmlns:controls="clr-namespace:Dynamo.Controls"
        xmlns:controls1="clr-namespace:Dynamo.Wpf.Controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:p="clr-namespace:Dynamo.Wpf.Properties;assembly=DynamoCoreWpf"
        xmlns:service="clr-namespace:Dynamo.Services"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ui="clr-namespace:Dynamo.UI"
        xmlns:uictrls="clr-namespace:Dynamo.UI.Controls"
        xmlns:uiviews="clr-namespace:Dynamo.UI.Views"
        xmlns:viewModels="clr-namespace:Dynamo.ViewModels"
        xmlns:views="clr-namespace:Dynamo.Views"
        xmlns:workspaces="clr-namespace:Dynamo.Graph.Workspaces;assembly=DynamoCore"
        x:Name="_this"
        Width="1024"
        Height="768"
        MinWidth="800"
        MinHeight="600"
        d:DataContext="{d:DesignInstance viewModels:DynamoViewModel,
                                         IsDesignTimeCreatable=False}"
        Activated="DynamoView_Activated"
        AllowsTransparency="False"
        Background="#3C3C3C"
        Closed="WindowClosed"
        Closing="WindowClosing"
        Deactivated="DynamoView_Deactivated"
        KeyDown="DynamoView_KeyDown"
        KeyUp="DynamoView_KeyUp"
        ResizeMode="CanResizeWithGrip"
        SnapsToDevicePixels="True"
        Style="{DynamicResource DynamoWindowStyle}"
        UseLayoutRounding="True"
        mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.MenuStyleDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>

        <KeyBinding Key="Tab" Command="{Binding Path=DataContext.SelectNeighborsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />

        <KeyBinding Key="Delete" Command="{Binding Path=DataContext.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <KeyBinding Key="N"
                    Command="{Binding Path=DataContext.NewHomeWorkspaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="N"
                    Command="{Binding Path=DataContext.ShowNewFunctionDialogCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control+Shift" />
        <KeyBinding Key="R"
                    Command="{Binding Path=DataContext.SaveRecordedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control+Shift" />
        <KeyBinding Key="Q"
                    Command="{Binding Path=DataContext.InsertPausePlaybackCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control+Shift" />
        <KeyBinding Key="L"
                    Command="{Binding Path=DataContext.GraphAutoLayoutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="I"
                    Command="{Binding Path=DataContext.BackgroundPreviewViewModel.ToggleIsolationModeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="Tab" Command="{Binding Path=DataContext.SelectNeighborsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />

        <KeyBinding Key="C"
                    Command="{Binding Path=DataContext.CopyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="Z"
                    Command="{Binding Path=DataContext.UndoCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="Y"
                    Command="{Binding Path=DataContext.RedoCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="A"
                    Command="{Binding Path=DataContext.SelectAllCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="K"
                    Command="{Binding Path=DataContext.UnpinAllPreviewBubblesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="D"
                    Command="{Binding Path=DataContext.NodeFromSelectionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="V"
                    Command="{Binding Path=DataContext.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />

        <KeyBinding Key="B"
                    Command="{Binding Path=DataContext.BackgroundPreviewViewModel.ToggleCanNavigateBackgroundCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />

        <KeyBinding Key="W"
                    Command="{Binding Path=DataContext.AddNoteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="V"
                    Command="{Binding Path=DataContext.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="S"
                    Command="{Binding Path=DataContext.ShowSaveDialogIfNeededAndSaveResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="S"
                    Command="{Binding Path=DataContext.ShowSaveDialogAndSaveResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control+Shift" />
        <KeyBinding Key="O"
                    Command="{Binding Path=DataContext.ShowOpenDialogAndOpenResultAsyncCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="T"
                    Command="{Binding Path=DataContext.ShowOpenTemplateDialogAsyncCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    CommandParameter="Template"
                    Modifiers="Control" />
        <KeyBinding Key="I"
                    Command="{Binding Path=DataContext.ShowInsertDialogAndInsertResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control+Shift" />
        <KeyBinding Key="H"
                    Command="{Binding Path=DataContext.HomeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="Up"
                    Command="{Binding Path=DataContext.ToggleConsoleShowingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control+Shift" />
        <KeyBinding Key="F4"
                    Command="{Binding Path=DataContext.ExitCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Alt" />
        <KeyBinding Key="D"
                    Command="{Binding Path=DataContext.DumpLibraryToXmlCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Ctrl+Alt" />
        <KeyBinding Key="G"
                    Command="{Binding Path=DataContext.AddAnnotationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="U"
                    Command="{Binding Path=DataContext.UngroupAnnotationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Control" />
        <KeyBinding Key="Left"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    CommandParameter="Left"
                    Modifiers="Ctrl+Alt" />
        <KeyBinding Key="Right"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    CommandParameter="Right"
                    Modifiers="Ctrl+Alt" />
        <KeyBinding Key="Up"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    CommandParameter="Up"
                    Modifiers="Ctrl+Alt" />
        <KeyBinding Key="Down"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    CommandParameter="Down"
                    Modifiers="Ctrl+Alt" />
        <KeyBinding Key="OemPlus"
                    Command="{Binding Path=DataContext.ZoomInCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="OemMinus"
                    Command="{Binding Path=DataContext.ZoomOutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="Add"
                    Command="{Binding Path=DataContext.ZoomInCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="Subtract"
                    Command="{Binding Path=DataContext.ZoomOutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="D0"
                    Command="{Binding Path=DataContext.FitViewCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="P"
                    Command="{Binding Path=DataContext.BackgroundPreviewViewModel.TogglePanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Ctrl" />

        <KeyBinding Key="F5"
                    Command="{Binding Path=DataContext.HomeSpaceViewModel.RunSettingsViewModel.CancelRunCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    Modifiers="Shift" />
        <KeyBinding Key="F5"
                    Command="{Binding Path=DataContext.HomeSpaceViewModel.RunSettingsViewModel.RunExpressionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                    CommandParameter="{Binding Path=DataContext.HomeSpaceViewModel.RunSettingsViewModel.RunInDebug, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
        <MouseBinding Command="{Binding Path=DataContext.HomeSpaceViewModel.ShowInCanvasSearchCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                      CommandParameter="{x:Static viewModels:ShowHideFlags.Show}"
                      Gesture="Shift+LeftDoubleClick" />
        <KeyBinding Key="F1" Command="{Binding Path=DataContext.ShowNodeDocumentationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}" />
    </Window.InputBindings>

    <Grid Name="mainGrid"
          FocusManager.IsFocusScope="True"
          PreviewMouseDown="Window_PreviewMouseDown"
          PreviewMouseLeftButtonUp="Window_PreviewMouseLeftButtonUp"
          PreviewMouseUp="Window_PreviewMouseUp">

        <Grid.RowDefinitions>
            <RowDefinition Height="37px" />
            <RowDefinition Height="40px" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Name="consoleRow" Height="{Binding ConsoleHeight, Mode=TwoWay, Converter={StaticResource ConsoleHeightConverter}}" />
            <RowDefinition Height="48" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Name="LeftExtensionsViewColumn"
                              MinWidth="1"
                              MaxWidth="500">
                <ColumnDefinition.Width>
                    <Binding Converter="{StaticResource ConsoleHeightConverter}"
                             Mode="TwoWay"
                             Path="LibraryWidth" />
                </ColumnDefinition.Width>
            </ColumnDefinition>
            <!--  MinWidth fix for GridSplitter dragging in frameless window  -->
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Name="CanvasColumn"
                              Width="5*"
                              MinWidth="200" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Name="RightExtensionsViewColumn"
                              Width="0"
                              MinWidth="1" />
        </Grid.ColumnDefinitions>

        <!--  Titlebar  -->
        <Border Name="titleBar"
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="5">
            <Grid Name="titleBarGrid" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Menu  -->
                <Menu Name="menu1"
                      IsMainMenu="True"
                      Style="{StaticResource MainMenu}">
                    <!--  Accessor key = false. This is to include underscore in header(only for SubMenuItem  -->
                    <Menu.Resources>
                        <Style x:Key="SubMenuItemOverride"
                               BasedOn="{StaticResource MenuItemStyle}"
                               TargetType="{x:Type MenuItem}">

                            <Style.Resources>
                                <!--  SubmenuItem  -->
                                <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">

                                    <Border Name="Border"
                                            Height="25"
                                            Background="Transparent">
                                        <Grid MinWidth="200">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Name="HeaderHost"
                                                              Grid.Column="0"
                                                              Margin="5,0,0,0"
                                                              HorizontalAlignment="Stretch"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Header"
                                                              RecognizesAccessKey="False"
                                                              TextBlock.FontFamily="{StaticResource ArtifaktElementRegular}"
                                                              TextBlock.FontSize="14px"
                                                              TextBlock.Foreground="{StaticResource NormalForegroundBrush}" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightedBrush}" />
                                            <Setter TargetName="HeaderHost" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Role" Value="SubmenuItem">
                                    <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Menu.Resources>

                    <MenuItem Name="dynamoMenu"
                              Focusable="False"
                              Header="{x:Static p:Resources.DynamoViewDynamoMenu}">
                        <MenuItem Command="{Binding ShowAboutWindowCommand}" Header="{x:Static p:Resources.DynamoViewDynamoMenuAbout}" />
                        <MenuItem Name="ToggleIsAnalyticsReportingApprovedCommand"
                                  Command="{Binding Path=ToggleIsAnalyticsReportingApprovedCommand, Source={x:Static service:UsageReportingManager.Instance}}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Header="{x:Static p:Resources.DynamoViewSettingMenuShowDataReportingDialog}"
                                  Visibility="{Binding HideReportOptions, Converter={StaticResource InverseBoolToVisibilityCollapsedConverter}}" />
                        <Separator />
                        <MenuItem Name="preferencesOption"
                                  Click="OnPreferencesWindowClick"
                                  Header="{x:Static p:Resources.DynamoViewDynamoMenuPreferences}" />
                        <MenuItem Name="exit"
                                  Command="{Binding ExitCommand}"
                                  Header="{x:Static p:Resources.DynamoViewDynamoMenuExit}"
                                  InputGestureText="Alt + F4" />
                    </MenuItem>

                    <MenuItem Name="fileMenu"
                              Focusable="False"
                              Header="{x:Static p:Resources.DynamoViewFileMenu}">
                        <MenuItem Name="newMenu" Header="{x:Static p:Resources.DynamoViewFileMenuNew}">
                            <MenuItem Name="newHomeWorkspace"
                                      Command="{Binding NewHomeWorkspaceCommand}"
                                      Header="{x:Static p:Resources.DynamoViewFileMenuNewHomeWorkSpace}"
                                      InputGestureText="Ctrl + N" />
                            <MenuItem Name="newFuncButton"
                                      Command="{Binding ShowNewFunctionDialogCommand}"
                                      Header="{x:Static p:Resources.DynamoViewFileMenuNewCustomNode}"
                                      InputGestureText="Ctrl + Shift + N" />
                        </MenuItem>
                        <MenuItem Name="openButton" Header="{x:Static p:Resources.DynamoViewFileMenuOpen}">
                            <MenuItem Name="openFileMenuItem"
                                      Command="{Binding ShowOpenDialogAndOpenResultCommand}"
                                      Header="{x:Static p:Resources.DynamoViewFileMenuOpenFile}"
                                      InputGestureText="Ctrl + O" />
                            <MenuItem Name="openTemplateMenuItem"
                                      Command="{Binding ShowOpenTemplateDialogCommand}"
                                      CommandParameter="Template"
                                      Header="{x:Static p:Resources.DynamoViewFileMenuOpenTemplate}"
                                      InputGestureText="Ctrl + T" />
                        </MenuItem>
                        <MenuItem Name="insertButton"
                                  Command="{Binding ShowInsertDialogAndInsertResultCommand}"
                                  Header="{x:Static p:Resources.DynamoViewFileMenuInsert}"
                                  InputGestureText="Ctrl + Shift + I" />
                        <MenuItem Header="{x:Static p:Resources.DynamoViewFileMenuRecentFiles}" ItemsSource="{Binding RecentFiles}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Header" Value="{Binding Converter={StaticResource FilePathDisplayConverter}}" />
                                    <Setter Property="Command" Value="{Binding DataContext.OpenRecentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <Separator />
                        <MenuItem Name="saveThisButton"
                                  Command="{Binding ShowSaveDialogIfNeededAndSaveResultCommand}"
                                  Header="{x:Static p:Resources.DynamoViewFileMenuSave}"
                                  InputGestureText="Ctrl + S"
                                  IsEnabled="False" />
                        <MenuItem Name="saveButton"
                                  Command="{Binding ShowSaveDialogAndSaveResultCommand}"
                                  Header="{x:Static p:Resources.DynamoViewFileMenuSaveAs}"
                                  InputGestureText="Ctrl + Shift + S"
                                  IsEnabled="False" />
                        <Separator />
                        <MenuItem Name="importLibrary"
                                  Command="{Binding Path=DataContext.ImportLibraryCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Header="{x:Static p:Resources.DynamoViewFileMenuImport}" />
                        <Separator />
                        <MenuItem Name="exportMenu"
                                  Header="{x:Static p:Resources.DynamoViewFileMenuExport}"
                                  IsEnabled="False"
                                  Tag="NoDownArrow">
                            <MenuItem Name="saveImage"
                                      Command="{Binding ValidateWorkSpaceBeforeToExportAsImageCommand}"
                                      Header="{x:Static p:Resources.DynamoViewFileMenuExportAsImage}" />
                            <MenuItem Name="save3DImage"
                                      Command="{Binding ValidateWorkSpaceBeforeToExportAsImageCommand}"
                                      CommandParameter="{x:Static p:Resources.ScreenShotFrom3DParameter}"
                                      Header="{x:Static p:Resources.DynamoViewFileMenuExport3DAsImage}" />
                            <MenuItem Name="saveSTL"
                                      Command="{Binding ExportToSTLCommand}"
                                      Header="{x:Static p:Resources.DynamoViewFileMenuExportToSTL}" />
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Name="editMenu"
                              Focusable="False"
                              Header="{x:Static p:Resources.DynamoViewEditMenu}">
                        <MenuItem Name="undo"
                                  Command="{Binding UndoCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuUndo}"
                                  InputGestureText="Ctrl + Z" />
                        <MenuItem Name="redo"
                                  Command="{Binding RedoCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuRedo}"
                                  InputGestureText="Ctrl + Y" />
                        <Separator />
                        <MenuItem Name="copy"
                                  Command="{Binding CopyCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuCopy}"
                                  InputGestureText="Ctrl + C" />
                        <MenuItem Name="paste"
                                  Command="{Binding PasteCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuPaste}"
                                  InputGestureText="Ctrl + V" />
                        <Separator />

                        <MenuItem Name="noteMenuItem"
                                  Command="{Binding AddNoteCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuCreateNote}"
                                  InputGestureText="Ctrl + W" />
                        <MenuItem Name="noteMenuAnnotation"
                                  Command="{Binding AddAnnotationCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuCreateGroup}"
                                  InputGestureText="Ctrl + G" />
                        <MenuItem Name="ungroupGroup"
                                  Command="{Binding UngroupAnnotationCommand}"
                                  Header="{x:Static p:Resources.GroupContextMenuUngroup}"
                                  InputGestureText="Ctrl + U" />
                        <MenuItem Name="nodeFromSelection"
                                  Command="{Binding Path=NodeFromSelectionCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuCreateCustomNode}"
                                  InputGestureText="Ctrl + D" />

                        <MenuItem Name="selectAll"
                                  Command="{Binding SelectAllCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuSelectAll}"
                                  InputGestureText="Ctrl + A" />
                        <MenuItem Name="unpinPB"
                                  Command="{Binding UnpinAllPreviewBubblesCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuUnpinAllPreviewBubbles}"
                                  InputGestureText="Ctrl + K" />
                        <MenuItem Name="deleteSelected"
                                  Command="{Binding DeleteCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuDeleteSelected}"
                                  InputGestureText="Delete" />
                        <!--<MenuItem Focusable="False" Header="{x:Static p:Resources.DynamoViewEditMenuSelectNeighbours}" Command="{Binding Path=ExpandSelectionCommand}"  Name="expandSelect" InputGestureText="Tab"/>-->
                        <MenuItem Name="Align" Header="{x:Static p:Resources.DynamoViewEditMenuAlignSelection}">
                            <MenuItem Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalCenter">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14"
                                               Height="14"
                                               Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_x_average.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignXAverage}" Foreground="White" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalLeft">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14"
                                               Height="14"
                                               Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_left.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignLeft}" Foreground="White" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalRight">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14"
                                               Height="14"
                                               Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_right.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignRight}" Foreground="White" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalCenter">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14"
                                               Height="14"
                                               Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_y_average.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignYAverage}" Foreground="White" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalTop">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14"
                                               Height="14"
                                               Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_top.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignTop}" Foreground="White" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalBottom">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14"
                                               Height="14"
                                               Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_bottom.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlighBottom}" Foreground="White" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalDistribute">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14"
                                               Height="14"
                                               Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_y_distribute.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignYDistribute}" Foreground="White" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalDistribute">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="14"
                                               Height="14"
                                               Source="/DynamoCoreWpf;component/UI/Images/Alignment/align_X_distribute.png" />
                                        <Label Content="{x:Static p:Resources.DynamoViewEditMenuAlignXDistribute}" Foreground="White" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Name="PythonEngineMenu" Header="{x:Static p:Resources.UpdateAllPythonEngineMainMenuHeader}" />
                        <Separator />
                        <MenuItem Name="GraphAutoLayout"
                                  Command="{Binding GraphAutoLayoutCommand}"
                                  Header="{x:Static p:Resources.DynamoViewEditMenuCleanupLayout}"
                                  InputGestureText="Ctrl + L" />
                    </MenuItem>

                    <MenuItem Name="viewMenu"
                              Focusable="False"
                              Header="{x:Static p:Resources.DynamoViewViewMenu}">
                        <MenuItem Name="zoomMenu" Header="{x:Static p:Resources.DynamoViewViewMenuZoom}">
                            <MenuItem Command="{Binding ZoomInCommand}"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuZoomIn}"
                                      InputGestureText="Ctrl + =" />
                            <MenuItem Command="{Binding ZoomOutCommand}"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuZoomOut}"
                                      InputGestureText="Ctrl + -" />
                        </MenuItem>

                        <MenuItem Name="panMenu" Header="{x:Static p:Resources.DynamoViewViewMenuPan}">
                            <MenuItem Command="{Binding PanCommand}"
                                      CommandParameter="Left"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuPanLeft}"
                                      InputGestureText="Ctrl + Alt + Left" />
                            <MenuItem Command="{Binding PanCommand}"
                                      CommandParameter="Right"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuPanRight}"
                                      InputGestureText="Ctrl + Alt + Right" />
                            <MenuItem Command="{Binding PanCommand}"
                                      CommandParameter="Up"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuPanUp}"
                                      InputGestureText="Ctrl + Alt + Up" />
                            <MenuItem Command="{Binding PanCommand}"
                                      CommandParameter="Down"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuPanDown}"
                                      InputGestureText="Ctrl + Alt + Down" />
                        </MenuItem>

                        <MenuItem Command="{Binding ToggleConsoleShowingCommand}"
                                  Header="{x:Static p:Resources.DynamoViewViewMenuShowConsole}"
                                  InputGestureText="Ctrl + Shift + Up"
                                  IsCheckable="True"
                                  IsChecked="{Binding Path=ConsoleHeight, Converter={StaticResource ConsoleHeightToBoolConverter}, Mode=TwoWay}" />

                        <MenuItem Name="connectorMenu" Header="{x:Static p:Resources.DynamoViewViewMenuConnector}">
                            <MenuItem Name="ShowHideConnectorsMenuItem"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuShowConnectors}"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=IsShowingConnectors}" />
                            <MenuItem Name="ShowHideConnectorTooltipMenuItem"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuConnectorShowTooltip}"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=IsShowingConnectorTooltip}" />
                        </MenuItem>

                        <MenuItem Name="background3dMenu" Header="{x:Static p:Resources.DynamoViewViewMenu3DPreview}">

                            <MenuItem Header="{x:Static p:Resources.DynamoViewViewMenuAvailablePreviews}" ItemsSource="{Binding Watch3DViewModels}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding Name}" />
                                        <Setter Property="IsCheckable" Value="True" />
                                        <Setter Property="IsChecked" Value="{Binding Active}" />
                                        <Setter Property="IsEnabled" Value="{Binding CanBeActivated}" />
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>

                            <MenuItem Command="{Binding ToggleBackgroundGridVisibilityCommand}"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuShowGrid}"
                                      IsChecked="{Binding PreferenceSettings.IsBackgroundGridVisible}"
                                      IsEnabled="True" />

                            <MenuItem Command="{Binding Path=BackgroundPreviewViewModel.ToggleCanNavigateBackgroundCommand}"
                                      Header="{x:Static p:Resources.DynamoViewViewMenuPreviewNavigate}"
                                      InputGestureText="Ctrl + B"
                                      IsChecked="{Binding Path=BackgroundPreviewViewModel.CanNavigateBackground}"
                                      IsEnabled="{Binding BackgroundPreviewActive}" />
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Name="PackageManagerMenu"
                              Focusable="False"
                              Header="{x:Static p:Resources.DynamoViewPackageMenu}"
                              IsEnabled="True">
                        <MenuItem Name="publishSelected"
                                  Command="{Binding Path=DataContext.PublishSelectedNodesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Header="{x:Static p:Resources.DynamoViewPackageMenuPublishNodes}" />
                        <MenuItem Name="publishCurrent"
                                  Command="{Binding Path=DataContext.PublishCurrentWorkspaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Header="{x:Static p:Resources.DynamoViewPackageMenuPublishWorkspace}" />
                        <MenuItem Name="showPM"
                                  Command="{Binding Path=DataContext.ShowPackageManagerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"
                                  Header="{x:Static p:Resources.DynamoViewPackageMenuPackageManager}" />
                    </MenuItem>

                    <MenuItem Name="HelpMenu"
                              Focusable="False"
                              Header="{x:Static p:Resources.DynamoViewHelpMenu}">
                        <MenuItem x:Name="InteractiveGuidesMenuItem"
                                  Command="{Binding DisplayInteractiveGuideCommand}"
                                  Header="{x:Static p:Resources.InteractiveGuides}">
                            <MenuItem x:Name="GetStartedMenuItem"
                                      Click="GetStartedMenuItem_Click"
                                      Header="{x:Static p:Resources.GetStartedGuide}" />
                            <MenuItem x:Name="OnBoardingMenuGuide"
                                      Command="{Binding GettingStartedGuideCommand}"
                                      Header="{x:Static p:Resources.OnboardingGuide}" />
                            <MenuItem x:Name="PackagesMenuGuide"
                                      Click="PackagesMenuGuide_Click"
                                      Header="{x:Static p:Resources.PackagesGuide}" />
                        </MenuItem>
                        <MenuItem Name="SamplesMenu"
                                  Header="{x:Static p:Resources.DynamoViewHepMenuSamples}"
                                  IsEnabled="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunEnabled}" />
                        <MenuItem Name="ViewDictionary"
                                  Command="{Binding GoToDictionaryCommand}"
                                  Header="{x:Static p:Resources.DynamoViewHelpDictionary}" />
                        <MenuItem Name="ViewDynamoWebsite"
                                  Command="{Binding GoToWebsiteCommand}"
                                  Header="{x:Static p:Resources.DynamoViewHelpMenuGotoWebsite}" />
                        <MenuItem Name="ViewDynamoRepo"
                                  Command="{Binding GoToSourceCodeCommand}"
                                  Header="{x:Static p:Resources.DynamoViewHelpMenuGotoRepo}" />
                        <MenuItem Name="ViewDynamoWiki"
                                  Command="{Binding GoToWikiCommand}"
                                  Header="{x:Static p:Resources.DynamoViewHelpMenuGotoWiki}" />
                        <MenuItem Name="DisplayStartupPage"
                                  Command="{Binding DisplayStartPageCommand}"
                                  Header="{x:Static p:Resources.DynamoViewHelpMenuDisplayStartPage}" />
                        <Separator />
                        <MenuItem Name="ReportBug"
                                  Command="{Binding ReportABugCommand}"
                                  Header="{x:Static p:Resources.DynamoViewHelpMenuReportBug}" />
                    </MenuItem>

                    <!--  The menu will be enabled when at least one MenuItem is added  -->
                    <MenuItem Name="ExtensionsMenu"
                              Focusable="False"
                              Header="{x:Static p:Resources.DynamoViewExtensionsMenu}"
                              IsEnabled="True"
                              Style="{StaticResource ExtensionsStyle}">
                        <MenuItem.Icon>
                            <Image Width="14"
                                   Height="14"
                                   Source="/DynamoCoreWpf;component/UI/Images/pin.png" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Focusable="False"
                              Header="{x:Static p:Resources.DynamoViewDebugMenu}"
                              Visibility="{Binding IsDebugBuild, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                        <MenuItem Name="VerboseLogging"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuVerboseLogging}"
                                  IsCheckable="True"
                                  IsChecked="{Binding VerboseLogging}" />
                        <MenuItem Name="ShowDebugASTs"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuShowDebugAST}"
                                  IsCheckable="True"
                                  IsChecked="{Binding ShowDebugASTs}" />
                        <MenuItem Name="ForceReexec"
                                  Command="{Binding ForceRunExpressionCommand}"
                                  CommandParameter="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunInDebug}"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuForceReExecute}"
                                  IsEnabled="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunButtonEnabled}" />
                        <MenuItem Name="MutateTest"
                                  Command="{Binding MutateTestDelegateCommand}"
                                  CommandParameter="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunInDebug}"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuRunMutationTest}"
                                  IsEnabled="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel.RunButtonEnabled}" />
                        <MenuItem Name="dumpDataMenuMenu" Header="{x:Static p:Resources.DynamoViewDebugMenuDumpData}">
                            <MenuItem Command="{Binding DumpLibraryToXmlCommand}"
                                      Header="{x:Static p:Resources.DynamoViewDebugMenuDumpLibrary}"
                                      IsEnabled="True" />
                            <MenuItem Command="{Binding DumpNodeHelpDataCommand}"
                                      Header="{x:Static p:Resources.DynamoViewDebugMenuDumpNodeHelpData}"
                                      IsEnabled="True" />
                        </MenuItem>
                        <MenuItem Name="DebugModes"
                                  Click="OnDebugModesClick"
                                  Header="{x:Static p:Resources.DynamoViewDebugMenuDebugModes}"
                                  IsCheckable="False" />
                        <MenuItem Name="FileTrustWarning"
                                  Click="FileTrustWarning_Click"
                                  Header="{x:Static p:Resources.DynamoShowFileTrustWarning}"
                                  IsCheckable="False" />
                        <MenuItem Name="UpdateNodeIcons"
                                  Click="UpdateNodeIcons_Click"
                                  Header="{x:Static p:Resources.UpdateNodeIconsDebugMenu}"
                                  IsCheckable="False" />
                    </MenuItem>
                </Menu>

                <!--  Titlebar buttons  -->
                <Grid Name="titleBarButtonsGrid" Grid.Column="1" />

            </Grid>
        </Border>

        <!--  Shortcuts Toolbar  -->
        <Grid Name="shortcutsBarGrid"
              Grid.Row="1"
              Grid.Column="0"
              Grid.ColumnSpan="5"
              VerticalAlignment="Top"
              Canvas.ZIndex="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Border Name="shortcutBarBorder"
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="0,-1"
                    HorizontalAlignment="Stretch"
                    BorderThickness="0">
                <Grid Name="shortcutBarGrid" />
            </Border>

        </Grid>

        <!--  Canvas  -->
        <Grid Name="background_grid"
              Grid.Row="2"
              Grid.RowSpan="3"
              Grid.Column="2"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Background="#232323"
              IsHitTestVisible="{Binding BackgroundPreviewViewModel.CanNavigateBackground}">
            <Canvas Name="backgroundCanvas"
                    Margin="0,0,0,0"
                    ClipToBounds="True">
                <Canvas.Background>
                    <SolidColorBrush Color="{Binding ViewingHomespace, Converter={StaticResource WorkspaceBackgroundColorConverter}}" />
                </Canvas.Background>
            </Canvas>

            <!--  The BackgroundPreview is now created in the DynamoView_Loaded method.  -->

        </Grid>

        <!--
            Do not style the background of this border,
            Background3DPreview controls will be blocked if you do so.
            Please ensure that mouse events will be able to pass through this layer,
            when Navigate Background 3D Preview is set to true.
        -->
        <!--  Workspace  -->
        <Border Name="border"
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="2"
                Margin="0"
                BorderBrush="Black"
                BorderThickness="0"
                SizeChanged="Workspace_SizeChanged">
            <Grid Margin="0,0,0,0"
                  AllowDrop="True"
                  Drop="DynamoView_OnDrop">
                <TabControl Name="WorkspaceTabs"
                            Padding="0"
                            ItemsSource="{Binding Path=Workspaces, NotifyOnTargetUpdated=True}"
                            SelectedIndex="{Binding CurrentWorkspaceIndex}"
                            SelectionChanged="WorkspaceTabs_SelectionChanged"
                            SizeChanged="WorkspaceTabs_SizeChanged"
                            TargetUpdated="WorkspaceTabs_TargetUpdated">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabControl}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabControl}">
                                        <Grid KeyboardNavigation.TabNavigation="Local">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0" Background="Transparent">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollViewer Grid.Column="0"
                                                                  Margin="0,0,150,0"
                                                                  HorizontalScrollBarVisibility="Auto"
                                                                  VerticalScrollBarVisibility="Disabled">
                                                        <StackPanel Orientation="Horizontal">

                                                            <!--  HomeButton  -->
                                                            <Button Name="HomeButton"
                                                                    Width="42"
                                                                    Height="42"
                                                                    Margin="{Binding MinLeftMarginOffset, Converter={StaticResource LeftMarginConverter}}"
                                                                    Panel.ZIndex="1"
                                                                    BorderThickness="0"
                                                                    Click="HomeButton_Click"
                                                                    Cursor="Hand">
                                                                <Button.Template>
                                                                    <ControlTemplate TargetType="Button">
                                                                        <Border Name="HomeButtomBorder"
                                                                                VerticalAlignment="Stretch"
                                                                                Background="Transparent">
                                                                            <Viewbox Width="16"
                                                                                     Height="16"
                                                                                     HorizontalAlignment="Center"
                                                                                     VerticalAlignment="Center"
                                                                                     Stretch="Uniform">
                                                                                <Path x:Name="HomeIcon"
                                                                                      Margin="0,0,5,5"
                                                                                      Data="M39.5,43h-9c-1.381,0-2.5-1.119-2.5-2.5v-9c0-1.105-0.895-2-2-2h-4c-1.105,0-2,0.895-2,2v9c0,1.381-1.119,2.5-2.5,2.5h-9 C7.119,43,6,41.881,6,40.5V21.413c0-2.299,1.054-4.471,2.859-5.893L23.071,4.321c0.545-0.428,1.313-0.428,1.857,0L39.142,15.52 C40.947,16.942,42,19.113,42,21.411V40.5C42,41.881,40.881,43,39.5,43z"
                                                                                      Fill="{StaticResource LightGrayBrush}"
                                                                                      StrokeThickness="0" />
                                                                            </Viewbox>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter TargetName="HomeIcon" Property="Fill" Value="{StaticResource TextColorBrush}" />
                                                                            </Trigger>
                                                                            <DataTrigger Binding="{Binding DataContext.ShowStartPage, RelativeSource={RelativeSource AncestorType={x:Type controls:DynamoView}}}" Value="True">
                                                                                <Setter TargetName="HomeButtomBorder" Property="Background" Value="#535353" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding DataContext.ShowStartPage, RelativeSource={RelativeSource AncestorType={x:Type controls:DynamoView}}}" Value="False">
                                                                                <Setter TargetName="HomeButtomBorder" Property="Background" Value="Transparent" />
                                                                            </DataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Button.Template>
                                                            </Button>

                                                            <TabPanel x:Name="HeaderPanel"
                                                                      Background="Transparent"
                                                                      IsItemsHost="True"
                                                                      KeyboardNavigation.TabIndex="1" />
                                                        </StackPanel>
                                                    </ScrollViewer>
                                                    <Menu x:Name="TabControlMenu"
                                                          Grid.Column="1"
                                                          Margin="10,0,0,0"
                                                          VerticalAlignment="Center"
                                                          Background="Transparent"
                                                          SnapsToDevicePixels="True">
                                                        <Menu.Resources>
                                                            <sys:Double x:Key="ButtonWidthAndHeight">19</sys:Double>
                                                            <Style x:Key="TabMenuButtonStyle" TargetType="{x:Type MenuItem}">
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="Height" Value="{StaticResource ButtonWidthAndHeight}" />
                                                                <Setter Property="Width" Value="{StaticResource ButtonWidthAndHeight}" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type MenuItem}">
                                                                            <Border Name="ButtonBorder"
                                                                                    Margin="0"
                                                                                    Padding="0"
                                                                                    HorizontalAlignment="Center"
                                                                                    VerticalAlignment="Center"
                                                                                    Background="Transparent"
                                                                                    BorderThickness="0">
                                                                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                    <ContentPresenter HorizontalAlignment="Center"
                                                                                                      VerticalAlignment="Center"
                                                                                                      ContentSource="Header" />
                                                                                </Grid>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>

                                                            <!--  The style for MenuItems that represent TabItems  -->
                                                            <Style x:Key="TabMenuItem"
                                                                   BasedOn="{StaticResource MenuItemStyle}"
                                                                   TargetType="{x:Type MenuItem}">

                                                                <Style.Resources>
                                                                    <!--  SubmenuHeader  -->
                                                                    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
                                                                        <Border Name="Border" Height="25">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="*" MinWidth="100" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <ContentPresenter Name="HeaderHost"
                                                                                                  Grid.Column="0"
                                                                                                  Margin="5,0"
                                                                                                  HorizontalAlignment="Stretch"
                                                                                                  VerticalAlignment="Center"
                                                                                                  ContentSource="Header"
                                                                                                  RecognizesAccessKey="True" />
                                                                                <Popup Name="Popup"
                                                                                       AllowsTransparency="True"
                                                                                       Focusable="False"
                                                                                       HorizontalOffset="-2"
                                                                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                                                                       Placement="Right"
                                                                                       PopupAnimation="Fade">
                                                                                    <Border Name="SubmenuBorder"
                                                                                            Margin="0,0,5,5"
                                                                                            Background="{StaticResource NormalBackgroundBrush}"
                                                                                            BorderBrush="{StaticResource NormalBorderBrush}"
                                                                                            BorderThickness="1"
                                                                                            SnapsToDevicePixels="True">
                                                                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                                                        <Border.Effect>
                                                                                            <DropShadowEffect BlurRadius="5"
                                                                                                              Opacity="0.4"
                                                                                                              ShadowDepth="3" />
                                                                                        </Border.Effect>
                                                                                    </Border>
                                                                                </Popup>
                                                                            </Grid>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsHighlighted" Value="true">
                                                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                                                <Setter TargetName="HeaderHost" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                                                                                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="false">
                                                                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>

                                                                    <!--  SubmenuItem  -->
                                                                    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
                                                                        <Border Name="Border" Height="25">
                                                                            <Grid MinWidth="200">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="Auto" />
                                                                                    <ColumnDefinition Width="*" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <ContentPresenter Name="HeaderHost"
                                                                                                  Grid.Column="0"
                                                                                                  Margin="5,0,0,0"
                                                                                                  HorizontalAlignment="Stretch"
                                                                                                  VerticalAlignment="Center"
                                                                                                  ContentSource="Header"
                                                                                                  RecognizesAccessKey="True" />
                                                                                <ContentPresenter Name="SaveStateHost"
                                                                                                  Grid.Column="1"
                                                                                                  Margin="0,0,5,0"
                                                                                                  HorizontalAlignment="Stretch"
                                                                                                  VerticalAlignment="Center"
                                                                                                  ContentSource="Tag"
                                                                                                  RecognizesAccessKey="True" />
                                                                            </Grid>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsHighlighted" Value="true">
                                                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                                                <Setter TargetName="HeaderHost" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                                                                                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="false">
                                                                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Style.Resources>

                                                                <EventSetter Event="Click" Handler="TabControlMenuItem_Click" />

                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Unsaved">
                                                                        <Setter Property="Header" Value="{Binding Name}" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Saved">
                                                                        <Setter Property="Header" Value="{Binding FileName, Converter={StaticResource PathToFileNameConverter}}" />
                                                                    </DataTrigger>

                                                                    <DataTrigger Binding="{Binding HasUnsavedChanges}" Value="True">
                                                                        <Setter Property="Tag" Value="*" />
                                                                    </DataTrigger>

                                                                    <DataTrigger Binding="{Binding HasUnsavedChanges}" Value="False">
                                                                        <Setter Property="Tag" Value="" />
                                                                    </DataTrigger>

                                                                    <Trigger Property="Role" Value="SubmenuHeader">
                                                                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                                                                    </Trigger>
                                                                    <Trigger Property="Role" Value="SubmenuItem">
                                                                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Menu.Resources>
                                                        <MenuItem ItemContainerStyle="{StaticResource TabMenuItem}"
                                                                  ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=Items}"
                                                                  Style="{StaticResource TabMenuButtonStyle}" />
                                                    </Menu>
                                                </Grid>
                                            </Border>
                                            <Border x:Name="Border"
                                                    Grid.Row="1"
                                                    BorderBrush="{Binding Path=ViewingHomespace, Converter={StaticResource WorkspaceBackgroundBrushConverter}}"
                                                    BorderThickness="0,0,0,0">
                                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="0,0,10,0" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="0" />
                            <!--<EventSetter Event="Click"
                                         Handler="TabCloseButton_Click" />-->
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="Border"
                                                Background="Transparent"
                                                BorderThickness="0,0,0,0">
                                            <ContentPresenter Margin="0,1,0,0" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <!-- The close button for workspace is no longer hidden on the HOME
                                 tab page, since it is used to bring up the Start Page when pressed.

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}"
                                             Value="{x:Type models:HomeWorkspaceModel}">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            -->

                        </Style>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="MaxWidth" Value="{Binding Source={x:Static configuration:Configurations.TabDefaultWidth}}" />
                            <Setter Property="MinWidth" Value="{Binding Source={x:Static configuration:Configurations.TabDefaultWidth}}" />
                            <EventSetter Event="MouseLeftButtonUp" Handler="TabItem_MouseLeftButtonUp" />
                            <Setter Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource TabSizeConverter}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" />
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" />
                                        <Binding Path="Items.Count" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" />
                                        <!--<Binding Path="Visibility" />-->
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <Border Name="Border"
                                                BorderThickness="0,0,0,5"
                                                CornerRadius="0,0,0,0">
                                            <Border.ToolTip>
                                                <uictrls:DynamoToolTip AttachmentSide="Bottom" Style="{DynamicResource ResourceKey=SLightToolTip}">
                                                    <StackPanel MaxWidth="250" Margin="5">
                                                        <TextBlock x:Name="FileName"
                                                                   Margin="0,0,0,5"
                                                                   Text="{Binding Path=FileName, Converter={StaticResource PathToFileNameConverter}}"
                                                                   TextWrapping="Wrap" />
                                                        <TextBlock x:Name="topMessage"
                                                                   FontFamily="{StaticResource ArtifaktElementBold}"
                                                                   FontSize="11px"
                                                                   Foreground="Black">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Path=HasUnsavedChanges}" Value="True">
                                                                            <Setter Property="Text" Value="{x:Static p:Resources.WorkspaceTabSavingNecessary}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Path=HasUnsavedChanges}" Value="False">
                                                                            <Setter Property="Text" Value="{x:Static p:Resources.WorkspaceTabSavingUnnecessary}" />
                                                                        </DataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding Path=FileName}" Value="" />
                                                                                <Condition Binding="{Binding Path=HasUnsavedChanges}" Value="True" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <MultiDataTrigger.Setters>
                                                                                <Setter Property="Text" Value="{x:Static p:Resources.WorkspaceTabNotSavedYet}" />
                                                                            </MultiDataTrigger.Setters>
                                                                        </MultiDataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding Path=FileName}" Value="" />
                                                                                <Condition Binding="{Binding Path=HasUnsavedChanges}" Value="False" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <MultiDataTrigger.Setters>
                                                                                <Setter Property="Text" Value="{x:Static p:Resources.WorkspaceTabSavingBrandNewFile}" />
                                                                            </MultiDataTrigger.Setters>
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                        <TextBlock x:Name="bottomMessage"
                                                                   FontFamily="{StaticResource ArtifaktElementRegular}"
                                                                   FontSize="11px"
                                                                   Foreground="Black">
                                                            <Run Text="{x:Static p:Resources.PreferencesViewSavedChangesTooltip}" />
                                                            <Run Text="{Binding DynamoViewModel.HomeSpace.LastSaved}" />
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Unsaved">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Saved">
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </StackPanel>
                                                </uictrls:DynamoToolTip>
                                            </Border.ToolTip>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrushWhite}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="False">
                                                            <Setter Property="Background" Value="{StaticResource WorkspaceTabBorderSelectedFalse}" />
                                                            <Setter Property="BorderBrush" Value="{StaticResource WorkspaceTabBorderSelectedFalse}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource WorkspaceTabBorderSelectedTrue}" />
                                                            <Setter Property="BorderBrush" Value="{StaticResource WorkspaceTabBorderSelectedTrue}" />
                                                        </DataTrigger>
                                                        <!--  Fake deselect when start page is shown  -->
                                                        <DataTrigger Binding="{Binding DataContext.ShowStartPage, RelativeSource={RelativeSource AncestorType={x:Type controls:DynamoView}}}" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource WorkspaceTabBorderSelectedFalse}" />
                                                            <Setter Property="BorderBrush" Value="{StaticResource WorkspaceTabBorderSelectedFalse}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter x:Name="ContentSite"
                                                                  Grid.Column="0"
                                                                  VerticalAlignment="Center"
                                                                  ContentSource="Header" />
                                                <Button Grid.Column="1"
                                                        Margin="0"
                                                        Command="{Binding HideCommand}"
                                                        Cursor="Hand"
                                                        Style="{StaticResource CloseButtonStyle}">
                                                    <Image Width="16"
                                                           Height="16"
                                                           Margin="0,0,10,0">
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="False">
                                                                        <Setter Property="Source" Value="/DynamoCoreWpf;component/UI/Images/closetab_normal.png" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Source" Value="/DynamoCoreWpf;component/UI/Images/closetab_hover.png" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Button>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </TabControl.Resources>

                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Height="35" Margin="12,0,5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="5" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Ellipse Name="UnsavedChangesIcon"
                                         Grid.Column="0"
                                         Width="9"
                                         Height="9"
                                         Margin="0,5,5,0"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource YellowOrange500Brush}">
                                    <Ellipse.Style>
                                        <Style TargetType="Ellipse">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasUnsavedChanges}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding HasUnsavedChanges}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ellipse.Style>
                                </Ellipse>
                                <Rectangle Grid.Column="1"
                                           Width="16"
                                           Height="16"
                                           Margin="0,5,7,0"
                                           VerticalAlignment="Center">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="/DynamoCoreWpf;component/UI/Images/custom-node.png" />
                                    </Rectangle.Fill>
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsHomeSpace}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsHomeSpace}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <TextBlock Name="WorkspaceName"
                                           Grid.Column="2"
                                           Margin="0,7,0,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Center"
                                           FontFamily="{StaticResource ArtifaktElementRegular}"
                                           FontSize="16px"
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource WorkspaceTabHeaderActiveTextBrush}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="False">
                                                    <Setter Property="Foreground" Value="{StaticResource WorkspaceTabHeaderInactiveTextBrush}" />
                                                </DataTrigger>

                                                <!--  Fake Deselect when StartPage is shown  -->
                                                <DataTrigger Binding="{Binding DataContext.ShowStartPage, RelativeSource={RelativeSource AncestorType={x:Type controls:DynamoView}}}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource WorkspaceTabHeaderInactiveTextBrush}" />
                                                </DataTrigger>

                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}" Value="{x:Type workspaces:HomeWorkspaceModel}" />
                                                        <Condition Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Unsaved" />
                                                    </MultiDataTrigger.Conditions>
                                                    <!--  The value of the unsaved Workspace tab text field  -->
                                                    <Setter Property="Text" Value="Workspace" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}" Value="{x:Type workspaces:HomeWorkspaceModel}" />
                                                        <Condition Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Saved" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="{Binding Path=FileName, Converter={StaticResource PathToFileNameConverter}}" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}" Value="{x:Type workspaces:CustomNodeWorkspaceModel}" />
                                                        <Condition Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Unsaved" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="{Binding Name}" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}" Value="{x:Type workspaces:CustomNodeWorkspaceModel}" />
                                                        <Condition Binding="{Binding Path=FileName, Converter={StaticResource PathToSaveStateConverter}}" Value="Saved" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Text" Value="{Binding Path=FileName, Converter={StaticResource PathToFileNameConverter}}" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>

                    </TabControl.ItemTemplate>

                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <views:WorkspaceView />
                        </DataTemplate>
                    </TabControl.ContentTemplate>

                </TabControl>
            </Grid>

        </Border>

        <!--  Collapsed Left Sidebar  -->
        <StackPanel Name="collapsedLibrarySidebar"
                    Grid.Row="2"
                    Grid.Column="2"
                    Width="Auto"
                    Height="Auto"
                    Margin="0,400,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Background="{StaticResource HighlightedBrush}"
                    Orientation="Vertical">
            <Grid Width="Auto"
                  Background="#353535"
                  Cursor="Hand">
                <Button Click="OnCollapsedLeftSidebarClick" Template="{DynamicResource BackgroundButton}">
                    <Button.Resources>
                        <ControlTemplate x:Key="BackgroundButton" TargetType="Button">
                            <Border Name="border"
                                    Padding="5,0,5,0"
                                    VerticalAlignment="Stretch"
                                    BorderBrush="Black"
                                    BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Border>
                        </ControlTemplate>
                    </Button.Resources>
                    <Grid Mouse.MouseEnter="LibraryHandle_MouseEnter" Mouse.MouseLeave="LibraryHandle_MouseLeave">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <TextBlock Name="LibrarySidebarText"
                                       Grid.Column="0"
                                       Margin="5,0,0,5"
                                       VerticalAlignment="Center"
                                       FontWeight="Normal"
                                       Foreground="#aaaaaa"
                                       Text="{x:Static p:Resources.LibraryViewTitle}" />
                            <Image Name="LibrarySidebarIcon"
                                   Grid.Column="0"
                                   Width="10"
                                   Height="10"
                                   Margin="5,5,5,5"
                                   RenderTransformOrigin="0.5, 0.5"
                                   Source="/DynamoCoreWpf;component/UI/Images/expand_normal.png"
                                   Visibility="Visible">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="-90" />
                                </Image.RenderTransform>
                            </Image>
                        </StackPanel>
                    </Grid>
                </Button>
            </Grid>

            <StackPanel.RenderTransform>
                <RotateTransform Angle="-90" />
            </StackPanel.RenderTransform>
        </StackPanel>

        <!--  Collapsed right sidebar panel  -->
        <StackPanel Name="collapsedExtensionSidebar"
                    Grid.Row="2"
                    Grid.Column="2"
                    Width="Auto"
                    Height="Auto"
                    Margin="0,400,0,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="{StaticResource HighlightedBrush}"
                    Orientation="Vertical"
                    RenderTransformOrigin="1,0">
            <Grid Width="Auto"
                  Background="#353535"
                  Cursor="Hand">
                <Button Click="OnCollapsedRightSidebarClick" Template="{DynamicResource BackgroundButton}">
                    <Button.Resources>
                        <ControlTemplate x:Key="BackgroundButton" TargetType="Button">
                            <Border Name="border"
                                    Padding="5,0,5,0"
                                    VerticalAlignment="Stretch"
                                    BorderBrush="Black"
                                    BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Border>
                        </ControlTemplate>
                    </Button.Resources>
                    <Grid Mouse.MouseEnter="ExtensionHandle_MouseEnter" Mouse.MouseLeave="ExtensionHandle_MouseLeave">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Image Name="ExtensionSidebarIcon"
                                   Grid.Column="0"
                                   Width="10"
                                   Height="10"
                                   Margin="5,5,5,5"
                                   RenderTransformOrigin="0.5, 0.5"
                                   Source="/DynamoCoreWpf;component/UI/Images/expand_normal.png"
                                   Visibility="Visible">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="-90" />
                                </Image.RenderTransform>
                            </Image>
                            <TextBlock Name="ExtensionSidebarText"
                                       Grid.Column="0"
                                       Margin="0,5,5,0"
                                       VerticalAlignment="Center"
                                       FontWeight="Normal"
                                       Foreground="#aaaaaa"
                                       RenderTransformOrigin="0.5,0.5"
                                       Text="{x:Static p:Resources.SideBarPanelViewTitle}">
                                <TextBlock.RenderTransform>
                                    <RotateTransform Angle="180" />
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </Button>

            </Grid>

            <StackPanel.RenderTransform>
                <RotateTransform Angle="90" />
            </StackPanel.RenderTransform>
        </StackPanel>

        <!--  Console Log Area  -->
        <ScrollViewer Name="LogScroller"
                      Grid.Row="4"
                      Grid.Column="0"
                      Grid.ColumnSpan="5"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Background="Black"
                      HorizontalScrollBarVisibility="Hidden"
                      Opacity="1"
                      VerticalScrollBarVisibility="Auto"
                      Visibility="Visible">

            <ScrollViewer.ContextMenu>
                <ContextMenu Style="{StaticResource ContextMenuStyle}">
                    <MenuItem Command="{Binding ClearLogCommand}" Header="{x:Static p:Resources.DynamoViewContextMenuClearLog}" />
                </ContextMenu>
            </ScrollViewer.ContextMenu>

            <TextBox Margin="0"
                     Background="Black"
                     BorderBrush="#00000000"
                     BorderThickness="0"
                     FontFamily="Consolas"
                     Foreground="#FF888888"
                     IsReadOnly="True"
                     IsReadOnlyCaretVisible="True"
                     IsTabStop="False"
                     IsUndoEnabled="False"
                     Text="{Binding Path=LogText, Mode=OneWay}"
                     TextChanged="TextBoxBase_OnTextChanged"
                     TextWrapping="Wrap" />
        </ScrollViewer>

        <!--  Left Sidebar Library  -->
        <Grid Name="sidebarGrid"
              Grid.Row="2"
              Grid.RowSpan="2"
              Grid.Column="0"
              Width="Auto"
              Height="Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="Visible" />

        <!--  Right Sidebar Panel  -->
        <Grid Name="sidebarExtensionsGrid"
              Grid.Row="2"
              Grid.RowSpan="2"
              Grid.Column="4"
              Width="Auto"
              Height="Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="Visible">
            <TabControl Name="tabDynamic"
                        Background="#353535"
                        BorderThickness="0"
                        ItemsSource="{Binding SideBarTabItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <TabControl.Resources>
                    <!--  Styling for the close button in the tab  -->
                    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border"
                                            Background="Transparent"
                                            BorderThickness="0,0,0,0">
                                        <ContentPresenter Margin="0,0,0,0" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--  Template for tab header in the right side bar  -->
                    <DataTemplate x:Key="TabHeader" DataType="TabItem">
                        <DockPanel Name="TabPanel"
                                   MinWidth="{Binding Source={x:Static configuration:Configurations.ExtensionsSideBarTabMinWidth}}"
                                   HorizontalAlignment="Stretch">
                            <TextBlock Margin="5,7,0,0"
                                       HorizontalAlignment="Stretch"
                                       FontFamily="{StaticResource ArtifaktElementBold}"
                                       FontSize="12"
                                       Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Header}" />

                            <!--  Button to close a particular tab  -->
                            <Button Name="CloseButton"
                                    Uid="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Uid}"
                                    Margin="5,5,5,0"
                                    Click="OnCloseRightSideBarTab"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource CloseButtonStyle}">
                                <Image Width="18"
                                       Height="18"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Source" Value="/DynamoCoreWpf;component/UI/Images/closetab_normal.png" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Source" Value="/DynamoCoreWpf;component/UI/Images/closetab_hover.png" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <!--  Undock  -->
                            <Button Name="UndockButton"
                                    Uid="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Uid}"
                                    Margin="8,5,0,0"
                                    Click="OnUndockRightSideBarTab"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource CloseButtonStyle}">
                                <Image Width="18"
                                       Height="18"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Source" Value="/DynamoCoreWpf;component/UI/Images/undock_normal.png" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Source" Value="/DynamoCoreWpf;component/UI/Images/undock_hover.png" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                        </DockPanel>
                    </DataTemplate>

                    <!--  Styling for the tab in the right side bar  -->
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="MinWidth" Value="{Binding Source={x:Static configuration:Configurations.ExtensionsSideBarTabMinWidth}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid>
                                        <Border Name="Border"
                                                Margin="0,0,0,0"
                                                BorderBrush="{StaticResource BorderBrushWhite}"
                                                BorderThickness="1,0,1,0">
                                            <ContentPresenter x:Name="ContentSite"
                                                              Margin="3,0,0,3"
                                                              HorizontalAlignment="Stretch"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Header"
                                                              RecognizesAccessKey="True" />
                                        </Border>
                                    </Grid>
                                    <!--  Properties for selected and unselected tabs  -->
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Foreground" Value="{StaticResource WorkspaceTabHeaderActiveTextBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource WorkspaceTabHeaderInactiveTextBrush}" />
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightedBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
            </TabControl>
        </Grid>

        <!--  Bottom Panel including RunMode etc  -->
        <Grid Grid.Row="5"
              Grid.RowSpan="1"
              Grid.Column="0"
              Grid.ColumnSpan="5"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Background="#3C3C3C">
            <Grid Name="bottomBarGrid"
                  Grid.Row="4"
                  Grid.RowSpan="1"
                  Grid.Column="0"
                  Grid.ColumnSpan="5"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <WrapPanel Grid.Row="0"
                           Grid.Column="0"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Orientation="Horizontal"
                           Visibility="{Binding IsAbleToGoHome, Converter={StaticResource InverseBoolToVisibilityConverter}}">

                    <controls1:RunSettingsControl x:Name="RunSettingsControl"
                                                  Margin="2.5,5,5,5"
                                                  VerticalAlignment="Stretch"
                                                  DataContext="{Binding Path=HomeSpaceViewModel.RunSettingsViewModel}" />
                </WrapPanel>

                <!--  NotificationControl for showing run-time notifications  -->
                <controls1:NotificationsControl Grid.Column="1" />
            </Grid>
        </Grid>

        <!--  Split Between Console and Canvas  -->
        <GridSplitter Name="horizontalSplitter"
                      Grid.Row="3"
                      Grid.RowSpan="1"
                      Grid.Column="2"
                      Grid.ColumnSpan="1"
                      Width="Auto"
                      Height="2"
                      Margin="0"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Background="#999"
                      Cursor="/DynamoCoreWpf;component/UI/Images/resize_vertical.cur"
                      ResizeDirection="Rows" />

        <!--  Split Between Library and Canvas  -->
        <GridSplitter Name="verticalSplitter"
                      Grid.Row="2"
                      Grid.RowSpan="2"
                      Grid.Column="1"
                      Width="3"
                      Height="Auto"
                      Margin="0"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Background="Transparent"
                      Cursor="/DynamoCoreWpf;component/UI/Images/resize_horizontal.cur"
                      ResizeDirection="Auto" />

        <!--  Split Between Right Sidebar panel and Canvas  -->
        <GridSplitter Name="extensionSplitter"
                      Grid.Row="2"
                      Grid.RowSpan="2"
                      Grid.Column="3"
                      Width="3"
                      Height="Auto"
                      Margin="0"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Background="Transparent"
                      Cursor="/DynamoCoreWpf;component/UI/Images/resize_horizontal.cur"
                      DragCompleted="RightExtensionSidebar_DragCompleted"
                      ResizeDirection="Auto" />

        <!--  Start Page  -->
        <Grid x:Name="oldHomePageContainer"
              Grid.Row="2"
              Grid.RowSpan="4"
              Grid.Column="0"
              Grid.ColumnSpan="5"
              Visibility="{Binding IsNewAppHomeEnabled, Converter={StaticResource InverseBoolToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
            <ItemsControl Name="startPageItemsControl">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type uictrls:StartPageViewModel}">
                        <Grid>
                            <Grid.Height>
                                <Binding Mode="OneWay"
                                         Path="ActualHeight"
                                         RelativeSource="{RelativeSource FindAncestor,
                                                                         AncestorType={x:Type ItemsControl}}" />
                            </Grid.Height>
                            <uictrls:StartPageView />
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.Visibility>
                    <Binding Converter="{StaticResource BooleanToVisibilityConverter}"
                             Mode="OneWay"
                             Path="DataContext.ShowStartPage"
                             RelativeSource="{RelativeSource FindAncestor,
                                                             AncestorType={x:Type controls:DynamoView}}"
                             UpdateSourceTrigger="Explicit" />
                </ItemsControl.Visibility>
            </ItemsControl>
        </Grid>
        <!--  Do not delete newHomePageContainer grid as it is hosting the HomePage  -->
        <Grid x:Name="newHomePageContainer"
              Grid.Row="2"
              Grid.RowSpan="4"
              Grid.Column="0"
              Grid.ColumnSpan="5"
              Visibility="{Binding IsNewAppHomeEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />

        <Grid Name="FocusableGrid"
              Width="0"
              Height="0"
              Focusable="True" />
    </Grid>
</Window>
