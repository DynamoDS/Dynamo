<UserControl x:Class="Dynamo.Controls.Watch3DView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sdx="clr-namespace:SharpDX;assembly=SharpDX" 
             xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
             xmlns:ui="clr-namespace:Dynamo.UI"
             xmlns:p="clr-namespace:Dynamo.Wpf.Properties"
             xmlns:controls="clr-namespace:Dynamo.Controls"
             xmlns:preview="clr-namespace:Dynamo.Wpf.Views.Preview"
             xmlns:wpf="clr-namespace:Dynamo.Wpf"
             xmlns:rendering="clr-namespace:Dynamo.Wpf.Rendering"
             Name="topControl" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}"/>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.MenuStyleDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <controls:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <Color x:Key="pointColor" R="0" B="255" G="0" A="255"></Color>
            <Color x:Key="lineColor" R="0" B="255" G="0" A="255"></Color>
            <controls:Watch3DBackgroundColorConverter x:Key="Watch3DBackgroundColorConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid Name="inputGrid"
            x:FieldModifier="public"
            MinHeight="100" MinWidth="100">

        <Grid.ContextMenu>
            <ContextMenu Name="MainContextMenu"
                         x:FieldModifier="public">

                <MenuItem Header="{x:Static p:Resources.Watch3DViewContextMenuSwitchView}">
                    <MenuItem.Command>
                        <Binding Path="PlacementTarget.DataContext.ToggleCanNavigateBackgroundCommand"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.Command>
                    <MenuItem.Visibility>
                        <Binding Path="PlacementTarget.DataContext.IsBackgroundPreview"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}"
                                 Converter="{StaticResource BoolToVisibilityConverter}"
                                 ConverterParameter="Collapse" />
                    </MenuItem.Visibility>
                </MenuItem>

                <MenuItem Header="{x:Static p:Resources.Watch3DViewContextMenuRotate}">
                    <MenuItem.Command>
                        <Binding Path="PlacementTarget.DataContext.ToggleOrbitCommand"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.Command>
                    <MenuItem.IsChecked>
                        <Binding Path="PlacementTarget.DataContext.IsOrbiting"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.IsChecked>
                    <MenuItem.Visibility>
                        <Binding Path="PlacementTarget.DataContext.IsBackgroundPreview"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}"
                                 Converter="{StaticResource BoolToVisibilityConverter}"
                                 ConverterParameter="Collapse" />
                    </MenuItem.Visibility>
                </MenuItem>

                <MenuItem Header="{x:Static p:Resources.Watch3DViewContextMenuPan}">
                    <MenuItem.Command>
                        <Binding Path="PlacementTarget.DataContext.TogglePanCommand"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.Command>
                    <MenuItem.IsChecked>
                        <Binding Path="PlacementTarget.DataContext.IsPanning"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.IsChecked>
                    <MenuItem.Visibility>
                        <Binding Path="PlacementTarget.DataContext.IsBackgroundPreview"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}"
                                 Converter="{StaticResource BoolToVisibilityConverter}"
                                 ConverterParameter="Collapse" />
                    </MenuItem.Visibility>
                </MenuItem>

                <MenuItem Header="{x:Static p:Resources.Watch3DViewContextMenuZoomToFit}"
                          Click="OnZoomToFitClicked" />
            </ContextMenu>
        </Grid.ContextMenu>

        <hx:Viewport3DX Focusable="True"
            Name="watch_view"
            ZoomExtentsWhenLoaded="False"
            ShowViewCube="False" 
            CameraRotationMode="Turntable"
            IsHitTestVisible="True"
            MouseLeftButtonDown="Watch_view_OnMouseDown" 
            ShowCoordinateSystem="False"
            RenderTechnique="{Binding RenderTechnique}"
            Camera="{Binding Camera}" RotationSensitivity="1"
            IsShadowMappingEnabled="{Binding ShowShadows}" 
            UseDefaultGestures="False" 
            IsInertiaEnabled="False" 
            IsChangeFieldOfViewEnabled="False" 
            SpinReleaseTime="0" 
            ShowFieldOfView="False" BackgroundColor="{Binding Path=DataContext.ViewingHomespace, RelativeSource={RelativeSource AncestorType={x:Type controls:DynamoView}}, Converter={StaticResource Watch3DBackgroundColorConverter}}">
            <hx:Viewport3DX.InputBindings>
                <KeyBinding Command="hx:ViewportCommands.ZoomExtents" Gesture="Ctrl+E"/>
                <MouseBinding Command="hx:ViewportCommands.ZoomExtents" Gesture="Ctrl+LeftDoubleClick"/>
                <MouseBinding Command="hx:ViewportCommands.Rotate" MouseAction="RightClick"/>
                <MouseBinding Command="hx:ViewportCommands.Pan" MouseAction="MiddleClick"/>
                <MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="Ctrl+RightClick"/>
                <MouseBinding Command="hx:ViewportCommands.ChangeFieldOfView" Gesture="Alt+RightClick"/>
                <MouseBinding Command="hx:ViewportCommands.ZoomRectangle" Gesture="Ctrl+Shift+RightClick"/>
                <MouseBinding Command="hx:ViewportCommands.SetTarget" Gesture="Ctrl+RightDoubleClick"/>
                <MouseBinding Command="hx:ViewportCommands.Reset" Gesture="Ctrl+MiddleDoubleClick"/>
                <MouseBinding Command="{Binding LeftClickCommand}" Gesture="LeftClick"/>
            </hx:Viewport3DX.InputBindings>
            <hx:DirectionalLight3D Name="key" Color="{Binding DirectionalLightColor}" Direction = "{Binding DirectionalLightDirection}"/>
            <hx:LineGeometryModel3D x:Name="linesView"  Geometry="{Binding Lines}" Transform = "{Binding Model1Transform}" Color="{x:Static sdx:Color.White}" Thickness="0.5" IsHitTestVisible="False" />
            <hx:LineGeometryModel3D x:Name="linesSelectedView"  Geometry="{Binding LinesSelected}" Transform = "{Binding Model1Transform}" Color="{x:Static sdx:Color.White}" Thickness="1.0" IsHitTestVisible="False" />
            <hx:PointGeometryModel3D x:Name="pointsView" Geometry="{Binding Points}" Transform="{Binding Model1Transform}" Color="{x:Static sdx:Color.White}" Size="8 8" Figure="Ellipse"/>
            <hx:MeshGeometryModel3D x:Name="meshView" Geometry="{Binding Mesh}" Transform = "{Binding Model1Transform}" Material="{Binding WhiteMaterial}" IsHitTestVisible="False" />
            <hx:MeshGeometryModel3D x:Name="meshSelectedView" Geometry="{Binding MeshSelected}" Transform = "{Binding Model1Transform}" Material="{Binding SelectedMaterial}" IsHitTestVisible="False" />
            <rendering:PerVertexMeshGeometryModel3D x:Name="perVertexMeshView" Geometry="{Binding PerVertexMesh}" Transform="{Binding Model1Transform}" Material="{Binding WhiteMaterial}" IsHitTestVisible="False"/>
            <hx:BillboardTextModel3D x:Name="textView" Geometry="{Binding Text}" Transform="{Binding Model1Transform}"/>
            <hx:LineGeometryModel3D x:Name="gridView" Geometry="{Binding Grid}"  Transform = "{Binding Model1Transform}" Color="{x:Static sdx:Color.White}" Thickness="0.3" IsHitTestVisible="False"/>
            <hx:LineGeometryModel3D x:Name="axesView" Geometry="{Binding Axes}"  Transform = "{Binding Model1Transform}" Color="{x:Static sdx:Color.White}" Thickness="0.3" IsHitTestVisible="False"/>
        </hx:Viewport3DX>

        <Thumb Name ="resizeThumb" Width="10" Height="10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5"
               DragDelta="ResizeThumb_OnDragDelta" DragStarted="ResizeThumb_OnDragStarted" DragCompleted="ResizeThumb_OnDragCompleted"
               Visibility="{Binding WatchIsResizable, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>
