<UserControl x:Class="Dynamo.Controls.WatchTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Dynamo.ViewModels"
             xmlns:ui="clr-namespace:Dynamo.UI"
             mc:Ignorable="d"
             d:DesignHeight="161"
             d:DesignWidth="410"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch"
             BorderBrush="Black"
             MaxHeight="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="BorderlessButton"
                   TargetType="{x:Type Button}">
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Background"
                        Value="PaleGreen" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="border"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter Name="content"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="content"
                                            Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.1"
                                                            ScaleY="1.1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="content"
                                            Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX=".95"
                                                            ScaleY=".95" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded"
                        Value="{Binding IsNodeExpanded}" />
            </Style>
            
            <!-- Expander Button Style -->
            <Style x:Key="ExpandCollapseToggleStyleWT" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid
                              Width="15"
                              Height="13"
                              Background="White">       
                                <Path x:Name="ExpandPath" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                      Margin="0,1,1,1" Fill="#0e67b1" Data="M 4 0 L 8 4 L 4 8 Z"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0,0,0,0"
                     StrokeThickness="5"
                     Stroke="IndianRed"
                     StrokeDashArray="1 2"
                     Opacity="0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- TreeViewItem Control Style-->                   
            <Style x:Key="WatchTreeViewItem" 
                   TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded"
                        Value="{Binding IsNodeExpanded}" />

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="1,0,0,0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid Name="TreeGrid" Background="Transparent">
                                
                                <!--Set Column and Row Definitions for Grid Panel-->
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- Insert Toggle Button for Expander-->
                                
                                <ToggleButton x:Name="Expander"
                                      Background="Transparent"
                                      ClickMode="Press"
                                      Style="{StaticResource ExpandCollapseToggleStyleWT}"
                                      HorizontalAlignment="Center" 
                                      IsChecked="{Binding IsExpanded, RelativeSource= {RelativeSource TemplatedParent}}">
                                </ToggleButton>

                                <!-- Set Border for ListNode-->
                                
                                <Border Name="Bd" Grid.Column="1" Grid.Row="0"
                                    HorizontalAlignment="Left"
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="True">
                                    
                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                                </Border>

                                <Grid Grid.Column="0" Grid.Row="1">

                                    <!-- Vertical line -->

                                    <Rectangle 
                                           x:Name="VerLn" Width="1" 
                                           Stroke="Gray" 
                                           Margin="0,0,0,1" 
                                           Grid.RowSpan="2" 
                                           SnapsToDevicePixels="true"
                                           HorizontalAlignment="Center"
                                           Fill="Black"/>

                                    <!-- Draw Ellipse at the bottom of each vertical line -->

                                    <Ellipse 
                                             x:Name="LnEnd" 
                                             Width="5" 
                                             Height="5" 
                                             Margin="0,0,0,0"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Bottom"
                                             Stroke="Gray" Fill="Gray" SnapsToDevicePixels="True"/>

                                </Grid>

                                <!--ItemPresenter (specified in the Template) will be replaced with whatever is specified in the ItemsPanelTemplate.-->
                                
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                            </Grid>
                            

                            <ControlTemplate.Triggers>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                        <Setter TargetName="VerLn" Property="Visibility" Value="Hidden" />
                                        <Setter TargetName="LnEnd" Property="Visibility" Value="Hidden" />
                                </Trigger>                                
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                        <Setter TargetName="VerLn" Property="Visibility" Value="Hidden" />
                                        <Setter TargetName="LnEnd" Property="Visibility" Value="Collapsed" />
                                </Trigger> 
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
                      
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height ="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>        
        
        <TreeView Name="treeView1"
                  ItemsSource="{Binding Children}"
                  Background="White"
                  Opacity=".5"
                  BorderBrush="{x:Null}"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  ItemContainerStyle="{StaticResource WatchTreeViewItem}"
                  SelectedItemChanged="TreeView1_OnSelectedItemChanged">
            <TreeView.ItemsPanel>
                <ItemsPanelTemplate>
                                       
                    <VirtualizingStackPanel>
                        <VirtualizingPanel.Style>
                            <Style TargetType="{x:Type VirtualizingPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsOneRowContent}"
                                                 Value="True">
                                        <Setter Property="Margin"
                                                Value="-10,5,5,5" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsOneRowContent}"
                                                 Value="False">
                                        <Setter Property="Margin"
                                                Value="5,5,5,5" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </VirtualizingPanel.Style>
                    </VirtualizingStackPanel>
                </ItemsPanelTemplate>
            </TreeView.ItemsPanel>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}"
                                          DataType="{x:Type viewModels:WatchViewModel}">
                    <VirtualizingStackPanel Orientation="Horizontal"
                                            Width="Auto">
                        <TextBlock Text="{Binding Path=ViewPath}"
                                   VerticalAlignment="Center"
                                   Visibility="{Binding Path=ViewPath, Converter={StaticResource EmptyStringToCollapsedConverter}}"
                                   Width="Auto"
                                   FontFamily="Consolas"
                                   Margin="0,0,4,0" />
                        <TextBlock Text="{Binding Path=NodeLabel}"
                                   VerticalAlignment="Center"
                                   Visibility="{Binding Path=NodeLabel, Converter={StaticResource EmptyStringToCollapsedConverter}}"
                                   Width="Auto"
                                   FontFamily="Consolas"
                                   Margin="0,0,4,0" />
                        <Button Content="{Binding Path=Link}"
                                RenderTransformOrigin="0.5,0.5"
                                Margin="10,2,2,2"
                                VerticalAlignment="Center"
                                Click="Button_Click"
                                Padding="4,0,4,0"
                                Visibility="{Binding Path=Link, Converter={StaticResource EmptyStringToCollapsedConverter}}"
                                Style="{StaticResource BorderlessButton}" />
                    </VirtualizingStackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <Grid Name ="ListLevelsDisplay" Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="15" />
            </Grid.ColumnDefinitions>
            
            <!-- Shows counts of all items in List -->
            
            <TextBlock Name="ListItems" Grid.Column="2" Margin="0,3,0,7" Foreground="Gray" FontStyle="Italic"
                       Visibility="{Binding IsCollection, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
            {<Run Foreground="DarkRed" Text="{Binding NumberOfItems}" />}
            </TextBlock>

            <!-- Shows list@level labels in List -->
            
            <ListView Name="listLevelsView" ItemsSource="{Binding Path= Levels}"
                      Grid.Column ="0" Margin="3,3,0,7" 
                      Background="Transparent"
                      Visibility="{Binding IsCollection, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                      BorderThickness="0">

                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"></StackPanel>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="9" FontFamily="Consolas">
                                <Run Foreground="Gray">@</Run>
                            </TextBlock>
                            <TextBlock Name="indivListLevel" FontFamily="Consolas" FontSize="9">
                                L<Run Foreground="Black" Text="{Binding Path=.}"></Run>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Grid>
</UserControl>