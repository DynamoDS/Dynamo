<UserControl x:Class="Dynamo.Controls.WatchTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:Dynamo.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ui="clr-namespace:Dynamo.UI"
             xmlns:viewModels="clr-namespace:Dynamo.ViewModels"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch"
             BorderBrush="Black"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="BorderlessButton" TargetType="{x:Type Button}">
                <Setter Property="Padding" Value="1" />
                <Setter Property="Background" Value="PaleGreen" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="border" Background="{TemplateBinding Background}">
                                <ContentPresenter Name="content"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="content" Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="content" Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX=".95" ScaleY=".95" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True" />
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Expander Button Style  -->
            <Style x:Key="ExpandCollapseToggleStyleWT" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="17"
                                  Height="13"
                                  Background="Transparent">
                                <Path x:Name="ExpandPath"
                                      Margin="0,2,-1,0"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Data="M0,0 L4.5,4.5 L9,0"
                                      Stroke="{StaticResource Blue300Brush}"
                                      Fill="Transparent"
                                      StrokeEndLineCap="Round"
                                      StrokeStartLineCap="Round"
                                      StrokeLineJoin="Round"
                                      StrokeThickness="2"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ExpandPath" Property="Data" Value="M-8,0 -4,4 L-8,8" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0,0,0,0"
                                           Opacity="0"
                                           Stroke="IndianRed"
                                           StrokeDashArray="1 2"
                                           StrokeThickness="5" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  TreeViewItem Control Style  -->
            <Style x:Key="WatchTreeViewItem" TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsNodeExpanded}" />

                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Padding" Value="2,0,0,0" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
                <EventSetter Event="MouseLeftButtonUp" Handler="treeviewItem_MouseLeftButtonUp" />
                <EventSetter Event="KeyUp" Handler="treeviewItem_KeyUp" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid Name="TreeGrid" Background="Transparent">

                                <!--  Set Column and Row Definitions for Grid Panel  -->

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!--  Insert Toggle Button for Expander  -->

                                <ToggleButton x:Name="Expander"
                                              HorizontalAlignment="Center"
                                              Background="Transparent"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ExpandCollapseToggleStyleWT}"
                                              Visibility="{Binding IsTopLevel, Converter={StaticResource InverseBoolToVisibilityCollapsedConverter}}" />

                                <!--  Set Border for ListNode  -->

                                <Border Name="Bd"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="Left"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="True">

                                    <ContentPresenter x:Name="PART_Header"
                                                      MinWidth="20"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      ContentSource="Header" />
                                </Border>

                                <Grid Grid.Row="1" Grid.Column="0">

                                    <!--  Vertical line  -->

                                    <Rectangle x:Name="VerLn"
                                               Grid.RowSpan="2"
                                               Width="1"
                                               Margin="9,0,0,0"
                                               HorizontalAlignment="Center"
                                               Fill="Black"
                                               SnapsToDevicePixels="true"
                                               Stroke="#959595" />

                                    <!--  Draw Ellipse at the bottom of each vertical line  -->

                                    <Ellipse x:Name="LnEnd"
                                             Width="5"
                                             Height="5"
                                             Margin="8,0,0,0"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Bottom"
                                             Fill="#959595"
                                             SnapsToDevicePixels="True"
                                             Stroke="#959595" />

                                </Grid>

                                <!--  ItemPresenter (specified in the Template) will be replaced with whatever is specified in the ItemsPanelTemplate.  -->

                                <ItemsPresenter x:Name="ItemsHost"
                                                Grid.Row="1"
                                                Grid.Column="1" />
                            </Grid>


                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="VerLn" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="LnEnd" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="VerLn" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="LnEnd" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  ScrollViewer Control Style  -->
            <Style TargetType="ScrollViewer">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="12" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Corner"
                                           Grid.Row="1"
                                           Grid.Column="1"
                                           Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                        Grid.Row="0"
                                                        Grid.Column="0"
                                                        Margin="{TemplateBinding Padding}"
                                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                                        CanHorizontallyScroll="False"
                                                        CanVerticallyScroll="False"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           Background="Transparent"
                                           HorizontalAlignment="Left"
                                           Margin="-4,6,0,6"
                                           AutomationProperties.AutomationId="VerticalScrollBar"
                                           Cursor="Arrow"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           Minimum="0"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                           Grid.Row="1"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="2"
                                           Background="#3C3C3C"
                                           Margin="0,-6,0,-5"
                                           AutomationProperties.AutomationId="HorizontalScrollBar"
                                           Cursor="Arrow"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           Minimum="0"
                                           Orientation="Horizontal"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Name="inputGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TreeView Name="treeView1"
                  Background="#3C3C3C"
                  BorderBrush="{StaticResource PrimaryCharcoal200Brush}"
                  BorderThickness="0,0,0,1"
                  Margin="0,5,0,0"
                  ItemContainerStyle="{StaticResource WatchTreeViewItem}"
                  ItemsSource="{Binding Children}"
                  Opacity="1"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling">

            <TreeView.Style>
                <Style TargetType="TreeView">
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.Style>

            <TreeView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel>
                        <VirtualizingPanel.Style>
                            <Style TargetType="{x:Type VirtualizingPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsOneRowContent}" Value="True">
                                        <Setter Property="Margin" Value="-10,5,5,5" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsOneRowContent}" Value="False">
                                        <Setter Property="Margin" Value="5,5,5,5" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </VirtualizingPanel.Style>
                    </VirtualizingStackPanel>
                </ItemsPanelTemplate>
            </TreeView.ItemsPanel>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type viewModels:WatchViewModel}" ItemsSource="{Binding Path=Children}">
                    <VirtualizingStackPanel Width="Auto" Orientation="Horizontal">
                        <TextBlock x:Name="listIndex"
                                   Width="Auto"
                                   Margin="{Binding Path=IsCollection, Converter={StaticResource ListIndexMarginConverter}}"
                                   Padding="0,0,0,-1"
                                   VerticalAlignment="Center"
                                   Background="{Binding Path=IsCollection, Converter={StaticResource ListIndexBackgroundConverter}}"
                                   FontFamily="{StaticResource SourceCodePro}"
                                   FontStyle="Italic"
                                   LineHeight="12"
                                   LineStackingStrategy="BlockLineHeight"
                                   Text="{Binding Path=ViewPath}"
                                   Visibility="{Binding Path=ViewPath, Converter={StaticResource EmptyStringToCollapsedConverter}}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{StaticResource PrimaryCharcoal200Brush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Children.Count}" Value="0">
                                            <Setter Property="Foreground" Value="#4D4D4D" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Width="Auto"
                                   Margin="{Binding Path=IsTopLevel, Converter={StaticResource TopLevelLabelMarginConverter}}"
                                   VerticalAlignment="Center"
                                   Foreground="{StaticResource PrimaryCharcoal200Brush}"
                                   FontFamily="{StaticResource SourceCodePro}"
                                   Text="{Binding Path=NodeLabel}"
                                   Visibility="{Binding Path=NodeLabel, Converter={StaticResource EmptyStringToCollapsedConverter}}" />
                        <Button Margin="10,2,2,2"
                                Padding="4,0,4,0"
                                VerticalAlignment="Center"
                                Click="Button_Click"
                                Content="{Binding Path=Link}"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{StaticResource BorderlessButton}"
                                Visibility="{Binding Path=Link, Converter={StaticResource EmptyStringToCollapsedConverter}}" />
                    </VirtualizingStackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>

            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="{StaticResource Blue300}" />
            </TreeView.Resources>
        </TreeView>

        <Border Grid.Row="1"
                HorizontalAlignment="Stretch"
                BorderBrush="#D3D3D3"
                CornerRadius="0,0,2,2"
                BorderThickness="0">

            <Grid Name="ListLevelsDisplay" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="27" />
                    
                </Grid.RowDefinitions>

                <!--  Shows counts of all items in List  -->

                <TextBlock Name="ListItems"
                           Grid.Row="0"
                           Grid.Column="2"
                           Margin="0,0,13,2"
                           FontFamily="{StaticResource SourceCodePro}"
                           Foreground="#D3D3D3"
                           VerticalAlignment="Center"
                           Visibility="{Binding IsCollection, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                    {<Run Foreground="#F48686" Text="{Binding NumberOfItems}" />}</TextBlock>

                <!--  Shows list@level labels in List  -->

                <ListView Name="listLevelsView"
                          Grid.Row="0"
                          Grid.Column="0"
                          Margin="13,0,0,3"
                          VerticalAlignment="Center"
                          Background="Transparent"
                          BorderThickness="0"
                          Visibility="{Binding IsCollection, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Margin" Value="{Binding Path=., Converter={StaticResource LeftThicknessConverter}}" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter TextBlock.FontSize="10px" TextBlock.Foreground="#D3D3D3" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontFamily="{StaticResource SourceCodePro}" FontSize="10">
                                    <Run Foreground="#D3D3D3">@</Run>
                                </TextBlock>
                                <TextBlock Name="indivListLevel"
                                           FontFamily="{StaticResource SourceCodePro}"
                                           FontSize="10">
                                    L<Run Foreground="#D3D3D3" Text="{Binding Path=.}" />
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Thumb Name="resizeThumb"
                       Grid.Row="1"
                       Grid.Column="2"
                       Margin="3"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"
                       Cursor="SizeNWSE"
                       DragDelta="ThumbResizeThumbOnDragDeltaHandler"
                       Visibility="Hidden">
                    <Thumb.Template>
                        <ControlTemplate>
                            <Polygon Fill="#AFAFAF" Points="0,8 8,8 8,0" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </Grid>
        </Border>
    </Grid>
</UserControl>