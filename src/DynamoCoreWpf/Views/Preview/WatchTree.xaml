<UserControl x:Class="Dynamo.Controls.WatchTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              
             xmlns:viewModels="clr-namespace:Dynamo.ViewModels"
             xmlns:ui="clr-namespace:Dynamo.UI"
             mc:Ignorable="d" 
             d:DesignHeight="161" d:DesignWidth="410" 
             HorizontalAlignment="Stretch" 
             VerticalAlignment="Stretch" 
             BorderBrush="Black"
             MaxHeight="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="BorderlessButton" TargetType="{x:Type Button}">
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Background" Value="PaleGreen" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="border" Background="{TemplateBinding Background}">
                                <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="content" Property="RenderTransform" >
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="content" Property="RenderTransform" >
                                        <Setter.Value>
                                            <ScaleTransform ScaleX=".95" ScaleY=".95" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ExpandCollapseToggleStyle"
                   TargetType="ToggleButton">
                <Setter Property="Focusable"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="15"
                                  Height="13"
                                  Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="Collapsed">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                            Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="Expanded">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                            Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Path x:Name="Collapsed"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Margin="1,1,1,1"
                                      Data="M 4 0 L 8 4 L 4 8 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                    </Path.Fill>
                                </Path>
                                <Path x:Name="Expanded"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Margin="1,1,1,1"
                                      Data="M 0 4 L 8 4 L 4 8 Z"
                                      Visibility="Hidden">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded"
                        Value="{Binding IsNodeExpanded}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander"
                                              Style="{StaticResource ExpandCollapseToggleStyle}"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Border x:Name="Bd"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Grid.Column="1"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="PART_Header"
                                                      ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost"
                                                Grid.ColumnSpan="2"
                                                Grid.Column="1"
                                                Grid.Row="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded"
                                         Value="false">
                                    <Setter Property="Visibility"
                                            TargetName="ItemsHost"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="HasItems"
                                         Value="false">
                                    <Setter Property="Visibility"
                                            TargetName="Expander"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsSelected"
                                         Value="true">
                                    <Setter Property="Background"
                                            TargetName="Bd"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                                   Value="true" />
                                        <Condition Property="IsSelectionActive"
                                                   Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="Bd"
                                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <TreeView Name="treeView1"
                  ItemsSource="{Binding Children}"
                  Background="White" Opacity=".5"
                  BorderBrush="{x:Null}"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  SelectedItemChanged="TreeView1_OnSelectedItemChanged">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}"
                                          DataType="{x:Type viewModels:WatchViewModel}">
                    <VirtualizingStackPanel Orientation="Horizontal"
                                            Width="Auto">
                        <TextBlock Text="{Binding Path=ViewPath}"
                                   VerticalAlignment="Center"                                   
                                   Visibility="{Binding Path=ViewPath, Converter={StaticResource EmptyStringToCollapsedConverter}}"
                                   Width="Auto"
                                   FontFamily="Consolas" />
                        <TextBlock Text="{Binding Path=NodeLabel}"
                                   VerticalAlignment="Center"                                  
                                   Visibility="{Binding Path=NodeLabel, Converter={StaticResource EmptyStringToCollapsedConverter}}"
                                   Width="Auto"
                                   FontFamily="Consolas" />
                        <Button Content="{Binding Path=Link}"
                                RenderTransformOrigin="0.5,0.5"
                                Margin="10,2,2,2"
                                VerticalAlignment="Center"
                                Click="Button_Click"
                                Padding="4,2,4,2"
                                Visibility="{Binding Path=Link, Converter={StaticResource EmptyStringToCollapsedConverter}}"
                                Style="{StaticResource BorderlessButton}" />
                    </VirtualizingStackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>