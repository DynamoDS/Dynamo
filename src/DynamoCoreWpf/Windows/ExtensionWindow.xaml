<local:ModelessChildWindow x:Class="Dynamo.Wpf.Windows.ExtensionWindow"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                           xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                           xmlns:local="clr-namespace:Dynamo.Wpf.Windows"
                           xmlns:ui="clr-namespace:Dynamo.UI"
                           mc:Ignorable="d" 
                           d:DesignHeight="450" d:DesignWidth="800"
                           WindowStyle="None"
                           StateChanged="ExtensionWindow_StateChanged"
                           Loaded="ExtensionWindow_Loaded">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.MenuStyleDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="TitleBarButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="#FF888888" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#FF888888" />
                                    <Setter Property="Foreground" Value="#FFCCCCCC" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#FF888888" />
                                    <Setter Property="Foreground" Value="#FFCCCCCC" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                        <Setter Property="Margin" Value="6" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <!-- This border avoids window borders from getting cut when maximizing -->
    <Border Style="{StaticResource WindowMainPanelStyle}">
        <Grid Background="#FF444444">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- First row is just for the title bar -->
            <Image Grid.Column="0"
                   x:Name="iconImage"
                   Width="22"
                   Height="22"
                   Margin="4" />

            <TextBlock Grid.Column="1"
                       Margin="4 0 0 0"
                       VerticalAlignment="Center"
                       FontSize="14"
                       Foreground="#FFCCCCCC"
                       Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                <Setter Property="Foreground" Value="#FF888888" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Button Grid.Column="2"
                    Click="OnDockButtonClick"
                    Style="{StaticResource TitleBarButtonStyle}">
                <Path Width="46"
                      Height="32"
                      Data="M 24,12.5 H 27.5 V 19.5 H 20.5 V 16 M 17.5,9.5 23,15 M 18.5,14 23,14.5 M 22,10.5 22.5,15"
                      Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      StrokeThickness="1" />
            </Button>

            <Button Name="maximizeButton"
                    Grid.Column="3"
                    Click="OnMaximizeRestoreButtonClick"
                    Style="{StaticResource TitleBarButtonStyle}">
                <Path Width="46"
                      Height="32"
                      Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
                      Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      StrokeThickness="1" />
            </Button>

            <Button Name="restoreButton"
                    Grid.Column="3"
                    Click="OnMaximizeRestoreButtonClick"
                    Visibility="Collapsed"
                    Style="{StaticResource TitleBarButtonStyle}">
                <Path Width="46"
                      Height="32"
                      Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
                      Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      StrokeThickness="1" />
            </Button>

            <Button Grid.Column="4"
                    Click="OnCloseButtonClick"
                    Style="{StaticResource TitleBarButtonStyle}">
                <Path Width="46"
                      Height="32"
                      Data="M 18,11 27,20 M 18,20 27,11"
                      Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      StrokeThickness="1" />
            </Button>

            <!-- Second row is the actual content -->
            <ContentControl Grid.Row="1" Grid.ColumnSpan="5" x:Name="ExtensionContent"></ContentControl>
        </Grid>
    </Border>
</local:ModelessChildWindow>
