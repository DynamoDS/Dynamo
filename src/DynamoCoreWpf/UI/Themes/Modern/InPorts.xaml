<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dynui="clr-namespace:Dynamo.UI.Controls;assembly=DynamoCoreWpf"
                    xmlns:interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:ui="clr-namespace:Dynamo.UI;assembly=DynamoCoreWpf"
                    xmlns:viewModels="clr-namespace:Dynamo.ViewModels;assembly=DynamoCoreWpf"
                    xmlns:views="clr-namespace:Dynamo.UI.Views;assembly=DynamoCoreWpf">
    <ResourceDictionary.MergedDictionaries>
        <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
        <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
        <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
    </ResourceDictionary.MergedDictionaries>
    <DataTemplate DataType="{x:Type viewModels:InPortViewModel}">
        <!--  Grid that contains the entire port  -->
        <Grid Name="mainGrid" 
              HorizontalAlignment="Stretch"
              Height="35px">
            <!--
                The main border shows rounded edges and changes color according to multiple conditions
                This logic is defined in the ViewModel. None of the elements in this Border are interactive, so they
                can live in the lowest level of Z-Order
            -->
            <Border x:Name="mainBorder"
                    SnapsToDevicePixels="True"
                    Height="29px"
                    Background="{Binding PortBackgroundColor, UpdateSourceTrigger=PropertyChanged}"
                    BorderBrush="{Binding PortBorderBrushColor, UpdateSourceTrigger=PropertyChanged}"
                    CornerRadius="0,11,11,0"
                    BorderThickness="0,1,1,1">
                <!--  DockPanel that positions the visible port name and the UseLevelArrow  -->
                <DockPanel x:Name="mainDockPanel" FlowDirection="LeftToRight">
                    <Grid Name="portNameGrid"
                          DockPanel.Dock="Left"
                          IsEnabled="{Binding Path=IsEnabled}"
                          IsHitTestVisible="True"
                          Height="{Binding Path=Height}"
                          ToolTipService.ShowDuration="60000">
                        <Rectangle Fill="Transparent"
                                   IsHitTestVisible="{Binding IsHitTestVisible}"
                                   SnapsToDevicePixels="True">
                            <interactivity:Interaction.Triggers>
                                <views:HandlingEventTrigger EventName="MouseEnter">
                                    <interactivity:InvokeCommandAction Command="{Binding Path=MouseEnterCommand}" CommandParameter="{Binding}" />
                                </views:HandlingEventTrigger>
                                <views:HandlingEventTrigger EventName="MouseLeave">
                                    <interactivity:InvokeCommandAction Command="{Binding Path=MouseLeaveCommand}" CommandParameter="{Binding}" />
                                </views:HandlingEventTrigger>
                                <views:HandlingEventTrigger EventName="MouseLeftButtonDown">
                                    <interactivity:InvokeCommandAction Command="{Binding Path=MouseLeftButtonDownCommand}" CommandParameter="{Binding}" />
                                </views:HandlingEventTrigger>
                            </interactivity:Interaction.Triggers>
                            <Rectangle.Margin>
                                <MultiBinding Converter="{StaticResource SnapRegionMarginConverter}">
                                    <Binding ElementName="portNameTb" Path="ActualWidth" />
                                    <Binding Path="PortModel" />
                                </MultiBinding>
                            </Rectangle.Margin>
                        </Rectangle>
                        <TextBlock Name="portNameTb"
                                   Width="Auto"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   FontFamily="{StaticResource ArtifaktElementRegular}"
                                   FontSize="12px"
                                   FontWeight="Medium"
                                   Foreground="#DCDCDC"
                                   IsHitTestVisible="False"
                                   Margin="13,0,10,5"
                                   Text="{Binding Path=PortName}">
                        </TextBlock>
                    </Grid>
                    <Grid Width="50"
                          DockPanel.Dock="Left"
                          Visibility="{Binding Path=UseLevels, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                    <Grid Name="useLevelArrowGrid"
                          HorizontalAlignment="Right"
                          Height="{Binding Path=Height}"
                          Margin="0,1,6,0"
                          Visibility="{Binding Path=UseLevelVisibility}">
                        <Label x:Name="useLevelArrow"
                               Height="{Binding Path=Height}"
                               Margin="0,0,0,8"
                               Padding="0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               HorizontalContentAlignment="Center"
                               VerticalContentAlignment="Center"
                               Content="&gt;"
                               FontSize="16px"
                               FontWeight="Medium"
                               Foreground="{StaticResource PrimaryCharcoal200Brush}"
                               IsHitTestVisible="False"/>
                    </Grid>
                </DockPanel>
            </Border>
            <!--  Marker that appears to the left side of an input port  -->
            <Rectangle x:Name="portValueMarker"
                       Width="6px"
                       Height="29px"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Fill="{Binding PortValueMarkerColor, UpdateSourceTrigger=PropertyChanged}"
                       SnapsToDevicePixels="True">
            </Rectangle>
            <!--
                Interactive overlay for the port, highlights the port on MouseOver and
                contains MouseClick event handling and ToolTip logic. Since the overlay is interactive, it needs to
                live higher up in the Z-Order than the non-interactive elements in the mainBorder for MouseOver and
                MouseClick events to fire.
            -->
            <Border x:Name="mainBorderHighlightOverlay"
                    BorderBrush="Transparent"
                    Opacity="0.2"
                    CornerRadius="0,11,11,0"
                    BorderThickness="0,1,1,1"
                    Height="29px"
                    SnapsToDevicePixels="True">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <interactivity:Interaction.Triggers>
                    <!--  Bind Connect command to left click  -->
                    <views:HandlingEventTrigger EventName="MouseLeftButtonDown">
                        <interactivity:InvokeCommandAction Command="{Binding Path=ConnectCommand}" />
                    </views:HandlingEventTrigger>
                </interactivity:Interaction.Triggers>

                <Border.ToolTip>
                    <dynui:DynamoToolTip AttachmentSide="Left" Style="{DynamicResource ResourceKey=SLightToolTip}">
                        <Grid>
                            <TextBlock MaxWidth="320"
                                       Text="{Binding Path=ToolTipContent}"
                                       TextWrapping="Wrap" />
                        </Grid>
                    </dynui:DynamoToolTip>
                </Border.ToolTip>

                <!--  Bind NodeAutoComplete to double left click  -->
                <Border.InputBindings>
                    <MouseBinding Command="{Binding Path=NodeAutoCompleteCommand}" MouseAction="LeftDoubleClick" />
                </Border.InputBindings>

                <!--
                    We could have changed the Grid opacity directly here but didn't
                    The reason is that if the opacity of the Grid is modified, the
                    internal text box will also appear semi-transparent. This is why an
                    intermediary Border is required just for mouse-over highlighting.
                -->

                <!--
                    Port is contained in another rectangle to ensure that hit area is extended outside the grid.
                    Minimum Width is specified on the rectangle, rather than the grid. Otherwise, if the port's width is less than
                    the grid's width, the outside rectangle is shrinked to fit the grid. Port snapping cannot occur in that case
                    as no mouse events are generated.This happens only for codeblock node.
                -->
            </Border>
            <!--
                Contains the interactive elements which need to have the highest-level of Z-Order so that they
                may be interacted with *above* the mainBorderHighlightOverlay layer.
                This is the UseLevelsSpinner and UseLevelsControl.
            -->
            <DockPanel Name="interactionControlsDockPanel"
                       Height="29px"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Center"
                       FlowDirection="LeftToRight"
                       IsHitTestVisible="True"
                       Visibility="{Binding Path=UseLevelVisibility}">
                <Rectangle x:Name="useLevelArrowHighlightOverlay"
                           Width="15"
                           Height="15px"
                           HorizontalAlignment="Right"
                           DockPanel.Dock="Right"
                           IsHitTestVisible="True"
                           Margin="3,0,5,0">
                    <!--  Bind InPortContextMenu to left click  -->
                    <Rectangle.InputBindings>
                        <MouseBinding Command="{Binding Path=NodeInPortContextMenuCommand}" MouseAction="LeftClick" />
                    </Rectangle.InputBindings>
                    <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" Value="#E5E2DE" />
                                    <Setter Property="Opacity" Value="0.3" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Fill" Value="#E5E2DE" />
                                    <Setter Property="Opacity" Value="0.0" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
                <TextBlock Name="fakePortNameTb"
                           Width="Auto"
                           Margin="13,0,10,5"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           DockPanel.Dock="Left"
                           FontFamily="{StaticResource ArtifaktElementRegular}"
                           FontSize="12px"
                           FontWeight="Medium"
                           Foreground="Transparent"
                           IsHitTestVisible="False"
                           Opacity="0.4"
                           Style="{StaticResource SZoomFadeText}"
                           Text="{Binding Path=PortName}" />
                <dynui:UseLevelSpinner x:Name="useLevelControl"
                                       Width="50"
                                       Height="25"
                                       Margin="0,0,0,0"
                                       Background="{StaticResource DarkGreyBrush}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       DockPanel.Dock="Right"
                                       KeepListStructure="{Binding Path=ShouldKeepListStructure}"
                                       Level="{Binding Path=Level, Mode=TwoWay}"
                                       Visibility="{Binding UseLevelSpinnerVisible, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>
        </Grid>
    </DataTemplate>
</ResourceDictionary>