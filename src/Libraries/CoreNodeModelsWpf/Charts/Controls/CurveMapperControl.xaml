    
<UserControl
    x:Class="CoreNodeModelsWpf.Charts.Controls.CurveMapperControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:charts="clr-namespace:CoreNodeModelsWpf.Charts"
    xmlns:configuration="clr-namespace:Dynamo.Configuration;assembly=DynamoCore"
    xmlns:converters="clr-namespace:CoreNodeModelsWpf.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CoreNodeModelsWpf.Charts.Controls"
    xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:Dynamo.Wpf.Properties"
    xmlns:ui="clr-namespace:Dynamo.UI;assembly=DynamoCoreWpf"
    Width="300"
    Height="340"
    MinWidth="310"
    MinHeight="340"
    d:DataContext="{d:DesignInstance local:CurveMapperControl}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.LiveChartsDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <!--  Main content of CurveMapper  -->
        <Grid
            x:Name="MainGrid"
            MinWidth="300"
            MinHeight="340">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />                
                <!--  graph canvas  -->
                <RowDefinition Height="35" />               
                <!--  x values & x label  -->
                <RowDefinition Height="55" />               
                <!--  graph types dropdown  -->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />             
                <!--  y values & y label  -->
                <ColumnDefinition Width="*" />              
                <!--  graph canvas  -->
                <ColumnDefinition Width="20" />             
                <!--  reset button  -->
            </Grid.ColumnDefinitions>

            <!--  Graph canvas  -->
            <Canvas
                x:Name="GraphCanvas"
                Grid.Row="0"
                Grid.Column="1"
                Width="{Binding DynamicCanvasSize, Mode=TwoWay}"
                Height="{Binding DynamicCanvasSize, Mode=TwoWay}"
                MinWidth="240"
                MinHeight="240"
                Margin="10,0,0,0"
                Background="Transparent" PreviewMouseLeftButtonUp="GraphCanvas_PreviewMouseLeftButtonUp" />

            <!--  X values  -->
            <!--  TODO: Create TextBlock styles  -->
            <Grid Grid.Row="1" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="15" />
                </Grid.RowDefinitions>

                <TextBlock
                    x:Name="minLimitXLabel"
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    FontFamily="{StaticResource ArtifaktElementRegular}"
                    FontSize="11"
                    Foreground="#979797"
                    Text="{Binding MinLimitX}" />

                <TextBlock
                    x:Name="midXLabel"
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="5,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    FontFamily="{StaticResource ArtifaktElementRegular}"
                    FontSize="11"
                    Foreground="#979797"
                    Text="{Binding MidValueX}" />

                <TextBlock
                    x:Name="maxLimitXLabel"
                    Grid.Row="0"
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    FontFamily="{StaticResource ArtifaktElementRegular}"
                    FontSize="11"
                    Foreground="#979797"
                    Text="{Binding MaxLimitX}" />

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    FontFamily="{StaticResource ArtifaktElementRegular}"
                    FontSize="12"
                    Foreground="#979797"
                    Text="x" />
            </Grid>

            <!--  Y values  -->
            <!--  column width when the values are high?  -->
            <!--  TODO: Create TextBlock styles  -->
            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15" />
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock
                    x:Name="minLimitYLabel"
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Margin="0,0,0,5"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    FontFamily="{StaticResource ArtifaktElementRegular}"
                    FontSize="11"
                    Foreground="#979797"
                    Text="{Binding MinLimitY}" />

                <TextBlock
                    x:Name="midYLabel"
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource ArtifaktElementRegular}"
                    FontSize="11"
                    Foreground="#979797"
                    Text="{Binding MidValueY}" />

                <TextBlock
                    x:Name="maxLimitYLabel"
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    FontFamily="{StaticResource ArtifaktElementRegular}"
                    FontSize="11"
                    Foreground="#979797"
                    Text="{Binding MaxLimitY}" />

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource ArtifaktElementRegular}"
                    FontSize="12"
                    Foreground="#979797"
                    Text="y">
                    <TextBlock.RenderTransform>
                        <RotateTransform Angle="-90" />
                    </TextBlock.RenderTransform>
                </TextBlock>
            </Grid>
            <!--  Graph type dropdown  -->
            <!--  TODO: Text for localization  -->
            <Grid
                Grid.Row="2"
                Grid.Column="1"
                HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource ArtifaktElementRegular}"
                    FontSize="14px"
                    Foreground="{StaticResource DefaultFontColorBrush}"
                    Text="Curve Type" />
                <ComboBox
                    Grid.Column="1"
                    MinWidth="160"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    ItemsSource="{converters:EnumBindingSource charts:GraphTypes}"
                    SelectedItem="{Binding SelectedGraphType}">
                    <!--  Custom Style with DataTrigger  -->
                    <ComboBox.Style>
                        <Style BasedOn="{StaticResource RefreshComboBox}" TargetType="ComboBox">
                            <Style.Triggers>
                                <!--  Trigger to check if SelectedItem is 'Empty'  -->
                                <DataTrigger Binding="{Binding SelectedItem, RelativeSource={RelativeSource Self}}" Value="Empty">
                                    <Setter Property="Foreground" Value="#AFAFAF" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </Grid>
            <StackPanel Orientation="Vertical" Grid.Column="2" VerticalAlignment="Bottom">
                <!--  Lock button  -->
                <Button x:Name="LockButton"
                        Width="20"
                        Height="20"   Margin="0,0,0,0"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True"
                        Click="LockButton_Click">
                    <Button.ToolTip>                        
                        <ToolTip x:Name="lockToolTip"
                                 Content="{x:Static p:CoreNodeModelWpfResources.CurveMapperLockButtonToolTip}"
                                 Style="{StaticResource GenericToolTipLight}" />                        
                    </Button.ToolTip>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid HorizontalAlignment="Right">
                                <Image x:Name="buttonImage"
                                       Width="16"
                                       Height="16"
                                       Source="/DynamoCoreWpf;component/UI/Images/unlock_dafault_16px.png"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Locked">
                                    <Setter TargetName="buttonImage" Property="Source" Value="/DynamoCoreWpf;component/UI/Images/lock_dafault_16px.png"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Tag" Value="Unlocked" />
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="buttonImage" Property="Source" Value="/DynamoCoreWpf;component/UI/Images/unlock_hover_16px.png"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Tag" Value="Locked" />
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="buttonImage" Property="Source" Value="/DynamoCoreWpf;component/UI/Images/lock_hover_16px.png"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                
                <!--  Reset button  -->
                <Button Width="20"
                        Height="20"
                        Margin="0,0,0,15"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Click="ResetButton_Click"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True"
                        Style="{StaticResource SButtonWithShapeIcon}">
                    <Button.ToolTip>
                        <ToolTip Content="{x:Static p:CoreNodeModelWpfResources.CurveMapperResetButtonToolTip}"
                                 Style="{StaticResource GenericToolTipLight}" />
                    </Button.ToolTip>
                    <Button.Resources>
                        <Image x:Key="Shape"
                               Width="16"
                               Height="16"
                               Source="/DynamoCoreWpf;component/UI/Images/reset.png" />
                        <Image x:Key="HighlightShape"
                               Width="16"
                               Height="16"
                               Source="/DynamoCoreWpf;component/UI/Images/reset_hover.png" />
                    </Button.Resources>
                </Button>
            </StackPanel>            
        </Grid>
        <Thumb
            Name="resizeThumb"
            Grid.Row="1"
            Margin="0,0,-60,-25"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Cursor="SizeNWSE"
            DragDelta="ThumbResizeThumbOnDragDeltaHandler"
            Style="{StaticResource ChartsThumb}">
            <Thumb.ToolTip>
                <ToolTip Content="{x:Static p:CoreNodeModelWpfResources.ResizeThumbToolTip}"
                         Style="{StaticResource GenericToolTipLight}" />
            </Thumb.ToolTip>
        </Thumb>
    </Grid>
</UserControl>
