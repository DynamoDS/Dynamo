<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChartsBarChartDescription" xml:space="preserve">
    <value>创建新的条形图</value>
  </data>
  <data name="ChartsBarChartSearchTags" xml:space="preserve">
    <value>bar;barchart</value>
  </data>
  <data name="ChartsBarChartLabelsDataPortToolTip" xml:space="preserve">
    <value>条形图类别的标签列表。

List&lt;string&gt;</value>
  </data>
  <data name="ChartsBarChartValuesDataPortToolTip" xml:space="preserve">
    <value>用于为每个类别中的条形提供值的列表。

List&lt;var&gt;</value>
  </data>
  <data name="ChartsBarChartColorsDataPortToolTip" xml:space="preserve">
    <value>每个条形图类别的颜色列表。

List&lt;color&gt;</value>
  </data>
  <data name="ChartsBarChartLabelsValuesDataPortToolTip" xml:space="preserve">
    <value>包含 label:value 值对的词典

Dictionary&lt;string, double&gt;</value>
  </data>
  <data name="ChartsBasicLineChartDescription" xml:space="preserve">
    <value>创建新的基本折线图</value>
  </data>
  <data name="ChartsBasicLineChartSearchTags" xml:space="preserve">
    <value>index;indexvalue;indexvaluelineplot</value>
  </data>
  <data name="ChartsBasicLineChartLabelsDataPortToolTip" xml:space="preserve">
    <value>每行要打印的字符串标签列表。

List&lt;string&gt;</value>
  </data>
  <data name="ChartsBasicLineChartValuesDataPortToolTip" xml:space="preserve">
    <value>一列列表，每个列表都包含要相对于 X 轴值打印的双精度值。

List&lt;List&lt;double&gt;&gt;</value>
  </data>
  <data name="ChartsBasicLineChartColorsDataPortToolTip" xml:space="preserve">
    <value>每行的颜色列表。

List&lt;color&gt;</value>
  </data>
  <data name="ChartsBasicLineChartLabelsValuesDataPortToolTip" xml:space="preserve">
    <value>包含 label:value 键对的词典

Dictionary&lt;string, List&lt;double&gt;&gt;</value>
  </data>
  <data name="ChartsHeatSeriesDescription" xml:space="preserve">
    <value>创建热序列图</value>
  </data>
  <data name="ChartsHeatSeriesSearchTags" xml:space="preserve">
    <value>heat;heatseries;heatseriesplot</value>
  </data>
  <data name="ChartsHeatSeriesXLabelsDataPortToolTip" xml:space="preserve">
    <value>X 轴的字符串标签列表。

List&lt;string&gt;</value>
  </data>
  <data name="ChartsHeatSeriesYLabelsDataPortToolTip" xml:space="preserve">
    <value>Y 轴的字符串标签列表。

List&lt;string&gt;</value>
  </data>
  <data name="ChartsHeatSeriesValuesDataPortToolTip" xml:space="preserve">
    <value>一列列表，每个列表都包含表示列中项目的双精度值。

List&lt;List&lt;double&gt;&gt;</value>
  </data>
  <data name="ChartsHeatSeriesColorsDataPortToolTip" xml:space="preserve">
    <value>每个条形图类别的颜色列表。

List&lt;color&gt;</value>
  </data>
  <data name="ChartsHeatSeriesLabelsValuesDataPortToolTip" xml:space="preserve">
    <value>包含 label:value 键对的词典

Dictionary&lt;string, Dictionary&lt;string, double&gt;&gt;</value>
  </data>
  <data name="ChartsPieChartDescription" xml:space="preserve">
    <value>创建新的饼图</value>
  </data>
  <data name="ChartsPieChartSearchTags" xml:space="preserve">
    <value>pie;piechart</value>
  </data>
  <data name="ChartsPieChartLabelsDataPortToolTip" xml:space="preserve">
    <value>饼图中每个分段的字符串标签列表。

List&lt;string&gt;</value>
  </data>
  <data name="ChartsPieChartValuesDataPortToolTip" xml:space="preserve">
    <value>双精度值列表，用于为饼图的每个分段提供值。

List&lt;double&gt;</value>
  </data>
  <data name="ChartsPieChartColorsDataPortToolTip" xml:space="preserve">
    <value>饼图每个分段的颜色列表。

List&lt;color&gt;</value>
  </data>
  <data name="ChartsPieChartLabelsValuesDataPortToolTip" xml:space="preserve">
    <value>包含 label:value 键对的词典

Dictionary&lt;string, double&gt;</value>
  </data>
  <data name="ChartsScatterPlotDescription" xml:space="preserve">
    <value>创建散点图</value>
  </data>
  <data name="ChartsScatterPlotSearchTags" xml:space="preserve">
    <value>scatter;scatterplot</value>
  </data>
  <data name="ChartsScatterPlotLabelsDataPortToolTip" xml:space="preserve">
    <value>要打印的每组点的字符串标签列表。

List&lt;string&gt;</value>
  </data>
  <data name="ChartsScatterPlotXLabelsDataPortToolTip" xml:space="preserve">
    <value>每个列表都包含表示 x 坐标的双精度值。

List&lt;List&lt;double&gt;&gt;</value>
  </data>
  <data name="ChartsScatterPlotYLabelsDataPortToolTip" xml:space="preserve">
    <value>一列列表，每个列表都包含表示 y 坐标的双精度值。

List&lt;List&lt;double&gt;&gt;</value>
  </data>
  <data name="ChartsScatterPlotColorsDataPortToolTip" xml:space="preserve">
    <value>每组点的颜色列表。

List&lt;color&gt;</value>
  </data>
  <data name="ChartsScatterPlotLabelsValuesDataPortToolTip" xml:space="preserve">
    <value>包含 label:value 键对的词典

Dictionary&lt;string, List&lt;List&lt;double&gt;&gt;&gt;</value>
  </data>
  <data name="ChartsXYLineChartDescription" xml:space="preserve">
    <value>创建新的 XY 线图</value>
  </data>
  <data name="ChartsXYLineChartSearchTags" xml:space="preserve">
    <value>lineplot;xylineplot</value>
  </data>
  <data name="ChartsXYLineChartLabelsDataPortToolTip" xml:space="preserve">
    <value>每行要打印的字符串标签列表

List&lt;string&gt;</value>
  </data>
  <data name="ChartsXYLineChartXLabelsDataPortToolTip" xml:space="preserve">
    <value>一列列表，每个列表都包含表示直线中每个点的 x 坐标的双精度值。

List&lt;List&lt;double&gt;&gt;</value>
  </data>
  <data name="ChartsXYLineChartYLabelsDataPortToolTip" xml:space="preserve">
    <value>一列列表，每个列表都包含表示直线中每个点的 x 坐标的双精度值。

List&lt;List&lt;double&gt;&gt;</value>
  </data>
  <data name="ChartsXYLineChartColorsDataPortToolTip" xml:space="preserve">
    <value>线条图中每行的颜色列表。

List&lt;color&gt;</value>
  </data>
  <data name="ChartsXYLineChartLabelsValuesDataPortToolTip" xml:space="preserve">
    <value>包含 label:value 键对的词典

Dictionary&lt;string, List&lt;List&lt;double&gt;&gt;&gt;</value>
  </data>
  <data name="ColorPaletteUIAdvancedButtonHeader" xml:space="preserve">
    <value>高级</value>
  </data>
  <data name="ColorPaletteUIRecentColors" xml:space="preserve">
    <value>最近使用的颜色</value>
  </data>
  <data name="ColorPaletteUIStandardButtonHeader" xml:space="preserve">
    <value>标准</value>
  </data>
  <data name="ColorPaletteUIStandardColors" xml:space="preserve">
    <value>标准颜色</value>
  </data>
  <data name="DateTimeInputToolTip" xml:space="preserve">
    <value>输入时间和日期格式 'MMMM dd, yyyy h:mm tt'</value>
  </data>
  <data name="LblDisplay" xml:space="preserve">
    <value>显示</value>
  </data>
  <data name="LblValue" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="ProvideDefaultColorsWarningMessage" xml:space="preserve">
    <value>使用默认颜色。要定义自定义颜色，请提供相同数量的颜色和标签输入。</value>
  </data>
  <data name="ResizeThumbToolTip" xml:space="preserve">
    <value>拖动以修改图表的大小</value>
  </data>
  <data name="GateClose" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="GateOpen" xml:space="preserve">
    <value>打开</value>
  </data>
</root>