//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynamoMSOffice.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DynamoMSOffice.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a new Worksheet to a Workbook with a given name.
        ///
        ///This node requires Microsoft Excel to be installed..
        /// </summary>
        public static string AddExcelWorksheetToWorkbookDescription {
            get {
                return ResourceManager.GetString("AddExcelWorksheetToWorkbookDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the non-empty range of Cell data from an Excel Worksheet.
        ///
        ///This node requires Microsoft Excel to be installed..
        /// </summary>
        public static string GetDataFromExcelWorksheetDescription {
            get {
                return ResourceManager.GetString("GetDataFromExcelWorksheetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets the first Worksheet in an Excel Workbook with the given name.
        ///
        ///This node requires Microsoft Excel to be installed..
        /// </summary>
        public static string GetExcelWorksheetByNameDescription {
            get {
                return ResourceManager.GetString("GetExcelWorksheetByNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the list of Worksheets from an Excel Workbook.
        ///
        ///This node requires Microsoft Excel to be installed..
        /// </summary>
        public static string GetWorksheetsFromExcelWorkbookDescription {
            get {
                return ResourceManager.GetString("GetWorksheetsFromExcelWorkbookDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new Excel Workbook.
        /// </summary>
        public static string NewExcelWorkBookPortDataOutputToolTip {
            get {
                return ResourceManager.GetString("NewExcelWorkBookPortDataOutputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new Excel Workbook object.
        ///
        ///This node requires Microsoft Excel to be installed..
        /// </summary>
        public static string NewExelWorkbookDescription {
            get {
                return ResourceManager.GetString("NewExelWorkbookDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens an Excel file and returns the Workbook inside.  If the filename does not exist, returns null.  
        ///
        ///This node requires Microsoft Excel to be installed..
        /// </summary>
        public static string OpenExelWorkbookDescription {
            get {
                return ResourceManager.GetString("OpenExelWorkbookDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A single item, a 1d list, or a 2d list to write to the worksheet.
        /// </summary>
        public static string PortDataDataToolTip {
            get {
                return ResourceManager.GetString("PortDataDataToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Excel Workbook to save.
        /// </summary>
        public static string PortDataExcelWorkbookToSaveToolTip {
            get {
                return ResourceManager.GetString("PortDataExcelWorkbookToSaveToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Excel Worksheet to write to.
        /// </summary>
        public static string PortDataExcelWorkbookToWriteToToolTip {
            get {
                return ResourceManager.GetString("PortDataExcelWorkbookToWriteToToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modified excel worksheet.
        /// </summary>
        public static string PortDataModifiedWorkSheetToolTip {
            get {
                return ResourceManager.GetString("PortDataModifiedWorkSheetToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Worksheet newly added to the Workbook.
        /// </summary>
        public static string PortDataNewlyAddedWorkbookToolTip {
            get {
                return ResourceManager.GetString("PortDataNewlyAddedWorkbookToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of new Worksheet to add.
        /// </summary>
        public static string PortDataNewWorkSheetNameToolTip {
            get {
                return ResourceManager.GetString("PortDataNewWorkSheetNameToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column index to insert data..
        /// </summary>
        public static string PortDataStartColumnToolTip {
            get {
                return ResourceManager.GetString("PortDataStartColumnToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Row index to insert data..
        /// </summary>
        public static string PortDataStartRowToolTip {
            get {
                return ResourceManager.GetString("PortDataStartRowToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filename to save the Workbook to.
        /// </summary>
        public static string PortDataWorkbookFileNameToolTip {
            get {
                return ResourceManager.GetString("PortDataWorkbookFileNameToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The excel workbook.
        /// </summary>
        public static string PortDataWorkbookToolTip {
            get {
                return ResourceManager.GetString("PortDataWorkbookToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the worksheet to get.
        /// </summary>
        public static string PortDataWorkSheetNameToolTip {
            get {
                return ResourceManager.GetString("PortDataWorkSheetNameToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of worksheets.
        /// </summary>
        public static string PortDataWorkSheetsToolTip {
            get {
                return ResourceManager.GetString("PortDataWorkSheetsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The worksheet with the given name.
        /// </summary>
        public static string PortDataWorkSheetToolTip {
            get {
                return ResourceManager.GetString("PortDataWorkSheetToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The workbook opened from the file.
        /// </summary>
        public static string ReadExcelFilePortDataOutputToolTip {
            get {
                return ResourceManager.GetString("ReadExcelFilePortDataOutputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write an Excel Workbook to a file with the given filename.  
        ///
        ///This node requires Microsoft Excel to be installed..
        /// </summary>
        public static string SaveExcelWorkbookAsDescription {
            get {
                return ResourceManager.GetString("SaveExcelWorkbookAsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write data to a Cell of an Excel Worksheet.  
        ///
        ///This node requires Microsoft Excel to be installed..
        /// </summary>
        public static string WriteDataToExcelWorksheetDescription {
            get {
                return ResourceManager.GetString("WriteDataToExcelWorksheetDescription", resourceCulture);
            }
        }
    }
}
