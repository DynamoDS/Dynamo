<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BitmapOverflowError" xml:space="preserve">
    <value>Предоставленные данные цвета слишком велики для вписывания в границы изображения.</value>
  </data>
  <data name="EnumDateOfWeekFriday" xml:space="preserve">
    <value>Пятница</value>
  </data>
  <data name="EnumDateOfWeekMonday" xml:space="preserve">
    <value>Понедельник</value>
  </data>
  <data name="EnumDateOfWeekSaturday" xml:space="preserve">
    <value>Суббота</value>
  </data>
  <data name="EnumDateOfWeekSunday" xml:space="preserve">
    <value>Воскресенье</value>
  </data>
  <data name="EnumDateOfWeekThursday" xml:space="preserve">
    <value>Четверг</value>
  </data>
  <data name="EnumDateOfWeekTuesday" xml:space="preserve">
    <value>Вторник</value>
  </data>
  <data name="EnumDateOfWeekWednesday" xml:space="preserve">
    <value>Среда</value>
  </data>
  <data name="Exception_Deserialize_Bad_Format" xml:space="preserve">
    <value>Файл JSON для типа {0} был отформатирован неправильно</value>
  </data>
  <data name="Exception_Deserialize_Unsupported_Cache" xml:space="preserve">
    <value>Не удается загрузить сохраненные данные.</value>
  </data>
  <data name="Exception_Serialize_Depth_Unsupported" xml:space="preserve">
    <value>Глубина {0} превышает максимальную глубину {1} по пути {2}</value>
  </data>
  <data name="Exception_Serialize_DesignScript_Unsupported" xml:space="preserve">
    <value>Невозможно сериализовать этот тип геометрии.</value>
  </data>
  <data name="Exception_Serialize_Unsupported_Type" xml:space="preserve">
    <value>Не удается сохранить данные типа {0}.</value>
  </data>
  <data name="ExportToCSVObsolete" xml:space="preserve">
    <value>Используйте узел Data.ExportCSV</value>
  </data>
  <data name="FactorialNegativeInt" xml:space="preserve">
    <value>Входное значение Math.Factorial не может быть отрицательным.</value>
  </data>
  <data name="FactorialOverflow" xml:space="preserve">
    <value>Возвращаемое значение Math.Factorial находится вне диапазона.</value>
  </data>
  <data name="FindPointsWithinRadiusNullPointMessage" xml:space="preserve">
    <value>Необходимо указать центральную точку.</value>
  </data>
  <data name="FindPointsWithinRadiusSearchRadiusMessage" xml:space="preserve">
    <value>Радиус поиска не может быть равен нулю.</value>
  </data>
  <data name="FromObjectObsolete" xml:space="preserve">
    <value>Этот узел является устаревшим, используйте "String from Object"</value>
  </data>
  <data name="IntegerOverflow" xml:space="preserve">
    <value>Операция привела к переполнению целого числа. Результат может быть непредсказуемым.</value>
  </data>
  <data name="InvalidDestinationPathErrorMessage" xml:space="preserve">
    <value>В качестве пути для копирования используется недопустимый путь к конечному файлу.</value>
  </data>
  <data name="InvalidKeysErrorMessage" xml:space="preserve">
    <value>Один или несколько типов ввода не совпадают. Списки ключей не поддерживаются.</value>
  </data>
  <data name="InvalidKeysLenghtErrorMessage" xml:space="preserve">
    <value>Количество элементов не соответствует количеству ключей. href=InvalidKeysLenghtErrorMessage.html</value>
  </data>
  <data name="LoadImageFromPathObsolete" xml:space="preserve">
    <value>Используйте узлы File.FromPath -&gt;  Image.ReadFromFile</value>
  </data>
  <data name="MissingPythonEngine" xml:space="preserve">
    <value>Не удалось найти выбранный механизм Python</value>
  </data>
  <data name="ObjectArgumentExceptionMessage" xml:space="preserve">
    <value>Объект не может быть нулевым, введите соответствующее значение.</value>
  </data>
  <data name="QuadtreeConstructionEmptyUVSetMessage" xml:space="preserve">
    <value>Невозможно сформировать квадрадерево на основе пустого набора точек.</value>
  </data>
  <data name="QuadtreeConstructionNullUVSetMessage" xml:space="preserve">
    <value>Квадрадерево не может быть построено на основе пустого набора UV.</value>
  </data>
  <data name="ReadImageObsolete" xml:space="preserve">
    <value>Используйте узлы File.FromPath -&gt;  Image.ReadFromFile -&gt;  Image.Pixels</value>
  </data>
  <data name="ReadTextObsolete" xml:space="preserve">
    <value>Используйте узлы File.FromPath -&gt;  File.ReadText.</value>
  </data>
  <data name="StringRemoveCountOutOfRangeMessage" xml:space="preserve">
    <value>Количество выходит за пределы диапазона!</value>
  </data>
  <data name="StringRemoveStartIndexOutOfRangeMessage" xml:space="preserve">
    <value>StartIndex выходит за пределы диапазона!</value>
  </data>
  <data name="StringToNumberInvalidNumberMessage" xml:space="preserve">
    <value>Недопустимое число.</value>
  </data>
  <data name="WebRequestNullUrlMessage" xml:space="preserve">
    <value>URL-адрес не может быть пустым.</value>
  </data>
  <data name="WriteImageObsolete" xml:space="preserve">
    <value>Используйте узел Image.WriteToFile</value>
  </data>
  <data name="DefineDataUnexpectedInputExceptionMessage" xml:space="preserve">
    <value>Для этого узла ожидался ввод {0}, но получен ввод {1}. Введите ожидаемое входное значение или выберите новый тип в раскрывающемся меню узла.</value>
  </data>
  <data name="DefineDataUnsupportedCombinationOfDataTypesExceptionMessage" xml:space="preserve">
    <value>Этот узел не поддерживает комбинацию типов данных в текущем списке ввода {0}. Убедитесь, что список ввода содержит элементы одного типа данных или содержит элементы разных типов с общим родительским типом</value>
  </data>
  <data name="DefineDataUnsupportedDataTypeExceptionMessage" xml:space="preserve">
    <value>Этот узел не поддерживает текущий тип входных данных ({0}). Просмотрите поддерживаемые типы данных в раскрывающемся меню.</value>
  </data>
  <data name="DefineDataSupportedInputValueExceptionMessage" xml:space="preserve">
    <value>Входное значение должно быть одним значением или не являться вложенным списком.</value>
  </data>
</root>