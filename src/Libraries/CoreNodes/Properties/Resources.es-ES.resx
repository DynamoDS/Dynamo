<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BitmapOverflowError" xml:space="preserve">
    <value>Los datos de color proporcionados son demasiado grandes para que quepan en los límites de la imagen.</value>
  </data>
  <data name="EnumDateOfWeekFriday" xml:space="preserve">
    <value>Viernes</value>
  </data>
  <data name="EnumDateOfWeekMonday" xml:space="preserve">
    <value>Lunes</value>
  </data>
  <data name="EnumDateOfWeekSaturday" xml:space="preserve">
    <value>Sábado</value>
  </data>
  <data name="EnumDateOfWeekSunday" xml:space="preserve">
    <value>Domingo</value>
  </data>
  <data name="EnumDateOfWeekThursday" xml:space="preserve">
    <value>Jueves</value>
  </data>
  <data name="EnumDateOfWeekTuesday" xml:space="preserve">
    <value>Martes</value>
  </data>
  <data name="EnumDateOfWeekWednesday" xml:space="preserve">
    <value>Miércoles</value>
  </data>
  <data name="Exception_Deserialize_Bad_Format" xml:space="preserve">
    <value>El contenido json para el tipo {0} no presenta un formato correcto.</value>
  </data>
  <data name="Exception_Deserialize_Unsupported_Cache" xml:space="preserve">
    <value>No se pueden cargar los datos almacenados.</value>
  </data>
  <data name="Exception_Serialize_Depth_Unsupported" xml:space="preserve">
    <value>La profundidad {0} supera el valor máximo {1} en la ruta "{2}".</value>
  </data>
  <data name="Exception_Serialize_DesignScript_Unsupported" xml:space="preserve">
    <value>No se puede serializar este tipo de geometría.</value>
  </data>
  <data name="Exception_Serialize_Unsupported_Type" xml:space="preserve">
    <value>No se pueden almacenar datos del tipo {0}.</value>
  </data>
  <data name="ExportToCSVObsolete" xml:space="preserve">
    <value>Utilizar el nodo Data.ExportCSV en su lugar</value>
  </data>
  <data name="FactorialNegativeInt" xml:space="preserve">
    <value>El valor de entrada de Math.Factorial no puede ser negativo.</value>
  </data>
  <data name="FactorialOverflow" xml:space="preserve">
    <value>El valor de retorno de Math.Factorial está fuera de rango.</value>
  </data>
  <data name="FindPointsWithinRadiusNullPointMessage" xml:space="preserve">
    <value>Debe proporcionar un centro</value>
  </data>
  <data name="FindPointsWithinRadiusSearchRadiusMessage" xml:space="preserve">
    <value>El radio de búsqueda no puede ser cero</value>
  </data>
  <data name="FromObjectObsolete" xml:space="preserve">
    <value>Este nodo es obsoleto, utilice "String from Object"</value>
  </data>
  <data name="IntegerOverflow" xml:space="preserve">
    <value>La operación ha generado un desbordamiento de número entero. El resultado puede ser inesperado.</value>
  </data>
  <data name="InvalidDestinationPathErrorMessage" xml:space="preserve">
    <value>Ruta de archivo de destino no válida utilizada como ruta de copia.</value>
  </data>
  <data name="InvalidKeysErrorMessage" xml:space="preserve">
    <value>Uno o más tipos de entrada no coinciden. No se admiten listas como claves.</value>
  </data>
  <data name="InvalidKeysLenghtErrorMessage" xml:space="preserve">
    <value>El número de elementos no coincide con el número de claves. href=InvalidKeysLenghtErrorMessage.html</value>
  </data>
  <data name="LoadImageFromPathObsolete" xml:space="preserve">
    <value>Utiliza los nodos File.FromPath - &gt; Image.ReadFromFile en su lugar</value>
  </data>
  <data name="MissingPythonEngine" xml:space="preserve">
    <value>No se ha podido encontrar el motor de Python seleccionado</value>
  </data>
  <data name="ObjectArgumentExceptionMessage" xml:space="preserve">
    <value>El objeto no puede ser nulo; proporcione el valor adecuado.</value>
  </data>
  <data name="QuadtreeConstructionEmptyUVSetMessage" xml:space="preserve">
    <value>No se puede generar un árbol cuádruple a partir de un conjunto vacío de puntos</value>
  </data>
  <data name="QuadtreeConstructionNullUVSetMessage" xml:space="preserve">
    <value>No se puede generar un árbol cuádruple a partir de un conjunto nulo de UV</value>
  </data>
  <data name="ReadImageObsolete" xml:space="preserve">
    <value>Utiliza los nodos File.FromPath - &gt; Image.ReadFromFile - &gt; Image.Pixels en su lugar</value>
  </data>
  <data name="ReadTextObsolete" xml:space="preserve">
    <value>Utiliza los nodos File.FromPath - &gt; File.ReadText en su lugar.</value>
  </data>
  <data name="StringRemoveCountOutOfRangeMessage" xml:space="preserve">
    <value>El recuento está fuera de rango.</value>
  </data>
  <data name="StringRemoveStartIndexOutOfRangeMessage" xml:space="preserve">
    <value>El startIndex está fuera de rango.</value>
  </data>
  <data name="StringToNumberInvalidNumberMessage" xml:space="preserve">
    <value>No es un número válido.</value>
  </data>
  <data name="WebRequestNullUrlMessage" xml:space="preserve">
    <value>La URL no puede ser nula.</value>
  </data>
  <data name="WriteImageObsolete" xml:space="preserve">
    <value>Utiliza el nodo Image.WriteToFile en su lugar</value>
  </data>
  <data name="DefineDataUnexpectedInputExceptionMessage" xml:space="preserve">
    <value>Este nodo esperaba una entrada {0}, pero ha recibido una entrada {1}. Proporcione la entrada esperada o elija un nuevo tipo en el menú desplegable del nodo.</value>
  </data>
  <data name="DefineDataUnsupportedCombinationOfDataTypesExceptionMessage" xml:space="preserve">
    <value>Este nodo no admite la combinación de tipos de datos de la lista de entrada actual {0}. Asegúrese de que la lista de entrada contiene elementos del mismo tipo de datos o una mezcla de tipos con un tipo principal común.</value>
  </data>
  <data name="DefineDataUnsupportedDataTypeExceptionMessage" xml:space="preserve">
    <value>Este nodo no admite el tipo de datos de entrada actual ({0}). Consulte los tipos de datos admitidos en el menú desplegable.</value>
  </data>
  <data name="DefineDataSupportedInputValueExceptionMessage" xml:space="preserve">
    <value>La entrada debe ser un único valor o una lista no anidada.</value>
  </data>
  <data name="CurveMapperEqualMinMaxWarning" xml:space="preserve">
    <value>• Min and Max values must be different.</value>
  </data>
  <data name="CurveMapperInvalidCountWarning" xml:space="preserve">
    <value>• Values must be a list of numbers or a single number ≥ 2.</value>
  </data>
  <data name="CurveMapperInvalidCurveWarning" xml:space="preserve">
    <value>• Control points for the selected curve are not valid.</value>
  </data>
  <data name="CurveMapperInvalidXYFormatWarning" xml:space="preserve">
    <value>• X and Y inputs must be single numbers (not lists).</value>
  </data>
</root>