<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeletingPythonNodeWithOpenEditorMessage" xml:space="preserve">
    <value>La finestra dell'editor di script del nodo Python "{0}" è ancora aperta. Chiudere l'editor ed eliminare il nodo?</value>
  </data>
  <data name="DeletingPythonNodeWithOpenEditorTitle" xml:space="preserve">
    <value>Editor di script aperto</value>
  </data>
  <data name="EditHeader" xml:space="preserve">
    <value>Modifica...</value>
  </data>
  <data name="PythonMigrationWarningUriString" xml:space="preserve">
    <value>PythonNodeModels;PythonMigrationWarning.html</value>
  </data>
  <data name="PythonNodeContextMenuEngineSwitcher" xml:space="preserve">
    <value>Versione motore Python</value>
  </data>
  <data name="PythonNodeContextMenuEngineVersionThree" xml:space="preserve">
    <value>CPython3</value>
  </data>
  <data name="PythonNodeContextMenuEngineVersionTwo" xml:space="preserve">
    <value>IronPython2</value>
  </data>
  <data name="PythonNodeContextMenuLearnMoreButton" xml:space="preserve">
    <value>Ulteriori informazioni su Python</value>
  </data>
  <data name="PythonNodePortDataOutputToolTip" xml:space="preserve">
    <value>Risultato dello script Python</value>
  </data>
  <data name="PythonScriptDescription" xml:space="preserve">
    <value>Esegue uno script Python incorporato.</value>
  </data>
  <data name="PythonScriptEditorCaption" xml:space="preserve">
    <value>Modifica script Python...</value>
  </data>
  <data name="PythonScriptEditorCodeComment" xml:space="preserve">
    <value>Posizionare il codice sotto questa riga</value>
  </data>
  <data name="PythonScriptEditorImports" xml:space="preserve">
    <value>Carica librerie DesignScript e standard Python</value>
  </data>
  <data name="PythonScriptEditorInputComment" xml:space="preserve">
    <value>I valori di immissione per questo nodo verranno memorizzati come elenco nelle variabili IN.</value>
  </data>
  <data name="PythonScriptEditorMoreInfoButtonTooltip" xml:space="preserve">
    <value>Fornisce informazioni sulla conversione a Python 2 a Python 3.</value>
  </data>
  <data name="PythonScriptEditorOutputComment" xml:space="preserve">
    <value>Assegnare l'output dell'utente alla variabile OUT.</value>
  </data>
  <data name="PythonScriptEditorRevertButtonTooltip" xml:space="preserve">
    <value>Annulla le modifiche apportate all'editor di nodi Python corrente.</value>
  </data>
  <data name="PythonScriptEditorUndoButtonTooltip" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="PythonScriptEditorRedoButtonTooltip" xml:space="preserve">
    <value>Ripeti</value>
  </data>
  <data name="PythonScriptEditorZoomInButtonTooltip" xml:space="preserve">
    <value>Zoom avanti</value>
  </data>
  <data name="PythonScriptEditorZoomOutButtonTooltip" xml:space="preserve">
    <value>Zoom indietro</value>
  </data>
  <data name="PythonScriptEditorRunButton" xml:space="preserve">
    <value>Salva ed esegui</value>
  </data>
  <data name="PythonScriptEditorRunButtonTooltip" xml:space="preserve">
    <value>Salva lo script Python e lo esegue con il grafico.</value>
  </data>
  <data name="PythonScriptEditorSaveChangesButtonTooltip" xml:space="preserve">
    <value>Salva le modifiche apportate nell'editor dello script Python.</value>
  </data>
  <data name="PythonScriptFromStringDescription" xml:space="preserve">
    <value>Esegue uno script Python da una stringa.</value>
  </data>
  <data name="PythonStringPortDataScriptToolTip" xml:space="preserve">
    <value>Script Python da eseguire.</value>
  </data>
  <data name="PythonScriptEditorEngineDropdownTooltip" xml:space="preserve">
    <value>Consente di selezionare la versione/il motore di Python per eseguire lo script.</value>
  </data>
  <data name="PythonScriptEditorConvertTabsToSpacesButtonTooltip" xml:space="preserve">
    <value>Converti tabulazioni di rientro in spazi...</value>
  </data>
  <data name="PythonScriptEditorMigrationAssistantButtonTooltip" xml:space="preserve">
    <value>Converte lo script in Python 3.</value>
  </data>
  <data name="PythonSearchTags" xml:space="preserve">
    <value>IronPython;CPython;</value>
  </data>
  <data name="PythonScriptUnsavedChangesPromptText" xml:space="preserve">
    <value>Elaborazione ancora in corso. Se si esce ora, è possibile che le modifiche non salvate vadano perse</value>
  </data>
  <data name="PythonScriptUnsavedChangesPromptTitle" xml:space="preserve">
    <value>Uscire?</value>
  </data>
</root>