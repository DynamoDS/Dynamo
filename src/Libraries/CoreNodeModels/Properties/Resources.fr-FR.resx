<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AndDescription" xml:space="preserve">
    <value>Opérateur booléen ET: renvoie True si toutes les entrées sont vraies. Si l'une d'elles est fausse, renvoie False.</value>
  </data>
  <data name="ApplyPortDataFuncArgToolTip" xml:space="preserve">
    <value>Résultat de l'application.</value>
  </data>
  <data name="ApplyPortDataFuncToolTip" xml:space="preserve">
    <value>Fonction à appliquer.</value>
  </data>
  <data name="BooleanDescription" xml:space="preserve">
    <value>Permet une sélection entre True et False</value>
  </data>
  <data name="BooleanSelectorSearchTags" xml:space="preserve">
    <value>true;truth;false</value>
  </data>
  <data name="ColorRangeDescription" xml:space="preserve">
    <value>Renvoie une couleur en fonction d'un intervalle de couleurs</value>
  </data>
  <data name="ColorRangePortDataIndicesToolTip" xml:space="preserve">
    <value>Liste de valeurs comprises entre 0.0 et 1.0 qui définissent la position des couleurs d'entrée le long de l'intervalle</value>
  </data>
  <data name="ColorRangePortDataResultToolTip" xml:space="preserve">
    <value>Couleurs sélectionnées</value>
  </data>
  <data name="ColorRangePortDataColorsToolTip" xml:space="preserve">
    <value>Liste de couleurs à inclure dans l'intervalle</value>
  </data>
  <data name="ColorRangePortDataValueToolTip" xml:space="preserve">
    <value>Liste de valeurs comprises entre 0.0 et 1.0. Ces valeurs définissent les couleurs sélectionnées le long de l'intervalle de couleurs pour créer la liste de couleurs.</value>
  </data>
  <data name="CombinatorPortDataCombToolTip" xml:space="preserve">
    <value>Fonction à utiliser en tant que combinateur</value>
  </data>
  <data name="CombinatorPortDataResultToolTip" xml:space="preserve">
    <value>Listes combinées</value>
  </data>
  <data name="ComposePortDataFunc0ToolTip" xml:space="preserve">
    <value>Fonction 0</value>
  </data>
  <data name="ComposePortDataFunc1ToolTip" xml:space="preserve">
    <value>Fonction 1</value>
  </data>
  <data name="ComposePortDataResultToolTip" xml:space="preserve">
    <value>Fonction composée.</value>
  </data>
  <data name="CreateListPortDataIndex0ToolTip" xml:space="preserve">
    <value>Index de l'élément 0</value>
  </data>
  <data name="CreateListPortDataResultToolTip" xml:space="preserve">
    <value>Liste (type: var[]..[])</value>
  </data>
  <data name="DirectoryFromPathDescription" xml:space="preserve">
    <value>Crée un objet de répertoire à partir du chemin d'accès donné</value>
  </data>
  <data name="DirectoryNodeDescription" xml:space="preserve">
    <value>Permet de sélectionner un répertoire sur le système pour renvoyer son chemin d'accès</value>
  </data>
  <data name="DirectoryObjectNodeDescription" xml:space="preserve">
    <value>Crée un objet de répertoire à partir du chemin d'accès donné</value>
  </data>
  <data name="DirectoryObjectPortDataPathToolTip" xml:space="preserve">
    <value>Chemin d'accès au répertoire (type: chaîne)</value>
  </data>
  <data name="DirectoryObjectPortDataResultToolTip" xml:space="preserve">
    <value>Objet de répertoire.</value>
  </data>
  <data name="DirectoryPathDescription" xml:space="preserve">
    <value>Permet de sélectionner un répertoire sur le système pour renvoyer son chemin d'accès</value>
  </data>
  <data name="DoubleInputNodeDescription" xml:space="preserve">
    <value>Crée un nombre.</value>
  </data>
  <data name="DoubleSliderDescription" xml:space="preserve">
    <value>Génère des valeurs numériques</value>
  </data>
  <data name="DoubleSliderNodeDescription" xml:space="preserve">
    <value>Génère des valeurs numériques</value>
  </data>
  <data name="DropDownPortDataResultToolTip" xml:space="preserve">
    <value>{0} sélectionné</value>
  </data>
  <data name="FileFromPathDescription" xml:space="preserve">
    <value>Crée un objet de fichier à partir du chemin d'accès donné</value>
  </data>
  <data name="FilenameNodeDescription" xml:space="preserve">
    <value>Vous permet de sélectionner un fichier sur le système de façon à obtenir son nom de fichier</value>
  </data>
  <data name="FileObjectNodeDescription" xml:space="preserve">
    <value>Crée un objet de fichier à partir du chemin d'accès donné</value>
  </data>
  <data name="FileObjectPortDataPathToolTip" xml:space="preserve">
    <value>Chemin d'accès au fichier sous forme de chaîne.</value>
  </data>
  <data name="FileObjectPortDataResultToolTip" xml:space="preserve">
    <value>Objet de fichier</value>
  </data>
  <data name="FilePathDescription" xml:space="preserve">
    <value>Permet de sélectionner un fichier dans le système et renvoie son chemin</value>
  </data>
  <data name="FilterPortDataConditionToolTip" xml:space="preserve">
    <value>Fonction de filtre utilisée pour déterminer si un élément est filtré ou non</value>
  </data>
  <data name="FilterPortDataListToolTip" xml:space="preserve">
    <value>Liste à filtrer</value>
  </data>
  <data name="FilterPortDataResultInToolTip" xml:space="preserve">
    <value>Liste contenant tous les éléments "X", où condition(x) = True</value>
  </data>
  <data name="FilterPortDataResultOutToolTip" xml:space="preserve">
    <value>Liste contenant tous les éléments "x" où condition(x) = False</value>
  </data>
  <data name="FormulaDescription" xml:space="preserve">
    <value>Évalue des formules mathématiques avec NCalc</value>
  </data>
  <data name="FormulaPortDataResultToolTip" xml:space="preserve">
    <value>Résultat de la formule</value>
  </data>
  <data name="FromArrayPortDataArrayToolTip" xml:space="preserve">
    <value>Réseau d'objet à sérialiser</value>
  </data>
  <data name="FromArrayPortDataResultToolTip" xml:space="preserve">
    <value>Représentation sous forme de chaîne du réseau</value>
  </data>
  <data name="FromArraySearchTags" xml:space="preserve">
    <value>string.fromarray;tostring;2string;list2string;listtostring;array2string;arraytostring</value>
  </data>
  <data name="FromObjectPortDataObjToolTip" xml:space="preserve">
    <value>Objet à sérialiser</value>
  </data>
  <data name="FromObjectPortDataResultToolTip" xml:space="preserve">
    <value>Représentation sous forme de chaîne de l'objet</value>
  </data>
  <data name="FromObjectSearchTags" xml:space="preserve">
    <value>string.fromobject;tostring;2string;number2string;numbertostring</value>
  </data>
  <data name="FunctionApplyDescription" xml:space="preserve">
    <value>Renvoie le résultat d'une fonction avec les arguments donnés</value>
  </data>
  <data name="FunctionComposeDescription" xml:space="preserve">
    <value>Renvoie une seule fonction à partir de plusieurs fonctions</value>
  </data>
  <data name="IfDescription" xml:space="preserve">
    <value>Instruction conditionnelle</value>
  </data>
  <data name="IntegerSliderDescription" xml:space="preserve">
    <value>Génère des valeurs entières</value>
  </data>
  <data name="IntegerSliderNodeDescription" xml:space="preserve">
    <value>Génère des valeurs entières</value>
  </data>
  <data name="LegacyNodeDescription" xml:space="preserve">
    <value>Ce noeud est obsolète</value>
  </data>
  <data name="ListCartesianProductDescription" xml:space="preserve">
    <value>Applique un combinateur à chaque paire dans le produit cartésien de deux séquences</value>
  </data>
  <data name="ListCartesianProductSearchTags" xml:space="preserve">
    <value>cross product;crossreference;cross ref;</value>
  </data>
  <data name="ListCombineDescription" xml:space="preserve">
    <value>Applique un combinateur à chaque élément en deux séquences</value>
  </data>
  <data name="ListCombineSearchTags" xml:space="preserve">
    <value>map multiple;apply over lists;multiple inputs</value>
  </data>
  <data name="ListCreateDescription" xml:space="preserve">
    <value>Permet de créer une liste des entrées indiquées</value>
  </data>
  <data name="ListFilterDescription" xml:space="preserve">
    <value>Filtre les éléments d'une liste pour les y intégrer ou les en exclure en fonction d'une condition donnée. Si la condition est True, les éléments sont intégrés. Si la condition est False, ils sont exclus.</value>
  </data>
  <data name="ListFilterSearchTags" xml:space="preserve">
    <value>screen;dispatch;</value>
  </data>
  <data name="ListForEachDescription" xml:space="preserve">
    <value>Effectue un calcul sur chaque élément d'une liste. N'accumule pas les résultats.</value>
  </data>
  <data name="ListForEachSearchTags" xml:space="preserve">
    <value>apply function;void;</value>
  </data>
  <data name="ListLaceLongestDescription" xml:space="preserve">
    <value>Applique un combinateur à chaque paire résultant d'un entrelacement plus long des listes d'entrée. Le dernier élément de chaque liste est répété pour correspondre à la longueur de l'entrée la plus longue.</value>
  </data>
  <data name="ListLaceLongestSearchTags" xml:space="preserve">
    <value>repeat last;</value>
  </data>
  <data name="ListLaceShortestDescription" xml:space="preserve">
    <value>Applique un combinateur pour chaque paire résultant d'un entrelacement plus court des listes d'entrée. Toutes les listes sont tronquées en fonction de la longueur de l'entrée la plus courte.</value>
  </data>
  <data name="ListLaceShortestSearchTags" xml:space="preserve">
    <value>mix;trim end</value>
  </data>
  <data name="ListMapDescription" xml:space="preserve">
    <value>Applique une fonction sur tous les éléments d'une liste, générant une nouvelle liste à partir des résultats.</value>
  </data>
  <data name="ListMapSearchTags" xml:space="preserve">
    <value>function;applied;over list;do to each</value>
  </data>
  <data name="ListReduceDescription" xml:space="preserve">
    <value>Réduit une liste dans une nouvelle valeur en associant chaque élément à l'aide d'un résultat cumulé</value>
  </data>
  <data name="ListReduceSearchTags" xml:space="preserve">
    <value>accumulate;aggregate;fold</value>
  </data>
  <data name="ListScanDescription" xml:space="preserve">
    <value>Réduit une liste dans une nouvelle valeur en combinant chaque élément à un résultat accumulé, génère une liste des valeurs réduites successives.</value>
  </data>
  <data name="ListScanSearchTags" xml:space="preserve">
    <value>intermediate;maps;folds</value>
  </data>
  <data name="MapPortDataFxToolTip" xml:space="preserve">
    <value>Procédure permettant de mapper l'élément</value>
  </data>
  <data name="MapPortDataListToolTip" xml:space="preserve">
    <value>Liste à mapper.</value>
  </data>
  <data name="MapPortDataResultToolTip" xml:space="preserve">
    <value>Liste mappée de type: var[]..[]</value>
  </data>
  <data name="RangeDescription" xml:space="preserve">
    <value>Crée une séquence de nombres ou lettres dans l'intervalle donné</value>
  </data>
  <data name="SequenceDescription" xml:space="preserve">
    <value>Crée une série de numéros.</value>
  </data>
  <data name="OrDescription" xml:space="preserve">
    <value>Opérateur booléen OU: renvoie True si l'une des entrées est vraie. Si aucune entrée n'est vraie, renvoie False.</value>
  </data>
  <data name="PortDataFalseBlockToolTip" xml:space="preserve">
    <value>Renvoyé si le test a la valeur False</value>
  </data>
  <data name="PortDataImageToolTip" xml:space="preserve">
    <value>Image pour visualisation</value>
  </data>
  <data name="PortDataListToolTip" xml:space="preserve">
    <value>Liste</value>
  </data>
  <data name="PortDataOperandToolTip" xml:space="preserve">
    <value>Nbre booléen</value>
  </data>
  <data name="PortDataResultToolTip" xml:space="preserve">
    <value>Bloc de résultat produit</value>
  </data>
  <data name="PortDataTestBlockToolTip" xml:space="preserve">
    <value>Test booléen</value>
  </data>
  <data name="PortDataTrueBlockToolTip" xml:space="preserve">
    <value>Renvoyé si le test a la valeur True</value>
  </data>
  <data name="PortDataVariableToolTip" xml:space="preserve">
    <value>variable</value>
  </data>
  <data name="ReducePortDataReductorToolTip" xml:space="preserve">
    <value>Fonction de réducteur: accepte la réduction d'un élément de chaque liste, et la valeur cumulée actuelle, le résultat est la nouvelle valeur accumulée.</value>
  </data>
  <data name="ReducePortDataResultToolTip" xml:space="preserve">
    <value>Listes réduites (type: var[]..[])</value>
  </data>
  <data name="ReducePortDataSeedToolTip" xml:space="preserve">
    <value>Valeur accumulée de départ, qui sera transférée dans le premier appel à la fonction Reductor.</value>
  </data>
  <data name="ReplaceByConditionDescription" xml:space="preserve">
    <value>Remplace un élément par le substitut donné si l'élément d'origine répond à la condition donnée</value>
  </data>
  <data name="ReplaceByConditionSearchTags" xml:space="preserve">
    <value>predicate;override;replace if,</value>
  </data>
  <data name="ReplacePortDataConditionToolTip" xml:space="preserve">
    <value>Fonction de remplacement utilisée pour déterminer si un objet doit être remplacé</value>
  </data>
  <data name="ReplacePortDataItemToolTip" xml:space="preserve">
    <value>Elément pouvant requérir un remplacement</value>
  </data>
  <data name="ReplacePortDataReplaceWithToolTip" xml:space="preserve">
    <value>Objet de remplacement</value>
  </data>
  <data name="ReplacePortDataResultToolTip" xml:space="preserve">
    <value>Élément ou liste d'éléments où la condition a été utilisée pour le remplacement par l'élément spécifié dans "replaceWith"</value>
  </data>
  <data name="ScanPortDataReductorToolTip" xml:space="preserve">
    <value>Fonction de réducteur: accepte la réduction d'un élément de chaque liste, et la valeur cumulée actuelle, le résultat est la nouvelle valeur accumulée.</value>
  </data>
  <data name="ScanPortDataResultToolTip" xml:space="preserve">
    <value>Listes analysées (type: var[]..[])</value>
  </data>
  <data name="ScanPortDataSeedToolTip" xml:space="preserve">
    <value>Valeur accumulée de départ, qui sera transférée dans le premier appel à la fonction Reductor.</value>
  </data>
  <data name="ScopeIfDescription" xml:space="preserve">
    <value>Renvoie le résultat de l'entrée True ou False selon que la valeur booléenne est activée dans l'entrée du test. Prend en charge la récursion qui exige l'exécution d'une seule branche. Il est absolument essentiel que les branches True et False soient isolées et n'interagissent pas entre elles.</value>
  </data>
  <data name="SelectionPortDataResultToolTip" xml:space="preserve">
    <value>Eléments sélectionnés.</value>
  </data>
  <data name="StringfromArrayDescription" xml:space="preserve">
    <value>Convertit un réseau en une représentation sous forme de chaîne</value>
  </data>
  <data name="StringfromObjectDescription" xml:space="preserve">
    <value>Convertit un objet en une représentation sous forme de chaîne</value>
  </data>
  <data name="StringInputNodeDescription" xml:space="preserve">
    <value>Crée une chaîne.</value>
  </data>
  <data name="WatchDescription" xml:space="preserve">
    <value>Visualise la sortie du noeud</value>
  </data>
  <data name="WatchImageDescription" xml:space="preserve">
    <value>Affiche l'aperçu d'une image</value>
  </data>
  <data name="WatchImageSearchTags" xml:space="preserve">
    <value>image;inspect image;pixels;display;panel;watchimage;</value>
  </data>
  <data name="WatchNodeDescription" xml:space="preserve">
    <value>Visualise la sortie du noeud</value>
  </data>
  <data name="WatchPortDataInputToolTip" xml:space="preserve">
    <value>Afficher la sortie de ce noeud</value>
  </data>
  <data name="WatchPortDataResultToolTip" xml:space="preserve">
    <value>Sortie du noeud</value>
  </data>
  <data name="WatchSearchTags" xml:space="preserve">
    <value>print;output;display</value>
  </data>
  <data name="WebRequestDescription" xml:space="preserve">
    <value>Renvoie le contenu d'une page Web à partir de l'URL donnée sous forme de chaîne</value>
  </data>
  <data name="WebRequestPortDataResultToolTip" xml:space="preserve">
    <value>Résultat de la demande Web sous forme de chaîne.</value>
  </data>
  <data name="WebRequestPortDataUrlToolTip" xml:space="preserve">
    <value>URL pour la requête Web sous forme de chaîne.</value>
  </data>
  <data name="WatchNodeSearchTags" xml:space="preserve">
    <value>print;output;disply;panel;inspect;debug</value>
  </data>
  <data name="ConversionNodeDescription" xml:space="preserve">
    <value>Convertir d'une unité de mesure à une autre.</value>
  </data>
  <data name="SelectFromComboBoxToolTip" xml:space="preserve">
    <value>Il s'agit de vos paramètres d'unité d'affichage Revit</value>
  </data>
  <data name="ListCreateSearchTags" xml:space="preserve">
    <value>entwine;listcreate,newlist;makelist;list;</value>
  </data>
  <data name="DoubleSliderSearchTags" xml:space="preserve">
    <value>double;number;float;integer;slider;numberslider;</value>
  </data>
  <data name="DynamoConvertSearchTags" xml:space="preserve">
    <value>Convert;Units;Length;Area;Volume;convertbetweenunits;</value>
  </data>
  <data name="ListCreateInPortToolTip" xml:space="preserve">
    <value>Index de l'élément #{0}</value>
  </data>
  <data name="SelectionNodeNothingSelected" xml:space="preserve">
    <value>Aucune sélection.</value>
  </data>
  <data name="SelectionNodeSugestion" xml:space="preserve">
    <value>Sélectionnez un élément dans le modèle.</value>
  </data>
  <data name="UnitNodeFromPortTooltip" xml:space="preserve">
    <value>Valeur numérique pour la conversion.</value>
  </data>
  <data name="UnitNodeToPortToolTip" xml:space="preserve">
    <value>Valeur numérique convertie.</value>
  </data>
  <data name="DateTimeDescription" xml:space="preserve">
    <value>Créer un objet dateTime à partir d'une chaîne de date et heure formatée. La date et l'heure doivent être au format "April 12, 1977 12:00 PM"</value>
  </data>
  <data name="ColorRangeSearchTags" xml:space="preserve">
    <value>colorrange;</value>
  </data>
  <data name="DirectoryPathSearchTags" xml:space="preserve">
    <value>directorypath;filepath;</value>
  </data>
  <data name="FilePathSearchTags" xml:space="preserve">
    <value>filepath;</value>
  </data>
  <data name="IntegerSliderSearchTags" xml:space="preserve">
    <value>integerslider;</value>
  </data>
  <data name="RangeSearchTags" xml:space="preserve">
    <value>numberrange;numbersequence;</value>
  </data>
  <data name="SequenceSearchTags" xml:space="preserve">
    <value>numbersequence;</value>
  </data>
  <data name="SelectionEdgeOutputPortName" xml:space="preserve">
    <value>Courbe</value>
  </data>
  <data name="SelectionEdgesOutputPortName" xml:space="preserve">
    <value>Courbes</value>
  </data>
  <data name="SelectionElementOutputPortName" xml:space="preserve">
    <value>Element</value>
  </data>
  <data name="SelectionElementsOutputPortName" xml:space="preserve">
    <value>Elements</value>
  </data>
  <data name="SelectionFaceOutputPortName" xml:space="preserve">
    <value>Surface</value>
  </data>
  <data name="SelectionFacesOutputPortName" xml:space="preserve">
    <value>Surfaces</value>
  </data>
  <data name="SelectionPointOutputPortName" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="SelectionPointsOutputPortName" xml:space="preserve">
    <value>Points</value>
  </data>
  <data name="NumberNodeInputMustBeNumeric" xml:space="preserve">
    <value>La valeur doit être numérique.</value>
  </data>
  <data name="ColorPaletteDescription" xml:space="preserve">
    <value>Sélectionner une couleur dans la palette</value>
  </data>
  <data name="ColorPaletteSearchTags" xml:space="preserve">
    <value>color</value>
  </data>
  <data name="EqualsWithToleranceDescription" xml:space="preserve">
    <value>Renvoie True si x et y sont égaux avec une certaine tolérance</value>
  </data>
  <data name="EqualsWithToleranceLhsRhsTooltip" xml:space="preserve">
    <value>Entier ou valeur double</value>
  </data>
  <data name="EqualsWithToleranceOutportTooltip" xml:space="preserve">
    <value>Résultat de la vérification d'égalité</value>
  </data>
  <data name="EqualsWithToleranceSearchTags" xml:space="preserve">
    <value>equals;tolerance</value>
  </data>
  <data name="EqualsWithToleranceTooltip" xml:space="preserve">
    <value>Tolérance autorisée pour la vérification d'égalité
Valeur par défaut: {0}</value>
  </data>
  <data name="DirectoryPathOutputDescription" xml:space="preserve">
    <value>Chemin du répertoire</value>
  </data>
  <data name="FilePathOutputDescription" xml:space="preserve">
    <value>Chemin de fichier</value>
  </data>
  <data name="IFNodeWarningMessage" xml:space="preserve">
    <value>Ce noeud a été mis à jour et sera supprimé dans une version ultérieure de Dynamo. Le comportement existant est conservé, mais une nouvelle version prend désormais en charge les listes vides, les valeurs nulles et les entrées de longueur variable. Remplacez ce noeud si vous voulez utiliser ce comportement amélioré.</value>
  </data>
  <data name="ConversionNodeObsoleteMessage" xml:space="preserve">
    <value>est obsolète. Veuillez utiliser le nouveau noeud Convertir les unités.</value>
  </data>
  <data name="CustomSelectionNodeDescription" xml:space="preserve">
    <value>Menu déroulant avec valeurs personnalisables.</value>
  </data>
  <data name="CustomSelectionSearchTags" xml:space="preserve">
    <value>dropdown;custom;custom dropdown;enum;custom enum</value>
  </data>
  <data name="IntegerSliderInfoMessage" xml:space="preserve">
    <value>La valeur saisie ne se trouve pas dans la plage int64.</value>
  </data>
  <data name="CustomSelectionOutputDescription" xml:space="preserve">
    <value>Valeur sélectionnée</value>
  </data>
  <data name="TooltipTextAction" xml:space="preserve">
    <value>Noeuds qui exécutent une action</value>
  </data>
  <data name="TooltipTextCreate" xml:space="preserve">
    <value>Noeuds qui créent des données</value>
  </data>
  <data name="TooltipTextQuery" xml:space="preserve">
    <value>Noeuds qui interrogent les données</value>
  </data>
  <data name="RememberDescription" xml:space="preserve">
    <value>Stocker les données transmises via ce noeud au fichier Dynamo. Renvoyer les données stockées si l'entrée est null.</value>
  </data>
  <data name="RememberInputToolTip" xml:space="preserve">
    <value>Données à échantillonner et à stocker dans le fichier.</value>
  </data>
  <data name="RememberOuputToolTip" xml:space="preserve">
    <value>Données</value>
  </data>
  <data name="GateDescription" xml:space="preserve">
    <value>Bloquer les données transmises via ce noeud aux noeuds en aval. Le noeud ne renvoie les données d'entrée que si la valeur du noeud est définie sur Ouvert.

Dans les workflows de Generative Design, ce noeud doit être utilisé pour contrôler et bloquer le comportement des noeuds qui placeront des éléments dans Revit</value>
  </data>
  <data name="GateInPortToolTip" xml:space="preserve">
    <value>Données à transmettre à un noeud en aval avec des contrôles de seuil.</value>
  </data>
  <data name="GateOutPortToolTip" xml:space="preserve">
    <value>Données</value>
  </data>
  <data name="GateSearchTags" xml:space="preserve">
    <value>gate;stop;data</value>
  </data>
  <data name="DefineDataDescription" xml:space="preserve">
    <value>Valide le type de données d'une entrée et la renvoie</value>
  </data>
  <data name="DefineDataInputTooltip" xml:space="preserve">
    <value>Données d'entrée à valider. Reportez-vous à la liste déroulante pour obtenir la liste des types autorisés</value>
  </data>
  <data name="DefineDataOutputTooltip" xml:space="preserve">
    <value>Données validées</value>
  </data>
  <data name="DefineDataDisplayValueMessage" xml:space="preserve">
    <value>Sélectionner les types</value>
  </data>
  <data name="FromObjectPortDataFormatToolTip" xml:space="preserve">
    <value>Spécificateur de format pour les valeurs numériques, reportez-vous à l'aide sur les noeuds étendus pour plus d'informations.
Valeur par défaut: G</value>
  </data>
  <data name="CurveMapperCountInputPortName" xml:space="preserve">
    <value>count</value>
  </data>
  <data name="CurveMapperCountInputPortToolTip" xml:space="preserve">
    <value>Number of values to generate.

Default value (int): {0}</value>
  </data>
  <data name="CurveMapperDescription" xml:space="preserve">
    <value>Redistribue les coordonnées x le long des coordonnées y en fonction d'une courbe mathématique sélectionnée, ce qui permet de contrôler précisément la répartition des points.</value>
  </data>
  <data name="CurveMapperSearchTags" xml:space="preserve">
    <value>graph;curve;mapper;math</value>
  </data>
  <data name="CurveMapperWarningMessage" xml:space="preserve">
    <value>Les valeurs d'origine fournies ne peuvent pas être redistribuées à l'aide de l'équation de la courbe.</value>
  </data>
  <data name="CurveMapperXMaxLimitInputPortName" xml:space="preserve">
    <value>x-MaxLimit</value>
  </data>
  <data name="CurveMapperXMaxLimitInputPortToolTip" xml:space="preserve">
    <value>Maximum value for the X-axis domain.

Default value (double): {0}</value>
  </data>
  <data name="CurveMapperXMinLimitInputPortName" xml:space="preserve">
    <value>x-MinLimit</value>
  </data>
  <data name="CurveMapperXMinLimitInputPortToolTip" xml:space="preserve">
    <value>Minimum value for the X-axis domain.

Default value (double): {0}</value>
  </data>
  <data name="CurveMapperXValuesOutputPortName" xml:space="preserve">
    <value>x-Values</value>
  </data>
  <data name="CurveMapperXValuesOutputPortToolTip" xml:space="preserve">
    <value>Valeurs X dérivées de la courbe.

double[]</value>
  </data>
  <data name="CurveMapperYMaxLimitInputPortName" xml:space="preserve">
    <value>y-MaxLimit</value>
  </data>
  <data name="CurveMapperYMaxLimitInputPortToolTip" xml:space="preserve">
    <value>Maximum value for the Y-axis domain.

Default value (double): {0}</value>
  </data>
  <data name="CurveMapperYMinLimitInputPortName" xml:space="preserve">
    <value>y-MinLimit</value>
  </data>
  <data name="CurveMapperYMinLimitInputPortToolTip" xml:space="preserve">
    <value>Minimum value for the Y-axis domain.

Default value (double): {0}</value>
  </data>
  <data name="CurveMapperYValuesOutputPortName" xml:space="preserve">
    <value>y-Values</value>
  </data>
  <data name="CurveMapperYValuesOutputPortToolTip" xml:space="preserve">
    <value>Valeurs Y dérivées de la courbe.

double[]</value>
  </data>
  <data name="ColorPalettePortDataResultToolTip" xml:space="preserve">
    <value>Couleur sélectionnée</value>
  </data>
</root>