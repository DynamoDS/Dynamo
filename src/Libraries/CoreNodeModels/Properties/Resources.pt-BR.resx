<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AndDescription" xml:space="preserve">
    <value>Booleano E: Retornará True somente se ambas as entradas forem verdadeiras. Se uma for falsa, retorna False.</value>
  </data>
  <data name="ApplyPortDataFuncArgToolTip" xml:space="preserve">
    <value>Resultado do aplicativo.</value>
  </data>
  <data name="ApplyPortDataFuncToolTip" xml:space="preserve">
    <value>Função para aplicar.</value>
  </data>
  <data name="BooleanDescription" xml:space="preserve">
    <value>Permite a seleção entre True e False</value>
  </data>
  <data name="BooleanSelectorSearchTags" xml:space="preserve">
    <value>true;truth;false</value>
  </data>
  <data name="ColorRangeDescription" xml:space="preserve">
    <value>Retorna uma cor dada uma determinada faixa de cores</value>
  </data>
  <data name="ColorRangePortDataIndicesToolTip" xml:space="preserve">
    <value>Lista de valores entre 0,0 e 1,0 na qual são posicionadas as cores de entrada ao longo do intervalo</value>
  </data>
  <data name="ColorRangePortDataResultToolTip" xml:space="preserve">
    <value>Cores selecionadas</value>
  </data>
  <data name="ColorRangePortDataColorsToolTip" xml:space="preserve">
    <value>Lista de cores para incluir no intervalo</value>
  </data>
  <data name="ColorRangePortDataValueToolTip" xml:space="preserve">
    <value>Lista de valores entre 0,0 e 1,0. Esses valores definem as cores que são escolhidas ao longo do intervalo de cores para criar a lista de cores.</value>
  </data>
  <data name="CombinatorPortDataCombToolTip" xml:space="preserve">
    <value>Função para usar como combinador</value>
  </data>
  <data name="CombinatorPortDataResultToolTip" xml:space="preserve">
    <value>Listas combinadas</value>
  </data>
  <data name="ComposePortDataFunc0ToolTip" xml:space="preserve">
    <value>Função nº 0</value>
  </data>
  <data name="ComposePortDataFunc1ToolTip" xml:space="preserve">
    <value>Função nº 1</value>
  </data>
  <data name="ComposePortDataResultToolTip" xml:space="preserve">
    <value>Função composta.</value>
  </data>
  <data name="CreateListPortDataIndex0ToolTip" xml:space="preserve">
    <value>Índice do item nº 0</value>
  </data>
  <data name="CreateListPortDataResultToolTip" xml:space="preserve">
    <value>Uma lista (tipo: var[]..[])</value>
  </data>
  <data name="DirectoryFromPathDescription" xml:space="preserve">
    <value>Cria um objeto de diretório com base no caminho fornecido</value>
  </data>
  <data name="DirectoryNodeDescription" xml:space="preserve">
    <value>Permite selecionar um diretório no sistema e retornar seu caminho</value>
  </data>
  <data name="DirectoryObjectNodeDescription" xml:space="preserve">
    <value>Cria um objeto de diretório com base no caminho fornecido</value>
  </data>
  <data name="DirectoryObjectPortDataPathToolTip" xml:space="preserve">
    <value>O caminho para o diretório (tipo: string)</value>
  </data>
  <data name="DirectoryObjectPortDataResultToolTip" xml:space="preserve">
    <value>O objeto do diretório.</value>
  </data>
  <data name="DirectoryPathDescription" xml:space="preserve">
    <value>Permite selecionar um diretório no sistema e retornar seu caminho</value>
  </data>
  <data name="DoubleInputNodeDescription" xml:space="preserve">
    <value>Cria um número</value>
  </data>
  <data name="DoubleSliderDescription" xml:space="preserve">
    <value>Produz valores numéricos</value>
  </data>
  <data name="DoubleSliderNodeDescription" xml:space="preserve">
    <value>Produz valores numéricos</value>
  </data>
  <data name="DropDownPortDataResultToolTip" xml:space="preserve">
    <value>O {0} selecionado</value>
  </data>
  <data name="FileFromPathDescription" xml:space="preserve">
    <value>Cria um objeto de arquivo com base no caminho fornecido</value>
  </data>
  <data name="FilenameNodeDescription" xml:space="preserve">
    <value>Permite que você selecione um arquivo no sistema para obter seu nome de arquivo</value>
  </data>
  <data name="FileObjectNodeDescription" xml:space="preserve">
    <value>Cria um objeto de arquivo com base no caminho fornecido</value>
  </data>
  <data name="FileObjectPortDataPathToolTip" xml:space="preserve">
    <value>Caminho para o arquivo.</value>
  </data>
  <data name="FileObjectPortDataResultToolTip" xml:space="preserve">
    <value>Objeto de arquivo</value>
  </data>
  <data name="FilePathDescription" xml:space="preserve">
    <value>Permite selecionar um arquivo no sistema e retornar seu caminho</value>
  </data>
  <data name="FilterPortDataConditionToolTip" xml:space="preserve">
    <value>Função de filtro usada para determinar se um elemento é ou não filtrado</value>
  </data>
  <data name="FilterPortDataListToolTip" xml:space="preserve">
    <value>Lista a filtrar</value>
  </data>
  <data name="FilterPortDataResultInToolTip" xml:space="preserve">
    <value>Lista que contém todos os elementos "x", onde a condição(x) = Verdadeiro</value>
  </data>
  <data name="FilterPortDataResultOutToolTip" xml:space="preserve">
    <value>Lista que contém todos os elementos "x", onde a condição(x) = Falso</value>
  </data>
  <data name="FormulaDescription" xml:space="preserve">
    <value>Avalia fórmulas matemáticas usando NCalc</value>
  </data>
  <data name="FormulaPortDataResultToolTip" xml:space="preserve">
    <value>Resultado da fórmula</value>
  </data>
  <data name="FromArrayPortDataArrayToolTip" xml:space="preserve">
    <value>A matriz do objeto para ser serializado</value>
  </data>
  <data name="FromArrayPortDataResultToolTip" xml:space="preserve">
    <value>Representação da sequência de caracteres da matriz</value>
  </data>
  <data name="FromArraySearchTags" xml:space="preserve">
    <value>string.fromarray;tostring;2string;list2string;listtostring;array2string;arraytostring</value>
  </data>
  <data name="FromObjectPortDataObjToolTip" xml:space="preserve">
    <value>O objeto a ser serializado</value>
  </data>
  <data name="FromObjectPortDataResultToolTip" xml:space="preserve">
    <value>Representação da sequência de caracteres do objeto</value>
  </data>
  <data name="FromObjectSearchTags" xml:space="preserve">
    <value>string.fromobject;tostring;2string;number2string;numbertostring</value>
  </data>
  <data name="FunctionApplyDescription" xml:space="preserve">
    <value>Retorna o resultado de uma função com os argumentos fornecidos</value>
  </data>
  <data name="FunctionComposeDescription" xml:space="preserve">
    <value>Retorna uma única função de múltiplas funções</value>
  </data>
  <data name="IfDescription" xml:space="preserve">
    <value>Declaração condicional</value>
  </data>
  <data name="IntegerSliderDescription" xml:space="preserve">
    <value>Produz valores inteiros</value>
  </data>
  <data name="IntegerSliderNodeDescription" xml:space="preserve">
    <value>Produz valores inteiros</value>
  </data>
  <data name="LegacyNodeDescription" xml:space="preserve">
    <value>Este é um nó obsoleto</value>
  </data>
  <data name="ListCartesianProductDescription" xml:space="preserve">
    <value>Aplica um combinador a cada par no produto cartesiano de duas sequências</value>
  </data>
  <data name="ListCartesianProductSearchTags" xml:space="preserve">
    <value>cross product;crossreference;cross ref;</value>
  </data>
  <data name="ListCombineDescription" xml:space="preserve">
    <value>Aplica um combinador para cada elemento em duas sequências</value>
  </data>
  <data name="ListCombineSearchTags" xml:space="preserve">
    <value>map multiple;apply over lists;multiple inputs</value>
  </data>
  <data name="ListCreateDescription" xml:space="preserve">
    <value>Faz uma nova lista com base nas entradas fornecidas</value>
  </data>
  <data name="ListFilterDescription" xml:space="preserve">
    <value>Filtra itens em uma lista de entrada ou saída com base na condição fornecida. Se a condição for verdadeira, os itens serão filtrados e, se a condição for falsa, os itens não serão filtrados.</value>
  </data>
  <data name="ListFilterSearchTags" xml:space="preserve">
    <value>screen;dispatch;</value>
  </data>
  <data name="ListForEachDescription" xml:space="preserve">
    <value>Executa um cálculo em cada elemento de uma lista. Não inclui os resultados acumulados.</value>
  </data>
  <data name="ListForEachSearchTags" xml:space="preserve">
    <value>apply function;void;</value>
  </data>
  <data name="ListLaceLongestDescription" xml:space="preserve">
    <value>Aplica um combinador para cada par resultante da treliça mais longa das listas de entrada. As listas têm seu último elemento repetido para coincidir com o comprimento da entrada mais longa.</value>
  </data>
  <data name="ListLaceLongestSearchTags" xml:space="preserve">
    <value>repeat last;</value>
  </data>
  <data name="ListLaceShortestDescription" xml:space="preserve">
    <value>Aplica um combinador para cada par resultante de uma treliça menor das listas de entrada. As listas são truncadas para o comprimento da entrada mais curta.</value>
  </data>
  <data name="ListLaceShortestSearchTags" xml:space="preserve">
    <value>mix;trim end</value>
  </data>
  <data name="ListMapDescription" xml:space="preserve">
    <value>Aplica uma função a todos os elementos de uma lista, gerando uma nova lista com base nos resultados.</value>
  </data>
  <data name="ListMapSearchTags" xml:space="preserve">
    <value>function;applied;over list;do to each</value>
  </data>
  <data name="ListReduceDescription" xml:space="preserve">
    <value>Reduz uma lista em um novo valor combinando cada elemento com um resultado acumulado</value>
  </data>
  <data name="ListReduceSearchTags" xml:space="preserve">
    <value>accumulate;aggregate;fold</value>
  </data>
  <data name="ListScanDescription" xml:space="preserve">
    <value>Reduz a lista para um novo valor ao combinar cada elemento com um resultado acumulado, e produz uma lista de valores reduzidos sucessivos.</value>
  </data>
  <data name="ListScanSearchTags" xml:space="preserve">
    <value>intermediate;maps;folds</value>
  </data>
  <data name="MapPortDataFxToolTip" xml:space="preserve">
    <value>O procedimento usado para o elemento do mapa</value>
  </data>
  <data name="MapPortDataListToolTip" xml:space="preserve">
    <value>A lista sobre a qual mapear.</value>
  </data>
  <data name="MapPortDataResultToolTip" xml:space="preserve">
    <value>Lista mapeada do tipo: var[]..[]</value>
  </data>
  <data name="RangeDescription" xml:space="preserve">
    <value>Cria uma sequência de números ou letras no intervalo fornecido</value>
  </data>
  <data name="SequenceDescription" xml:space="preserve">
    <value>Cria uma sequência de números</value>
  </data>
  <data name="OrDescription" xml:space="preserve">
    <value>Booleano OU: retornará True se alguma das entradas for verdadeira. Se nenhuma for verdadeira, retornará False.</value>
  </data>
  <data name="PortDataFalseBlockToolTip" xml:space="preserve">
    <value>Retornado se o teste for falso</value>
  </data>
  <data name="PortDataImageToolTip" xml:space="preserve">
    <value>Imagem para visualização</value>
  </data>
  <data name="PortDataListToolTip" xml:space="preserve">
    <value>Lista</value>
  </data>
  <data name="PortDataOperandToolTip" xml:space="preserve">
    <value>Boolean #</value>
  </data>
  <data name="PortDataResultToolTip" xml:space="preserve">
    <value>Bloco de resultados produzido</value>
  </data>
  <data name="PortDataTestBlockToolTip" xml:space="preserve">
    <value>Teste booleano</value>
  </data>
  <data name="PortDataTrueBlockToolTip" xml:space="preserve">
    <value>Retornado se o teste for verdadeiro</value>
  </data>
  <data name="PortDataVariableToolTip" xml:space="preserve">
    <value>variável</value>
  </data>
  <data name="ReducePortDataReductorToolTip" xml:space="preserve">
    <value>Função Redutor: aceita um item de cada lista que está sendo reduzida e o valor atual acumulado. O resultado é o novo valor acumulado.</value>
  </data>
  <data name="ReducePortDataResultToolTip" xml:space="preserve">
    <value>Listas reduzidas (tipo: var[]..[])</value>
  </data>
  <data name="ReducePortDataSeedToolTip" xml:space="preserve">
    <value>Iniciando o valor acumulado, a ser transferido para a primeira chamada da função Redutor.</value>
  </data>
  <data name="ReplaceByConditionDescription" xml:space="preserve">
    <value>Substituirá um item pelo substituto fornecido se o item original satisfizer a condição fornecida</value>
  </data>
  <data name="ReplaceByConditionSearchTags" xml:space="preserve">
    <value>predicate;override;replace if,</value>
  </data>
  <data name="ReplacePortDataConditionToolTip" xml:space="preserve">
    <value>Função de substituição usada para determinar se um objeto deve ser substituído</value>
  </data>
  <data name="ReplacePortDataItemToolTip" xml:space="preserve">
    <value>Item a ser potencialmente substituído</value>
  </data>
  <data name="ReplacePortDataReplaceWithToolTip" xml:space="preserve">
    <value>O objeto pelo qual substituir</value>
  </data>
  <data name="ReplacePortDataResultToolTip" xml:space="preserve">
    <value>Item ou lista de itens em que foi usada uma condição para substituir por um item determinado em “replaceWith”</value>
  </data>
  <data name="ScanPortDataReductorToolTip" xml:space="preserve">
    <value>Função Redutor: aceita um item de cada lista que está sendo reduzida e o valor atual acumulado. O resultado é o novo valor acumulado.</value>
  </data>
  <data name="ScanPortDataResultToolTip" xml:space="preserve">
    <value>Listas digitalizadas (tipo: var[]..[])</value>
  </data>
  <data name="ScanPortDataSeedToolTip" xml:space="preserve">
    <value>Iniciando o valor acumulado, a ser transferido para a primeira chamada da função Redutor.</value>
  </data>
  <data name="ScopeIfDescription" xml:space="preserve">
    <value>Retorna o resultado da entrada Verdadeiro ou Falso, dependendo de qual valor booleano é alternado na entrada de teste. Suporta a recursão, que requer que somente um único ramo seja executado. É muito importante que ambos os ramos Verdadeiro e Falso estejam isolados e que não interajam entre si.</value>
  </data>
  <data name="SelectionPortDataResultToolTip" xml:space="preserve">
    <value>Os elementos selecionados.</value>
  </data>
  <data name="StringfromArrayDescription" xml:space="preserve">
    <value>Converts an array to a string representation</value>
  </data>
  <data name="StringfromObjectDescription" xml:space="preserve">
    <value>Converte um objeto em uma representação de sequência de caracteres</value>
  </data>
  <data name="StringInputNodeDescription" xml:space="preserve">
    <value>Cria uma sequência de caracteres</value>
  </data>
  <data name="WatchDescription" xml:space="preserve">
    <value>Visualiza a saída de um nó</value>
  </data>
  <data name="WatchImageDescription" xml:space="preserve">
    <value>Visualiza uma imagem</value>
  </data>
  <data name="WatchImageSearchTags" xml:space="preserve">
    <value>image;inspect image;pixels;display;panel;watchimage;</value>
  </data>
  <data name="WatchNodeDescription" xml:space="preserve">
    <value>Visualiza a saída de um nó</value>
  </data>
  <data name="WatchPortDataInputToolTip" xml:space="preserve">
    <value>Nó do qual a saída é exibida</value>
  </data>
  <data name="WatchPortDataResultToolTip" xml:space="preserve">
    <value>Saída do nó</value>
  </data>
  <data name="WatchSearchTags" xml:space="preserve">
    <value>print;output;display</value>
  </data>
  <data name="WebRequestDescription" xml:space="preserve">
    <value>Returns the contents of a webpage from the given URL as a string</value>
  </data>
  <data name="WebRequestPortDataResultToolTip" xml:space="preserve">
    <value>Conteúdo de uma solicitação da Web como uma string.</value>
  </data>
  <data name="WebRequestPortDataUrlToolTip" xml:space="preserve">
    <value>A URL da solicitação da Web como uma string.</value>
  </data>
  <data name="WatchNodeSearchTags" xml:space="preserve">
    <value>print;output;disply;panel;inspect;debug</value>
  </data>
  <data name="ConversionNodeDescription" xml:space="preserve">
    <value>Converta entre unidades de medida.</value>
  </data>
  <data name="SelectFromComboBoxToolTip" xml:space="preserve">
    <value>Estas são as suas configurações da unidade de exibição do Revit</value>
  </data>
  <data name="ListCreateSearchTags" xml:space="preserve">
    <value>entwine;listcreate,newlist;makelist;list;</value>
  </data>
  <data name="DoubleSliderSearchTags" xml:space="preserve">
    <value>double;number;float;integer;slider;numberslider;</value>
  </data>
  <data name="DynamoConvertSearchTags" xml:space="preserve">
    <value>Convert;Units;Length;Area;Volume;convertbetweenunits;</value>
  </data>
  <data name="ListCreateInPortToolTip" xml:space="preserve">
    <value>Índice do Item nº {0}</value>
  </data>
  <data name="SelectionNodeNothingSelected" xml:space="preserve">
    <value>Nada selecionado.</value>
  </data>
  <data name="SelectionNodeSugestion" xml:space="preserve">
    <value>Selecionar algo no modelo.</value>
  </data>
  <data name="UnitNodeFromPortTooltip" xml:space="preserve">
    <value>Um valor numérico para conversão.</value>
  </data>
  <data name="UnitNodeToPortToolTip" xml:space="preserve">
    <value>Um valor numérico convertido.</value>
  </data>
  <data name="DateTimeDescription" xml:space="preserve">
    <value>Cria um objeto dateTime com base em uma sequência de caracteres de data e hora formatada. A data e a hora devem estar no formato DateTime padrão “dd MMMM aaaa h:mm tt”, ex. "02 de abril de 1977 00:00"</value>
  </data>
  <data name="ColorRangeSearchTags" xml:space="preserve">
    <value>colorrange;</value>
  </data>
  <data name="DirectoryPathSearchTags" xml:space="preserve">
    <value>directorypath;filepath;</value>
  </data>
  <data name="FilePathSearchTags" xml:space="preserve">
    <value>filepath;</value>
  </data>
  <data name="IntegerSliderSearchTags" xml:space="preserve">
    <value>integerslider;</value>
  </data>
  <data name="RangeSearchTags" xml:space="preserve">
    <value>numberrange;numbersequence;</value>
  </data>
  <data name="SequenceSearchTags" xml:space="preserve">
    <value>numbersequence;</value>
  </data>
  <data name="SelectionEdgeOutputPortName" xml:space="preserve">
    <value>Curva</value>
  </data>
  <data name="SelectionEdgesOutputPortName" xml:space="preserve">
    <value>Curvas</value>
  </data>
  <data name="SelectionElementOutputPortName" xml:space="preserve">
    <value>Elemento</value>
  </data>
  <data name="SelectionElementsOutputPortName" xml:space="preserve">
    <value>Elementos</value>
  </data>
  <data name="SelectionFaceOutputPortName" xml:space="preserve">
    <value>Superfície</value>
  </data>
  <data name="SelectionFacesOutputPortName" xml:space="preserve">
    <value>Superfícies</value>
  </data>
  <data name="SelectionPointOutputPortName" xml:space="preserve">
    <value>Ponto</value>
  </data>
  <data name="SelectionPointsOutputPortName" xml:space="preserve">
    <value>Pontos</value>
  </data>
  <data name="NumberNodeInputMustBeNumeric" xml:space="preserve">
    <value>A entrada deve ser numérica.</value>
  </data>
  <data name="ColorPaletteDescription" xml:space="preserve">
    <value>Selecione uma cor na paleta</value>
  </data>
  <data name="ColorPaletteSearchTags" xml:space="preserve">
    <value>color</value>
  </data>
  <data name="EqualsWithToleranceDescription" xml:space="preserve">
    <value>Retornará True se x e y forem iguais, dada uma certa tolerância</value>
  </data>
  <data name="EqualsWithToleranceLhsRhsTooltip" xml:space="preserve">
    <value>Valor inteiro ou duplo</value>
  </data>
  <data name="EqualsWithToleranceOutportTooltip" xml:space="preserve">
    <value>Resultado da verificação de igualdade</value>
  </data>
  <data name="EqualsWithToleranceSearchTags" xml:space="preserve">
    <value>equals;tolerance</value>
  </data>
  <data name="EqualsWithToleranceTooltip" xml:space="preserve">
    <value>Tolerância permitida para a verificação de igualdade
Valor padrão: {0}</value>
  </data>
  <data name="DirectoryPathOutputDescription" xml:space="preserve">
    <value>Caminho do diretório</value>
  </data>
  <data name="FilePathOutputDescription" xml:space="preserve">
    <value>Caminho do arquivo</value>
  </data>
  <data name="IFNodeWarningMessage" xml:space="preserve">
    <value>Esse nó foi atualizado e será removido em uma versão futura do Dynamo. O comportamento existente foi mantido, mas a partir de agora uma nova versão oferece suporte a listas vazias, valores nulos e entradas de comprimento variável. Substitua o nó se você desejar usar esse comportamento aprimorado.</value>
  </data>
  <data name="CustomSelectionSearchTags" xml:space="preserve">
    <value>dropdown;custom;custom dropdown;enum;custom enum</value>
  </data>
  <data name="CustomSelectionNodeDescription" xml:space="preserve">
    <value>Um menu suspenso com valores personalizáveis.</value>
  </data>
  <data name="ConversionNodeObsoleteMessage" xml:space="preserve">
    <value>está obsoleto, use o novo nó Converter unidades.</value>
  </data>
  <data name="IntegerSliderInfoMessage" xml:space="preserve">
    <value>O valor inserido não está no intervalo int64.</value>
  </data>
  <data name="CustomSelectionOutputDescription" xml:space="preserve">
    <value>Valor selecionado</value>
  </data>
  <data name="TooltipTextAction" xml:space="preserve">
    <value>Nós que executam uma ação</value>
  </data>
  <data name="TooltipTextCreate" xml:space="preserve">
    <value>Nós que criam dados</value>
  </data>
  <data name="TooltipTextQuery" xml:space="preserve">
    <value>Nós que consultam dados</value>
  </data>
  <data name="RememberDescription" xml:space="preserve">
    <value>Armazene os dados que passam por esse nó no arquivo do Dynamo. Retornará os dados armazenados se a entrada for nula.</value>
  </data>
  <data name="RememberInputToolTip" xml:space="preserve">
    <value>Dados para amostragem e armazenamento no arquivo.</value>
  </data>
  <data name="RememberOuputToolTip" xml:space="preserve">
    <value>Dados</value>
  </data>
  <data name="GateDescription" xml:space="preserve">
    <value>Os dados de bloco que passam por esse nó para nós a jusante. O nó retornará os dados de entrada somente se o valor do nó estiver definido como Aberto.

Nos fluxos de trabalho do Projeto generativo, esse nó deve ser usado para controlar e bloquear o comportamento dos nós que posicionarão elementos no Revit</value>
  </data>
  <data name="GateInPortToolTip" xml:space="preserve">
    <value>Dados a serem passados a um nó a jusante com controles protegidos.</value>
  </data>
  <data name="GateOutPortToolTip" xml:space="preserve">
    <value>Dados</value>
  </data>
  <data name="GateSearchTags" xml:space="preserve">
    <value>gate;stop;data</value>
  </data>
  <data name="DefineDataDescription" xml:space="preserve">
    <value>Valida o tipo de dados de uma entrada e retorna-o</value>
  </data>
  <data name="DefineDataInputTooltip" xml:space="preserve">
    <value>Dados de entrada a serem validados. Consulte o menu suspenso para obter uma lista de tipos permitidos</value>
  </data>
  <data name="DefineDataOutputTooltip" xml:space="preserve">
    <value>Dados validados</value>
  </data>
  <data name="DefineDataDisplayValueMessage" xml:space="preserve">
    <value>Selecionar tipos</value>
  </data>
  <data name="FromObjectPortDataFormatToolTip" xml:space="preserve">
    <value>Especificador de formato para valores numéricos, consulte a ajuda do nó estendido para obter mais informações.
valor padrão: G</value>
  </data>
</root>