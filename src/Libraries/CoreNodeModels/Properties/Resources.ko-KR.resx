<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AndDescription" xml:space="preserve">
    <value>부울 AND: 모든 입력이 true인 경우에만 True를 반환합니다. 하나라도 false면 False를 반환합니다.</value>
  </data>
  <data name="ApplyPortDataFuncArgToolTip" xml:space="preserve">
    <value>응용프로그램의 결과.</value>
  </data>
  <data name="ApplyPortDataFuncToolTip" xml:space="preserve">
    <value>적용할 함수.</value>
  </data>
  <data name="BooleanDescription" xml:space="preserve">
    <value>True와 False 간 선택을 활성화합니다</value>
  </data>
  <data name="BooleanSelectorSearchTags" xml:space="preserve">
    <value>true;truth;false</value>
  </data>
  <data name="ColorRangeDescription" xml:space="preserve">
    <value>지정된 색상 범위에서 색상을 반환합니다</value>
  </data>
  <data name="ColorRangePortDataIndicesToolTip" xml:space="preserve">
    <value>범위를 따라 입력 색상의 위치를 지정하는 0.0과 1.0 사이의 값 리스트</value>
  </data>
  <data name="ColorRangePortDataResultToolTip" xml:space="preserve">
    <value>선택된 색상</value>
  </data>
  <data name="ColorRangePortDataColorsToolTip" xml:space="preserve">
    <value>범위에 포함할 색상 리스트</value>
  </data>
  <data name="ColorRangePortDataValueToolTip" xml:space="preserve">
    <value>0.0과 1.0 사이의 값 리스트입니다. 이러한 값은 색상 범위 내에서 선택된 색상을 정의하여 색상 리스트를 만듭니다.</value>
  </data>
  <data name="CombinatorPortDataCombToolTip" xml:space="preserve">
    <value>연결자로 사용할 함수</value>
  </data>
  <data name="CombinatorPortDataResultToolTip" xml:space="preserve">
    <value>결합된 리스트</value>
  </data>
  <data name="ComposePortDataFunc0ToolTip" xml:space="preserve">
    <value>함수 #0</value>
  </data>
  <data name="ComposePortDataFunc1ToolTip" xml:space="preserve">
    <value>함수 #1</value>
  </data>
  <data name="ComposePortDataResultToolTip" xml:space="preserve">
    <value>구성된 함수.</value>
  </data>
  <data name="CreateListPortDataIndex0ToolTip" xml:space="preserve">
    <value>항목 인덱스 #0</value>
  </data>
  <data name="CreateListPortDataResultToolTip" xml:space="preserve">
    <value>리스트(유형: var[]..[])</value>
  </data>
  <data name="DirectoryFromPathDescription" xml:space="preserve">
    <value>지정된 경로에서 디렉토리 객체를 작성합니다</value>
  </data>
  <data name="DirectoryNodeDescription" xml:space="preserve">
    <value>시스템에서 디렉토리를 선택하여 해당 경로를 반환할 수 있습니다</value>
  </data>
  <data name="DirectoryObjectNodeDescription" xml:space="preserve">
    <value>지정된 경로에서 디렉토리 객체를 작성합니다</value>
  </data>
  <data name="DirectoryObjectPortDataPathToolTip" xml:space="preserve">
    <value>디렉토리 경로(유형: 문자열)</value>
  </data>
  <data name="DirectoryObjectPortDataResultToolTip" xml:space="preserve">
    <value>디렉토리 객체.</value>
  </data>
  <data name="DirectoryPathDescription" xml:space="preserve">
    <value>시스템에서 디렉토리를 선택하여 해당 경로를 반환할 수 있습니다</value>
  </data>
  <data name="DoubleInputNodeDescription" xml:space="preserve">
    <value>숫자를 만듭니다.</value>
  </data>
  <data name="DoubleSliderDescription" xml:space="preserve">
    <value>숫자 값을 생성합니다</value>
  </data>
  <data name="DoubleSliderNodeDescription" xml:space="preserve">
    <value>숫자 값을 생성합니다</value>
  </data>
  <data name="DropDownPortDataResultToolTip" xml:space="preserve">
    <value>선택된 {0}</value>
  </data>
  <data name="FileFromPathDescription" xml:space="preserve">
    <value>지정된 경로에서 파일 객체를 작성합니다</value>
  </data>
  <data name="FilenameNodeDescription" xml:space="preserve">
    <value>시스템에서 파일을 선택하여 파일 이름을 가져올 수 있습니다</value>
  </data>
  <data name="FileObjectNodeDescription" xml:space="preserve">
    <value>지정된 경로에서 파일 객체를 작성합니다</value>
  </data>
  <data name="FileObjectPortDataPathToolTip" xml:space="preserve">
    <value>파일 경로를 문자열로.</value>
  </data>
  <data name="FileObjectPortDataResultToolTip" xml:space="preserve">
    <value>파일 객체</value>
  </data>
  <data name="FilePathDescription" xml:space="preserve">
    <value>시스템에서 파일을 선택하여 해당 파일 경로를 반환할 수 있습니다</value>
  </data>
  <data name="FilterPortDataConditionToolTip" xml:space="preserve">
    <value>요소가 필터링을 통해 포함 또는 제외되는지 확인하기 위해 사용되는 필터링 함수</value>
  </data>
  <data name="FilterPortDataListToolTip" xml:space="preserve">
    <value>필터링할 리스트</value>
  </data>
  <data name="FilterPortDataResultInToolTip" xml:space="preserve">
    <value>condition(x) = True인 모든 요소 "x"가 포함된 리스트</value>
  </data>
  <data name="FilterPortDataResultOutToolTip" xml:space="preserve">
    <value>condition(x) = False인 모든 요소 "x"가 포함된 리스트</value>
  </data>
  <data name="FormulaDescription" xml:space="preserve">
    <value>NCalc를 이용하여 수학 공식을 계산합니다</value>
  </data>
  <data name="FormulaPortDataResultToolTip" xml:space="preserve">
    <value>수식의 결과</value>
  </data>
  <data name="FromArrayPortDataArrayToolTip" xml:space="preserve">
    <value>직렬화할 객체의 배열</value>
  </data>
  <data name="FromArrayPortDataResultToolTip" xml:space="preserve">
    <value>배열의 문자열 표현</value>
  </data>
  <data name="FromArraySearchTags" xml:space="preserve">
    <value>string.fromarray;tostring;2string;list2string;listtostring;array2string;arraytostring</value>
  </data>
  <data name="FromObjectPortDataObjToolTip" xml:space="preserve">
    <value>직렬화할 객체</value>
  </data>
  <data name="FromObjectPortDataResultToolTip" xml:space="preserve">
    <value>객체의 문자열 표현</value>
  </data>
  <data name="FromObjectSearchTags" xml:space="preserve">
    <value>string.fromobject;tostring;2string;number2string;numbertostring</value>
  </data>
  <data name="FunctionApplyDescription" xml:space="preserve">
    <value>지정된 인수가 있는 함수의 결과를 반환합니다</value>
  </data>
  <data name="FunctionComposeDescription" xml:space="preserve">
    <value>여러 함수에서 단일 함수를 반환합니다</value>
  </data>
  <data name="IfDescription" xml:space="preserve">
    <value>조건문</value>
  </data>
  <data name="IntegerSliderDescription" xml:space="preserve">
    <value>정수 값을 생성합니다</value>
  </data>
  <data name="IntegerSliderNodeDescription" xml:space="preserve">
    <value>정수 값을 생성합니다</value>
  </data>
  <data name="LegacyNodeDescription" xml:space="preserve">
    <value>사용되지 않는 노드입니다</value>
  </data>
  <data name="ListCartesianProductDescription" xml:space="preserve">
    <value>두 시퀀스의 데카르트 곱의 각 쌍에 연결자를 적용합니다</value>
  </data>
  <data name="ListCartesianProductSearchTags" xml:space="preserve">
    <value>cross product;crossreference;cross ref;</value>
  </data>
  <data name="ListCombineDescription" xml:space="preserve">
    <value>두 시퀀스의 각 요소에 연결자를 적용합니다</value>
  </data>
  <data name="ListCombineSearchTags" xml:space="preserve">
    <value>map multiple;apply over lists;multiple inputs</value>
  </data>
  <data name="ListCreateDescription" xml:space="preserve">
    <value>지정된 입력에서 새 리스트를 만듭니다</value>
  </data>
  <data name="ListFilterDescription" xml:space="preserve">
    <value>리스트에서 지정된 조건을 기준으로 항목을 필터링하여 포함하거나 제외합니다. 조건이 true인 경우 항목을 필터링하여 포함하고, 조건이 false인 경우 항목을 필터링하여 제외합니다.</value>
  </data>
  <data name="ListFilterSearchTags" xml:space="preserve">
    <value>screen;dispatch;</value>
  </data>
  <data name="ListForEachDescription" xml:space="preserve">
    <value>리스트의 각 요소에 대해 계산을 수행합니다. 결과를 누적하지 않습니다.</value>
  </data>
  <data name="ListForEachSearchTags" xml:space="preserve">
    <value>apply function;void;</value>
  </data>
  <data name="ListLaceLongestDescription" xml:space="preserve">
    <value>입력 리스트의 최장 레이싱에서 생성된 각 쌍에 연결자를 적용합니다. 모든 리스트에는 가장 긴 입력의 길이와 일치하도록 반복되는 마지막 요소가 있습니다.</value>
  </data>
  <data name="ListLaceLongestSearchTags" xml:space="preserve">
    <value>repeat last;</value>
  </data>
  <data name="ListLaceShortestDescription" xml:space="preserve">
    <value>입력 리스트의 최단 레이싱에서 생성된 각 쌍에 연결자를 적용합니다. 모든 리스트는 가장 짧은 입력의 길이로 잘립니다.</value>
  </data>
  <data name="ListLaceShortestSearchTags" xml:space="preserve">
    <value>mix;trim end</value>
  </data>
  <data name="ListMapDescription" xml:space="preserve">
    <value>리스트의 모든 요소에 함수를 적용하고 결과에서 새 리스트를 생성합니다.</value>
  </data>
  <data name="ListMapSearchTags" xml:space="preserve">
    <value>function;applied;over list;do to each</value>
  </data>
  <data name="ListReduceDescription" xml:space="preserve">
    <value>누적된 결과로 각 요소를 결합하여 리스트를 새 값으로 줄입니다</value>
  </data>
  <data name="ListReduceSearchTags" xml:space="preserve">
    <value>accumulate;aggregate;fold</value>
  </data>
  <data name="ListScanDescription" xml:space="preserve">
    <value>누적된 결과로 각 요소를 결합하여 리스트를 새 값으로 줄이고 연속적으로 감소된 값의 리스트를 생성합니다.</value>
  </data>
  <data name="ListScanSearchTags" xml:space="preserve">
    <value>intermediate;maps;folds</value>
  </data>
  <data name="MapPortDataFxToolTip" xml:space="preserve">
    <value>요소를 매핑하기 위해 사용되는 절차</value>
  </data>
  <data name="MapPortDataListToolTip" xml:space="preserve">
    <value>매핑할 리스트입니다.</value>
  </data>
  <data name="MapPortDataResultToolTip" xml:space="preserve">
    <value>유형의 매핑된 리스트: var[]..[]</value>
  </data>
  <data name="RangeDescription" xml:space="preserve">
    <value>지정된 범위에서 숫자 또는 문자의 시퀀스를 작성합니다</value>
  </data>
  <data name="SequenceDescription" xml:space="preserve">
    <value>숫자의 시퀀스를 만듭니다.</value>
  </data>
  <data name="OrDescription" xml:space="preserve">
    <value>부울 OR: 입력 중 하나가 true인 경우 True를 반환합니다. 모두가 true가 아니면 False를 반환합니다.</value>
  </data>
  <data name="PortDataFalseBlockToolTip" xml:space="preserve">
    <value>테스트가 false인 경우 반환됨</value>
  </data>
  <data name="PortDataImageToolTip" xml:space="preserve">
    <value>시각화를 위한 이미지</value>
  </data>
  <data name="PortDataListToolTip" xml:space="preserve">
    <value>리스트</value>
  </data>
  <data name="PortDataOperandToolTip" xml:space="preserve">
    <value>Boolean #</value>
  </data>
  <data name="PortDataResultToolTip" xml:space="preserve">
    <value>결과 블록이 생성됨</value>
  </data>
  <data name="PortDataTestBlockToolTip" xml:space="preserve">
    <value>부울 테스트</value>
  </data>
  <data name="PortDataTrueBlockToolTip" xml:space="preserve">
    <value>테스트가 true인 경우 반환됨</value>
  </data>
  <data name="PortDataVariableToolTip" xml:space="preserve">
    <value>변수</value>
  </data>
  <data name="ReducePortDataReductorToolTip" xml:space="preserve">
    <value>Reductor 함수: 줄이고 있는 각 리스트에서 하나의 항목과 현재 누적된 값을 허용하며, 결과는 새로 누적된 값입니다.</value>
  </data>
  <data name="ReducePortDataResultToolTip" xml:space="preserve">
    <value>줄인 리스트(유형: var[]..[])</value>
  </data>
  <data name="ReducePortDataSeedToolTip" xml:space="preserve">
    <value>Reductor 함수의 첫 번째 호출에 전달될 시작 누적 값.</value>
  </data>
  <data name="ReplaceByConditionDescription" xml:space="preserve">
    <value>원래 항목이 지정된 조건을 충족하는 경우 항목을 지정된 대체 항목으로 대체합니다</value>
  </data>
  <data name="ReplaceByConditionSearchTags" xml:space="preserve">
    <value>predicate;override;replace if,</value>
  </data>
  <data name="ReplacePortDataConditionToolTip" xml:space="preserve">
    <value>대체해야 하는지 확인하기 위해 사용되는 대체 함수</value>
  </data>
  <data name="ReplacePortDataItemToolTip" xml:space="preserve">
    <value>잠재적으로 대체될 항목</value>
  </data>
  <data name="ReplacePortDataReplaceWithToolTip" xml:space="preserve">
    <value>대체할 객체</value>
  </data>
  <data name="ReplacePortDataResultToolTip" xml:space="preserve">
    <value>"replaceWith"에 지정된 항목으로 대체하기 위해 조건이 사용된 경우의 항목 또는 항목 리스트</value>
  </data>
  <data name="ScanPortDataReductorToolTip" xml:space="preserve">
    <value>Reductor 함수: 줄이고 있는 각 리스트에서 하나의 항목과 현재 누적된 값을 허용하며, 결과는 새로 누적된 값입니다.</value>
  </data>
  <data name="ScanPortDataResultToolTip" xml:space="preserve">
    <value>스캔된 리스트(유형: var[]..[])</value>
  </data>
  <data name="ScanPortDataSeedToolTip" xml:space="preserve">
    <value>Reductor 함수의 첫 번째 호출에 전달될 시작 누적 값.</value>
  </data>
  <data name="ScopeIfDescription" xml:space="preserve">
    <value>테스트 입력에서 전환되는 부울 값에 따라 True 또는 False 입력의 결과를 반환합니다. 하나의 분기만 실행되도록 요구하는 재귀를 지원합니다. True 및 False 브랜치 모두 분리되고 서로와 상호 작용하지 않아야 합니다.</value>
  </data>
  <data name="SelectionPortDataResultToolTip" xml:space="preserve">
    <value>선택한 요소.</value>
  </data>
  <data name="StringfromArrayDescription" xml:space="preserve">
    <value>Converts an array to a string representation</value>
  </data>
  <data name="StringfromObjectDescription" xml:space="preserve">
    <value>객체를 문자열 표현으로 변환합니다.</value>
  </data>
  <data name="StringInputNodeDescription" xml:space="preserve">
    <value>문자열을 작성합니다.</value>
  </data>
  <data name="WatchDescription" xml:space="preserve">
    <value>노드의 출력을 시각화합니다.</value>
  </data>
  <data name="WatchImageDescription" xml:space="preserve">
    <value>이미지를 미리봅니다</value>
  </data>
  <data name="WatchImageSearchTags" xml:space="preserve">
    <value>image;inspect image;pixels;display;panel;watchimage;</value>
  </data>
  <data name="WatchNodeDescription" xml:space="preserve">
    <value>노드의 출력을 시각화합니다.</value>
  </data>
  <data name="WatchPortDataInputToolTip" xml:space="preserve">
    <value>출력을 표시할 노드</value>
  </data>
  <data name="WatchPortDataResultToolTip" xml:space="preserve">
    <value>노드 출력</value>
  </data>
  <data name="WatchSearchTags" xml:space="preserve">
    <value>print;output;display</value>
  </data>
  <data name="WebRequestDescription" xml:space="preserve">
    <value>Returns the contents of a webpage from the given URL as a string</value>
  </data>
  <data name="WebRequestPortDataResultToolTip" xml:space="preserve">
    <value>웹 요청의 내용을 문자열로.</value>
  </data>
  <data name="WebRequestPortDataUrlToolTip" xml:space="preserve">
    <value>웹 요청에 대한 URL을 문자열로.</value>
  </data>
  <data name="WatchNodeSearchTags" xml:space="preserve">
    <value>print;output;disply;panel;inspect;debug</value>
  </data>
  <data name="ConversionNodeDescription" xml:space="preserve">
    <value>측정 단위 사이를 변환합니다.</value>
  </data>
  <data name="SelectFromComboBoxToolTip" xml:space="preserve">
    <value>Revit 화면표시 단위 설정입니다</value>
  </data>
  <data name="ListCreateSearchTags" xml:space="preserve">
    <value>entwine;listcreate,newlist;makelist;list;</value>
  </data>
  <data name="DoubleSliderSearchTags" xml:space="preserve">
    <value>double;number;float;integer;slider;numberslider;</value>
  </data>
  <data name="DynamoConvertSearchTags" xml:space="preserve">
    <value>Convert;Units;Length;Area;Volume;convertbetweenunits;</value>
  </data>
  <data name="ListCreateInPortToolTip" xml:space="preserve">
    <value>항목 Index {0}</value>
  </data>
  <data name="SelectionNodeNothingSelected" xml:space="preserve">
    <value>선택한 항목이 없습니다.</value>
  </data>
  <data name="SelectionNodeSugestion" xml:space="preserve">
    <value>모델에서 항목을 선택하십시오.</value>
  </data>
  <data name="UnitNodeFromPortTooltip" xml:space="preserve">
    <value>변환할 숫자 값.</value>
  </data>
  <data name="UnitNodeToPortToolTip" xml:space="preserve">
    <value>변환된 숫자 값.</value>
  </data>
  <data name="DateTimeDescription" xml:space="preserve">
    <value>형식이 지정된 날짜 및 시간 문자열에서 dateTime 객체를 작성합니다. 날짜 및 시간은 기본 DateTime 형식인 "MMMM dd, yyyy h:mm tt"(예: "April 02, 1977 12:00 PM")여야 합니다.</value>
  </data>
  <data name="ColorRangeSearchTags" xml:space="preserve">
    <value>colorrange;</value>
  </data>
  <data name="DirectoryPathSearchTags" xml:space="preserve">
    <value>directorypath;filepath;</value>
  </data>
  <data name="FilePathSearchTags" xml:space="preserve">
    <value>filepath;</value>
  </data>
  <data name="IntegerSliderSearchTags" xml:space="preserve">
    <value>integerslider;</value>
  </data>
  <data name="RangeSearchTags" xml:space="preserve">
    <value>numberrange;numbersequence;</value>
  </data>
  <data name="SequenceSearchTags" xml:space="preserve">
    <value>numbersequence;</value>
  </data>
  <data name="SelectionEdgeOutputPortName" xml:space="preserve">
    <value>곡선</value>
  </data>
  <data name="SelectionEdgesOutputPortName" xml:space="preserve">
    <value>곡선</value>
  </data>
  <data name="SelectionElementOutputPortName" xml:space="preserve">
    <value>Element</value>
  </data>
  <data name="SelectionElementsOutputPortName" xml:space="preserve">
    <value>Elements</value>
  </data>
  <data name="SelectionFaceOutputPortName" xml:space="preserve">
    <value>표면</value>
  </data>
  <data name="SelectionFacesOutputPortName" xml:space="preserve">
    <value>표면</value>
  </data>
  <data name="SelectionPointOutputPortName" xml:space="preserve">
    <value>점</value>
  </data>
  <data name="SelectionPointsOutputPortName" xml:space="preserve">
    <value>점</value>
  </data>
  <data name="NumberNodeInputMustBeNumeric" xml:space="preserve">
    <value>숫자를 입력해야 합니다.</value>
  </data>
  <data name="ColorPaletteDescription" xml:space="preserve">
    <value>팔레트에서 색상 선택</value>
  </data>
  <data name="ColorPaletteSearchTags" xml:space="preserve">
    <value>color</value>
  </data>
  <data name="EqualsWithToleranceDescription" xml:space="preserve">
    <value>특정 공차에 대해 x 및 y가 같으면 True를 반환합니다</value>
  </data>
  <data name="EqualsWithToleranceLhsRhsTooltip" xml:space="preserve">
    <value>정수 또는 double 값</value>
  </data>
  <data name="EqualsWithToleranceOutportTooltip" xml:space="preserve">
    <value>동일성 검사 결과</value>
  </data>
  <data name="EqualsWithToleranceSearchTags" xml:space="preserve">
    <value>equals;tolerance</value>
  </data>
  <data name="EqualsWithToleranceTooltip" xml:space="preserve">
    <value>동일성 검사에 허용되는 허용치
기본값: {0}</value>
  </data>
  <data name="DirectoryPathOutputDescription" xml:space="preserve">
    <value>디렉토리 경로</value>
  </data>
  <data name="FilePathOutputDescription" xml:space="preserve">
    <value>파일 경로</value>
  </data>
  <data name="IFNodeWarningMessage" xml:space="preserve">
    <value>이 노드는 업데이트되었으며 이후 버전의 Dynamo에서 제거됩니다. 기존 동작은 유지되지만 새 버전은 이제 비어 있는 리스트, Null 값 및 다양한 길이의 입력을 지원합니다. 이 개선된 동작을 사용하려면 이 노드를 바꾸십시오.</value>
  </data>
  <data name="ConversionNodeObsoleteMessage" xml:space="preserve">
    <value>은(는) 사용되지 않습니다. 새 단위 변환 노드를 사용하십시오.</value>
  </data>
  <data name="CustomSelectionNodeDescription" xml:space="preserve">
    <value>값을 사용자화할 수 있는 드롭다운 메뉴.</value>
  </data>
  <data name="CustomSelectionSearchTags" xml:space="preserve">
    <value>dropdown;custom;custom dropdown;enum;custom enum</value>
  </data>
  <data name="IntegerSliderInfoMessage" xml:space="preserve">
    <value>입력한 값이 int64 범위에 없습니다.</value>
  </data>
  <data name="CustomSelectionOutputDescription" xml:space="preserve">
    <value>선택된 값</value>
  </data>
  <data name="TooltipTextAction" xml:space="preserve">
    <value>동작을 실행하는 노드</value>
  </data>
  <data name="TooltipTextCreate" xml:space="preserve">
    <value>데이터를 작성하는 노드</value>
  </data>
  <data name="TooltipTextQuery" xml:space="preserve">
    <value>데이터를 조회하는 노드</value>
  </data>
  <data name="RememberDescription" xml:space="preserve">
    <value>이 노드를 통과하는 데이터를 Dynamo 파일에 저장합니다. 입력이 null이면 저장된 데이터를 반환합니다.</value>
  </data>
  <data name="RememberInputToolTip" xml:space="preserve">
    <value>샘플링하고 파일에 저장할 데이터입니다.</value>
  </data>
  <data name="RememberOuputToolTip" xml:space="preserve">
    <value>데이터</value>
  </data>
  <data name="GateDescription" xml:space="preserve">
    <value>이 노드를 통해 다운스트림 노드로 전달되는 데이터를 차단합니다. 노드는 노드 값이 열림으로 설정된 경우에만 입력 데이터를 반환합니다.

제너레이티브 디자인 워크플로우에서 이 노드를 사용하여 Revit에서 요소를 배치할 노드의 동작을 제어하고 차단해야 합니다</value>
  </data>
  <data name="GateInPortToolTip" xml:space="preserve">
    <value>게이트 컨트롤을 사용하여 다운스트림 노드에 전달할 데이터입니다.</value>
  </data>
  <data name="GateOutPortToolTip" xml:space="preserve">
    <value>데이터</value>
  </data>
  <data name="GateSearchTags" xml:space="preserve">
    <value>gate;stop;data</value>
  </data>
  <data name="DefineDataDescription" xml:space="preserve">
    <value>입력 데이터 유형의 유효성을 검사하고 반환합니다.</value>
  </data>
  <data name="DefineDataInputTooltip" xml:space="preserve">
    <value>유효성을 검사할 입력 데이터입니다. 허용되는 유형의 리스트는 드롭다운을 참조하십시오.</value>
  </data>
  <data name="DefineDataOutputTooltip" xml:space="preserve">
    <value>유효성 검사된 데이터</value>
  </data>
  <data name="DefineDataDisplayValueMessage" xml:space="preserve">
    <value>유형 선택</value>
  </data>
  <data name="FromObjectPortDataFormatToolTip" xml:space="preserve">
    <value>숫자 값에 대한 형식 지정자에 대한 자세한 내용은 확장 노드 도움말을 참조하십시오.
기본값: G</value>
  </data>
  <data name="CurveMapperCountInputPortName" xml:space="preserve">
    <value>count</value>
  </data>
  <data name="CurveMapperCountInputPortToolTip" xml:space="preserve">
    <value>Number of values to generate.

Default value (int): {0}</value>
  </data>
  <data name="CurveMapperDescription" xml:space="preserve">
    <value>선택한 수학 곡선을 기준으로 y 좌표에 따라 x 좌표를 재분배하여 점 분배를 정밀하게 제어합니다.</value>
  </data>
  <data name="CurveMapperSearchTags" xml:space="preserve">
    <value>graph;curve;mapper;math</value>
  </data>
  <data name="CurveMapperWarningMessage" xml:space="preserve">
    <value>제공된 원래 값은 곡선 방정식을 사용하여 재분배할 수 없습니다.</value>
  </data>
  <data name="CurveMapperXMaxLimitInputPortName" xml:space="preserve">
    <value>x-MaxLimit</value>
  </data>
  <data name="CurveMapperXMaxLimitInputPortToolTip" xml:space="preserve">
    <value>Maximum value for the X-axis domain.

Default value (double): {0}</value>
  </data>
  <data name="CurveMapperXMinLimitInputPortName" xml:space="preserve">
    <value>x-MinLimit</value>
  </data>
  <data name="CurveMapperXMinLimitInputPortToolTip" xml:space="preserve">
    <value>Minimum value for the X-axis domain.

Default value (double): {0}</value>
  </data>
  <data name="CurveMapperXValuesOutputPortName" xml:space="preserve">
    <value>x-Values</value>
  </data>
  <data name="CurveMapperXValuesOutputPortToolTip" xml:space="preserve">
    <value>곡선에서 파생된 X 값입니다.

double[]</value>
  </data>
  <data name="CurveMapperYMaxLimitInputPortName" xml:space="preserve">
    <value>y-MaxLimit</value>
  </data>
  <data name="CurveMapperYMaxLimitInputPortToolTip" xml:space="preserve">
    <value>Maximum value for the Y-axis domain.

Default value (double): {0}</value>
  </data>
  <data name="CurveMapperYMinLimitInputPortName" xml:space="preserve">
    <value>y-MinLimit</value>
  </data>
  <data name="CurveMapperYMinLimitInputPortToolTip" xml:space="preserve">
    <value>Minimum value for the Y-axis domain.

Default value (double): {0}</value>
  </data>
  <data name="CurveMapperYValuesOutputPortName" xml:space="preserve">
    <value>y-Values</value>
  </data>
  <data name="CurveMapperYValuesOutputPortToolTip" xml:space="preserve">
    <value>곡선에서 파생된 Y 값입니다.

double[]</value>
  </data>
  <data name="ColorPalettePortDataResultToolTip" xml:space="preserve">
    <value>Selected color</value>
  </data>
</root>