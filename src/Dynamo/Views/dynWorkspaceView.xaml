<UserControl x:Class="Dynamo.Views.dynWorkspaceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Dynamo.Controls" xmlns:views="clr-namespace:Dynamo.Nodes.Views"
             xmlns:nodes="clr-namespace:Dynamo.Nodes" 
             xmlns:dynamo="clr-namespace:Dynamo"
             xmlns:connectors="clr-namespace:Dynamo.Connectors" xmlns:commands="clr-namespace:Dynamo.Commands"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             MouseLeftButtonDown="DynWorkspaceView_OnMouseLeftButtonDown"
             MouseUp="DynWorkspaceView_OnMouseUp"
             MouseMove="DynWorkspaceView_OnMouseMove" 
             KeyDown="dynWorkspaceView_KeyDown" KeyUp="dynWorkspaceView_KeyUp" 
             IsHitTestVisible="{Binding IsCurrentSpace}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DynamoElements;component/Themes/DynamoColorsAndBrushes.xaml" />
                <ResourceDictionary Source="/DynamoElements;component/Themes/DynamoConverters.xaml" />
                <ResourceDictionary Source="/DynamoElements;component/Themes/DynamoModern.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <!--<UserControl.Resources>
        <controls:BoolToFullscreenWatchVisibilityConverter x:Key="BoolToFullscreenWatchVisibilityConverter"/>
    </UserControl.Resources>-->
        
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
        <Canvas Name="backgroundCanvas" 
                 Margin="0,0,0,0" 
                 ClipToBounds="True" 
                 Grid.Row="0" 
                 Grid.Column="2"
                 IsHitTestVisible="{Binding ShouldBeHitTestVisible}">
            <Canvas.Background>
                <SolidColorBrush Color="{Binding IsHomeSpace, Converter={StaticResource WorkspaceBackgroundColorConverter}}" />
            </Canvas.Background>
        </Canvas>

         <ItemsControl ItemsSource="{Binding Watch3DViewModels}"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <!--OLD visibility code for full screen watch no longer required because we delete the watches-->
            <!--HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            Visibility="{Binding FullScreenWatchVisible,-->
             
            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type controls:Watch3DFullscreenViewModel}">
                    <controls:WatchViewFullscreen></controls:WatchViewFullscreen>
                </DataTemplate>
            </ItemsControl.Resources>
        </ItemsControl>
        
        <Canvas Name="outerCanvas" 
                 Margin="0,0,0,0" 
                 ClipToBounds="True" 
                 Grid.Row="0" 
                 Grid.Column="2"
                 IsHitTestVisible="{Binding ShouldBeHitTestVisible}">
            
            <controls:ZoomBorder ClipToBounds="True" MouseWheel="zoomBorder_MouseWheel" BorderThickness="0"
                  MouseMove="zoomBorder_MouseMove" x:Name="zoomBorder">
                <Grid>
                    <Canvas Name="selectionCanvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Rectangle
                                    x:Name="selectionBox"
                                    Visibility="Collapsed"
                                    Stroke="Black"
                                    StrokeThickness="1"
                                    IsHitTestVisible="False"
                                />
                    </Canvas>

                    <ItemsControl ItemsSource="{Binding WorkspaceElements}" Name="WorkspaceElements">

                        <ItemsControl.Resources>

                            <DataTemplate DataType="{x:Type controls:dynNodeViewModel}">
                                <controls:dynNodeView></controls:dynNodeView>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type nodes:dynNoteViewModel}">
                                <nodes:dynNoteView></nodes:dynNoteView>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type connectors:dynConnectorViewModel}">
                                <views:dynConnectorView></views:dynConnectorView>
                            </DataTemplate>
                        </ItemsControl.Resources>
                        
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <controls:DragCanvas
                                    UseLayoutRounding="True"
                                    Width="100000" 
                                    Height="100000" 
                                    x:Name="DragCanvas"
                                    Visibility="Visible"
                                    ContextMenuOpening="WorkBench_ContextMenuOpening" 
                                    Loaded="WorkBench_OnLoaded" IsItemsHost="True">
                                    <Canvas.Background>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Canvas.Background>
                                </controls:DragCanvas>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                            <Setter Property ="Panel.ZIndex" Value="{Binding ZIndex}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    </ItemsControl>

            </Grid>
                
        </controls:ZoomBorder>
            
            <Label Canvas.Top="40" Canvas.Right="0" Content="Not Under Package Control" Name="packageControlLabel" 
                        HorizontalContentAlignment="Right" Visibility ="Collapsed" FontSize="14"
                        FontFamily="Trebuchet MS" Opacity=".6" IsHitTestVisible="False" />

            <Canvas.ContextMenu>
                <ContextMenu>

                    <MenuItem  Header="_Select All"  Name="SelectAll" Command="{Binding SelectAllCommand}" />
                    
                    <MenuItem  Header="_Align Selection"  Name="Align">
                        <MenuItem  Header="_X Average"  Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalCenter"/>
                        <MenuItem  Header="_Left" Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalLeft"/>
                        <MenuItem  Header="_Right" Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalRight"/>
                        <MenuItem  Header="_Y Average" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalCenter"/>
                        <MenuItem  Header="_Top" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalTop"/>
                        <MenuItem  Header="_Bottom" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalBottom"/>
                        <MenuItem  Header="_Y Distribute" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalDistribute"/>
                        <MenuItem  Header="_X Distribute" Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalDistribute"/>
                    </MenuItem>

                    <MenuItem  Header="_New Node From Selection"  Name="NodeFromSelection" Command="{Binding NodeFromSelectionCommand}" />
                    <MenuItem  Header="_Nodes From Selected Geometry" Visibility="{Binding Path=CanFindNodesFromElements, Converter={StaticResource BooleanToVisibilityConverter}}"  
                               Name="ShowElementsInContext" Command="{Binding FindNodesFromSelectionCommand}" />
                    <MenuItem  Header="_Edit Custom Node Properties..."  Name="EditProperties" Click="WorkspacePropertyEditClick" Visibility="{Binding Path=IsHomeSpace, Converter={StaticResource InverseBoolToVisibilityCollapsedConverter}}"  />
                    <MenuItem  Header="_Publish This Custom Node..."  Name="Publish" Command="{Binding Source={x:Static commands:DynamoCommands.PublishCurrentWorkspaceCmd}}"  Visibility="{Binding Path=IsHomeSpace, Converter={StaticResource InverseBoolToVisibilityCollapsedConverter}}"  />
                
                </ContextMenu>
            </Canvas.ContextMenu>

        </Canvas>
        
    </Grid>
</UserControl>
