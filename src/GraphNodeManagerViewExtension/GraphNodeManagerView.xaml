<UserControl x:Class="Dynamo.GraphNodeManager.GraphNodeManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Dynamo.GraphNodeManager"
             xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:converters="clr-namespace:Dynamo.GraphNodeManager.Converters"
             xmlns:controls="clr-namespace:Dynamo.GraphNodeManager.Controls"
             xmlns:ui="clr-namespace:Dynamo.UI;assembly=DynamoCoreWpf"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToBackgroundColorConverter x:Key="BooleanToBackgroundColorConverter"/>
            <converters:BooleanToBackgroundHoverColorConverter x:Key="BooleanToBackgroundHoverColorConverter"/>
            <converters:BooleanToBackgroundPressedColorConverter x:Key="BooleanToBackgroundPressedColorConverter"/>
            <converters:BooleanToForegroundColorConverter x:Key="BooleanToForegroundColorConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="MainGrid">
        <Grid.Resources>
            <!-- Image Style -->
            <Style x:Key="ImageStyle" TargetType="Image">
                <Setter Property="Width" Value="12"></Setter>
                <Setter Property="Height" Value="12"></Setter>
                <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                <Setter Property="UseLayoutRounding" Value="True"></Setter>
                <Setter Property="Margin" Value="3 0"></Setter>
            </Style>
            <!-- DataGrid style -->
            <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
                <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
                <Setter Property="RowStyle" Value="{DynamicResource RowStyle1}"/>
                <Setter Property="CellStyle" Value="{DynamicResource CellStyle1}"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
                <Setter Property="BorderThickness" Value="0.5" />
                <Setter Property="BorderBrush" Value="#555555"/>
                <Setter Property="ColumnWidth" Value="Auto"/>
                <Setter Property="GridLinesVisibility" Value="Vertical"/>
                <Setter Property="VerticalGridLinesBrush" Value="#555555"/>
                <Setter Property="UseLayoutRounding" Value="True"></Setter>
            </Style>
            <!-- DataGridColumnHeader style -->
            <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
                <Setter Property="Height" Value="20"/>
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="Foreground" Value="#999999"/>
                <Setter Property="FontSize" Value="10" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="#555555"/>
                <Setter Property="Margin" Value="10,0,10,0"/>
            </Style>
            <!-- DataGridRow style -->
            <Style x:Key="RowStyle1" TargetType="DataGridRow">
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="24"></Setter>
                <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                <Setter Property="BorderBrush" Value="#555555"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#555555" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#555555" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Cell style -->
            <Style x:Key="CellStyle1" TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#555555" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Group Style -->
            <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupItem}">
                            <StackPanel>
                                <TextBlock Text="{Binding Name}"/>
                                <ItemsPresenter/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <!-- Search Bar -->
        <controls:SearchBoxControl Grid.Row="0" Margin="10 5 20 5"/>
        
        <!-- Contains all filter icons -->
        <DockPanel Grid.Row="1">
            <Grid x:Name="FilterGrid" DockPanel.Dock="Top">
                <ItemsControl x:Name="FilterItemControl"
                              Margin="5"
                              ItemsSource="{Binding FilterItems, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <controls:FilterItemControl/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

        </Grid>

        <Image x:Name="ExportImage"
               DockPanel.Dock="Right"
               Width="16px"
               Height="16px"
               Margin="15 0 15 15"
               HorizontalAlignment="Right"
               VerticalAlignment="Center"
               Source="/GraphNodeManagerViewExtension;component/Images/Export.png"
               Stretch="UniformToFill"
               Cursor="Hand"/>
        </DockPanel>

        <!-- Node Data Grid -->
        <DataGrid x:Name="NodesInfoDataGrid"
                  Grid.Row="2"
                  ItemsSource="{Binding Path=NodesCollection.View}" 
                  IsSynchronizedWithCurrentItem="True"
                  Style="{StaticResource DataGridStyle1}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  Background="#353535"
                  AlternatingRowBackground="#3C3C3C"
                  AlternationCount="2"
                  FontSize="10"
                  Foreground="#F5F5F5"
                  VerticalAlignment="Center"
                  SelectionUnit="FullRow"
                  SelectionMode="Single"
                  ScrollViewer.CanContentScroll="False" 
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  CanUserResizeColumns="True" 
                  CanUserSortColumns="True"
                  HeadersVisibility="Column"
                  SelectionChanged="NodeTable_SelectionChanged">

            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock 
                                    Text="{Binding Name}"
                                    Foreground="#BBBBBB"
                                    Margin="3"
                                    FontSize="12"
                                />
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <DataGrid.Columns>

                <!-- Node Name --> 
                <DataGridTextColumn
                    Header="Name"
                    Binding="{Binding Name}"
                    FontWeight="Light"
                    Foreground="#F5F5F5"
                    IsReadOnly="True"
                    Width="3*"></DataGridTextColumn>


                <!-- TODO: Create a custom Image with a DependancyProperty to avoid repeating converter
                    https://stackoverflow.com/questions/11121828/how-to-set-a-converter-in-a-style-but-not-the-path -->

                <!-- State -->
                <DataGridTemplateColumn
                    Header="State" 
                    Width="*"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/Function.png" 
                                       Style="{StaticResource ImageStyle}"
                                       Visibility="{Binding StateIsFunction, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/IsInput.png"
                                       Style="{StaticResource ImageStyle}" 
                                       Visibility="{Binding StateIsInput, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/IsOutput.png"
                                       Style="{StaticResource ImageStyle}" 
                                       Visibility="{Binding StateIsOutput, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Status -->
                <DataGridTemplateColumn
                    Header="Status" 
                    Width="*"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/Frozen.png" 
                                       Style="{StaticResource ImageStyle}"
                                       Visibility="{Binding StatusIsFrozen, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/Hidden.png"
                                       Style="{StaticResource ImageStyle}" 
                                       Visibility="{Binding StatusIsHidden, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Issues -->
                <DataGridTemplateColumn
                    Header="Issues" 
                    Width="*"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/Alert.png" 
                                       Style="{StaticResource ImageStyle}"
                                       Visibility="{Binding IssuesHasWarning, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/Error.png"
                                       Style="{StaticResource ImageStyle}" 
                                       Visibility="{Binding IssuesHasError, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                                <Border Height="12" Width="12" CornerRadius="6" 
                                        VerticalAlignment="Center" HorizontalAlignment="Center"
                                        Visibility="{Binding DismissedAlertsCount, Converter={StaticResource IntToVisibilityConverter}}"
                                        Background="{StaticResource PrimaryCharcoal100Brush}">
                                    <TextBlock Text="{Binding DismissedAlertsCount}" 
                                               Foreground="{StaticResource DarkGreyBrush}" 
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               FontSize="8"/>
                                </Border>
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/MissingNode.png"
                                       Style="{StaticResource ImageStyle}" 
                                       Visibility="{Binding IsDummyNode, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Info -->
                <DataGridTemplateColumn
                    Header="Info" 
                    Width="*"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/Info.png" 
                                       Style="{StaticResource ImageStyle}"
                                       Visibility="{Binding IsInfo, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/EmptyList.png"
                                       Style="{StaticResource ImageStyle}" 
                                       Visibility="{Binding IsEmptyList, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                                <Image Source="/GraphNodeManagerViewExtension;component/Images/Null.png"
                                       Style="{StaticResource ImageStyle}" 
                                       Visibility="{Binding IsNull, Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
