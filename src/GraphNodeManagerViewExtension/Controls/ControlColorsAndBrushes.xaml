<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:Dynamo.UI;assembly=DynamoCoreWpf">

    <ResourceDictionary.MergedDictionaries>
        <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
        <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Colors -->
    <Color x:Key="MidGrayColor">#999999</Color>
    <Color x:Key="BorderColor">#555</Color>

    <!--  Brushes  -->
    <SolidColorBrush x:Key="MidGrayBrush" Color="{StaticResource MidGrayColor}" />
    <SolidColorBrush x:Key="BorderColorBrush" Color="{StaticResource BorderColor}" />

    <!-- DataGrid style -->
    <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
        <Setter Property="RowStyle" Value="{x:Null}"/>
        <Setter Property="CellStyle" Value="{DynamicResource CellStyle1}"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColorBrush}"/>
        <Setter Property="ColumnWidth" Value="Auto"/>
        <Setter Property="GridLinesVisibility" Value="Vertical"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderColorBrush}"/>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
    </Style>

    <!-- DataGridColumnHeadersPresenter style -->
    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- DataGridColumnHeader style -->
    <Style x:Key="ColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Background" Value="{StaticResource ExtensionBackgroundColor}"/>
        <Setter Property="Foreground" Value="#bbbbbb"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColorBrush}"></Setter>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="6 0"/>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Rectangle HorizontalAlignment="Left" Height="11" Width="1" Margin="-1,1,6,3" Stroke="#BBBBBB"/>
                        <TextBlock Text="{Binding}"  Margin="0, 2, 2, 2"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridColumnHeader style for the first column header on the left -->
    <Style x:Key="FirstColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource ColumnHeaderStyle1}">
        <Setter Property="Margin" Value="5 0 0 0 "/>
    </Style>

    <!-- DataGridRow style -->
    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Setter Property="Background" Value="{StaticResource MainBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="24"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColorBrush}"/>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource DarkerGreyBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#434343"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource MainBackgroundColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Cell style -->
    <Style x:Key="CellStyle1" TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="1 0 0 0" />
        <Setter Property="MinHeight" Value="24"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" Margin="2 0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource BorderColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Group Style -->
    <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <TextBlock Text="{Binding Name}"/>
                        <ItemsPresenter/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Image Style -->
    <Style x:Key="ImageStyle" TargetType="Image">
        <Setter Property="Width" Value="16"></Setter>
        <Setter Property="Height" Value="16"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="Margin" Value="3 0"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
    </Style>

    <!-- Button Style -->
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource DarkThemeBodyMediumBrush}"></Setter> 
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Blue400Brush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource MidLightBlueBrush}" />
            </Trigger>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="0.0" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>