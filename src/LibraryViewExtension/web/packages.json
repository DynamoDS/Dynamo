{
    "success": true,
    "message": "Found packages",
    "content": [
        {
            "_id": "584cd9eefdef23aa6e0000d6",
            "name": "Synthetic",
            "__v": 3,
            "white_list": false,
            "versions": [
                {
                    "_id": "584cd9eefdef23aa6e0000d7",
                    "contains_binaries": true,
                    "node_libraries": [
                        "Synthetic.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
                        "Synthetic.Revit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                    ],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/82dbfb97-024a-47fc-b2b4-2af4c3389144gregPkg346.zip",
                    "contents": "Json.Decode - Input a text string formated in JSON, return a nested list., Json.Encode - Input a title and list of list pairs, node encodes the lists into JSON., RoundInches - Round a number to the nearest inch or fractional inch.",
                    "engine_metadata": "",
                    "engine_version": "1.2.1.3083",
                    "created": "2016-12-11T04:45:34.665Z",
                    "full_dependency_versions": [
                        "1.2.161210"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "584cd9eefdef23aa6e0000d6",
                            "name": "Synthetic"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "1.2.161210"
                },
                {
                    "_id": "584e1ccefdef23aa6e0000de",
                    "contains_binaries": true,
                    "node_libraries": [
                        "Synthetic.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
                        "Synthetic.Revit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
                        "Synthetic.UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                    ],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/5e46649f-5343-4f5e-a05a-97b3dc1f87a9gregPkg469.zip",
                    "contents": "Json.Decode - Input a text string formated in JSON, return a nested list., Json.Encode - Input a title and list of list pairs, node encodes the lists into JSON., RoundInches - Round a number to the nearest inch or fractional inch.",
                    "engine_metadata": "",
                    "engine_version": "1.2.1.3083",
                    "created": "2016-12-12T03:43:10.240Z",
                    "full_dependency_versions": [
                        "1.2.161211"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "584cd9eefdef23aa6e0000d6",
                            "name": "Synthetic"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "1.2.161211"
                }
            ],
            "latest_version_update": "2016-12-12T03:43:10.240Z",
            "num_versions": 2,
            "comments": [],
            "num_comments": 0,
            "latest_comment": "1970-01-01T00:00:00.000Z",
            "votes": 0,
            "downloads": 182,
            "repository_url": "https://github.com/amcgoey/Synthetic",
            "site_url": "https://github.com/amcgoey/Synthetic",
            "banned": false,
            "deprecated": false,
            "group": "Synthetic",
            "engine": "dynamo",
            "license": "The MIT License (MIT) Copyright (c) 2016 Arthur McGoey.  Refer to repository for full license info.",
            "used_by": [],
            "num_dependents": 0,
            "description": "Synthetic provides Dynamo nodes for manipulating data, and accessing Revit API objects.  Includes nodes for documents, worksets, view templates, dictionary data types, and Enum (enumerations).  Please refer to the example definitions in the extra folder.  The examples show how to use many of the included nodes.\n\nUPDATED: Reorganized all the UI nodes into their own section.  This may break the past nodes.  Significantly updated the DialogRevitTask class.  My apologies for any nodes that break due to the changes.  The package organization should be settled now.",
            "maintainers": [
                {
                    "_id": "54e2cfe2dcee4dfd260000f3",
                    "username": "mcgoey.unm"
                }
            ],
            "keywords": [
                "document",
                "workset",
                "view",
                "template",
                "dictionary",
                "enum",
                "enumeration",
                "dialog",
                "form",
                "color"
            ],
            "created": "2016-12-11T04:45:34.665Z"
        },
        {
            "_id": "52f996f8bfe425953600006e",
            "__v": 3,
            "name": "Quad Points on Face",
            "white_list": false,
            "versions": [
                {
                    "_id": "52f996f8bfe425953600006f",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-dev/7f21ebd0-b610-4191-a216-c983aee11901gregPkg235.zip",
                    "contents": "Quad Points on Face - Creates a regular grid of points on a face in quad groups",
                    "engine_metadata": "",
                    "engine_version": "0.6.3.16056",
                    "created": "2014-02-11T03:20:24.126Z",
                    "full_dependency_versions": [
                        "0.0.1",
                        "0.0.1"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "52f996f8bfe425953600006e",
                            "name": "Quad Points on Face"
                        },
                        {
                            "_id": "522930128faf243666000003",
                            "name": "Quads from Rectangular Grid"
                        }
                    ],
                    "direct_dependency_versions": [
                        "0.0.1"
                    ],
                    "direct_dependency_ids": [
                        {
                            "_id": "522930128faf243666000003",
                            "name": "Quads from Rectangular Grid"
                        }
                    ],
                    "change_log": "",
                    "version": "0.0.1"
                },
                {
                    "_id": "549f57893bdbc3ea4a000013",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-dev/66f57f8f-d258-40b7-a632-99d0fa49a111gregPkg655.zip",
                    "contents": "Quad Points on Face - Creates a regular grid of points on a face in quad groups",
                    "engine_metadata": "",
                    "engine_version": "0.7.5.3566",
                    "created": "2014-12-28T01:06:17.540Z",
                    "full_dependency_versions": [
                        "0.1.0",
                        "0.1.0"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "52f996f8bfe425953600006e",
                            "name": "Quad Points on Face"
                        },
                        {
                            "_id": "522930128faf243666000003",
                            "name": "Quads from Rectangular Grid"
                        }
                    ],
                    "direct_dependency_versions": [
                        "0.1.0"
                    ],
                    "direct_dependency_ids": [
                        {
                            "_id": "522930128faf243666000003",
                            "name": "Quads from Rectangular Grid"
                        }
                    ],
                    "change_log": "",
                    "version": "0.1.0"
                }
            ],
            "latest_version_update": "2014-12-28T01:06:17.540Z",
            "num_versions": 2,
            "comments": [],
            "num_comments": 0,
            "latest_comment": "1970-01-01T00:00:00.000Z",
            "votes": -1,
            "downloads": 959,
            "repository_url": "",
            "site_url": "",
            "banned": false,
            "deprecated": false,
            "group": "",
            "engine": "dynamo",
            "license": "MIT",
            "used_by": [],
            "num_dependents": 0,
            "description": "Creates a regular grid of points on a face in quad groups",
            "maintainers": [
                {
                    "_id": "5224cf86e2f476ca05000053",
                    "username": "kronz"
                }
            ],
            "keywords": [
                "face",
                "uv",
                "quad",
                "paneling"
            ],
            "created": "2014-02-11T03:20:24.126Z"
        },
        {
            "_id": "58b58359f4db78ec01000068",
            "name": "ArePointsCollinear",
            "__v": 1,
            "white_list": false,
            "versions": [
                {
                    "_id": "58b58359f4db78ec01000069",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/5792cc5c-6740-427b-a9d5-f0aeead1e6a9gregPkg49.zip",
                    "contents": "ArePointsCollinear - Tests whether points are collinear in the sequence that they are provided",
                    "engine_metadata": "",
                    "engine_version": "1.2.1.3083",
                    "created": "2017-02-28T14:04:09.801Z",
                    "full_dependency_versions": [
                        "2017.1.1"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "58b58359f4db78ec01000068",
                            "name": "ArePointsCollinear"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "2017.1.1"
                }
            ],
            "latest_version_update": "2017-02-28T14:04:09.801Z",
            "num_versions": 1,
            "comments": [],
            "num_comments": 0,
            "latest_comment": "1970-01-01T00:00:00.000Z",
            "votes": 0,
            "downloads": 28,
            "repository_url": "",
            "site_url": "",
            "banned": false,
            "deprecated": false,
            "group": "Lightos",
            "engine": "dynamo",
            "license": "MIT",
            "used_by": [],
            "num_dependents": 0,
            "description": "Produces a list a true or false statements testing whether sequential points are collinear",
            "maintainers": [
                {
                    "_id": "5889cf44ca6a5edb650000a0",
                    "username": "tom.james@bailygarner.co.uk"
                }
            ],
            "keywords": [
                "points",
                "collinear"
            ],
            "created": "2017-02-28T14:04:09.801Z"
        },
        {
            "_id": "57619b51e70394822f0000a9",
            "name": "Honeybee",
            "__v": 19,
            "white_list": false,
            "versions": [
                {
                    "_id": "57619b51e70394822f0000aa",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/0acc7862-3aea-44f7-a0d1-b017d4546d9bgregPkg746.zip",
                    "contents": "Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\nUse \"Rooms to Zone\" node to convert them to Honeybee zones.",
                    "engine_metadata": "",
                    "engine_version": "1.0.0.1180",
                    "created": "2016-06-15T18:15:45.554Z",
                    "full_dependency_versions": [
                        "0.0.1"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.0.1"
                },
                {
                    "_id": "5773d8a3a8864af46c000003",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/abf459a3-1493-4dd7-9e10-d0cd094de97dgregPkg644.zip",
                    "contents": "Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density).",
                    "engine_metadata": "",
                    "engine_version": "1.0.0.1180",
                    "created": "2016-06-29T14:18:11.317Z",
                    "full_dependency_versions": [
                        "0.0.2"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.0.2"
                },
                {
                    "_id": "577d7be0535146064800002e",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/47dc9bf9-dcaa-4f14-8bf5-f8d39c61d7a8gregPkg719.zip",
                    "contents": "Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Generate Test Points by Grid Size - Calculate number of direct sunlight hours., Generate Test Points from HBZones - Calculate number of direct sunlight hours., Grid-based Analysis Recipe - Create an analysis recipe for a grid-based daylight or radiation analysis., Honeybee Surface - Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component.\r\nNot available in the currant version for Dynamo but this surface can be combined with other surfaces to make HBZones with the \"Create Honeybee Zone\" node., Radiance Glass Material by Single Value - Create a Radiance material by a single value for visible transmittace of the glass., Radiance Parameters - Radiance Parameters\r\nCheck here for more details about default values at (http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html) or read more at: (http://daysim.ning.com/) and check this presentation by John Mardaljevic: (http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf), Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density)., Run Radiance Simulation - Write and run radiance simulations from Radiance recipes., Sky with Certain Illuminance - Genrate a uniform CIE sky from an illuminace value, Sunlighthours Analysis Recipe - Calculate number of direct sunlight hours.",
                    "engine_metadata": "",
                    "engine_version": "1.0.0.1180",
                    "created": "2016-07-06T21:45:04.292Z",
                    "full_dependency_versions": [
                        "0.0.3"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.0.3"
                },
                {
                    "_id": "577dbb1e5351460648000030",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/81916e3f-774d-43bb-b685-85a0082dd66egregPkg289.zip",
                    "contents": "CIE Standard Sky - Generate Radiance's CIE Standard sky (aka. gensky)., Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Generate Test Points by Grid Size - Generate test points from Dynamo surfaces based on grid size., Generate Test Points from HBZones - Generate test points from Honeybee zones based on grid size., Grid-based Analysis Recipe - Create an analysis recipe for a grid-based daylight or radiation analysis., Honeybee Surface - Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component.\r\nNot available in the currant version for Dynamo but this surface can be combined with other surfaces to make HBZones with the \"Create Honeybee Zone\" node., Radiance Glass Material by Single Value - Create a Radiance material by a single value for visible transmittace of the glass., Radiance Parameters - Radiance Parameters\r\nCheck here for more details about default values at (http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html) or read more at: (http://daysim.ning.com/) and check this presentation by John Mardaljevic: (http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf), Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density)., Run Radiance Simulation - Write and run radiance simulations from Radiance recipes., Sky with Certain Illuminance - Genrate a uniform CIE sky from an illuminace value, Sunlighthours Analysis Recipe - Calculate number of direct sunlight hours.",
                    "engine_metadata": "",
                    "engine_version": "1.0.0.1180",
                    "created": "2016-07-07T02:14:54.740Z",
                    "full_dependency_versions": [
                        "0.0.4"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.0.4"
                },
                {
                    "_id": "5782dfa65351460648000040",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/ec7a5f01-d705-471b-af69-a9bc3f04ad03gregPkg952.zip",
                    "contents": "CIE Standard Sky - Generate Radiance's CIE Standard sky (aka. gensky)., Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Generate Test Points by Grid Size - Generate test points from Dynamo surfaces based on grid size., Generate Test Points from HBZones - Generate test points from Honeybee zones based on grid size., Grid-based Analysis Recipe - Create an analysis recipe for a grid-based daylight or radiation analysis., Honeybee Surface - Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component.\r\nNot available in the currant version for Dynamo but this surface can be combined with other surfaces to make HBZones with the \"Create Honeybee Zone\" node., Radiance Glass Material by Single Value - Create a Radiance material by a single value for visible transmittace of the glass., Radiance Parameters - Radiance Parameters\r\nCheck here for more details about default values at (http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html) or read more at: (http://daysim.ning.com/) and check this presentation by John Mardaljevic: (http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf), Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density)., Run Radiance Simulation - Write and run radiance simulations from Radiance recipes., Sky with Certain Illuminance - Genrate a uniform CIE sky from an illuminace value, Sunlighthours Analysis Recipe - Calculate number of direct sunlight hours.",
                    "engine_metadata": "",
                    "engine_version": "1.0.0.1180",
                    "created": "2016-07-10T23:52:06.042Z",
                    "full_dependency_versions": [
                        "0.0.5"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.0.5"
                },
                {
                    "_id": "5783190f5351460648000043",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/a364e259-55ca-480a-9d39-464b89b747b3gregPkg592.zip",
                    "contents": "CIE Standard Sky - Generate Radiance's CIE Standard sky (aka. gensky)., Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Generate Test Points by Grid Size - Generate test points from Dynamo surfaces based on grid size., Generate Test Points from HBZones - Generate test points from Honeybee zones based on grid size., Grid-based Analysis Recipe - Create an analysis recipe for a grid-based daylight or radiation analysis., Honeybee Surface - Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component.\r\nNot available in the currant version for Dynamo but this surface can be combined with other surfaces to make HBZones with the \"Create Honeybee Zone\" node., Radiance Glass Material by Single Value - Create a Radiance material by a single value for visible transmittace of the glass., Radiance Parameters - Radiance Parameters\r\nCheck here for more details about default values at (http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html) or read more at: (http://daysim.ning.com/) and check this presentation by John Mardaljevic: (http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf), Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density)., Run Radiance Simulation - Write and run radiance simulations from Radiance recipes., Sky with Certain Illuminance - Genrate a uniform CIE sky from an illuminace value, Sunlighthours Analysis Recipe - Calculate number of direct sunlight hours.",
                    "engine_metadata": "",
                    "engine_version": "1.0.0.1180",
                    "created": "2016-07-11T03:57:03.690Z",
                    "full_dependency_versions": [
                        "0.0.6"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.0.6"
                },
                {
                    "_id": "5829143a5af9f3713d00005a",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/282e649a-0f2b-4c4e-b6dc-0d20247274edgregPkg254.zip",
                    "contents": "CIE Standard Sky - Generate Radiance's CIE Standard sky (aka. gensky)., Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Generate Test Points by Grid Size - Generate test points from Dynamo surfaces based on grid size., Generate Test Points from HBZones - Generate test points from Honeybee zones based on grid size., Grid-based Analysis Recipe - Create an analysis recipe for a grid-based daylight or radiation analysis., Honeybee Surface - Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component.\r\nNot available in the currant version for Dynamo but this surface can be combined with other surfaces to make HBZones with the \"Create Honeybee Zone\" node., Radiance Glass Material by Single Value - Create a Radiance material by a single value for visible transmittace of the glass., Radiance Parameters - Radiance Parameters\r\nCheck here for more details about default values at (http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html) or read more at: (http://daysim.ning.com/) and check this presentation by John Mardaljevic: (http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf), Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density)., Run Radiance Simulation - Write and run radiance simulations from Radiance recipes., Sky with Certain Illuminance - Genrate a uniform CIE sky from an illuminace value, Sunlighthours Analysis Recipe - Calculate number of direct sunlight hours.",
                    "engine_metadata": "",
                    "engine_version": "1.2.0.2690",
                    "created": "2016-11-14T01:32:42.771Z",
                    "full_dependency_versions": [
                        "0.0.7"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.0.7"
                },
                {
                    "_id": "5834a3bd5af9f3713d0000e3",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/46516f28-3148-455b-936b-5daa512f0c10gregPkg315.zip",
                    "contents": "CIE Standard Sky - Generate Radiance's CIE Standard sky (aka. gensky)., Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Generate Test Points by Grid Size - Generate test points from Dynamo surfaces based on grid size., Generate Test Points from HBZones - Generate test points from Honeybee zones based on grid size., Grid-based Analysis Recipe - Create an analysis recipe for a grid-based daylight or radiation analysis., Honeybee Surface - Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component.\r\nNot available in the currant version for Dynamo but this surface can be combined with other surfaces to make HBZones with the \"Create Honeybee Zone\" node., Radiance Glass Material by Single Value - Create a Radiance material by a single value for visible transmittace of the glass., Radiance Parameters - Radiance Parameters\r\nCheck here for more details about default values at (http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html) or read more at: (http://daysim.ning.com/) and check this presentation by John Mardaljevic: (http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf), Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density)., Run Radiance Simulation - Write and run radiance simulations from Radiance recipes., Sky with Certain Illuminance - Genrate a uniform CIE sky from an illuminace value, Sunlighthours Analysis Recipe - Calculate number of direct sunlight hours.",
                    "engine_metadata": "",
                    "engine_version": "1.2.0.2690",
                    "created": "2016-11-22T19:59:57.742Z",
                    "full_dependency_versions": [
                        "0.0.8"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.0.8"
                },
                {
                    "_id": "5889f74dca6a5edb650000a9",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/0e967764-dc2d-417b-878c-e6c8637da73cgregPkg926.zip",
                    "contents": "CIE Standard Sky - Generate Radiance's CIE Standard sky (aka. gensky)., Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Generate Test Points by Grid Size - Generate test points from Dynamo surfaces based on grid size., Generate Test Points from HBZones - Generate test points from Honeybee zones based on grid size., Grid-based Analysis Recipe - Create an analysis recipe for a grid-based daylight or radiation analysis., Honeybee Surface - Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component.\r\nNot available in the currant version for Dynamo but this surface can be combined with other surfaces to make HBZones with the \"Create Honeybee Zone\" node., Radiance Glass Material by Single Value - Create a Radiance material by a single value for visible transmittace of the glass., Radiance Parameters - Radiance Parameters\r\nCheck here for more details about default values at (http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html) or read more at: (http://daysim.ning.com/) and check this presentation by John Mardaljevic: (http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf), Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density)., Run Radiance Simulation - Write and run radiance simulations from Radiance recipes., Sky with Certain Illuminance - Genrate a uniform CIE sky from an illuminace value, Sunlighthours Analysis Recipe - Calculate number of direct sunlight hours.",
                    "engine_metadata": "",
                    "engine_version": "1.2.1.3083",
                    "created": "2017-01-26T13:19:09.967Z",
                    "full_dependency_versions": [
                        "0.0.9"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.0.9"
                },
                {
                    "_id": "58c61ceff4db78ec010000ea",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/5f3decd7-2c8b-4ae0-9bbc-ee8d7cf12213gregPkg154.zip",
                    "contents": "CIE Standard Sky - Generate Radiance's CIE Standard sky (aka. gensky)., Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Generate Test Points by Grid Size - Generate test points from Dynamo surfaces based on grid size., Generate Test Points from HBZones - Generate test points from Honeybee zones based on grid size., Grid-based Analysis Recipe - Create an analysis recipe for a grid-based daylight or radiation analysis., Honeybee Surface - Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component.\r\nNot available in the currant version for Dynamo but this surface can be combined with other surfaces to make HBZones with the \"Create Honeybee Zone\" node., Radiance Glass Material by Single Value - Create a Radiance material by a single value for visible transmittace of the glass., Radiance Parameters - Radiance Parameters\r\nCheck here for more details about default values at (http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html) or read more at: (http://daysim.ning.com/) and check this presentation by John Mardaljevic: (http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf), Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density)., Run Radiance Simulation - Write and run radiance simulations from Radiance recipes., Sky with Certain Illuminance - Genrate a uniform CIE sky from an illuminace value, Sunlighthours Analysis Recipe - Calculate number of direct sunlight hours.",
                    "engine_metadata": "",
                    "engine_version": "1.2.1.3083",
                    "created": "2017-03-13T04:15:43.769Z",
                    "full_dependency_versions": [
                        "0.1.0"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "57619b51e70394822f0000a9",
                            "name": "Honeybee"
                        }
                    ],
                    "direct_dependency_versions": [],
                    "direct_dependency_ids": [],
                    "change_log": "",
                    "version": "0.1.0"
                }
            ],
            "latest_version_update": "2017-03-13T04:15:43.769Z",
            "num_versions": 10,
            "comments": [],
            "num_comments": 0,
            "latest_comment": "1970-01-01T00:00:00.000Z",
            "votes": 1,
            "downloads": 1071,
            "repository_url": "https://github.com/ladybug-analysis-tools/honeybee-plus",
            "site_url": "ladybug.tools",
            "banned": false,
            "deprecated": false,
            "group": "Ladybug Analysis Tools",
            "engine": "dynamo",
            "license": "GPL V 3.0",
            "used_by": [],
            "num_dependents": 0,
            "description": "Honeybee connects Revit and DynamoBIM to Radiance and OpenStudio (EnergyPlus) for daylight and energy simulation.\r\n\r\nThis version supports point in time daylight and sunlight hours analysis. Annual daylight analysis will be added soon.",
            "maintainers": [
                {
                    "_id": "56a911d7c3e9ee4a0800004a",
                    "username": "thisisladybug"
                }
            ],
            "keywords": [
                "radiance",
                "energyplus",
                "openstudio",
                "environmental",
                "analysis"
            ],
            "created": "2016-06-15T18:15:45.554Z"
        },
        {
            "_id": "58c6bb92f4db78ec010000f2",
            "name": "lineal",
            "__v": 1,
            "white_list": false,
            "versions": [
                {
                    "_id": "58c6bb92f4db78ec010000f3",
                    "contains_binaries": false,
                    "node_libraries": [],
                    "url_with_deps": "",
                    "url": "https://s3.amazonaws.com/greg-pkgs-prod/4c26f94c-447e-4f4e-b5e5-5fc633f529f7gregPkg275.zip",
                    "contents": "# de columnas y filas y respectivo rango - Numero de columnas y de filas y su respectivo rango para su uso en recorridos de codigo el rango esta establecido como:\r\nRango Filas = # de filas + 1\r\nRango Columnas = # de columnas + 1, Creación de Planos Horizontales y Verticales - Crea planos verticales y horizonrales a partir de un muro que contenga Ventanas, Geometry.SplitRecursively - Splits a surface or a solid recursively, using the resulting reduced geometry for every consecutive split. Select a point or another geometry to control the direction of the split., Longitud de grupos de trozos horizontales - Saca la longitud de los grupos de los trozos que estan unidos de forma horizontal, Muro fantasma identico a muro real - Crea un muro fantasma con las mismas propiedades del muro real;\r\nCurve\r\nHeight\r\nLevel\r\nWall Type, Puntos recursivos origen y referencia para corte vertical muro - El nodo crea puntos recursivamente para hallar el origen del muro, este se usa para organizar los planos verticales y crea puntos recursivos para el corte recursivo de los Solidos, Referencia para cortes verticales - Dado un grupo de planos verticales y sus debidos origenes, los organiza para el corte recursivo",
                    "engine_metadata": "",
                    "engine_version": "1.2.1.3083",
                    "created": "2017-03-13T15:32:34.542Z",
                    "full_dependency_versions": [
                        "1.1.1",
                        "1.2.2",
                        "0.90.7"
                    ],
                    "full_dependency_ids": [
                        {
                            "_id": "58c6bb92f4db78ec010000f2",
                            "name": "lineal"
                        },
                        {
                            "_id": "545a51aa893c653357000008",
                            "name": "SteamNodes"
                        },
                        {
                            "_id": "562f800e662bf0e9080002ab",
                            "name": "Clockwork for Dynamo 0.9.x"
                        }
                    ],
                    "direct_dependency_versions": [
                        "0.90.7",
                        "1.2.2"
                    ],
                    "direct_dependency_ids": [
                        {
                            "_id": "562f800e662bf0e9080002ab",
                            "name": "Clockwork for Dynamo 0.9.x"
                        },
                        {
                            "_id": "545a51aa893c653357000008",
                            "name": "SteamNodes"
                        }
                    ],
                    "change_log": "",
                    "version": "1.1.1"
                }
            ],
            "latest_version_update": "2017-03-13T15:32:34.542Z",
            "num_versions": 1,
            "comments": [],
            "num_comments": 0,
            "latest_comment": "1970-01-01T00:00:00.000Z",
            "votes": 0,
            "downloads": 22,
            "repository_url": "",
            "site_url": "",
            "banned": false,
            "deprecated": false,
            "group": "bolivar",
            "engine": "dynamo",
            "license": "MIT",
            "used_by": [],
            "num_dependents": 0,
            "description": "lineal cuadrado metros muro",
            "maintainers": [
                {
                    "_id": "58c6aaf4f4db78ec010000ef",
                    "username": "js.galindo1155@uniandes.edu.co"
                }
            ],
            "keywords": [
                "lineal",
                "cuadrado",
                "metros",
                "muro"
            ],
            "created": "2017-03-13T15:32:34.542Z"
        }
    ]
}