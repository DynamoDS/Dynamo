{"success":true,"message":"Found package","content":{"_id":"53e99ce50e5572016a00018a","__v":178,"name":"archi-lab.net","white_list":false,"versions":[{"_id":"53e99ce50e5572016a00018b","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/4cad0f0e-e98a-439a-9d5a-c620539f621fgregPkg248.zip","contents":"GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , ElementId - Queries Revit elements for ElementId, Id as string, Id as Integer, and GUID as string., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Fill Pattern - Get Fill Pattern by Name, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right)","engine_metadata":"","engine_version":"0.7.1.26723","created":"2014-08-12T04:49:41.531Z","full_dependency_versions":["0.0.1"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"0.0.1"},{"_id":"53f54d300e5572016a000199","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/ff595deb-9502-418b-a63c-05f672be12fcgregPkg349.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., ElementId - Queries Revit elements for ElementId, Id as string, Id as Integer, and GUID as string., Fill Pattern - Get Fill Pattern by Name, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right)","engine_metadata":"","engine_version":"0.7.1.26723","created":"2014-08-21T01:36:48.715Z","full_dependency_versions":["2014.8.20"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2014.8.20"},{"_id":"545bced2895fdbc25e000004","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/4483f5e3-090b-49ce-9c2f-247700721befgregPkg283.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., ElementId - Queries Revit elements for ElementId, Id as string, Id as Integer, and GUID as string., Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Get All Views - This node will query all views in the model and return them based on category","engine_metadata":"","engine_version":"0.7.4.3090","created":"2014-11-06T19:41:06.277Z","full_dependency_versions":["2014.11.6"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2014.11.6"},{"_id":"545fd475895fdbc25e000010","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/e5dd31f9-265b-40aa-8b1c-43052c3c2b4bgregPkg813.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., ElementId - Queries Revit elements for ElementId, Id as string, Id as Integer, and GUID as string., Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. ","engine_metadata":"","engine_version":"0.7.4.3090","created":"2014-11-09T20:54:13.306Z","full_dependency_versions":["2014.11.9"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2014.11.9"},{"_id":"54604396895fdbc25e000011","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/e78780a6-919d-4904-b213-e14d068d4c92gregPkg28.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right)","engine_metadata":"","engine_version":"0.7.4.3090","created":"2014-11-10T04:48:22.049Z","full_dependency_versions":["2014.11.10"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2014.11.10"},{"_id":"546043b7895fdbc25e000012","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/c7764b44-0611-4916-8fb6-2d04b34da430gregPkg507.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. ","engine_metadata":"","engine_version":"0.7.4.3090","created":"2014-11-10T04:48:55.407Z","full_dependency_versions":["2014.11.11"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2014.11.11"},{"_id":"5472d9f2b77c84600c000037","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/caeb7919-6875-44d3-bf95-ea704ab41a71gregPkg148.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. ","engine_metadata":"","engine_version":"0.7.4.3090","created":"2014-11-24T07:10:42.487Z","full_dependency_versions":["2014.11.24"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2014.11.24"},{"_id":"54794e86b77c84600c000057","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/8278411e-37c9-4ecc-83f1-d1f40bda1ba5gregPkg280.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). ","engine_metadata":"","engine_version":"0.7.4.3090","created":"2014-11-29T04:41:42.257Z","full_dependency_versions":["2014.11.28"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2014.11.28"},{"_id":"54c04022dcee4dfd2600007a","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/9d895ef6-0fca-48f2-b15c-9dbf4ef393a4gregPkg138.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. ","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-01-22T00:11:14.057Z","full_dependency_versions":["2015.1.21"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.1.21"},{"_id":"54c07aa7dcee4dfd2600007b","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/71b99d74-bf87-4d1e-9468-03fb9d0ab8eagregPkg382.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-01-22T04:20:55.192Z","full_dependency_versions":["2015.1.22"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.1.22"},{"_id":"54c5c3ccdcee4dfd26000089","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/526c290d-ee91-41b6-8eb9-51cc66812b8bgregPkg947.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right)","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-01-26T04:34:20.526Z","full_dependency_versions":["2015.1.25"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.1.25"},{"_id":"54c81d87dcee4dfd26000099","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/f3cb0db2-b6ba-4437-9430-c2ea97dfffd3gregPkg897.zip","contents":"Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Text Note Type by Name - This node will select a text note type by name. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Delete Elements - This node will delete elements from Revit project., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. ","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-01-27T23:21:43.392Z","full_dependency_versions":["2015.1.27"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.1.27"},{"_id":"54cafba8dcee4dfd260000a2","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/eb568357-a6f5-4d2e-80a9-25c3d4ddc6fbgregPkg576.zip","contents":"Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right)","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-01-30T03:34:00.679Z","full_dependency_versions":["2015.1.29"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.1.29"},{"_id":"54d7c1cddcee4dfd260000d1","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/6d61366f-c309-4e79-9106-8b1828184dc9gregPkg456.zip","contents":"Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. ","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-02-08T20:06:37.469Z","full_dependency_versions":["2015.2.8"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.2.8"},{"_id":"54d7c829dcee4dfd260000d2","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/35fd5159-c02c-4a09-9494-0053462ed219gregPkg356.zip","contents":"Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Get Rooms by Level - Filters Rooms by level.","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-02-08T20:33:45.405Z","full_dependency_versions":["2015.2.9"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.2.9"},{"_id":"54d7c93fdcee4dfd260000d3","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/611aa2c5-0890-4a3b-b801-098ba3d09ec8gregPkg810.zip","contents":"Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. ","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-02-08T20:38:23.531Z","full_dependency_versions":["2015.2.10"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.2.10"},{"_id":"54d80d08dcee4dfd260000d4","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/30312246-0063-4b65-a614-b8488389be2cgregPkg805.zip","contents":"Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types.","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-02-09T01:27:36.533Z","full_dependency_versions":["2015.2.11"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.2.11"},{"_id":"54d8352bdcee4dfd260000d5","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/b698c234-d5b2-4eb8-b484-ccaa64d67b5cgregPkg863.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. ","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-02-09T04:18:51.951Z","full_dependency_versions":["2015.2.12"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.2.12"},{"_id":"54e40acddcee4dfd260000f7","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/0af0e2ec-7dd3-4214-b54b-7b22c2682be6gregPkg860.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Get Level by Name - This node will retrieve a Revit Level Element by its name. ","engine_metadata":"","engine_version":"0.7.5.3566","created":"2015-02-18T03:45:17.290Z","full_dependency_versions":["2015.2.17"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.2.17"},{"_id":"54efe35cdcee4dfd26000119","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/5836aa7b-ced7-4054-9855-c3e4339e4b5bgregPkg294.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right)","engine_metadata":"","engine_version":"0.7.6.4145","created":"2015-02-27T03:24:12.004Z","full_dependency_versions":["2015.2.26"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.2.26"},{"_id":"54f3be46dcee4dfd26000120","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/120b76d8-24bf-40f4-ba01-c274ce908baegregPkg579.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. ","engine_metadata":"","engine_version":"0.7.6.4145","created":"2015-03-02T01:35:02.237Z","full_dependency_versions":["2015.3.1"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.3.1"},{"_id":"550244dd0c7eac9b57000046","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/16081d48-4620-426f-9143-205142930b06gregPkg798.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right)","engine_metadata":"","engine_version":"0.7.6.4145","created":"2015-03-13T02:01:01.120Z","full_dependency_versions":["2015.3.12"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.3.12"},{"_id":"5525faa15899bb3705000056","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/d392146f-92c7-4a44-9ef1-6b86ea333afagregPkg982.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Export Image By View - This node will export an image to any Revit supported file type. It takes input of views, range, file type, size, resolution, zoom and direction as well as file path where images are to be saved. , Fit Direction Type - This node will query up possible fit direction types that can be used while exporting images from Revit., Image Export Range - This node will query up possible range options for exporting images., Image File Type - This node will query up all possibe file types that can be used when exporting images from Revit., Image Resolution - This node will query possible image resolution settings to be used when exporting images out of Revit. , Zoom Fit Type - This node will query up possible zoom fit types that can be used when exporting images from Revit. ","engine_metadata":"","engine_version":"0.8.1.872","created":"2015-04-09T04:05:53.629Z","full_dependency_versions":["2015.4.9"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.4.9"},{"_id":"5528418d5899bb3705000064","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/c06cc6f5-8513-4727-992a-f90e46c24b97gregPkg280.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Export Image By View - This node will export an image to any Revit supported file type. It takes input of views, range, file type, size, resolution, zoom and direction as well as file path where images are to be saved. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Fit Direction Type - This node will query up possible fit direction types that can be used while exporting images from Revit., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Image Export Range - This node will query up possible range options for exporting images., Image File Type - This node will query up all possibe file types that can be used when exporting images from Revit., Image Resolution - This node will query possible image resolution settings to be used when exporting images out of Revit. , Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Zoom Fit Type - This node will query up possible zoom fit types that can be used when exporting images from Revit. , Floor Plan by Room - This node will create a view for each Room on the input list. It uses Room's bounding box to set the Crop Region and the offset value (ft) to offset it. , List Contains - This node will check if input list contains any items from another list. ","engine_metadata":"","engine_version":"0.8.0.950","created":"2015-04-10T21:33:01.154Z","full_dependency_versions":["2015.4.10"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.4.10"},{"_id":"552b17275899bb370500006b","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/70e0accc-900b-4a9d-83e7-647ef716852agregPkg166.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Export Image By View - This node will export an image to any Revit supported file type. It takes input of views, range, file type, size, resolution, zoom and direction as well as file path where images are to be saved. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Fit Direction Type - This node will query up possible fit direction types that can be used while exporting images from Revit., Floor Plan by Room - This node will create a view for each Room on the input list. It uses Room's bounding box to set the Crop Region and the offset value (ft) to offset it. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Image Export Range - This node will query up possible range options for exporting images., Image File Type - This node will query up all possibe file types that can be used when exporting images from Revit., Image Resolution - This node will query possible image resolution settings to be used when exporting images out of Revit. , Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , List Contains - This node will check if input list contains any items from another list. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Zoom Fit Type - This node will query up possible zoom fit types that can be used when exporting images from Revit. , Structural Framing Model Checker - This node will check location lines of all framing members to make sure that they are coincident with the start/end points of the columns. If not, they will be either re-created to be, or simply adjusted. , Get Structural Column Location Line - This node will query the Structural Column for its location curve and if that is a line, it will return it. ","engine_metadata":"","engine_version":"0.8.0.950","created":"2015-04-13T01:08:55.646Z","full_dependency_versions":["2015.4.12"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.4.12"},{"_id":"55492e2fa8367b986100006d","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/a0192e15-c93a-40c2-a185-ae4f8cfa6469gregPkg291.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Export Image By View - This node will export an image to any Revit supported file type. It takes input of views, range, file type, size, resolution, zoom and direction as well as file path where images are to be saved. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Fit Direction Type - This node will query up possible fit direction types that can be used while exporting images from Revit., Floor Plan by Room - This node will create a view for each Room on the input list. It uses Room's bounding box to set the Crop Region and the offset value (ft) to offset it. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Structural Column Location Line - This node will query the Structural Column for its location curve and if that is a line, it will return it. , Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Image Export Range - This node will query up possible range options for exporting images., Image File Type - This node will query up all possibe file types that can be used when exporting images from Revit., Image Resolution - This node will query possible image resolution settings to be used when exporting images out of Revit. , Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , List Contains - This node will check if input list contains any items from another list. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), Structural Framing Model Checker - This node will check location lines of all framing members to make sure that they are coincident with the start/end points of the columns. If not, they will be either re-created to be, or simply adjusted. , Zoom Fit Type - This node will query up possible zoom fit types that can be used when exporting images from Revit. , Get Elements by Category_Level - This node will collect elements by Category and Level. , Phase Demolished - This node will query an elements for Phase that it was demolished in. If element was not demolished at any time it will return -1 as an invalid element id. , Transform Origin - This node will query an element for an origin point of its geometry tranform property. ","engine_metadata":"","engine_version":"0.8.0.950","created":"2015-05-05T20:55:11.019Z","full_dependency_versions":["2015.5.5"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.5.5"},{"_id":"55930ccef2ae5a9a07000102","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/e3716dcb-6bb4-43c8-9384-7dcc18fd58f5gregPkg968.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right)","engine_metadata":"","engine_version":"0.8.0.950","created":"2015-06-30T21:40:30.266Z","full_dependency_versions":["2015.6.30"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.6.30"},{"_id":"559add1cf2ae5a9a07000116","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/0ced7b4f-1b61-4d67-a579-672545c6e129gregPkg422.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), View Sets - This node will query up all user defined view sets in a project and return their names., String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Print Settings - This node will query up all user defined print settings. , Print Range - This node will query available print range settings., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Local Printers Names - This node will query all locally installed printers and return their names., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. ","engine_metadata":"","engine_version":"0.8.0.950","created":"2015-07-06T19:55:08.041Z","full_dependency_versions":["2015.7.6"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.7.6"},{"_id":"55a7e9a4662bf0e90800001d","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/d084a32b-3e51-4d24-aa1b-bec50a9a7008gregPkg49.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Print Range - This node will query available print range settings., Print Settings - This node will query up all user defined print settings. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., View Sets - This node will query up all user defined view sets in a project and return their names.","engine_metadata":"","engine_version":"0.8.0.950","created":"2015-07-16T17:28:04.414Z","full_dependency_versions":["2015.7.16"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.7.16"},{"_id":"55ad0405662bf0e90800002e","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/3db2d3a7-54bf-43e2-9663-13fc89a4e09cgregPkg409.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Print Range - This node will query available print range settings., Print Settings - This node will query up all user defined print settings. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., View Sets - This node will query up all user defined view sets in a project and return their names.","engine_metadata":"","engine_version":"0.8.0.950","created":"2015-07-20T14:21:57.835Z","full_dependency_versions":["2015.7.20"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.7.20"},{"_id":"55bff393662bf0e908000070","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/fa4ab1c3-dc16-4e80-aad2-42cfa55f592fgregPkg849.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Print Range - This node will query available print range settings., Print Settings - This node will query up all user defined print settings. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., View Sets - This node will query up all user defined view sets in a project and return their names., Isolate in View - This node will take input of elements and a view to isolate selected elements in a view.","engine_metadata":"","engine_version":"0.8.1.1942","created":"2015-08-03T23:04:51.514Z","full_dependency_versions":["2015.8.3"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.3"},{"_id":"55c50d47662bf0e90800008a","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/f59795b3-6f54-4f2c-93eb-f554d6cf02a4gregPkg753.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Print Range - This node will query available print range settings., Print Settings - This node will query up all user defined print settings. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., View Sets - This node will query up all user defined view sets in a project and return their names.","engine_metadata":"","engine_version":"0.8.1.1942","created":"2015-08-07T19:55:51.350Z","full_dependency_versions":["2015.8.7"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.7"},{"_id":"55ceaf74662bf0e9080000c9","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/a28efd6d-7082-4055-be90-b2086d230965gregPkg656.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Print Range - This node will query available print range settings., Print Settings - This node will query up all user defined print settings. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., View Sets - This node will query up all user defined view sets in a project and return their names., Get All Line Styles - This node will return all available line styles.","engine_metadata":"","engine_version":"0.8.2.2166","created":"2015-08-15T03:18:12.202Z","full_dependency_versions":["2015.8.14"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.14"},{"_id":"55d102cd662bf0e9080000cc","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/ad4bc291-ab64-4795-8133-659a506d28c1gregPkg56.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Print Range - This node will query available print range settings., Print Settings - This node will query up all user defined print settings. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., View Sets - This node will query up all user defined view sets in a project and return their names.","engine_metadata":"","engine_version":"0.8.2.2223","created":"2015-08-16T21:38:21.567Z","full_dependency_versions":["2015.8.15"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.15"},{"_id":"55d73967662bf0e9080000fe","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/bcebe113-8f5e-4a24-8ceb-3497c529d2f2gregPkg921.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Parameter Types - This node will return all available Paramter Types., Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Print Range - This node will query available print range settings., Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., View Sets - This node will query up all user defined view sets in a project and return their names.","engine_metadata":"","engine_version":"0.8.2.2223","created":"2015-08-21T14:44:55.523Z","full_dependency_versions":["2015.8.20"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.20"},{"_id":"55d74a39662bf0e9080000ff","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/22dd96fe-3ffa-491e-ac24-26ae3ec22dfdgregPkg774.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix.","engine_metadata":"","engine_version":"0.8.2.2223","created":"2015-08-21T15:56:41.865Z","full_dependency_versions":["2015.8.21"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.21"},{"_id":"55d74d1b662bf0e908000100","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/805c13e9-d41e-45a8-8a68-4bc1857dda4cgregPkg690.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix.","engine_metadata":"","engine_version":"0.8.2.2223","created":"2015-08-21T16:08:59.836Z","full_dependency_versions":["2015.8.22"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.22"},{"_id":"55d7ddfc662bf0e908000101","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/0a12ce4c-361c-48e3-80b0-b8ad749d8af2gregPkg680.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix.","engine_metadata":"","engine_version":"0.8.2.2166","created":"2015-08-22T02:27:08.357Z","full_dependency_versions":["2015.8.23"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.23"},{"_id":"55dfc854662bf0e908000122","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/f8dcc98a-a8bd-42b1-b46e-3e3d24aa82dfgregPkg416.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix.","engine_metadata":"","engine_version":"0.8.2.2371","created":"2015-08-28T02:32:52.186Z","full_dependency_versions":["2015.8.24"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.24"},{"_id":"55e23de6662bf0e908000124","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/b259064b-39c7-497e-afc8-a89ea230ac43gregPkg931.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix.","engine_metadata":"","engine_version":"0.8.2.2371","created":"2015-08-29T23:19:02.712Z","full_dependency_versions":["2015.8.25"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.25"},{"_id":"55e34efe662bf0e908000127","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/29fa9e09-691b-44e9-b060-3fa9dbb05346gregPkg830.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix.","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-08-30T18:44:14.011Z","full_dependency_versions":["2015.8.26"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.26"},{"_id":"55e382fd662bf0e908000128","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/5f51c08f-8b90-4075-b236-5696d58d7687gregPkg858.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix.","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-08-30T22:26:05.748Z","full_dependency_versions":["2015.8.27"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.27"},{"_id":"55e4dc3f662bf0e90800012b","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/d5f91c33-a9c0-442b-86ff-c6835896615egregPkg629.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Get All Revisions - This node will return all Revisions currently defined in the mode., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Set Revisions on Sheet - This node will set the Revisions on Sheet property of the sheet. ","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-08-31T22:59:11.713Z","full_dependency_versions":["2015.8.28"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.28"},{"_id":"55e5b31b662bf0e90800012f","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/3b7a6cd6-eef3-4165-80ae-be1746fbf223gregPkg807.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Revisions on Sheet - This node will set the Revisions on Sheet property of the sheet. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix.","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-09-01T14:15:55.197Z","full_dependency_versions":["2015.8.29"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.29"},{"_id":"55e5ea25662bf0e908000130","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/904d1b20-6afd-4277-a3c1-e7144b9b7ce4gregPkg960.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Revisions on Sheet - This node will set the Revisions on Sheet property of the sheet. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. ","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-09-01T18:10:45.785Z","full_dependency_versions":["2015.8.30"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.30"},{"_id":"55e8532f662bf0e90800013b","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/6c95b900-cd3e-4a72-b6ba-e44ee95bb1a2gregPkg53.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Revisions on Sheet - This node will set the Revisions on Sheet property of the sheet. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix.","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-09-03T14:03:27.376Z","full_dependency_versions":["2015.8.31"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.8.31"},{"_id":"55f88f08662bf0e90800018a","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/82ed4fdb-ea55-45ac-8580-cb93260999d1gregPkg909.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Revisions on Sheet - This node will set the Revisions on Sheet property of the sheet. , Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Type Parameter - This node will retrieve a type parameter by its name., Set Type Parameter - This node will set a type parameter for an element., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. ","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-09-15T21:35:04.016Z","full_dependency_versions":["2015.9.15"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.9.15"},{"_id":"55fb6c29662bf0e9080001a4","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/aa154149-3a08-4ebe-9026-728af0cf0458gregPkg674.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. ","engine_metadata":"","engine_version":"0.8.2.2371","created":"2015-09-18T01:43:05.381Z","full_dependency_versions":["2015.9.16"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.9.16"},{"_id":"560a9b62662bf0e908000206","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/8cb0d10a-b885-4662-8033-a57088ef9a82gregPkg178.zip","contents":"Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Add Revisions to Sheet - This node will add specified revisions to a sheet. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet.","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-09-29T14:08:34.820Z","full_dependency_versions":["2015.9.29"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.9.29"},{"_id":"560d887c662bf0e90800021c","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/ac5c05ec-1965-4986-842b-0b171a4f2c1dgregPkg798.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. ","engine_metadata":"","engine_version":"0.8.2.2371","created":"2015-10-01T19:24:44.476Z","full_dependency_versions":["2015.9.30"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.9.30"},{"_id":"560dd928662bf0e90800021e","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/390f19e0-42ed-4bc8-a3f6-9db751f294fagregPkg952.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. ","engine_metadata":"","engine_version":"0.8.2.2371","created":"2015-10-02T01:08:56.273Z","full_dependency_versions":["2015.10.1"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.10.1"},{"_id":"56105d25662bf0e908000225","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/66957c00-9cb8-47b3-9088-aa3f883a1999gregPkg61.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Curve.Level - This node will return a level that a given curve is located on. , Level.LevelAbove - This node takes an input of level and returns level above it. ","engine_metadata":"","engine_version":"0.8.2.2371","created":"2015-10-03T22:56:37.615Z","full_dependency_versions":["2015.10.3"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.10.3"},{"_id":"56129f9b662bf0e90800022e","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/73ea6761-c63f-4aca-9e63-f5aee7afee06gregPkg663.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Workset.ByName - This node will create a new workset by name.","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-10-05T16:04:43.642Z","full_dependency_versions":["2015.10.4"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.10.4"},{"_id":"561822fd662bf0e908000249","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/1b3d774e-4d55-4606-ab19-063aa53cbda1gregPkg179.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Workset.ByName - This node will create a new workset by name.","engine_metadata":"","engine_version":"0.8.2.2311","created":"2015-10-09T20:26:37.872Z","full_dependency_versions":["2015.10.9"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.10.9"},{"_id":"561ae9be662bf0e90800024d","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/153b8681-18dd-448a-812e-8f55e3d6916egregPkg721.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Workset.ByName - This node will create a new workset by name., Image Import Options - This node will generate import options needed when importing images into Revit models. , Image.Import - This node will import an image into specified view based on image import options. , Image.Reload - This node will reload an image if its already imported. ","engine_metadata":"","engine_version":"0.8.2.2371","created":"2015-10-11T22:59:10.636Z","full_dependency_versions":["2015.10.11"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.10.11"},{"_id":"562702d7662bf0e908000277","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/ba152998-12ed-4965-9e52-807598d860b7gregPkg691.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Workset.ByName - This node will create a new workset by name.","engine_metadata":"","engine_version":"0.8.2.2392","created":"2015-10-21T03:13:27.146Z","full_dependency_versions":["2015.10.20"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.10.20"},{"_id":"563ce390662bf0e9080002ee","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/0d72c4c5-9bb4-4432-bfc5-ea01b00ec03cgregPkg476.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Workset.ByName - This node will create a new workset by name., FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. ","engine_metadata":"","engine_version":"0.8.2.2392","created":"2015-11-06T17:29:52.247Z","full_dependency_versions":["2015.11.6"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.11.6"},{"_id":"56421e2c662bf0e908000319","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/33206d28-63ec-4734-8549-239030ffb5c3gregPkg870.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Workset.ByName - This node will create a new workset by name.","engine_metadata":"","engine_version":"0.9.1.2912","created":"2015-11-10T16:41:16.486Z","full_dependency_versions":["2015.11.10"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.11.10"},{"_id":"56428018662bf0e90800031d","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/f8b4c6bb-d52c-4d06-9a6f-9c5ccece6a27gregPkg802.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Workset.ByName - This node will create a new workset by name.","engine_metadata":"","engine_version":"0.9.1.2912","created":"2015-11-10T23:39:04.875Z","full_dependency_versions":["2015.11.11"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.11.11"},{"_id":"564398f5662bf0e908000321","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/c36d228c-889f-4b28-aa94-de7709705b2cgregPkg975.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Workset.ByName - This node will create a new workset by name., Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"0.9.1.2912","created":"2015-11-11T19:37:25.866Z","full_dependency_versions":["2015.11.12"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.11.12"},{"_id":"5669ecc55c568ad00c000016","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/5a3b165d-1390-4b9c-886d-ef7f7f904d4fgregPkg731.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector., Workset.ByName - This node will create a new workset by name., Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. ","engine_metadata":"","engine_version":"0.9.1.2912","created":"2015-12-10T21:21:09.014Z","full_dependency_versions":["2015.12.10"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2015.12.10"},{"_id":"569c4e15c6d90c553d000021","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/0b1f1263-054d-4b77-a06f-c86a3c528c83gregPkg716.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector., Workset.ByName - This node will create a new workset by name., Floor.Area - This node return floor area. , Survey Point - This node will retrieve a Survey Point from a Revit model. ","engine_metadata":"","engine_version":"0.9.1.2912","created":"2016-01-18T02:29:41.462Z","full_dependency_versions":["2016.1.16"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.1.16"},{"_id":"56a7b2c2c3e9ee4a08000039","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/1967c2ba-876c-444d-9c42-d9fdcd8594dbgregPkg859.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector., Workset.ByName - This node will create a new workset by name., Elements.ByCategoryAndView - This node retrieves all elements of given Category in given view. , FamilyInstance.ByLine - This node creates a new Family Instance by Type, Line and View. , FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views.","engine_metadata":"","engine_version":"0.9.1.2912","created":"2016-01-26T17:54:10.480Z","full_dependency_versions":["2016.1.26"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.1.26"},{"_id":"56afb304c3e9ee4a08000077","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/9e06be82-373e-44f6-bd0e-b99cfe18cdb8gregPkg590.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Elements.ByCategoryAndView - This node retrieves all elements of given Category in given view. , Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.ByLine - This node creates a new Family Instance by Type, Line and View. , FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector., Workset.ByName - This node will create a new workset by name., FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. ","engine_metadata":"","engine_version":"0.9.1.2912","created":"2016-02-01T19:33:24.637Z","full_dependency_versions":["2016.2.1"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.2.1"},{"_id":"56b8e563c3e9ee4a080000c8","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/7fc3a4c5-3eb3-4cd3-b149-e2abef253a1dgregPkg445.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Elements.ByCategoryAndView - This node retrieves all elements of given Category in given view. , Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.ByLine - This node creates a new Family Instance by Type, Line and View. , FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector., Workset.ByName - This node will create a new workset by name.","engine_metadata":"","engine_version":"0.9.1.3872","created":"2016-02-08T18:58:43.965Z","full_dependency_versions":["2016.2.7"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.2.7"},{"_id":"56b929dbc3e9ee4a080000ca","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/b4860d47-0961-4851-bda2-9155c8301488gregPkg145.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Elements.ByCategoryAndView - This node retrieves all elements of given Category in given view. , Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.ByLine - This node creates a new Family Instance by Type, Line and View. , FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector., Workset.ByName - This node will create a new workset by name., LineStyle.ReplaceAndDelete - This node accepts lists of Line Styles that correlate 1:1 where first item from Replace input will be replaced with first item from ReplaceWith and if boolean is set to True that Style will be deleted. , WarningReport.Parse - This node will parse a Revit Warning HTML report file and extract warnings by their type. It also lists warning counts and Element Ids of elements causing the warnings.","engine_metadata":"","engine_version":"0.9.1.3872","created":"2016-02-08T23:50:51.391Z","full_dependency_versions":["2016.2.8"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.2.8"},{"_id":"56bbd891c3e9ee4a080000e9","contains_binaries":false,"node_libraries":[],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-dev/069cf2ef-c5fd-44ab-91f7-f8925f6a2c30gregPkg658.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Elements.ByCategoryAndView - This node retrieves all elements of given Category in given view. , Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.ByLine - This node creates a new Family Instance by Type, Line and View. , FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector., Workset.ByName - This node will create a new workset by name.","engine_metadata":"","engine_version":"0.9.1.3872","created":"2016-02-11T00:40:49.608Z","full_dependency_versions":["2016.2.10"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.2.10"},{"_id":"5748d74ee70394822f00001f","contains_binaries":true,"node_libraries":["archilabTypes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/fe7bfb1b-8f6e-4291-aadd-8f1fa5bb7d93gregPkg409.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Apply View Template - This node will allow you to apply a view template to a set of views., Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Create Placeholder Sheet - This node will create placeholder sheets from a sheet number/name. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Elements - This node will delete elements from Revit project., Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Elements.ByCategoryAndView - This node retrieves all elements of given Category in given view. , Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.ByLine - This node creates a new Family Instance by Type, Line and View. , FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get All Views - This node will query all views in the model and return them based on category, Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Elements by Category/Level - This node will filter for all elements of a given category on a given level., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Sheet Viewports - This node will query a sheet for viewports (views) that are placed on it., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Get Worksets - Retrieves user worksets from specified document, GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, Phase Demolished - This node will query a Phase Demolished setting of an element and return phase id. If id is -1 that means that element was not demolished. , PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Revisions on Sheet - This node will return all Revisions specified in \"Revisions on Sheet\" selection of the sheet., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector., Workset.ByName - This node will create a new workset by name.","engine_metadata":"","engine_version":"1.0.0.1180","created":"2016-05-27T23:25:02.284Z","full_dependency_versions":["2016.5.27"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.5.27"},{"_id":"57f55cffd3d589541a000030","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/33cce993-9d5b-4847-80a9-ee84e2196a9egregPkg381.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.0.2654","created":"2016-10-05T20:05:19.715Z","full_dependency_versions":["2016.12.1"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.1"},{"_id":"5838b267fdef23aa6e00001f","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/78082a6f-4ed7-405f-b050-cd9ac7dddc8fgregPkg673.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.1.3187","created":"2016-11-25T21:51:35.254Z","full_dependency_versions":["2016.12.2"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.2"},{"_id":"583df0acfdef23aa6e00003c","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/b88e3ce8-0209-405a-b8b3-be42c613d73cgregPkg870.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.0.2690","created":"2016-11-29T21:18:36.254Z","full_dependency_versions":["2016.12.3"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.3"},{"_id":"583e1005fdef23aa6e00003d","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/b2c71f2b-e579-4d20-ac49-7a0416e8a063gregPkg402.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.0.2690","created":"2016-11-29T23:32:21.046Z","full_dependency_versions":["2016.12.4"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.4"},{"_id":"585353f5fdef23aa6e000135","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/2b611a3a-f9f1-4c7c-bdef-bd85e6d1e8cagregPkg142.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , GH Point to DY Point - Converts CSV Grasshopper export of points into a Dynamo point list. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.1.3187","created":"2016-12-16T02:39:49.448Z","full_dependency_versions":["2016.12.5"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.5"},{"_id":"58535600fdef23aa6e000136","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/773eeffb-465c-41f8-9d0f-0be497376426gregPkg105.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, Parameter Group - This node will return all available Parameter Groups, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.1.3187","created":"2016-12-16T02:48:32.724Z","full_dependency_versions":["2016.12.6"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.6"},{"_id":"58536999fdef23aa6e000138","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/cf2ee7a9-fffc-4de4-8a63-142e76f51854gregPkg335.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.1.3187","created":"2016-12-16T04:12:09.534Z","full_dependency_versions":["2016.12.7"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.7"},{"_id":"5877c516ca6a5edb6500001c","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/67d1959e-df63-4a80-b94a-7e04bff910fbgregPkg189.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , ToDouble - This node converts strings to doubles. When strings look like this: \"0\", \"1\" etc. and don't have decimal places the ToNumber node fails on occasion. This addresses that issue., Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.1.3083","created":"2017-01-12T18:04:06.626Z","full_dependency_versions":["2016.12.8"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.8"},{"_id":"5894d241ca6a5edb65000110","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/d88a8fc1-e050-44e2-9cbb-fae83b8dabddgregPkg747.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , ToDouble - This node converts strings to doubles. When strings look like this: \"0\", \"1\" etc. and don't have decimal places the ToNumber node fails on occasion. This addresses that issue., Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.1.3083","created":"2017-02-03T18:56:01.236Z","full_dependency_versions":["2016.12.9"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.9"},{"_id":"589607fb61de680108000006","contains_binaries":true,"node_libraries":["Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"],"url_with_deps":"","url":"https://s3.amazonaws.com/greg-pkgs-prod/23f39a51-7b33-4eff-b7f5-9b10f4712a27gregPkg420.zip","contents":"Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , ToDouble - This node converts strings to doubles. When strings look like this: \"0\", \"1\" etc. and don't have decimal places the ToNumber node fails on occasion. This addresses that issue., Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.","engine_metadata":"","engine_version":"1.2.1.3083","created":"2017-02-04T16:57:31.398Z","full_dependency_versions":["2016.12.10"],"full_dependency_ids":[{"_id":"53e99ce50e5572016a00018a","name":"archi-lab.net"}],"direct_dependency_versions":[],"direct_dependency_ids":[],"change_log":"","version":"2016.12.10"}],"latest_version_update":"2017-02-04T16:57:31.398Z","num_versions":78,"comments":[],"num_comments":0,"latest_comment":"1970-01-01T00:00:00.000Z","votes":-3,"downloads":39069,"repository_url":"","site_url":"www.archi-lab.net","banned":false,"deprecated":false,"group":"archi-lab","engine":"dynamo","license":"MIT","used_by":[{"_id":"545a51aa893c653357000008","name":"SteamNodes"},{"_id":"551cc39f5899bb370500003a","name":"Rotate Family Instances Around Origin Axis by Angle"},{"_id":"555e8bfea8367b98610000b8","name":"Bakery"},{"_id":"55c30c7f662bf0e908000080","name":"MTHV Package"},{"_id":"55e90085662bf0e908000142","name":"Hot Gear"},{"_id":"54affe45dcee4dfd26000035","name":"Hollandaise"},{"_id":"55f84b9e662bf0e908000188","name":"Ayuda"},{"_id":"56446665662bf0e908000324","name":"MEPWORKS"},{"_id":"566f8a9c5c568ad00c000027","name":"Monamo"},{"_id":"56dadd8e5bee3e2138000025","name":"MOST-BCF2014"},{"_id":"56fa23aa5bee3e21380000a8","name":"LionsDen"},{"_id":"570e31b5287283f90500001f","name":"Get View Worksets"},{"_id":"570e32c5287283f905000021","name":"Revision Clouds on Sheets in Excel"},{"_id":"5775c9ab535146064800000d","name":"DynaFabrication2017"},{"_id":"57ea33aeb135d45974000021","name":"ANDYnamo"},{"_id":"57fd20a3d3d589541a00006f","name":"PW_Lon_Revit"},{"_id":"582ed4885af9f3713d0000b6","name":"BIMSYK"},{"_id":"57dbd203882d868b4200000d","name":"SYKES"},{"_id":"582ef5635af9f3713d0000ba","name":"J-Nodes"},{"_id":"5835897f7332da0d25000003","name":"Summerisle"},{"_id":"5507ae3e0c7eac9b57000053","name":"BVN"},{"_id":"559c28d4f2ae5a9a0700011e","name":"BesideTheCursor"},{"_id":"58ef59b719da52d31a00001c","name":"LRCZ_Elements.Bake"}],"num_dependents":23,"description":"Revit 2016, Dynamo 1.2 - Set of practical nodes by Konrad K Sobon | www.archi-lab.net | @arch_laboratory","maintainers":[{"_id":"531e8347bfe42595360000d0","username":"Konrad.Sobon@grimshaw-architects.com"}],"keywords":["archi-lab","bad","monkey"],"created":"2014-08-12T04:49:41.531Z"}}