<UserControl x:Class="Dynamo.GraphMetadata.GraphMetadataView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Dynamo.GraphMetadata"
             xmlns:controls="clr-namespace:Dynamo.GraphMetadata.Controls"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:converters="clr-namespace:Dynamo.GraphMetadata.Converters"
             xmlns:vr="clr-namespace:Dynamo.GraphMetadata.ValidationRules"
             xmlns:ui="clr-namespace:Dynamo.UI;assembly=DynamoCoreWpf"
             mc:Ignorable="d" 
             d:DesignHeight="850" d:DesignWidth="400"
             d:DataContext="{d:DesignInstance Type=local:GraphMetadataViewModel, IsDesignTimeCreatable=False}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>

            <converters:UriToStringConverter x:Key="UriToStringConverter" />
            <converters:LinterExtensionDescriptorToVisibilityConverter x:Key="LinterExtensionDescriptorToVisibilityConverter" />
            <co:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <vr:UriValidationRule x:Key="UriValidationRule"/>

            <ControlTemplate x:Key="TextBoxErrorTemplate">
                <StackPanel Orientation="Vertical">
                    <AdornedElementPlaceholder />
                    <AdornedElementPlaceholder>
                        <TextBlock
                            Margin="4"
                            HorizontalAlignment="Left"
                            FontStyle="Italic"
                            Foreground="Red"
                            Text="{Binding Path=ErrorContent}" />
                    </AdornedElementPlaceholder>
                </StackPanel>
            </ControlTemplate>

            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{StaticResource SearchBoxBackgroundColor}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushWhite}" />
                <Setter Property="Foreground" Value="{StaticResource NestedMemberTextColor}" />
                <Setter Property="Padding" Value="0,5" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>

            <Style TargetType="{x:Type ListView}">
                <Setter Property="Background" Value="Red" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Margin" Value="0" />
            </Style>

            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <Style TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="HeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Foreground" Value="{StaticResource NestedMemberTextColor}" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0,0" />
            </Style>

            <Style BasedOn="{StaticResource {x:Type HeaderedContentControl}}" TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="Margin" Value="0,5px" />
                <Setter Property="Foreground" Value="{StaticResource NestedMemberTextColor}" />
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock
                                Margin="0,0,0,5"
                                Style="{StaticResource HeaderStyle}"
                                Text="{Binding}" />

                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource {x:Type ScrollViewer}}" TargetType="{x:Type ScrollViewer}">
                <Setter Property="Padding" Value="0" />
            </Style>

            <Style BasedOn="{StaticResource {x:Type ScrollContentPresenter}}" TargetType="{x:Type ScrollContentPresenter}">
                <Setter Property="Margin" Value="0" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
        <Grid Margin="10px,10px">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel
                Grid.Row="0"
                KeyDown="StackPanel_KeyDown"
                Orientation="Vertical">

                <HeaderedContentControl Header="Description">
                    <TextBox
                        MaxLength="500"
                        Style="{StaticResource TextBoxStyle}"
                        Text="{Binding GraphDescription, Mode=TwoWay, FallbackValue='Graph Description'}"
                        TextWrapping="Wrap" />
                </HeaderedContentControl>

                <HeaderedContentControl Header="Image">
                    <controls:ImageSelector
                        MinHeight="100"
                        MaxHeight="150"
                        Image="{Binding Thumbnail, Mode=TwoWay}" />
                </HeaderedContentControl>

                <HeaderedContentControl Header="Author Name">
                    <TextBox
                        MaxLength="100"
                        Style="{StaticResource TextBoxStyle}"
                        Text="{Binding GraphAuthor, Mode=TwoWay}"
                        TextWrapping="Wrap" />
                </HeaderedContentControl>

                <HeaderedContentControl Header="Learn more URL">
                    <TextBox
                        Name="UriTextBox"
                        MaxLength="200"
                        MouseDoubleClick="TextBox_MouseDoubleClick"
                        TextWrapping="Wrap"
                        Validation.ErrorTemplate="{StaticResource ResourceKey=TextBoxErrorTemplate}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="HelpLink"
                                UpdateSourceTrigger="PropertyChanged"
                                ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <vr:UriValidationRule ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                                <Binding.Converter>
                                    <convertes:UriToStringConverter />
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.Style>
                            <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="True">
                                        <Setter Property="TextDecorations" Value="None" />
                                        <Setter Property="Margin" Value="0,0,0,15" />
                                    </Trigger>
                                    <Trigger Property="Validation.HasError" Value="False">
                                        <Setter Property="TextDecorations" Value="Underline" />
                                        <Setter Property="Margin" Value="0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </HeaderedContentControl>
                <ListView
                    x:Name="RequiredPropertyListView"
                    Margin="0,5,0,0"
                    HorizontalContentAlignment="Left"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="0"
                    ItemsSource="{Binding RequiredProperties, UpdateSourceTrigger=PropertyChanged}"
                    KeyboardNavigation.TabNavigation="Continue"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    Visibility="{Binding IsRequiredPropertiesVisible, UpdateSourceTrigger=PropertyChanged}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock
                                    x:Name="RequiredPropertyNameTextBox"
                                    Grid.Row="0"
                                    Margin="0"
                                    Background="Transparent"
                                    IsEnabled="False"
                                    Style="{StaticResource HeaderStyle}"
                                    Text="{Binding Key, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap" />
                                <TextBox
                                    x:Name="RequiredPropertyValueTextBox"
                                    Grid.Row="1"
                                    Margin="0,5"
                                    CaretBrush="White"
                                    IsEnabled="{Binding ValueIsGlobal, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanConverter}}"
                                    MaxLength="100"
                                    Style="{StaticResource TextBoxStyle}"
                                    Text="{Binding GraphValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Separator Margin="0,20,0,20" Background="{StaticResource FilterIconColor}" />
            </StackPanel>

            <Grid Grid.Row="1"
              Margin="0, 0px"
              Visibility="{Binding CurrentLinter, Converter={StaticResource LinterExtensionDescriptorToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <HeaderedContentControl Grid.Row="0" Grid.Column="0" Header="Graph Type">
                <TextBlock Text="{Binding CurrentLinter.Name, Mode=OneWay, FallbackValue='Current Linter'}" />
            </HeaderedContentControl>
            <Button Grid.Row="0"
                    Grid.Column="1"
                    BorderThickness="0"
                    Command="{Binding OpenGraphStatusCommand}">
                <Button.Template>
                    <ControlTemplate>
                        <Image Width="16px"
                               Height="16px"
                               Source="/GraphMetadataViewExtension;component/Resources/link_48px.png" />
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Separator Grid.Row="1" Grid.ColumnSpan="2" 
                       Background="{StaticResource FilterIconColor}"
                       Margin="0,20,0,20" />
        </Grid>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0"
                  Margin="0, 5px">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                           Text="Custom Properties"
                           Style="{StaticResource headerStyle}" />
                <Button Grid.Column="1"
                        Command="{Binding AddCustomPropertyCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Width="16px" Height="16px"
                                   Source="/GraphMetadataViewExtension;component/Resources/add-thick-grey-16px.png" />
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
            <ListView Grid.Row="1" 
                      Margin="0px 5px"
                      HorizontalContentAlignment="Left"
                      Background="Transparent"
                      BorderBrush="Transparent"
                      ItemsSource="{Binding CustomProperties}"
                      BorderThickness="0">
            </ListView>
        </Grid>
    </Grid>
</UserControl>