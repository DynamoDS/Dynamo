<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Tessellation.Small" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAANISURBVFhHtZc9TltBFIW9BJYA2QDeAJHbyCnc0rki
        LQVRlA6RBUA2AA1KZYmeBmUFVgrSOjuwvIKX8w3nPs/7xY84RzryvDt37j1z5+c9j4qiuBTvRm+Exq7c
        7IX8DqAft3DHWnxqdTDUV7hZQZe9Drl1T9SdYCWOj94dFTnt00gk00Rc+rEX8ouJHtq0RdZJFdZnn86K
        nx8/JNYF5MJOT08xP2HPkftAm4lxB/1YhTqoAgJmm82m+PPjvlNAiOsTUJ8AkO8hA/i1aQsZowqT6XRa
        PP9+LhaLRXE8Pt6bACD/16vgNoKoyFJMyrETMDh0CUDE4temLWQsq2ATtmvbKoGATHPxwY87Q2N2q0LA
        NjC3KUHP2C/9uDM0hiowqbFNW8hIFTiOqQp+ZhkeRAaVItQeLED+JD8XibW2uQp1UNp0MYlLNiNryebk
        hLgfIpRAlJTn5roK2EWSMpHwn7m7HXIgOLwjeexq7giDPpKORYJHhdIYkb5hSQNyRDEDwSQE/Pr6JSqQ
        kuAbOz0oIIiNC0iMkM4rvgEPYCBB0lrd3t4WV9+uUvKLzxcylZvoIMTFmXcf4nvfLQ3gLKYycr5jRifv
        T2R6uaLFctfaNs8F+F5I4u32OhiRoWtWlLXy2tUzlVqG0JvvN+UGtcswaGAcv/MWASwF4NhR4plItQCV
        oE3Zm+daCJFBm5sggFguAb+8EwSEkZRkgGSI4nWMHXSuN7HyCdncDgWKTcix4be8aOh7fHxszEZ2UF7f
        dQwSABSM5CvehHky4Zq1zoMJLAlIm09sVCKPAW3uhoJQ2hXOtWRLlqVmQyxECEvEcnVWY2coSDqCtWTp
        +4A29BEF5RWsdro7xNZq7AwNfuLajWQ+4+VRVDtm3PgecB8nI21em4dBAzly5YWiNjOLUvMLouSANrPm
        VKSKuE01ENNdjZhlEJsGVL541U4bUwRJiLvo4w7BH9EIIWkkRhTjeG6vBknztbaZwIDg6X4QK4n74DEc
        acbEiw0gqnph9QhgILMi+duu2AyKQZWoCPGI/RKTpDmTUbAz+OfkdRBT7P9TIwdm3/nR2SV8b0AhSv3Y
        AEnblm4vUGKOW/tHo/G/BbD+7d/uBklz2jwAo9FfPoKZTThTcrYAAAAASUVORK5CYII=
</value>
  </data>
</root>