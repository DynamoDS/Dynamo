<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProtoGeometry</name>
    </assembly>
    <members>
        <member name="M:Autodesk.DesignScript.Geometry.ProtoGeometryConfigurationManager.Save">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.ProtoGeometryConfigurationManager.Settings">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.ProtoGeometryConfiguration.GeometryFactoryFileName">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.ProtoGeometryConfiguration.PersistentManagerFileName">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Application.Session">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Application.Instance">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Application.IsExecuting">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.OnSuspendExecution(Autodesk.DesignScript.Interfaces.IExecutionSession)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.OnResumeExecution(Autodesk.DesignScript.Interfaces.IExecutionSession)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.StartUp">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.ShutDown">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.PreloadAsmLibraries(System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometryDataProvider.Name">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataProvider.ImportData(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataProvider.GetExpression(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryData.#ctor(System.String,System.Object,Autodesk.DesignScript.Interfaces.IContextDataProvider)">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometryData.Name">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometryData.Data">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometryData.ContextProvider">
            <notranslation>true</notranslation>
        </member>
        <member name="E:Autodesk.DesignScript.Geometry.GeometryData.DataChanged">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.#ctor">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.#ctor(System.Array)">
            <summary>
            Constructor that expects input data as collection of name and value
            pairs.
            </summary>
            <param name="data">List of name, value pair data.</param>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.AddData(System.String,System.Object)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.GetData(System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.GetEnumerator">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.ToArray">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.ToParameterizedArray">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.GetCollection">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.ParameterizedCollection.DoneReading">
            <notranslation>true</notranslation>
        </member>
        <member name="T:Autodesk.DesignScript.Geometry.SerialDataReader">
            <summary>
            Doesn't have parameter information, assumes that GetData() request for a 
            parameter happens in the sequence in which data is stored. Deals with 
            compact form of data. This doesn't support AddData() method.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.SerialDataReader.#ctor(System.Array)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.SerialDataReader.AddData(System.String,System.Object)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.SerialDataReader.GetData(System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.SerialDataReader.GetEnumerator">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.SerialDataReader.ToArray">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.SerialDataReader.DoneReading">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TypeSpecificSerializers.RegisterSerializers``1(System.String,System.Func{Autodesk.DesignScript.Geometry.GeometryDataSerializer,Autodesk.DesignScript.Interfaces.IDesignScriptEntity})">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TypeSpecificSerializers.GetReader(System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TypeSpecificSerializers.WriteEntity(Autodesk.DesignScript.Interfaces.IDesignScriptEntity,System.String@)">
            <summary>
            Finds the underlying interface implementation type and uses appropriate
            writer to serialize the given entity.
            </summary>
            <param name="entity"></param>
            <param name="typeName">output type name</param>
            <notranslation>true</notranslation>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.#ctor(System.Array)">
            <summary>
            To be used for reading/de-serializating data
            </summary>
            <param name="data">Data to deserialize from</param>
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            To be used for reading/de-serializating parameterized data
            </summary>
            <param name="data">Parameterized data to deserialize from</param>
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.#ctor">
            <summary>
            To be used for serialization of data
            </summary>
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.CreateDataReader(System.Object)">
            <summary>
            Creates data reader from the given set of data
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteObject(System.String,System.Object)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteBoolean(System.String,System.Boolean)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteDouble(System.String,System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteInteger(System.String,System.Int32)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteString(System.String,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteEntity``1(``0)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteEntity(Autodesk.DesignScript.Interfaces.IDesignScriptEntity,System.String@)">
            <summary>
            Finds the underlying interface implementation type and uses appropriate
            writer to serialize the given entity.
            </summary>
            <param name="entity"></param>
            <param name="typeName">output type name</param>
            <returns></returns>
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.CreateGeometryFromData(System.String,System.Array)">
            <summary>
            Creates geometry from given set of data
            </summary>
            <param name="geomType">Geometry type</param>
            <param name="data">Collection of input data to create geometry from</param>
            <returns>Collection of Geometry created using the given data</returns>
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ReadPoint">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteObject(Autodesk.DesignScript.Interfaces.IPointEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ReadVector">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteObject(Autodesk.DesignScript.Interfaces.IVectorEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ReadCoordinateSystem">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteObject(Autodesk.DesignScript.Interfaces.ICoordinateSystemEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ReadLine">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteObject(Autodesk.DesignScript.Interfaces.ILineEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ReadCircle">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteObject(Autodesk.DesignScript.Interfaces.ICircleEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ReadArc">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteObject(Autodesk.DesignScript.Interfaces.IArcEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ReadBSplineCurve">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.WriteObject(Autodesk.DesignScript.Interfaces.INurbsCurveEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.AddData(System.String,System.Object)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.GetData(System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ToArray">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.GetEnumerator">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ToString">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.ToString(System.Collections.IEnumerable)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryDataSerializer.DoneReading">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity``1(Autodesk.DesignScript.Geometry.GeometryExpressionBuilder,Autodesk.DesignScript.Interfaces.IDesignScriptEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity(Autodesk.DesignScript.Interfaces.IPointEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity(Autodesk.DesignScript.Interfaces.IVectorEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity(Autodesk.DesignScript.Interfaces.ICoordinateSystemEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity(Autodesk.DesignScript.Interfaces.ILineEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity(Autodesk.DesignScript.Interfaces.ICircleEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity(Autodesk.DesignScript.Interfaces.IArcEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity(Autodesk.DesignScript.Interfaces.INurbsCurveEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity(Autodesk.DesignScript.Interfaces.ISolidEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntity(Autodesk.DesignScript.Interfaces.ISurfaceEntity,System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.ToString">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.WriteEntities(Autodesk.DesignScript.Interfaces.IGeometryEntity[])">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExpressionBuilder.GetExpression(Autodesk.DesignScript.Interfaces.IGeometryEntity[],System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="T:Autodesk.DesignScript.Geometry.Core.EntityTags">
            <summary>
            Tags allow you to add arbitrary metadata to a DesignScriptEntity.  This is critical for Revit
            geometry integration.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Core.EntityTags.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Core.EntityTags.Parent">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Core.EntityTags.AddTag(System.String,System.Object)">
            <summary>
            Add or overwrite a Geometry tag
            </summary>
            <param name="tag"></param>
            <param name="data"></param>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Core.EntityTags.LookupTag(System.String)">
            <summary>
            Do recursive lookup of geometry tags
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GraphicDataProvider.GetGraphicItems(System.Object)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GraphicDataProvider.Tessellate(System.Collections.Generic.List{System.Object},Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryGraphicItem.#ctor(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryGraphicItem.Tessellate(Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ToString">
            <summary>
            Get a string representation of the Arc
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByThreePoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Create an arc by providing three sequential points along its circumference.
             </summary>
            <search>
            arc
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByCenterPointRadiusAngle(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Create an arc by providing it's center point, radius, angle sweep, and normal vector
             </summary>
            <search>
            arc,center
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByCenterPointStartPointSweepAngle(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Create an arc by providing it's center point, start point, sweep point, and normal
             </summary>
            <search>
            arc,center
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByCenterPointStartPointEndPoint(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Create an arc by providing it's center point, start point, and end point
             </summary>
            <search>
            arc,center
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByFillet(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,System.Double)">
             <summary>
             Create an arc by filleting twp curves with given radius
             </summary>
            <search>
            arc,fillet,round,smooth
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByFilletTangentToCurve(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Create an arc by filleting two curves tangent to given curve at internal point
             </summary>
            <search>
            arc,fillet,round,smooth
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByBestFitThroughPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             best fit arc through points
             </summary>
            <search>
            arc,approximate
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByStartEndAndTangencies(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Create an arc or tangent bi arc by start and end points and tangencies at start and end
             </summary>
            <search>
            arc,tangent
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByStartPointEndPointStartTangent(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Create an Arc from start Point to end Point with start tangent to Vector
             </summary>
            <search>
            arc,tangent
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Arc.CenterPoint">
             <summary>
             The center point of the arc
             </summary>
            <search>
            midpoint
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Arc.Radius">
            <summary>
            The radius of the arc
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Arc.StartAngle">
            <summary>
            The start angle in degrees
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Arc.SweepAngle">
            <summary>
            The total sweep angle in degrees
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ToString">
            <summary>
            Get a string representation of the BoundingBox
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.Equals(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <summary>
            Compare two BoundingBox's
            </summary>
            <param name="other">The other BoundingBox</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ComputeHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry(Autodesk.DesignScript.Geometry.Geometry)">
             <summary>
             Create an axis-aligned BoundingBox around input Geometry.
             </summary>
            <search>
            bounding,bound
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry})">
             <summary>
             Create an axis-aligned BoundingBox around input Geometries.
             </summary>
            <search>
            bounding,bound,multiple,boundall
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByGeometryCoordinateSystem(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.CoordinateSystem)">
             <summary>
             Create a non-axis-aligned BoundingBox around input Geometry, oriented in the X, Y, and Z axis of the CoordinateSystem.
             </summary>
            <search>
            bounding,bound
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByGeometryCoordinateSystem(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry},Autodesk.DesignScript.Geometry.CoordinateSystem)">
             <summary>
             Create a non-axis-aligned BoundingBox around input Geometries, oriented in the X, Y, and Z axis of the CoordinateSystem.
             </summary>
            <search>
            bounding,bound,multiple,boundall
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByCorners(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Creates the an axis-aligned BoundingBox spanning between the minimum Point and the maximum Point.
             </summary>
            <search>
            bounding,bound,bymaxmin,max,min,bypoints
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByCornersCoordinateSystem(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.CoordinateSystem)">
             <summary>
             Constructs a BoundingBox from minimum coordinates (lower-left-rear corner of the box), to maximum coordinates (upper-right-front corner of the box). CoordinateSystem is the transform FROM the coordinate space of the box TO the model space. This method is designed to match Revit's API, allowing you to extract out the parameters from a Revit BoundingBox without any conversions.
             </summary>
            <search>
            bounding,bound,bymaxmin,max,min,bypoints
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.BoundingBox.MinPoint">
            <summary>
            The minimum point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.BoundingBox.MaxPoint">
            <summary>
            The maximum point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.BoundingBox.ContextCoordinateSystem">
            <summary>
            The CoordinateSystem that this BoundingBox is defined in
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.Intersection(Autodesk.DesignScript.Geometry.BoundingBox)">
            <summary>
            Get the intersection of two BoundingBoxes
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.Intersects(Autodesk.DesignScript.Geometry.BoundingBox)">
             <summary>
             Determine whether two BoundingBoxes intersect
             </summary>
            <search>
            get overlap
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.IsEmpty">
            <summary>
            Determine if the BoundingBox is empty
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.Contains(Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Determine if a point is inside of the BoundingBox
             </summary>
            <search>
            point inside,testpoint
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ToCuboid">
             <summary>
             Get the BoundingBox as a Solid Cuboid
             </summary>
            <search>
            converttosolid,bb2cube,bb2cub,bounding tosolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ToPolySurface">
             <summary>
             Get the BoundingBox as a collection of Surfaces
             </summary>
            <search>
            converttosurfaces,convert2surfaces,bbtosrfs,bbtosrfs,bounding to surfaces,bound to poly,convert2poly
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ToString">
            <summary>
            Get a string representation of the Circle
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadius(Autodesk.DesignScript.Geometry.Point,System.Double)">
             <summary>
             Creates a Circle with input center Point and radius in the world XY plane, with world Z as normal.
             </summary>
            <search>
            circle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadiusNormal(Autodesk.DesignScript.Geometry.Point,System.Double,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Creates a Circle with specified center Point, radius, and normal direction.
             </summary>
            <search>
            circle,alignedcircle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByPlaneRadius(Autodesk.DesignScript.Geometry.Plane,System.Double)">
             <summary>
             Create a Circle centered at the input Plane origin (root), lying in  the input Plane, with given radius.
             </summary>
            <search>
            circle,alignedcircle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByThreePoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Create a Circle passing through three input Points.
             </summary>
            <search>
            circle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByBestFitThroughPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             Best fit Circle through Points
             </summary>
            <search>
            circle,approximate
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Circle.CenterPoint">
            <summary>
            The center of the circle
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Circle.Radius">
            <summary>
            The radius of the circle
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ToString">
            <summary>
            Get a string representation of the Cone
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ByPointsRadius(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double)">
             <summary>
             Create a Cone with given base radius at start Point, extending to a  apex at end Point.
             </summary>
            <search>
            cone
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ByPointsRadii(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Double)">
             <summary>
             Create a Cone with axis from start Point to end Point, with given  radiuses at start and end. This object does not have an apex, and can be thought of as a trimmed Cone.
             </summary>
            <search>
            trimmed cone,cone
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ByCoordinateSystemHeightRadius(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double)">
            <summary>
            Creates a Cone with base Point at CoordinateSystem origin, extending in the CoordinateSystem Z axis deriction length amount, with a  circular base in the CoordinateSystem XY Plane.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ByCoordinateSystemHeightRadii(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
             <summary>
             Creates a Cone with base Point at CoordinateSystem origin, extending in the CoordinateSystem Z axis deriction length amount, with a  circular bases in the CoordinateSystem XY Plane.
             </summary>
            <search>
            cone,cone by height
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.StartPoint">
            <summary>
            The start point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.EndPoint">
            <summary>
            The end point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.RadiusRatio">
            <summary>
            Ratio between the top and bottom radius
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.StartRadius">
            <summary>
            The radius at the base
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.EndRadius">
            <summary>
            The radius at the bottom
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.Height">
            <summary>
            The total height
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ToString">
            <summary>
            Get a string representation of the Cuboid
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ByLengths(System.Double,System.Double,System.Double)">
             <summary>
             Create a Cuboid centered at WCS origin, with width, length, and height.
             </summary>
            <search>
            box,cube
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ByLengths(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double)">
             <summary>
             Create a Cuboid centered at input Point, with specified width, length,  and height.
             </summary>
            <search>
            box,cube,cubebysize,bycenter
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ByLengths(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
             <summary>
             Create a Cuboid centered and oriented to input CoordinateSystem, with  specified width, length, and height.
             </summary>
            <search>
            box,cube,cubebysize,bycoord
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ByCorners(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Create an Cuboid spanning from low Point to high Point.
             </summary>
            <search>
            box,cube,byminmax,by corners,by points
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cuboid.Length">
            <summary>
            Returns length distance.                         Note: This return the input dimensions of the Cuboid, NOT the                   actual world space dimensions. In other words, if you create a Cuboid                   width (X-axis) length 10, and transform it to a CoordinateSystem with                   2 times scaling in X, the width will still be 10. ASM does not allow you                   to extract the Vertices of a body in any predictable order, so it                    impossible to determine the dimensions after a transform.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cuboid.Width">
            <summary>
            Returns width distance.                         Note: This return the input dimensions of the Cuboid, NOT the                   actual world space dimensions. In other words, if you create a Cuboid                   width (X-axis) length 10, and transform it to a CoordinateSystem with                   2 times scaling in X, the width will still be 10. ASM does not allow you                   to extract the Vertices of a body in any predictable order, so it                    impossible to determine the dimensions after a transform.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cuboid.Height">
            <summary>
            Returns height distance.                         Note: This return the input dimensions of the Cuboid, NOT the                   actual world space dimensions. In other words, if you create a Cuboid                   width (X-axis) length 10, and transform it to a CoordinateSystem with                   2 times scaling in X, the width will still be 10. ASM does not allow you                   to extract the Vertices of a body in any predictable order, so it                    impossible to determine the dimensions after a transform.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ToString">
            <summary>
            Get a string representation of the Curve
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ByParameterLineOnSurface(Autodesk.DesignScript.Geometry.Surface,Autodesk.DesignScript.Geometry.UV,Autodesk.DesignScript.Geometry.UV)">
             <summary>
             Create a curve by line of surface in uv space
             </summary>
            <search>
            isocurve,curvebyuv
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ByBlendBetweenCurves(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,System.Boolean,System.Boolean)">
             <summary>
             Create a curve that blends between two curves
             </summary>
            <search>
            blend,make continuous,connect
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ByIsoCurveOnSurface(Autodesk.DesignScript.Geometry.Surface,System.Int32,System.Double)">
             <summary>
             Create a curve by isoline of surface
             </summary>
            <search>
            isocurve,curvebydir
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.Length">
             <summary>
             The total arc length of the curve
             </summary>
            <search>
            distance
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.IsPlanar">
             <summary>
             Determine whether a Curve is planar or not
             </summary>
            <search>
            flat,liesinplane
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.IsClosed">
            <summary>
            Determine if the Curve is closed or not
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.StartPoint">
             <summary>
             Get the start Point along the Curve
             </summary>
            <search>
            begin,curvestart,startpt
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.EndPoint">
             <summary>
             Get the end Point along the Curve
             </summary>
            <search>
            end,curveend,endpt
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.Normal">
             <summary>
             The normal to the plane where the curve is contained.  Only            valid for planar curves.
             </summary>
            <search>
            perpendicular
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointAtParameter(System.Double)">
             <summary>
             Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()
             </summary>
            <search>
            pointoncurve,curvepoint
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.TangentAtParameter(System.Double)">
             <summary>
             Get a Vector tangent to the curve at a specified parameter between StartParameter() and EndParameter()
             </summary>
            <search>
            tangentoncurve,curvetan
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.NormalAtParameter(System.Double)">
             <summary>
             Get a Vector perpendicular to the curve at a specified parameter between StartParameter() and EndParameter()
             </summary>
            <search>
            normaloncurve,curvenorm
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.CoordinateSystemAtParameter(System.Double)">
             <summary>
             Get a CoordinateSystem with origin at the point at the given parameter. The XAxis is aligned with the curve normal and the YAxis is aligned with the curve tangent at this point
             </summary>
            <search>
            coordoncurve,curvecoord,derivatives
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.HorizontalFrameAtParameter(System.Double)">
             <summary>
             Get a CoordinateSystem with origin at the point at the given parameter
             </summary>
            <search>
            frame,axisaligned,aa,coordcurve,framecurve,curveframe,coordoncurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PlaneAtParameter(System.Double)">
             <summary>
             Returns a Plane whose normal aligns with the tangent of the Curve. Parameters are adjusted such that 0 is always the start Point and 1 is always the end Point.
             </summary>
            <search>
            planeoncurve,planecurve,tangentplane
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointAtDistance(System.Double)">
             <summary>
             Get a Point at a particular arc length along the curve
             </summary>
            <search>
            pointoncurve,curvepoint,pointalongcurve,distanceoncurve,distancepoint,distpoint
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.CoordinateSystemAtDistance(System.Double)">
             <summary>
             Returns a CoordinateSystem at specified distance from Curve start Point. Y Axis lies tangent to the Curve, X Axis is the curvature.
             </summary>
            <search>
            coordoncurve,curvecoord,derivatives
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PlaneAtDistance(System.Double)">
             <summary>
             Returns a Plane at the specified distance along the Curve from the  start Point. The normal of the Plane aligns with the tangent of the  Curve.
             </summary>
            <search>
            planeoncurve,planecurve,tangentplane
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DistanceAtParameter(System.Double)">
             <summary>
             Get the arc length along the Curve at the particular parameter.
             </summary>
            <search>
            lengthatparameter,dist along,lengthatpoint
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterAtDistance(System.Double)">
             <summary>
             Get the parameter at a particular arc length along the curve.
             </summary>
            <search>
            parameteratlen,param along,paramatlen
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterAtChordLength(System.Double,System.Double,System.Boolean)">
             <summary>
             Get the parameter at a particular chord length along the curve from given location.
             </summary>
            <search>
            measure from,measure to,parameteratdist
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.StartParameter">
             <summary>
             Get the start of the domain in which the curve can be evaluated
             </summary>
            <search>
            start domain,curvestart
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.EndParameter">
             <summary>
             Get the end of the domain in which the curve can be evaluated
             </summary>
            <search>
            end domain,curveend
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.LengthBetweenParameters(System.Double,System.Double)">
             <summary>
             Get the arc length between two parameter points on the curve
             </summary>
            <search>
            measure,distance
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterAtPoint(Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Get the parameter at a particular point along the Curve
             </summary>
            <search>
            projectpoint,closestparam,curveparam
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Reverse">
             <summary>
             Reverse the direction of the curve
             </summary>
            <search>
            flip
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Offset(System.Double)">
             <summary>
             Offset a Curve by a specified amount. Curve must be planar, and, if a BSplineCurve/NurbsCurve, must have degree > 1.
             </summary>
            <search>
            thicken
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PullOntoPlane(Autodesk.DesignScript.Geometry.Plane)">
             <summary>
             Create a curve by pulling onto plane
             </summary>
            <search>
            projectcurve,toplane
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PullOntoSurface(Autodesk.DesignScript.Geometry.Surface)">
             <summary>
             Pull this Curve onto the input Surface, in the direction of the Surface normals.
             </summary>
            <search>
            projectcurve,tosurf
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DivideEqually(System.Int32)">
             <summary>
             Divides curve into given number of equal length curves
             </summary>
            <search>
            chopcurve,segment,slices
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DivideByDistance(System.Int32)">
             <summary>
             Divides curve into given number of curves with equal distances between start and end of each curve (equal chords).
             </summary>
            <search>
            divide by chordlength,chord,segment,chopcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DivideByLengthFromParameter(System.Double,System.Double)">
             <summary>
             Divides curve into curves of given length measuring from given location
             </summary>
            <search>
            divide by chordlength,chord,segment,chopcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DivideByDistanceFromParameter(System.Double,System.Double)">
             <summary>
             Divides curve into curves of given distances between start and end (chords) measuring from given location
             </summary>
            <search>
            divide by chordlength,chord,segment,chopcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrimStart(System.Double)">
             <summary>
             Removes the start of the Curve at the specified parameter
             </summary>
            <search>
            rem,remstart,removestart,trimcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrimEnd(System.Double)">
             <summary>
             Removes the end of the Curve at the specified parameter
             </summary>
            <search>
            rem,remend,removeend,trimcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrim(System.Double,System.Double)">
             <summary>
             Removes the beginning and ends of at the specified parameters.
             </summary>
            <search>
            rem,remend,remstart,remove,trimcurve,removeends
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrimInterior(System.Double,System.Double)">
             <summary>
             Removes the interior portion of a Curve at the specified parameters
             </summary>
            <search>
            rem,removemiddle,middle,remmiddle,cutout,trimcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrimSegments(System.Double[])">
             <summary>
             Removes several segments of the curve, discarding the 1st, 3rd, 5th ... segments
             </summary>
            <search>
            rem,removeparts,remparts,cutout,trimcurv,interior,odd
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrimSegments(System.Double[],System.Boolean)">
             <summary>
             Removes several segments of the Curve, disgarding 2nd, 4th, 6th ... segments if the bool is true
             </summary>
            <search>
            rem,removeparts,remparts,cutout,trimcurv,interior,even
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterSplit(System.Double)">
             <summary>
             Split a Curve into two pieces at the given parameter
             </summary>
            <search>
            cutinto,divide,curve2curves,cut
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterSplit(System.Double[])">
             <summary>
             Split a Curve into multiple pieces at the given parameters
             </summary>
            <search>
            cutinto,divide,curve2curves,cut,cut multiple,splitmultiple
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Join(Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Join this curve and the input curve into a new PolyCurve, maintaining the original curves exactly.
             </summary>
            <search>
            convertcurve,curve2polycurve,joincurve,concat
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Join(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
             <summary>
             Join set of curves to the start of the end of the polycurve.  Flips curves to assure connectivity.
             </summary>
            <search>
            convertcurves,curves2polycurve,joincurves,concat,joinall,joinmany
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Extrude(System.Double)">
             <summary>
             Extrudes a Curve in the normal Vector direction
             </summary>
            <search>
            pushcurve,pullcurve,curve2surf,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Extrude(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Extrudes a Curve in the specified direction, by the length of the input Vector
             </summary>
            <search>
            pushcurve,pullcurve,curve2surf,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Extrude(Autodesk.DesignScript.Geometry.Vector,System.Double)">
             <summary>
             Extrudes a Curve in the specified direction, by the specified distance
             </summary>
            <search>
            pushcurve,pullcurve,curve2surf,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid(System.Double)">
             <summary>
             Extrudes a Curve in the Normal direction by the specified distance. Curve must be closed.
             </summary>
            <search>
            profileextrude,extrudeprofile,curve2solid,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Extrudes a Curve in the specified direction, by the length of the input Vector. Curve must be closed.
             </summary>
            <search>
            profileextrude,extrudeprofile,curve2solid,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid(Autodesk.DesignScript.Geometry.Vector,System.Double)">
             <summary>
             Extrudes a Curve in the specified direction, by the specified distance. Curve must be closed.
             </summary>
            <search>
            profileextrude,extrudeprofile,curve2solid,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Extend(System.Double,Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Extend a Curve by a given distance at a particular end determined by a pick Point.  The picked side will be extended.  Closed curves like Circles and Ellipses cannot be extended.
             </summary>
            <search>
            makelonger,stretch,extendside
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtendStart(System.Double)">
             <summary>
             Extend a Curve by a given distance on its start side.  Closed curves like Circles and Ellipses cannot be extended.
             </summary>
            <search>
            makelonger,stretch
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtendEnd(System.Double)">
             <summary>
             Extend a Curve by a given distance on its end.  Closed curves like Circles and Ellipses cannot be extended.
             </summary>
            <search>
            makelonger,stretch
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ApproximateWithArcAndLineSegments">
             <summary>
             Approximate a Curve with a collection of Arcs and Lines
             </summary>
            <search>
            rationalizecurve,fitarcs,fitlines
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ToNurbsCurve">
             <summary>
             Converts the Curve to a NurbsCurve approximation
             </summary>
            <search>
            curve2spline,convertcurve,tospline
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Patch">
             <summary>
             Patch a closed Curve
             </summary>
            <search>
            fill,profiletosurf,loop,loop2surf,edgesurf
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Project(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Project another piece of Geometry onto this along a given direction Vector
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.SweepAsSurface(Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Sweeps this Curve along the path Curve, creating a Surface
             </summary>
            <search>
            sweep1,curve2surf
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.SweepAsSolid(Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Sweeps this closed Curve along the path Curve, creating a Solid
             </summary>
            <search>
            sweep1,curve2solid,loop2solid,profile2solid,curvetosolid,looptosolid,profiletosolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Simplify(System.Double)">
             <summary>
             Returns a new Curve approximated with the supplied tolerance
             </summary>
            <search>
            fitcurve,reducecurve,simplecurve,approximate
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cylinder.ToString">
            <summary>
            Get a string representation of the Cylinder
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cylinder.ByRadiusHeight(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double)">
             <summary>
             Construct a Solid Cylinder defined by a parent CoordinateSystem, the radius, and the height of the cylinder
             </summary>
            <search>
            cylinder,tube
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cylinder.ByPointsRadius(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double)">
             <summary>
             Construct a Solid Cylinder given the bottom and top center point of the Cylinder.
             </summary>
            <search>
            cylinder,tube,by center points
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cylinder.Radius">
            <summary>
            The radius of the Cylinder
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Edge.ToString">
            <summary>
            Get a string representation of the Edge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Edge.CurveGeometry">
            <summary>
            The underlying Curve making up the Edge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Edge.AdjacentFaces">
            <summary>
            The Faces adjacent to this Edge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Edge.StartVertex">
            <summary>
            The Vertex at which this Edge starts
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Edge.EndVertex">
            <summary>
            The Vertex at which this Edge ends
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ToString">
            <summary>
            Get a string representation of the Ellipse
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ByOriginRadii(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double)">
             <summary>
             Create an Ellipse centered at input Point, aligned with WCS XY Plane, with specified X and Y axis radii.
             </summary>
            <search>
            ellipse
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ByOriginVectors(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Create an Ellipse centered at input Point, with two specified axes.  Axes should be be at 90 degrees to each other.
             </summary>
            <search>
            ellipsebylengths,ellipsebyvectors
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ByCoordinateSystemRadii(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double)">
             <summary>
             Create an Ellipse centered and aligned with input CoordinateSystem,  with a x_radius radius in the CS X direction, and y_radius radius in the  CS Y direction.
             </summary>
            <search>
            ellipse,aligned ellipse,ellipsebylengths
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ByPlaneRadii(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double)">
             <summary>
             Create an Ellipse centered and aligned with input Plane, with a x_radius  radius in the Plane X axis direction, and y_radius radius in the  Plane Y axis direction.
             </summary>
            <search>
            ellipse,aligned ellipse,ellipsebylengths
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Ellipse.CenterPoint">
            <summary>
            The center of the Ellipse
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Ellipse.MajorAxis">
            <summary>
            The major axis of the Ellipse.  This is the longer axis.  The length of the Vector is the Major radius.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Ellipse.MinorAxis">
            <summary>
            The minor axis of the Ellipse.  This is the shorter axis.  The length of the Vector is the Minor radius.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.EllipseArc.ToString">
            <summary>
            Get a string representation of the EllipseArc
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.EllipseArc.ByPlaneRadiiStartAngleSweepAngle(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double,System.Double,System.Double)">
             <summary>
             Create an EllipseArc in a plane with the given the radii along the X and Y axes and the angles to sweep through
             </summary>
            <search>
            ellipsearc
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.CenterPoint">
            <summary>
            The center of the Ellipse
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.MajorAxis">
            <summary>
            The major axis of the Ellipse.  This is the longer axis.  The length of the Vector is the Major radius.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.MinorAxis">
            <summary>
            The minor axis of the Ellipse.  This is the shorter axis.  The length of the Vector is the Minor radius.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.StartAngle">
            <summary>
            The start angle in degrees
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.SweepAngle">
            <summary>
            The total sweep angle in degrees
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Face.ToString">
            <summary>
            Get a string representation of the Face
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Face.Edges">
            <summary>
            All of the Edges around this Face in counterclockwise order
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Face.Vertices">
            <summary>
            All of the Vertices around this Face in counterclockwise order
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Face.SurfaceGeometry">
            <summary>
            The underlying Surface making up the Face
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Helix.ToString">
            <summary>
            Get a string representation of the Helix
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Helix.ByAxis(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point,System.Double,System.Double)">
             <summary>
             Create a Helix. The helix always rotates clockwise about the supplied  axis direction. If viewing along the axis direction, the viewer will see  the point turning clockwise around the axis as it moves along the curve  in the direction of increasing parameter. Pitch is Distance the helix  moves in the axis direction per turn. This can be positive or negative.
             </summary>
            <search>
            helix,screw,corkscrew,thread
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.Angle">
            <summary>
            The angle in degrees through which the Helix turns over its length
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.Pitch">
            <summary>
            The pitch of the helix in Degrees
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.Radius">
            <summary>
            The radius of the arc
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.AxisDirection">
            <summary>
            The direction of the axis of the Helix
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.AxisPoint">
             <summary>
             The base point of the Helix axis
             </summary>
            <search>
            origin,helixstart
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.ToString">
            <summary>
            Get a string representation of the IndexGroup
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.Equals(System.Object)">
            <summary>
            Compare two IndexGroup's
            </summary>
            <param name="other">The other IndexGroup</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.GetHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.ByIndices(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
             <summary>
             Create an IndexGroup storing four indices
             </summary>
            <search>
            quad,polygon,mesh
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.ByIndices(System.UInt32,System.UInt32,System.UInt32)">
             <summary>
             Create an IndexGroup storing three indices
             </summary>
            <search>
            tri,polygon,mesh
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.Count">
            <summary>
            Either 3 or 4, depending if it represents a triangle or a quad
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.A">
            <summary>
            The first index
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.B">
            <summary>
            The second index
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.C">
            <summary>
            The third index
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.D">
            <summary>
            The fourth index
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ToString">
            <summary>
            Get a string representation of the Line
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Creates a straight Line between two input Points.
             </summary>
            <search>
            line,linebypoints
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ByBestFitThroughPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             Creates a Line best approximating a scatter plot of Points.
             </summary>
            <search>
            line,approximate
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ByTangency(Autodesk.DesignScript.Geometry.Curve,System.Double)">
             <summary>
             Create a Line tangent to the input Curve, positioned at the parameter Point of the input Curve.
             </summary>
            <search>
            tangentline,tangentto
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double)">
             <summary>
             Create a straight Line starting at start Point, extending in Vector direction by specified length.
             </summary>
            <search>
            linebyvector
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Line.Direction">
            <summary>
            The direction of the Curve
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Mesh.ToString">
            <summary>
            Get a string representation of the Mesh
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Mesh.ByPointsFaceIndices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.IndexGroup})">
             <summary>
             Create a mesh from a collection of Points and a collection of IndexGroups referencing the Point collection
             </summary>
            <search>
            mesh
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Mesh.FaceIndices">
            <summary>
            The vertex indices that make up each face in a counterclockwise fashion
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Mesh.VertexNormals">
            <summary>
            The normal vector at this vertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Mesh.VertexPositions">
            <summary>
            The positions of the vertices
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ToString">
            <summary>
            Get a string representation of the NurbsCurve
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByControlPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             Create a BSplineCurve by using explicit control points. NOTE 1: BSplineCurves with deg=1 have G1 discontinuities, which cause problems for extrusion, sweep, and other operations. They should be avoided. Use  a PolyCurve instead.  NOTE 2: If the curve is periodic (closed), then the first and last points MUST be the same.
             </summary>
            <search>
            nurbscurve,spline
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByControlPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Int32)">
             <summary>
             Create a BSplineCurve by using explicit control points. NOTE 1: BSplineCurves with deg=1 have G1 discontinuities, which cause problems for extrusion, sweep, and other operations. They should be avoided. Use  a PolyCurve instead.  NOTE 2: If the curve is periodic (closed), then the first and last points MUST be the same.
             </summary>
            <search>
            nurbscurve,spline,degree
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByControlPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Int32,System.Boolean)">
             <summary>
             Create a BSplineCurve by using explicit control points. NOTE 1: BSplineCurves with deg=1 have G1 discontinuities, which cause problems for extrusion, sweep, and other operations. They should be avoided. Use  a PolyCurve instead.  NOTE 2: If the curve is periodic (closed), then the first and last points MUST be the same.
             </summary>
            <search>
            nurbscurve,spline,degree,smoothness
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByControlPointsWeightsKnots(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Double[],System.Double[],System.Int32)">
             <summary>
             Create a BSplineCurve by from control vertices, weights, and knots. FROM ASM DOCS: Degree: Should be greater than 1 (piecewise-linear spline) and less than 26 (the maximum  B-spline basis degree supported by ASM). Weights: All weight values (if supplied) should be strictly positive.  Weights smaller than 1e-11 will be rejected and the function will fail.  Knots: The knot vector should be a non-decreasing sequence. Interior knot multiplicity should be no larger than degree + 1 at the start/end knot and  degree at an internal knot (this allows curves with G1 discontinuities to be  represented). Note that non-clamped knot vectors are supported, but will be  converted to clamped ones, with the corresponding changes applied to the  control point/weight data.  knot array: the array size must be num_control_points + degree + 1
             </summary>
            <search>
            explicit,nurbscurve,spline,degree,spline byarray
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             Create a BSplineCurve by interpolating between points.
             </summary>
            <search>
            fit,approximate,spline
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Boolean)">
             <summary>
             Create a BSplineCurve by interpolating between points. NOTE 2: If the curve is periodic (closed), then the first and last points MUST be the same.
             </summary>
            <search>
            fit,approximate,spline
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Int32)">
             <summary>
             Create a BSplineCurve by interpolating between points with specified degree.
             </summary>
            <search>
            fit,approximate,spline,smoothness
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByPointsTangents(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Returns a BSplineCurve through the points, with tangent directions.
             </summary>
            <search>
            spline by tangent,tangents
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsCurve.Degree">
             <summary>
             The degree of the curve
             </summary>
            <search>
            smoothness,interpolation,continuity
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsCurve.IsPeriodic">
             <summary>
             Whether the NurbsCurve is periodic or not
             </summary>
            <search>
            isclosed
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsCurve.IsRational">
            <summary>
            Whether the NurbsCurve is rational or not.  This defines whether any of the weights are not 1.0.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ControlPoints">
            <summary>
            Get the control points of the NurbsCurve.  These are the points that the curve interpolates.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.Knots">
            <summary>
            The knots of the Curve.  These, along with the Degree, define the domain of the Curve where a particular control vertex acts.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.Weights">
             <summary>
             The weights of the control vertices of the curve.  These define the magnitude of influence of the control vertices.
             </summary>
            <search>
            ptweight
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ToString">
            <summary>
            Get a string representation of the NurbsSurface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByPoints(Autodesk.DesignScript.Geometry.Point[][],System.Int32,System.Int32)">
             <summary>
             Creates a NurbsSurface with specified interpolated points and  U and V degrees.  The resultant surface will pass through all of the points.
             </summary>
            <search>
            fit,topoints
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByPointsTangents(Autodesk.DesignScript.Geometry.Point[][],System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector})">
             <summary>
             Creates a NurbsSurface with specified interpolated points and  U and V degrees.  The resultant surface will pass through all of the points.  The number of tangents must match the number of  points in the corresponding direction.  The resultant surface will be degree 3 in both the U and V direction.
             </summary>
            <search>
            fit,topoints,totangents
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByPointsTangentsKnotsDerivatives(Autodesk.DesignScript.Geometry.Point[][],System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Double[],System.Double[],System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector})">
             <summary>
             Creates a NurbsSurface satisfying a collection of different surface characteristics. This is the most advanced surface fitting method.  The resultant surface  will pass through all of the points.  The number of tangents must match  the number of points in the corresponding direction.  The resultant surface will be degree 3 in both the U and V direction.  The corner derivatives should be  second order (dP/dUdV) and should be supplied in this order [ lowU, lowV ], [ highU, lowV ],  [ lowU, highV ], [ highU, highV ].
             </summary>
            <search>
            fit,topoints,totangents,fit corners,complex fit
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByControlPoints(Autodesk.DesignScript.Geometry.Point[][],System.Int32,System.Int32)">
            <summary>
            Create a NurbsSurface by using explicit control Points, with specified U and V degrees.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByControlPointsWeightsKnots(Autodesk.DesignScript.Geometry.Point[][],System.Double[][],System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            Creates a NurbsSurface with specified control vertices, knots, weights,  and U V degrees.  There are several restrictions on the data which, if broken, will cause the function to fail and will throw an exception. Degree: Both u- and v- degree should be >= 1 (piecewise-linear spline)  and  less than 26 (the maximum B-spline basis degree supported by ASM). Weights: All weight values (if supplied) should be strictly positive.  Weights smaller than 1e-11 will be rejected and the function will fail.  Knots: Both knot vectors should be non-decreasing sequences. Interior knot multiplicity should be no larger than degree + 1 at the start/end knot and  degree at an internal knot (this allows surfaces with G1 discontinuities to  be represented). Note that non-clamped knot vectors are supported, but will  be converted to clamped ones, with the corresponding changes applied to the  control point/weight data.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.DegreeU">
             <summary>
             Surface degree in the U direction.
             </summary>
            <search>
            surface smoothness,continuity
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.DegreeV">
             <summary>
             Surface degree in the V direction.
             </summary>
            <search>
            surface smoothness,continuity
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.NumControlPointsU">
            <summary>
            Number of control Points in the U direction.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.NumControlPointsV">
            <summary>
            Number of control Points in the V direction.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.IsPeriodicInU">
             <summary>
             Returns true if the Surface is periodic in the U direction.
             </summary>
            <search>
            closedinU
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.IsPeriodicInV">
             <summary>
             Returns true if the Surface is periodic in the V direction.
             </summary>
            <search>
            closedinV
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.IsRational">
            <summary>
            Returns true if the Surface is rational.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ControlPoints">
            <summary>
            Returns NurbsSurface control points (poles).
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.Weights">
             <summary>
             Returns NurbsSurface control point weights.
             </summary>
            <search>
            ptweights
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.UKnots">
            <summary>
            Surface knots in U direction.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.VKnots">
            <summary>
            Surface knots in V direction.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ToString">
            <summary>
            Get a string representation of the Plane
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByOriginNormal(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Create a Plane centered at root Point, with input normal Vector.
             </summary>
            <search>
            plane,tonormal
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByOriginNormalXAxis(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create an "oriented" Plane, positioned at Point origin with Vector  normal, but with a specific X axis orientation. This has no impact to splitting, intersect, project, etc oporations, it only specifies the orientation of the input CoordinateSystem.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByOriginXAxisYAxis(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            The X and Y axis lie in the plane. The Z axis is the cross product of the two Vectors.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByBestFitThroughPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             Fits a Plane to the input Points; basically a 3D scatterplot fit.
             </summary>
            <search>
            fit,bestfit
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByLineAndPoint(Autodesk.DesignScript.Geometry.Line,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create the Plane containing the input Line and external Point. Point cannot lie on the Line or in the Line axis.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByThreePoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create a the Plane containing the three input Points.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.XY">
            <summary>
            Creates a plane in the world XY
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.XZ">
            <summary>
            Creates a plane in the world XZ plane
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.YZ">
            <summary>
            Creates a plane in the world YZ
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Plane.Origin">
             <summary>
             Returns the origin of the Plane.
             </summary>
            <search>
            position,planecenter
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Plane.Normal">
             <summary>
             Returns the normal direction of the Plane.
             </summary>
            <search>
            perpendicular
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Plane.XAxis">
            <summary>
            The X basis of the Plane
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Plane.YAxis">
            <summary>
            The Y basis of the Plane
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ToCoordinateSystem">
             <summary>
             Produces a new CoordinateSystem representing this plane. It is based on  the origin, and X and Y axis basis.
             </summary>
            <search>
            converttoCS,convert2cs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.Offset(System.Double)">
             <summary>
             Create a new Plane offset by this Plane in the normal direction by the specified distance.
             </summary>
            <search>
            alongnormal,moveplane
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ToString">
            <summary>
            Get a string representation of the Point
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Equals(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <summary>
            Compare two Point's
            </summary>
            <param name="other">The other Point</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ComputeHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ByCoordinates(System.Double,System.Double)">
             <summary>
             Form a Point in the XY plane given two 2 cartesian coordinates.  The Z component is 0.
             </summary>
            <search>
            xy,position
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Origin">
             <summary>
             Get the Origin point (0,0,0)
             </summary>
            <search>
            zero,origin
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ByCoordinates(System.Double,System.Double,System.Double)">
             <summary>
             Form a Point given 3 cartesian coordinates
             </summary>
            <search>
            point,xyz,position
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ByCartesianCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
             <summary>
             Form a Point in the given coordinate system with 3 cartesian coordinates
             </summary>
            <search>
            point,xyz,localposition
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ByCylindricalCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
             <summary>
             Form a Point in the given coordinate system given its position in cylindrical coordinates.
             </summary>
            <search>
            point,localposition
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.BySphericalCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
             <summary>
             Form a Point in the given coordinate system given its position in spherical coordinates.
             </summary>
            <search>
            point,localposition
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.PruneDuplicates(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Double)">
             <summary>
             Prune points to exclude duplicates within tolerance of included points
             </summary>
            <search>
            unique,duplicates,remove duplicates,distinct,near
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Point.X">
            <summary>
            Get the X component of a Point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Point.Y">
            <summary>
            Get the Y component of a Point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Point.Z">
            <summary>
            Get the Z component of a Point
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.AsVector">
             <summary>
             Get the Vector with the same X, Y, and Z component
             </summary>
            <search>
            convertovector,point2vector
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Add(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Add a vector to a point.  The same as Translate(Vector).
             </summary>
            <search>
            movepoint,move,move along
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Subtract(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Subtract a vector from a point.  The same as Translate(-Vector).
             </summary>
            <search>
            movepoint,move,move along
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Project(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Project another piece of Geometry onto this along a given direction Vector
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ToString">
            <summary>
            Get a string representation of the PolyCurve
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
             <summary>
             Make PolyCurve by joining curves. Flips curve as needed for connectivity
             </summary>
            <search>
            segments,joincurves
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Boolean)">
             <summary>
             Make PolyCurve from sequence of lines connecting points. For closed curve last point should be in same location as start point.
             </summary>
            <search>
            segments,joincurves
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ByThickeningCurve(Autodesk.DesignScript.Geometry.Curve,System.Double,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Make PolyCurve by thickening a curve.
             </summary>
            <search>
            offset
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.PolyCurve.NumberOfCurves">
             <summary>
             Number of curves of the polycurve
             </summary>
            <search>
            curvecount,subcurvecount,numbersubcurves
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.Curves">
             <summary>
             Returns curves of the polycurve
             </summary>
            <search>
            subcurves,polycurvesplit
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.CurveAtIndex(System.Int32,System.Boolean)">
             <summary>
             Returns curve of the polycurve by index
             </summary>
            <search>
            subcurveatindex,getsubcurve,getcurvebyindex
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.BasePlane">
            <summary>
            Returns plane of planar polycurve
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ExtendWithEllipse(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Extends polycurve by tangent ellipse
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ExtendWithArc(System.Double,System.Double,System.Boolean)">
            <summary>
            Extends polycurve by tangent arc
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.CloseWithLine">
            <summary>
            Close polycurve by line connecting start and end points
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.CloseWithLineAndTangentArcs(System.Double,System.Double)">
            <summary>
            Close polycurve by tangent chain of arc, line, and arc
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.Offset(System.Double,System.Boolean)">
            <summary>
            Offset polycurve in its plane.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.Fillet(System.Double,System.Boolean)">
             <summary>
             Fillet polycurve in its plane.
             </summary>
            <search>
            round,smooth,radius
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.ToString">
            <summary>
            Get a string representation of the Polygon
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.RegularPolygon(Autodesk.DesignScript.Geometry.Circle,System.Int32)">
            <summary>
            Construct a Polygon Curve by connecting Points.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Construct a Polygon Curve by connecting Points.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Polygon.Points">
            <summary>
            Returns all the segment start / end points.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Polygon.PlaneDeviation">
            <summary>
            Returns maximum deviation from average plane of polygon.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.Corners">
            <summary>
            Returns corners of polygon
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.Center">
             <summary>
             Returns average point of corners of polygon
             </summary>
            <search>
            centroid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.SelfIntersections">
            <summary>
            Returns self intersections between sides of the polygon.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.ContainmentTest(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Checks if point is inside planar polygon without self intersections.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ToString">
            <summary>
            Get a string representation of the PolySurface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Makes PolySurface by Loft through Curves.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Makes PolySurface by Loft through PolyCurves.
             </summary>
            <search>
            loftbyrail
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ByLoftGuides(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
             <summary>
             Makes PolySurface by Loft through PolyCurves.
             </summary>
            <search>
            loftbyrails,loft rails,guides
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ByJoinedSurfaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Surface})">
             <summary>
             Make Polysurface by joining surfaces.
             </summary>
            <search>
            joinsurfaces,joinsrf
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.BySolid(Autodesk.DesignScript.Geometry.Solid)">
             <summary>
             Make Polysurface by surfaces of Solid.
             </summary>
            <search>
            solid2poly,solidtopoly,convertsolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.BySweep(Autodesk.DesignScript.Geometry.Curve,System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
             <summary>
             Make Polysurface by sweeping curves along rail.
             </summary>
            <search>
            sweep,rail,guide,sweep1
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.BySweep(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Make Polysurface by sweeping a curve along rail.
             </summary>
            <search>
            sweep,rail,guide,sweep1,sweepprofile,profile
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.Surfaces">
             <summary>
             Return new Surfaces representing the underlying Surfaces.
             </summary>
            <search>
            subsurfaces,getsurfaces,explode
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.LocateSurfacesByPoint(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Locate Surfaces by point. Takes first intersection in forward direction.  Returns one surface if hit  surface interior, two if hit edge interior, and many if hit vertex
             </summary>
            <search>
            surfacesatpoint,findsurfaces,extractsurfaces
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.LocateSurfacesByLine(Autodesk.DesignScript.Geometry.Line)">
             <summary>
             Locate Surfaces by Line. Takes all surfaces hit by line.
             </summary>
            <search>
            surfacesonline,findsurfaces,extractsurfaces
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.UnconnectedBoundaries">
            <summary>
            Compute 2d cell boundaries which are not connected to other Surfaces
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ExtractSolids">
            <summary>
            Extract Solids from Polysurface defined by subset of surfaces
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.SurfaceCount">
            <summary>
            number of surfaces of Polysurface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.EdgeCount">
            <summary>
            number of edges of Polysurface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.VertexCount">
            <summary>
            number of vertices of Polysurface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.Fillet(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Double)">
             <summary>
             Fillets a PolySurface along input Edges with a given radius.
             </summary>
            <search>
            round,smooth,smoothedge,roundedges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.Chamfer(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Double)">
             <summary>
             Chamfers a PolySurface along input Edges with a given offset from the edge corner.
             </summary>
            <search>
            bevel,flattenedges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ToString">
            <summary>
            Get a string representation of the Rectangle
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByCornerPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             Create a Rectangle by four corner Points.
             </summary>
            <search>
            rectbypointarray
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByCornerPoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Create a Rectangle by four corner Points.
             </summary>
            <search>
            rectbypoints
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength(System.Double,System.Double)">
             <summary>
             Create a Rectangle centered at the WCS origin in the WCS XY Plane, with specified width (X Axis length), and length (Y Axis length).
             </summary>
            <search>
            rectbylengths
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double)">
             <summary>
             Create a Rectangle centered at input Plane root, with input width  (Plane X axis length), and length (Plane Y axis length).
             </summary>
            <search>
            rectangle,rectbylengths
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double)">
             <summary>
             Create a Rectangle centered at the input origin in the CoordinateSystem  XY Plane, with specified width (X Axis length), and length  (Y Axis length).
             </summary>
            <search>
            rectbylengths
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Rectangle.Width">
             <summary>
             The width of the Rectangle
             </summary>
            <search>
            rectX,rectx
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Rectangle.Height">
             <summary>
             The height of the Rectangle
             </summary>
            <search>
            rectY,recty
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ToString">
            <summary>
            Get a string representation of the Solid
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByJoinedSurfaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Surface})">
             <summary>
             Create a solid by specifying it's component faces as Surfaces.
             </summary>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
             <summary>
             Create a Solid by lofting between input cross section closed Curves.
             </summary>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Create a Solid by lofting between input cross section closed Curves,  with guide Curve to assist. Guide Curve must intersect all cross section Curves.
             </summary>
            <search>
            Brep,brep,guide,loft
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
             <summary>
             Create a Solid by lofting between input cross section closed Curves,  with guide Curves to assist. Guide Curves must intersect all cross  section Curves.
             </summary>
            <search>
            Brep,brep,guides,loft
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.BySweep(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Sweep a closed Curve along a path.
             </summary>
            <search>
            Brep,brep,sweep1
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.BySweep2Rails(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Sweep a closed profile Curve along two rail Curves.
             </summary>
            <search>
            Brep,brep,sweep2,guides,sweepprofile
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByRevolve(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Double)">
             <summary>
             Create a Surface of revolution, sweeping the profile Curve around the axis Ray formed by the origin and the axis Vector, from the start angle in degrees to the sweep angle in degrees.
             </summary>
            <search>
            Brep,brep,lathe,revolveprofile
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByUnion(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Solid})">
             <summary>
             Union a collection of solids into one solid
             </summary>
            <search>
            Brep,brep,boolean,addition
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Solid.Area">
            <summary>
            Returns the surface area -- sum of all the areas of all faces
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Solid.Volume">
            <summary>
            The total volume of the Solid
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Centroid">
             <summary>
             The centroid of the Solid
             </summary>
            <search>
            average,center
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Union(Autodesk.DesignScript.Geometry.Solid)">
             <summary>
             The boolean union of this Solid and another.
             </summary>
            <search>
            addition,merge,combine
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.UnionAll(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Solid})">
             <summary>
             Unions a list of Solids with this Solid.
             </summary>
            <search>
            addition,merge,combine,unionmany,union multi
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Difference(Autodesk.DesignScript.Geometry.Solid)">
            <summary>
            The boolean difference of this Solid with another
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.DifferenceAll(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Solid})">
             <summary>
             The boolean difference of this Solid and the union of input Solids
             </summary>
            <search>
            subtract,differencemany,diffall,diff multi
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ThinShell(System.Double,System.Double)">
             <summary>
             Obtain a solid Shell from the Faces of this Solid
             </summary>
            <search>
            extract shell,offset and extract
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ProjectInputOnto(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Projects the input Geometry onto this Solid, in the direction of the input Vector
             </summary>
            <search>
            projectonto,projectonsolid,projecttosolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Fillet(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Double)">
             <summary>
             Fillets a Solid along input Edges with a given radius.
             </summary>
            <search>
            round,smooth,smoothedge,roundedges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Chamfer(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Double)">
             <summary>
             Chamfers a Solid along input Edges with a given offset from the edge corner.
             </summary>
            <search>
            bevel,flattenedges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Sphere.ToString">
            <summary>
            Get a string representation of the Sphere
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Sphere.ByCenterPointRadius(Autodesk.DesignScript.Geometry.Point,System.Double)">
             <summary>
             Create a Solid Sphere cetered at the input Point, with given radius.
             </summary>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Sphere.ByFourPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             Create a Solid Sphere containing four input Points on the surface.
             </summary>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Sphere.ByBestFit(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             Fit a Sphere as close as possible to the input Points.
             </summary>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Sphere.CenterPoint">
            <summary>
            Return the center Point of the Sphere.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Sphere.Radius">
            <summary>
            Return the radius of the Sphere.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ToString">
            <summary>
            Get a string representation of the Surface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
             <summary>
             Create a Surface by lofting between input cross section Curves.
             </summary>
            <search>
            loft
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByRuledLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Line})">
             <summary>
             Create a Surface by lofting between input cross section Lines.  This is slightly faster and produces a less smooth result than Surface.ByLoft.
             </summary>
            <search>
            ruledsurface
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Loft a Surface through the cross sections with a specified guide curve (aka a rail). Guide curve must intersect all of the cross section  curves.
             </summary>
            <search>
            loftbyrail
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
             <summary>
             Loft a Surface through the cross sections with a specified guide curves (aka a rails). Guide curves must intersect all of the cross section  curves.
             </summary>
            <search>
            loftbyrails,loft rails,guides
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.BySweep(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Create a Surface by sweeping a cross section Curve along a path.
             </summary>
            <search>
            sweep,rail,guide,sweep1
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
             <summary>
             Create a Polygon Surface connecting input Points in a closed Polygon and patching it.
             </summary>
            <search>
            patch,surfacebypolygon
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.BySweep2Rails(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Sweep the cross section curve along a path guided by a two rails
             </summary>
            <search>
            sweep2,guides
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByRevolve(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Double)">
             <summary>
             Create a Surface by sweeping the profile Curve around the axis ray formed  by origin Point in the direction of the axis Vector, starting at start_angle in degrees, sweeping sweep_angle in degrees.
             </summary>
            <search>
            lathe
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByPatch(Autodesk.DesignScript.Geometry.Curve)">
             <summary>
             Create a Surface by filling in the interior of a closed boundary defined by input Curves.
             </summary>
            <search>
            edgesrf,edgesurface,patch,fill
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.Area">
            <summary>
            Returns the total surface area.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.Perimeter">
             <summary>
             Returns the sum of all edges of the Surface.
             </summary>
            <search>
            circumference
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.ClosedInU">
            <summary>
            Returns true if the Surface is closed in U direction.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.ClosedInV">
            <summary>
            Returns true if the Surface is closed in V direction
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.Closed">
            <summary>
            Returns true if the Surface is closed in U or V directions
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.SubtractFrom(Autodesk.DesignScript.Geometry.Solid)">
             <summary>
             Subtract the input tools from this Surface.
             </summary>
            <search>
            difference,trim,removefrom,cut
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.UVParameterAtPoint(Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Return the UV parameter pair at the input Point. This is the inverse of Point at parameter.
             </summary>
            <search>
            evaluateatpoint,surfaceatpoint,uvatpoint
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.TrimWithEdgeLoops(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.PolyCurve})">
             <summary>
             Trim the surface with a collection of loops within the surface
             </summary>
            <search>
            trim multiple,removeloops,cutloops
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.NormalAtPoint(Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Return the surface normal at the input Point on the Surface.
             </summary>
            <search>
            perpendicular
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ToNurbsSurface">
            <summary>
            Gets a Nurbs representation of the Surface. This method may approximate Surface in certain circumstances.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ApproximateWithTolerance(System.Double)">
             <summary>
             Gets a Nurbs representation of the Surface within a specified tolerance. This method may approximate Surface in certain circumstances.
             </summary>
            <search>
            tonurbs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Thicken(System.Double)">
             <summary>
             Thicken Surface into a Solid, extruding in the direction of Surface  normals on both sides of the Surface.
             </summary>
            <search>
            offset,tosolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Thicken(System.Double,System.Boolean)">
             <summary>
             Thicken Surface into a Solid, extruding in the direction of Surface  normals. If both_sides parameter is true, surface is thickened  on both sides.
             </summary>
            <search>
            offset,bothsides,tosolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Offset(System.Double)">
            <summary>
            Offset Surface in direction of Surface normal by specified distance.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.CurvatureAtParameter(System.Double,System.Double)">
            <summary>
            The returned coordination system use xAxis, yAxis and zAxis to represent the uDir, vDir and normal. The length of xAxis, yAxis represents the curvatures.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.CoordinateSystemAtParameter(System.Double,System.Double)">
            <summary>
            Return a CoordinateSystem aligned with principal curvature directions.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.TangentAtUParameter(System.Double,System.Double)">
            <summary>
            Return the U tangent Vector at specified U and V parameters.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.TangentAtVParameter(System.Double,System.Double)">
            <summary>
            Return the V tangent Vector at specified U and V parameters.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.NormalAtParameter(System.Double,System.Double)">
            <summary>
            Return the normal Vector at specified U and V parameters.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.DerivativesAtParameter(System.Double,System.Double)">
             <summary>
             Return the derivatives at input U and V coordinates.
             </summary>
            <search>
            tangent,normal
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.GaussianCurvatureAtParameter(System.Double,System.Double)">
             <summary>
             Returns the Gaussian curvature at U and V parameters.
             </summary>
            <search>
            developable
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.PrincipalCurvaturesAtParameter(System.Double,System.Double)">
            <summary>
            Returns the principal curvatures at the U and V parameters.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.PrincipalDirectionsAtParameter(System.Double,System.Double)">
            <summary>
            Returns principal direction vectors at U and V parameters.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.PointAtParameter(System.Double,System.Double)">
             <summary>
             Return the Point at specified U and V parameters.
             </summary>
            <search>
            surfacepoint
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.PerimeterCurves">
             <summary>
             Return all the boundary Curves of the Surface.
             </summary>
            <search>
            edges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.GetIsoline(System.Int32,System.Double)">
            <summary>
            Create a parameter line curve on the given surface. Create a Curve that represents a u or v parameter line on the Surface. A  parameter line runs in the direction of increasing u or v parameter at a  constant opposite u or v parameter. The resulting Curve will match the  Surface parameterisation and its range will be bounded by the Surface  parameter range. The type of Curve returned will depend on the Surface  type.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.FlipNormalDirection">
            <summary>
            Returns a new Surface with the Normal flipped. Leaves this surface unchanged.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Join(Autodesk.DesignScript.Geometry.Surface)">
             <summary>
             Combines this Surface and input Surface into a PolySurface
             </summary>
            <search>
            topolysurface
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Join(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Surface})">
             <summary>
             Combines this Surface and input Surfaces into a PolySurface
             </summary>
            <search>
            join multiple,joinmany,joinall,topolysurface
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ProjectInputOnto(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Projects the input Geometry onto this Surface in the input Vector direction
             </summary>
            <search>
            projecttosurface,projectonto
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Topology.ToString">
            <summary>
            Get a string representation of the Topology
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Topology.Vertices">
            <summary>
            The Vertices of the Topology
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Topology.Edges">
            <summary>
            The Edges of the Topology
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Topology.Faces">
            <summary>
            The Faces of the Topology
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.UV.ToString">
            <summary>
            Get a string representation of the UV
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.UV.Equals(System.Object)">
            <summary>
            Compare two UV's
            </summary>
            <param name="other">The other UV</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.UV.GetHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.UV.ByCoordinates(System.Double,System.Double)">
             <summary>
             Create a UV from two doubles.
             </summary>
            <search>
            surfaceparam,parameters,uv
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.UV.U">
            <summary>
            Get the U component of a UV
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.UV.V">
            <summary>
            Get the V component of a V
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ToString">
            <summary>
            Get a string representation of the Vector
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Equals(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <summary>
            Compare two Vector's
            </summary>
            <param name="other">The other Vector</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ComputeHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ByCoordinates(System.Double,System.Double,System.Double)">
             <summary>
             Form a Vector by 3 Euclidean coordinates
             </summary>
            <search>
            vector,xyz,vector3
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ByCoordinates(System.Double,System.Double,System.Double,System.Boolean)">
             <summary>
             Form a Vector by 3 Euclidean coordinates and normalize the Vector
             </summary>
            <search>
            normalize,vector3
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ByTwoPoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
             <summary>
             Form a Vector by two end points.  The result is a vector from the start to the end point.
             </summary>
            <search>
            vector2
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.XAxis">
             <summary>
             Get the canonical X axis Vector (1,0,0)
             </summary>
            <search>
            x,basis,right
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.YAxis">
             <summary>
             Get the canonical Y axis Vector (0,1,0)
             </summary>
            <search>
            y,basis,forward
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ZAxis">
             <summary>
             Get the canonical Z axis Vector (0,0,1)
             </summary>
            <search>
            z,basis,up
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vector.X">
            <summary>
            Get the X component of a Vector
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vector.Y">
            <summary>
            Get the Y component of a Vector
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vector.Z">
            <summary>
            Get the Z component of a Vector
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vector.Length">
             <summary>
             Get the length of the vector - otherwise known as the Euclidean norm
             </summary>
            <search>
            magnitude
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.AsPoint">
             <summary>
             Get the Point with the same X, Y, and Z component
             </summary>
            <search>
            convertopoint,vector2point
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Reverse">
             <summary>
             Get the reverse of the vector.  Essentially this negates the X, Y, and Z components of the Vector.
             </summary>
            <search>
            backwards,vectorflip
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Add(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Add a vector
             </summary>
            <search>
            sum,sumvectors
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Subtract(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Subtract a vector
             </summary>
            <search>
            substact,diff vectors,between
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Cross(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Form the cross product of two vectors
             </summary>
            <search>
            perpendicular
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Dot(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Form the dot product of two vectors
             </summary>
            <search>
            project,projectvector,vectorproject,onto
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Normalized">
            <summary>
            Get the normalized version of a vector
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.IsParallel(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Determine whether two vectors are parallel or not
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.IsAlmostEqualTo(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Determine whether two vectors ae almost equal
             </summary>
            <search>
            vector approximate,near,same
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transform this Vector by input CoordinateSystem matrix.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Rotate(Autodesk.DesignScript.Geometry.Vector,System.Double)">
             <summary>
             Rotates a Vector around an axis by a specified number of degrees
             </summary>
            <search>
            around,axis,degrees
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Rotate(Autodesk.DesignScript.Geometry.Plane,System.Double)">
             <summary>
             Rotates a vector around the Plane origin and normal by a specified  degree
             </summary>
            <search>
            around,normal,degrees
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Scale(System.Double)">
             <summary>
             Scale Vector uniformly around the origin
             </summary>
            <search>
            resize,size
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Scale(System.Double,System.Double,System.Double)">
             <summary>
             Scale Vector non-uniformly around the origin
             </summary>
            <search>
            resize,size,scaleNU,scalenu
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.AngleBetween(Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Returns the angle between the two Vectors, in the range [0, 180] degrees.
             </summary>
            <search>
            rotation angle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.AngleBetween(Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
             <summary>
             Returns the angle between the two Vectors, in the range [0, 360] degrees. It uses axis of rotation to determine the direction of the angle.
             </summary>
            <search>
            rotation angle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vertex.ToString">
            <summary>
            Get a string representation of the Vertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vertex.PointGeometry">
            <summary>
            The Point where this Vertex is located
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vertex.AdjacentEdges">
            <summary>
            The Edges emanating from this Vertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vertex.AdjacentFaces">
            <summary>
            The Faces adjacent to this Vertex
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ToString">
            <summary>
            Get a string representation of the CoordinateSystem
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Identity">
            <summary>
            Creates a CoordinateSystem as the World Coordinate System: origin at 
            0, 0, 0; x axis at 1, 0, 0; y axis at 0, 1, 0; z axis at 0, 0, 1
            </summary>
            <search>zero,wcs</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByMatrix(System.Double[])">
            <summary>
            Deprecated -- DO NOT USE
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(System.Double,System.Double)">
            <summary>
            Create a CoordinateSystem with origin at X and Y locations, with
            X and Y Axes set as WCS X and Y Axes. Z defaults to 0.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(System.Double,System.Double,System.Double)">
            <summary>
            Create a CoordinateSystem with origin at X, Y, and Z locations, with
            X and Y Axes set as WCS X and Y Axes.
            </summary>
            <search>translate</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create a CoordinateSystem with origin at input Point, with X and Y Axes
            set as WCS X and Y Axes.
            </summary>
            <search>bypoint</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByPlane(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Create a CoordinateSystem with origin equal to input Plane origin, and 
            X and Y axes lying in the Plane, aligned with Plane X and Y axes.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOriginVectors(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create a CoordinateSystem at the origin with X and Y axis. 
            Input Vectors are normalized before creating the CoordinateSystem.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOriginVectors(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create a CoordinateSystem at the origin with X and Y axis, with Z
            axis ignored completely. Input Vectors are normalized before creating 
            the CoordinateSystem. 
            </summary>
            <search>byxy,coord by2axis</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByCylindricalCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
            <summary>
            Creates a CoordinateSystem at the specified cylindrical coordinate parameters with respect to the specified coordinate system
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.BySphericalCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
            <summary>
            Creates a CoordinateSystem at the specified spherical coordinate parameters with respect to the specified coordinate system
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.IsSingular">
            <summary>
            Determine whether it is possible to get the Inverse of this CoordinateSystem
            </summary>
            <search>inverse,testinverse</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.IsScaledOrtho">
            <summary>
            Tests if the scaling orthogonal, i.e. does it have a shear component.
            </summary>
            <search>uniform</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.IsUniscaledOrtho">
            <summary>
            Tests if the scaling orthogonal and are all the vectors normalized.
            </summary>
            <search>uniform,normal,samelength</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.Determinant">
            <summary>
            Obtain the Determinant of this CoordinateSystem
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.Origin">
            <summary>
            Creates a Point representing the CoordinateSystem origin. 
            </summary>
            <search>position,center</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.XAxis">
            <summary>
            Returns X Axis of CoordinateSystem.
            </summary>
            <search>left,right</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.YAxis">
            <summary>
            Returns Y Axis of CoordinateSystem.
            </summary>
            <search>forward,back</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.ZAxis">
            <summary>
            Returns Z Axis of CoordinateSystem.
            </summary>
            <search>up,down</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.XScaleFactor">
            <summary>
            Returns the X Axis scaling of the CoordinateSystem: the length of the X Axis vector.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.YScaleFactor">
            <summary>
            Returns the Y Axis scaling of the CoordinateSystem: the length of the Y Axis vector.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.ZScaleFactor">
            <summary>
            Returns the Z Axis scaling of the CoordinateSystem: the length of the Z Axis vector.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.XYPlane">
            <summary>
            Returns the Plane the X and Y axes lie in, with root at the origin.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.YZPlane">
            <summary>
            Returns the Plane the Y and Z axes lie in, with root at the origin.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.ZXPlane">
            <summary>
            Returns the Plane the Z and X axes lie in, with root at the origin.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Inverse">
            <summary>
            Get the inverse of this CoordinateSystem - applying this CoordinateSystem to a piece of Geometry reverses the original.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Mirror(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Mirror the object across the input Plane
            </summary>
            <search>reflect,flip over</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.PostMultiplyBy(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Apply the argument CoordinateSystem after this one - Result = this * other
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.PreMultiplyBy(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Apply the argument CoordinateSystem before this one - Result = other * this
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ScaleFactor">
            <summary>
            Returns a Vector containing the X, Y, and Z scale factors
            </summary>
            <search>get size,scalecomponents,scalevector</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.IsEqualTo(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Determine if two CoordinateSystems are equal
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Translate(System.Double,System.Double,System.Double)">
            <summary>
            Translates any given CoordinateSystem by the given displacements in the x, y,
            and z directions defined in WCS respectively. 
            </summary>
            <param name="xTranslation">Displacement along X-axis.</param>
            <param name="yTranslation">Displacement along Y-axis.</param>
            <param name="zTranslation">Displacement along Z-axis.</param>
            <returns>Transformed CoordinateSystem.</returns>
            <search>move,by amount</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Translate(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Translate the object in the direction and magnitude of input Vector.
            </summary>
            <search>move,along vector</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Translate(Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Translates any CoordinateSystem type by the given distance in the given 
            direction.
            </summary>
            <param name="direction">Displacement direction.</param>
            <param name="distance">Displacement distance along given direction.</param>
            <returns>Transformed CoordinateSystem.</returns>
            <search>move,along vector,distance</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transform the object by the input CoordinateSystem matrix.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transforms this CoordinateSystem from source CoordinateSystem to a new 
            context CoordinateSystem.
            </summary>
            <param name="fromCoordinateSystem"></param>
            <param name="contextCoordinateSystem"></param>
            <returns>Transformed CoordinateSystem.</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Rotate(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Rotates an object around an origin and an axis by a specified 
            degree
            </summary>
            <search>around,axis,degrees</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Rotate(Autodesk.DesignScript.Geometry.Plane,System.Double)">
            <summary>
            Rotates an object around the Plane origin and normal by a specified 
            degree
            </summary>
            /// <search>around,normal,degrees</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale(System.Double)">
            <summary>
            Scale uniformly around the origin
            </summary>
            <search>resize,size</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Scale non-uniformly around the origin
            </summary>
            <search>resize,size,scaleNU,scalenu</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double,System.Double)">
            <summary>
            Scale non-uniformly around a given Plane
            </summary>
            <search>resize,size,scaleNU,scalenu</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale uniformly around a given point, using 
            </summary>
            <search>resize,from,to,size</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale1D(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale in one dimension by base and 2 pick points.  The scaling axis is defined by the line between base and pick0.
            </summary>
            <search>resize,size,from,to,scale1d,1d</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale2D(Autodesk.DesignScript.Geometry.Plane,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale in two dimension by base and 2 pick points  The two pick points are projected onto the base plane in order to determine the 2d scale factors
            </summary>
            <search>resize,size,from,to,scale2d,2d</search>
        </member>
        <member name="F:Autodesk.DesignScript.Geometry.DesignScriptEntity.Tags">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.Tessellate(Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.Dispose">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.DisposeDisplayable">
            <summary>
            This method is called when the displayable is no more needed.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.RetainEntity">
            <summary>
            This method should be called whenever this object is referenced by other object
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.GetHashCode">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.Equals(System.Object)">
            <notranslation>true</notranslation>
        </member>
        <member name="F:Autodesk.DesignScript.Geometry.Geometry.mGeometryContructors">
            <summary>
            A map between IGeometryEntity types and Geometry constructors using host.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.RegisterHostType(System.Type,System.Func{Autodesk.DesignScript.Interfaces.IGeometryEntity,System.Boolean,Autodesk.DesignScript.Geometry.Geometry})">
            <summary>
            Geometry Type registration mechanism. 
            </summary>
            <param name="hostType">Type of IGeometryEntity derived interfaces.</param>
            <param name="contructor">A delegate to construct Geometry.</param>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.FromObject(System.Int64)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Translate(System.Double,System.Double,System.Double)">
            <summary>
            Translates any given geometry by the given displacements in the x, y,
            and z directions defined in WCS respectively. 
            </summary>
            <param name="xTranslation">Displacement along X-axis.</param>
            <param name="yTranslation">Displacement along Y-axis.</param>
            <param name="zTranslation">Displacement along Z-axis.</param>
            <returns>Transformed Geometry.</returns>
            <search>move,by amount</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Translate(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Translate geometry in the given direction by the vector length
            </summary>
            <search>move,along vector</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Translate(Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Translates any geometry type by the given distance in the given 
            direction.
            </summary>
            <param name="direction">Displacement direction.</param>
            <param name="distance">Displacement distance along given direction.</param>
            <returns>Transformed Geometry.</returns>
            <search>move,along vector,distance</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transforms geometry by the given CoordinateSystem's transform
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transforms this geometry from source CoordinateSystem to a new 
            context CoordinateSystem.
            </summary>
            <param name="fromCoordinateSystem"></param>
            <param name="contextCoordinateSystem"></param>
            <returns>Transformed Geometry.</returns>
            <search>from,to</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Rotate(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Rotates an object around an origin and an axis by a specified 
            degree
            </summary>
            <search>around,axis,degrees</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Rotate(Autodesk.DesignScript.Geometry.Plane,System.Double)">
            <summary>
            Rotates an object around the Plane origin and normal by a specified 
            degree
            </summary>
            <search>around,normal,degrees</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Mirror(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Mirror the object across the input Plane
            </summary>
            <search>reflect,flip over</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale(System.Double)">
            <summary>
            Scale uniformly around the origin
            </summary>
            <search>resize,size</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Scale non-uniformly around the origin
            </summary>
            <search>resize,size,scalenu,scaleNU</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double,System.Double)">
            <summary>
            Scale non-uniformly around a given Plane
            </summary>
            <search>resize,size,scalenu,scaleNU</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale uniformly around a given point, using two pick points as scalars
            </summary>
            <search>resize,from,to,size</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale1D(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale in one dimension by base and 2 pick points.  The scaling axis is defined by the line between base and pick0.
            </summary>
            <search>resize,size,from,to,scale1d,1d</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale2D(Autodesk.DesignScript.Geometry.Plane,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale in two dimension by base and 2 pick points  The two pick points are projected onto the base plane in order to determine the 2d scale factors
            </summary>
            <search>resize,size,from,to,scale2d,2d</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.DistanceTo(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Obtain the distance from this Geometry to another
            </summary>
            <param name="entity">The other Geometry</param>
            <returns>The distance</returns>
            <search>between,length,from,to</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ClosestPointTo(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Obtain the closest Point on this Geometry to the other
            </summary>
            <search>NearestPoint, GetClosestPoint</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.DoesIntersect(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Determine if another Geometry object intersects with this one
            </summary>
            <search>intersects?,check intersection,test intersection</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Intersect(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Get the intersection Geometry for this object and another
            </summary>
            <search>get overlap</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.IntersectAll(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry})">
            <summary>
            Get the intersection of Geometry for this object and a collection of other Geometries. Finds common geometry of all participants.
            </summary>
            <search>get overlap,multi intersect,intersect many</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Split(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Split this Geometry using another Geometry as a cutting "tool"
            </summary>
            <search>cut</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Trim(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Removes elements of the entity closest to the pick point
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Explode">
            <summary>
            Separates compound or non-separated elements into their component
            parts.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.IsAlmostEqualTo(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Check if the two objects have the same representational geometry or numerical values
            </summary>
            <search>approximate,near,close</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Geometry.BoundingBox">
            <summary>
            Get the BoundingBox containing the given piece of Geometry
            </summary>
            <search>bounds</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ImportFromSAT(System.IO.FileInfo)">
            <summary>
            List of imported geometries
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ImportFromSAT(System.String)">
            <summary>
            Imports a SAT file and returns an array of imported geometries
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ExportToSAT(System.String)">
            <summary>
            Exports the specified geometry to the given SAT file path
            </summary>
            <param name="filePath">The name of the file to export the geometry to</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ExportToSAT(System.String,System.Double)">
            <summary>
            Exports the specified geometry to the given SAT file path
            </summary>
            <param name="filePath">The name of the file to export the geometry to</param>
            <param name="unitsMM">The units to use</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ExportToSAT(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry},System.String)">
            <summary>
            Exports a list of specified geometry to the given SAT file path
            </summary>
            <param name="geometry"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ExportToSAT(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry},System.String,System.Double)">
            <summary>
            Exports a list of specified geometry to the given SAT file path
            </summary>
            <param name="geometry"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.SerializeAsSAB">
            <summary>
            Serializes the specified geometry into Standard ACIS Binary(SAB) format and returns serialized binary stream data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.SerializeAsSAB(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry})">
            <summary>
            Serializes a list of specified geometry into Standard ACIS Binary(SAB) format and returns serialized binary stream data
            </summary>
            <param name="geometry"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.DeserializeFromSAB(System.Byte[])">
            <summary>
            Deserializes the specified Standard ACIS Binary(SAB) format data and returns a list of geometry
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.UpdateDisplay">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Geometry.ContextCoordinateSystem">
            <summary>
            Get the context/reference coordinate system that was used to create this geometry.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Geometry.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ArrayFormatException">
            <summary>
              Looks up a localized string similar to Given data : \&quot;{0}\&quot; is not an array.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ConversionException">
            <summary>
              Looks up a localized string similar to Conversion of backing object to Geometry failed. Could not export SAT..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.CurveNotClosed">
            <summary>
              Looks up a localized string similar to the curve is not closed.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.CurveNotPlanar">
            <summary>
              Looks up a localized string similar to the curve is not planar.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.DistanceNotEqual">
            <summary>
              Looks up a localized string similar to the distance between {0} and {1} are not equal.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.DoesNotExist">
            <summary>
              Looks up a localized string similar to {0} doesn&apos;t exist.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.EqualGeometry">
            <summary>
              Looks up a localized string similar to the {0} and the {1} are equal or at the same location.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.FileNotFound">
            <summary>
              Looks up a localized string similar to Failed to locate File: {0}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.GreaterThan">
            <summary>
              Looks up a localized string similar to the {0} is greater than {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidArguments">
            <summary>
              Looks up a localized string similar to the {0} is invalid.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidDataFormatException">
            <summary>
              Looks up a localized string similar to Invalid data : {0} for parameter {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidInput">
            <summary>
              Looks up a localized string similar to the input {0} is invalid for {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidIntersect">
            <summary>
              Looks up a localized string similar to {0} cannot intersect with {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidOperationException">
            <summary>
              Looks up a localized string similar to Can&apos;t locate Geometry constructor for type: {0}..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidProjection">
            <summary>
              Looks up a localized string similar to {0} cannot project on {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsParallel">
            <summary>
              Looks up a localized string similar to the {0} and {1} are parallel for {2}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZero">
            <summary>
              Looks up a localized string similar to the {0} is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroAngle">
            <summary>
              Looks up a localized string similar to the {0} angle is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroDistance">
            <summary>
              Looks up a localized string similar to the distance between the {0} and the {1} is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroLength">
            <summary>
              Looks up a localized string similar to the length is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroRadius">
            <summary>
              Looks up a localized string similar to the radius is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroVector">
            <summary>
              Looks up a localized string similar to the input {0}  is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.LessThan">
            <summary>
              Looks up a localized string similar to the {0} is less than {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.LessThanZero">
            <summary>
              Looks up a localized string similar to the {0} is less than zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NoImplementationException">
            <summary>
              Looks up a localized string similar to No implementation of IGeometryFactory found.  Make sure ProtoGeometry.config is properly configured..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NoParameterNameException">
            <summary>
              Looks up a localized string similar to WriteObject without parameter name is not supported for {0}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NotEqual">
            <summary>
              Looks up a localized string similar to the {0} is not equal to {2}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NotSupported">
            <summary>
              Looks up a localized string similar to {0} is not supported for {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NullArgument">
            <summary>
              Looks up a localized string similar to the {0} is null.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NullIDesignScriptEntityException">
            <summary>
              Looks up a localized string similar to DesignScriptEntity can&apos;t be created with null IDesignScriptEntity.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.OperationFailed">
            <summary>
              Looks up a localized string similar to {0} operation failed.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.OwnerExistingException">
            <summary>
              Looks up a localized string similar to Input host already has owner assigned to it. DesignScriptEntity can&apos;t be created with it..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ParameterFormatException">
            <summary>
              Looks up a localized string similar to The data for parameter : {0} is not in {1} format..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ParameterizedCollectionException">
            <summary>
              Looks up a localized string similar to Given data : \&quot;{0}\&quot; is not an array of name value pairs.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.PointsCoincident">
            <summary>
              Looks up a localized string similar to {0} are coincident.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.PointsColinear">
            <summary>
              Looks up a localized string similar to {0} are colinear.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.SATFileExportedException">
            <summary>
              Looks up a localized string similar to SAT file exported to an unexpected location..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.SessionMismatchException">
            <summary>
              Looks up a localized string similar to Session mismatch for begin and end execution call..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.Sheared">
            <summary>
              Looks up a localized string similar to {0} is sheared.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.VertexColorNotSupported">
            <summary>
              Looks up a localized string similar to Can&apos;t set vertex color to SubDivisionMesh with SubDivisionLevel more than zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometrySettings.RootModulePath">
            <summary>
            Provides path of the root script in execution.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometrySettings.GeometryXmlProperties">
            <summary>
            Provides information about whether to dump XML property for ToString() method
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometrySettings.GeometryFactoryFilePath">
            <summary>
            Provides information about where to load the geometry factory file
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometrySettings.PersistenceManagerFilePath">
            <summary>
            Provides information about where to load the persistence manager file
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometrySettings.Reset">
            <summary>
            Resets the geometry settings to default
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.LessThanOrEquals(System.Double,System.Double,System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.Equals(System.Double,System.Double,System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.EqualsTo(System.Double,System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.LessThanOrEqualTo(System.Double,System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.AreCoincident(Autodesk.DesignScript.Interfaces.IPointEntity[])">
            <notranslation>true</notranslation>
        </member>
        <member name="F:Autodesk.DesignScript.Geometry.GeometryExtension.PI">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.DegreesToRadians(System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.RadiansToDegrees(System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ToPointEntityArray(Autodesk.DesignScript.Geometry.Point[][],System.Boolean)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ToPointArray(Autodesk.DesignScript.Interfaces.IPointEntity[][],System.Boolean)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ToEntity(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.GetCurveEntity(Autodesk.DesignScript.Geometry.Curve,System.Boolean)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ForEach``1(``0[],System.Action{``0})">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ForEach``1(``0[][],System.Action{``0})">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ConvertAll``2(``0[],System.Converter{``0,``1})">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ClipParamRange(System.Double@)">
            <summary>
            Clips parameter between 0 and 1
            </summary>
            <param name="param">Input parameter</param>
            <returns>Boolean to indicate if parameter was clipped</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.LocateFile(System.String)">
            <summary>
            Locates given file from pre-defined search path set to this system
            </summary>
            <param name="fileName">File name to locate.</param>
            <returns>Full path for the given file.</returns>
            <notranslation>true</notranslation>
        </member>
    </members>
</doc>
