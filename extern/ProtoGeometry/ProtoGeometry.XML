<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProtoGeometry</name>
    </assembly>
    <members>
        <member name="M:Autodesk.DesignScript.Geometry.ProtoGeometryConfigurationManager.Save">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.ProtoGeometryConfigurationManager.Settings">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.ProtoGeometryConfiguration.GeometryFactoryFileName">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.ProtoGeometryConfiguration.PersistentManagerFileName">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Application.Session">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Application.Instance">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Application.IsExecuting">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.Autodesk#DesignScript#Interfaces#IExtensionApplication#OnSuspendExecution(Autodesk.DesignScript.Interfaces.IExecutionSession)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.Autodesk#DesignScript#Interfaces#IExtensionApplication#OnResumeExecution(Autodesk.DesignScript.Interfaces.IExecutionSession)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.StartUp">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.ShutDown">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Application.PreloadAsmLibraries(System.String)">
            <notranslation>true</notranslation>
        </member>
        <member name="T:Autodesk.DesignScript.Geometry.Core.EntityTags">
            <summary>
            Tags allow you to add arbitrary metadata to a DesignScriptEntity.  This is critical for Revit
            geometry integration.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Core.EntityTags.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Core.EntityTags.Parent">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Core.EntityTags.AddTag(System.String,System.Object)">
            <summary>
            Add or overwrite a Geometry tag
            </summary>
            <param name="tag"></param>
            <param name="data"></param>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Core.EntityTags.LookupTag(System.String)">
            <summary>
            Do recursive lookup of geometry tags
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GraphicDataProvider.GetGraphicItems(System.Object)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GraphicDataProvider.Tessellate(System.Collections.Generic.List{System.Object},Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryGraphicItem.#ctor(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryGraphicItem.Tessellate(Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ToString">
            <summary>
            Get a string representation of the Arc
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByThreePoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create an arc by providing three sequential points along its circumference.
            </summary>
            <param name="firstPoint"> First point along the curve </param>
            <param name="secondPoint"> Second point along the curve </param>
            <param name="thirdPoint"> Third point along the curve </param>
            <returns> An Arc </returns>
            <search>
            arc,arcs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByCenterPointRadiusAngle(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create an arc by providing it's center point, radius, angle sweep, and normal vector
            </summary>
            <param name="center"> The center of the arc </param>
            <param name="radius"> Radius of the arc </param>
            <param name="startAngle"> Start angle in degrees </param>
            <param name="endAngle"> End angle in degrees </param>
            <param name="normal"> A vector defining the normal of the arc </param>
            <returns> An Arc </returns>
            <search>
            arc,center,arcs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByCenterPointStartPointSweepAngle(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create an arc by providing it's center point, start point, sweep point, and normal
            </summary>
            <param name="centerPoint"> The center of the arc </param>
            <param name="startPoint"> The start point on the arc </param>
            <param name="sweepAngle"> The angle to sweep out </param>
            <param name="normal"> The normal to the arc </param>
            <returns> An Arc </returns>
            <search>
            arc,center,arcs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByCenterPointStartPointEndPoint(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create an arc by providing it's center point, start point, and end point
            </summary>
            <param name="centerPoint"> The center of the arc </param>
            <param name="startPoint"> The start point on the arc </param>
            <param name="endPoint"> The end point of the arc </param>
            <returns> An Arc </returns>
            <search>
            arc,center,arcs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByFillet(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,System.Double)">
            <summary>
            Create an arc by filleting two curves with given radius
            </summary>
            <param name="curve1"> First curve </param>
            <param name="curve2"> Second curve </param>
            <param name="radius"> The radius of the fillet arc </param>
            <returns> An Arc </returns>
            <search>
            arc,fillet,round,smooth,arcs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByFilletTangentToCurve(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Create an arc by filleting two curves tangent to given curve at internal point
            </summary>
            <param name="curve1"> First curve </param>
            <param name="curveTangentTo"> curve to which the fillet arc is tangent at internal point </param>
            <param name="curve2"> Second curve </param>
            <returns> An Arc </returns>
            <search>
            arc,fillet,round,smooth
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByBestFitThroughPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Create an arc that best approximates a collection of points
            </summary>
            <param name="points"> Points to fit </param>
            <returns>  </returns>
            <search>
            arc,approximate,arcs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByStartEndAndTangencies(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create an arc or tangent bi arc by start and end points and tangencies at start and end
            </summary>
            <param name="point1"> Point for the start of bi-arc </param>
            <param name="vector1"> Tangent vector for the start of bi-arc </param>
            <param name="point2"> Point for the end of bi-arc </param>
            <param name="vector2"> Tangent vector for the end of bi-arc </param>
            <returns>  </returns>
            <search>
            arc,tangent
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Arc.ByStartPointEndPointStartTangent(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create an Arc from start Point to end Point with start tangent to Vector
            </summary>
            <param name="startPoint">  </param>
            <param name="endPoint">  </param>
            <param name="startTangent">  </param>
            <returns>  </returns>
            <search>
            arc,tangent,arcs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Arc.CenterPoint">
            <summary>
            The center point of the arc
            </summary>
            <search>
            midpoint,arcs,arc
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Arc.Radius">
            <summary>
            The radius of the arc
            </summary>
            <search>
            arc,arcs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Arc.StartAngle">
            <summary>
            The start angle in degrees
            </summary>
            <search>
            arc,arcs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Arc.SweepAngle">
            <summary>
            The total sweep angle in degrees
            </summary>
            <search>
            arc,arcs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ToString">
            <summary>
            Get a string representation of the BoundingBox
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.Equals(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <summary>
            Compare two BoundingBox's
            </summary>
            <param name="other">The other BoundingBox</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ComputeHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Create an axis-aligned BoundingBox around input Geometry.
            </summary>
            <param name="geom">  </param>
            <returns>  </returns>
            <search>
            bounding,bound
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry})">
            <summary>
            Create an axis-aligned BoundingBox around input Geometries.
            </summary>
            <param name="geom">  </param>
            <returns>  </returns>
            <search>
            bounding,bound,multiple,boundall
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByGeometryCoordinateSystem(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Create a non-axis-aligned BoundingBox around input Geometry, oriented in the X, Y, and Z axis of the CoordinateSystem.
            </summary>
            <param name="geom">  </param>
            <param name="cs">  </param>
            <returns>  </returns>
            <search>
            bounding,bound
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByGeometryCoordinateSystem(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry},Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Create a non-axis-aligned BoundingBox around input Geometries, oriented in the X, Y, and Z axis of the CoordinateSystem.
            </summary>
            <param name="geom">  </param>
            <param name="cs">  </param>
            <returns>  </returns>
            <search>
            bounding,bound,multiple,boundall
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByCorners(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Creates the an axis-aligned BoundingBox spanning between the minimum Point and the maximum Point.
            </summary>
            <param name="min">  </param>
            <param name="max">  </param>
            <returns>  </returns>
            <search>
            bounding,bound,bymaxmin,max,min,bypoints
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ByCornersCoordinateSystem(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Constructs a BoundingBox from minimum coordinates (lower-left-rear corner of the box), to maximum coordinates (upper-right-front corner of the box). CoordinateSystem is the transform FROM the coordinate space of the box TO the model space. This method is designed to match Revit's API, allowing you to extract out the parameters from a Revit BoundingBox without any conversions.
            </summary>
            <param name="min">  </param>
            <param name="max">  </param>
            <param name="cs">  </param>
            <returns>  </returns>
            <search>
            bounding,bound,bymaxmin,max,min,bypoints
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.BoundingBox.MinPoint">
            <summary>
            The minimum point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.BoundingBox.MaxPoint">
            <summary>
            The maximum point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.BoundingBox.ContextCoordinateSystem">
            <summary>
            The CoordinateSystem that this BoundingBox is defined in
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.Intersection(Autodesk.DesignScript.Geometry.BoundingBox)">
            <summary>
            Get the intersection of two BoundingBoxes
            </summary>
            <param name="other">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.Intersects(Autodesk.DesignScript.Geometry.BoundingBox)">
            <summary>
            Determine whether two BoundingBoxes intersect
            </summary>
            <param name="other">  </param>
            <returns>  </returns>
            <search>
            get overlap
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.IsEmpty">
            <summary>
            Determine if the BoundingBox is empty
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.Contains(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Determine if a point is inside of the BoundingBox
            </summary>
            <param name="point"> The test point </param>
            <returns> True if the point is inside, otherwise False </returns>
            <search>
            point inside,testpoint
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ToCuboid">
            <summary>
            Get the BoundingBox as a Solid Cuboid
            </summary>
            <returns> A Cuboid representation of the BoundingBox </returns>
            <search>
            converttosolid,bb2cube,bb2cub,bounding tosolid,cubes
            </search>
            <weights>
            0.5,0.4,0.3,0.5,0.3
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.BoundingBox.ToPolySurface">
            <summary>
            Get the BoundingBox as a collection of Surfaces
            </summary>
            <returns> A PolySurface representation of the BoundingBox </returns>
            <search>
            converttosurfaces,convert2surfaces,bbtosrfs,bbtosrfs,bounding to surfaces,bound to poly,convert2poly
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ToString">
            <summary>
            Get a string representation of the Circle
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadius(Autodesk.DesignScript.Geometry.Point,System.Double)">
            <summary>
            Creates a Circle with input center Point and radius in the world XY plane, with world Z as normal.
            </summary>
            <param name="centerPoint">  </param>
            <param name="radius">  </param>
            <returns>  </returns>
            <search>
            circle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadiusNormal(Autodesk.DesignScript.Geometry.Point,System.Double,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Creates a Circle with specified center Point, radius, and normal direction.
            </summary>
            <param name="centerPoint">  </param>
            <param name="radius">  </param>
            <param name="normal">  </param>
            <returns>  </returns>
            <search>
            circle,alignedcircle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByPlaneRadius(Autodesk.DesignScript.Geometry.Plane,System.Double)">
            <summary>
            Create a Circle centered at the input Plane origin (root), lying in  the input Plane, with given radius.
            </summary>
            <param name="plane">  </param>
            <param name="radius">  </param>
            <returns>  </returns>
            <search>
            circle,alignedcircle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByThreePoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create a Circle passing through three input Points.
            </summary>
            <param name="p1">  </param>
            <param name="p2">  </param>
            <param name="p3">  </param>
            <returns>  </returns>
            <search>
            circle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Circle.ByBestFitThroughPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Best fit Circle through Points
            </summary>
            <param name="points"> Points to fit </param>
            <returns>  </returns>
            <search>
            circle,approximate
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Circle.CenterPoint">
            <summary>
            The center of the circle
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Circle.Radius">
            <summary>
            The radius of the circle
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoEdge.ToString">
            <summary>
            Get a string representation of the CoEdge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoEdge.Previous">
            <summary>
            The previous CoEdge in the containing Loop
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoEdge.Next">
            <summary>
            The next CoEdge in the containing Loop
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoEdge.Partner">
            <summary>
            The neighbouring CoEdge in the reverse direction
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoEdge.Edge">
            <summary>
            The adjacent Edge associated with the CoEdge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoEdge.Loop">
            <summary>
            The containing Loop to which the CoEdge belongs
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoEdge.StartVertex">
            <summary>
            The Vertex at which this Edge starts
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoEdge.EndVertex">
            <summary>
            The Vertex at which this Edge ends
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoEdge.Reversed">
            <summary>
            The sense of the CoEdge with respect to its Edge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoEdge.ParameterCurve">
            <summary>
            Curve in parametric space of the owner surface. The curve is in 2D form, thus Z coordinates of this curve are 0.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ToString">
            <summary>
            Get a string representation of the Cone
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ByPointsRadius(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double)">
            <summary>
            Create a Cone with given base radius at start Point, extending to a  apex at end Point.
            </summary>
            <param name="startPoint">  </param>
            <param name="endPoint">  </param>
            <param name="startRadius">  </param>
            <returns>  </returns>
            <search>
            cone,cones
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ByPointsRadii(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Double)">
            <summary>
            Create a Cone with axis from start Point to end Point, with given  radiuses at start and end. This object does not have an apex, and can be thought of as a trimmed Cone.
            </summary>
            <param name="startPoint">  </param>
            <param name="endPoint">  </param>
            <param name="startRadius">  </param>
            <param name="endRadius">  </param>
            <returns>  </returns>
            <search>
            trimmed cone,cone,cones
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ByCoordinateSystemHeightRadius(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double)">
            <summary>
            Creates a Cone with base Point at CoordinateSystem origin, extending in the CoordinateSystem Z axis deriction length amount, with a  circular base in the CoordinateSystem XY Plane.
            </summary>
            <param name="cs">  </param>
            <param name="height">  </param>
            <param name="startRadius">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cone.ByCoordinateSystemHeightRadii(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
            <summary>
            Creates a Cone with base Point at CoordinateSystem origin, extending in the CoordinateSystem Z axis deriction length amount, with a  circular bases in the CoordinateSystem XY Plane.
            </summary>
            <param name="cs">  </param>
            <param name="height">  </param>
            <param name="startRadius">  </param>
            <param name="endRadius">  </param>
            <returns>  </returns>
            <search>
            cone,cone by height,cones
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.StartPoint">
            <summary>
            The start point
            </summary>
            <search>
            cone,cones
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.EndPoint">
            <summary>
            The end point
            </summary>
            <search>
            cone,cones
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.RadiusRatio">
            <summary>
            Ratio between the top and bottom radius
            </summary>
            <search>
            cone,cones
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.StartRadius">
            <summary>
            The radius at the base
            </summary>
            <search>
            cone,cones
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.EndRadius">
            <summary>
            The radius at the bottom
            </summary>
            <search>
            cone,cones
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cone.Height">
            <summary>
            The total height
            </summary>
            <search>
            cone,cones
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ToString">
            <summary>
            Get a string representation of the Cuboid
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ByLengths(System.Double,System.Double,System.Double)">
            <summary>
            Create a Cuboid centered at WCS origin, with width, length, and height.
            </summary>
            <param name="width">  </param>
            <param name="length">  </param>
            <param name="height">  </param>
            <returns>  </returns>
            <search>
            box,cube,cubes
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ByLengths(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double)">
            <summary>
            Create a Cuboid centered at input Point, with specified width, length,  and height.
            </summary>
            <param name="origin">  </param>
            <param name="width">  </param>
            <param name="length">  </param>
            <param name="height">  </param>
            <returns>  </returns>
            <search>
            box,cube,cubebysize,bycenter,cubes
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ByLengths(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
            <summary>
            Create a Cuboid centered and oriented to input CoordinateSystem, with  specified width, length, and height.
            </summary>
            <param name="cs">  </param>
            <param name="width">  </param>
            <param name="length">  </param>
            <param name="height">  </param>
            <returns>  </returns>
            <search>
            box,cube,cubebysize,bycoord,cubes
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cuboid.ByCorners(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create an Cuboid spanning from low Point to high Point.
            </summary>
            <param name="lowPoint">  </param>
            <param name="highPoint">  </param>
            <returns>  </returns>
            <search>
            box,cube,byminmax,by corners,by points,cubes
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cuboid.Length">
            <summary>
            Returns length distance.                         Note: This return the input dimensions of the Cuboid, NOT the                   actual world space dimensions. In other words, if you create a Cuboid                   width (X-axis) length 10, and transform it to a CoordinateSystem with                   2 times scaling in X, the width will still be 10. ASM does not allow you                   to extract the Vertices of a body in any predictable order, so it                    impossible to determine the dimensions after a transform.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cuboid.Width">
            <summary>
            Returns width distance.                         Note: This return the input dimensions of the Cuboid, NOT the                   actual world space dimensions. In other words, if you create a Cuboid                   width (X-axis) length 10, and transform it to a CoordinateSystem with                   2 times scaling in X, the width will still be 10. ASM does not allow you                   to extract the Vertices of a body in any predictable order, so it                    impossible to determine the dimensions after a transform.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cuboid.Height">
            <summary>
            Returns height distance.                         Note: This return the input dimensions of the Cuboid, NOT the                   actual world space dimensions. In other words, if you create a Cuboid                   width (X-axis) length 10, and transform it to a CoordinateSystem with                   2 times scaling in X, the width will still be 10. ASM does not allow you                   to extract the Vertices of a body in any predictable order, so it                    impossible to determine the dimensions after a transform.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ToString">
            <summary>
            Get a string representation of the Curve
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ByParameterLineOnSurface(Autodesk.DesignScript.Geometry.Surface,Autodesk.DesignScript.Geometry.UV,Autodesk.DesignScript.Geometry.UV)">
            <summary>
            Create a curve by line of surface in uv space
            </summary>
            <param name="baseSurface"> Surface to use </param>
            <param name="startParams"> Starting uv at which curve will start </param>
            <param name="endParams"> Ending uv at which curve will end </param>
            <returns>  </returns>
            <search>
            isocurve,curvebyuv,lines,uvs
            </search>
            <weights>
            0.5,0.5,0.4,0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ByBlendBetweenCurves(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a curve that blends between two curves
            </summary>
            <param name="curve1"> First curve to blend </param>
            <param name="curve2"> Second curve to blend </param>
            <param name="endOrStart1"> flag to indicate which end of curve1 to blend </param>
            <param name="endOrStart2"> flag to indicate which end of curve1 to blend </param>
            <param name="isG2Continuous"> flag to indicate if resultant curve is of G1 continuity or G2 continuity </param>
            <returns>  </returns>
            <search>
            blend,make continuous,connect
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ByIsoCurveOnSurface(Autodesk.DesignScript.Geometry.Surface,System.Int32,System.Double)">
            <summary>
            Create a curve by isoline of surface
            </summary>
            <param name="baseSurface"> Base surface </param>
            <param name="direction"> if 0 isoline is along u direction, if 1 along v direction </param>
            <param name="parameter"> fixed for the curve value of other surface parameter </param>
            <returns>  </returns>
            <search>
            isocurve,curvebydir,lines
            </search>
            <weights>
            0.5,0.5,0.4
            </weights>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.Length">
            <summary>
            The total arc length of the curve
            </summary>
            <search>
            distance
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.IsPlanar">
            <summary>
            Determine whether a Curve is planar or not
            </summary>
            <search>
            flat,liesinplane
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.IsClosed">
            <summary>
            Determine if the Curve is closed or not
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.StartPoint">
            <summary>
            Get the start Point along the Curve
            </summary>
            <search>
            begin,curvestart,startpt
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.EndPoint">
            <summary>
            Get the end Point along the Curve
            </summary>
            <search>
            end,curveend,endpt
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Curve.Normal">
            <summary>
            The normal to the plane where the curve is contained.  Only            valid for planar curves.
            </summary>
            <search>
            perpendicular
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointAtParameter(System.Double)">
            <summary>
            Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()
            </summary>
            <param name="param"> The parameter at which to evaluate </param>
            <returns> Point </returns>
            <search>
            pointoncurve,curvepoint
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.TangentAtParameter(System.Double)">
            <summary>
            Get a Vector tangent to the curve at a specified parameter between StartParameter() and EndParameter()
            </summary>
            <param name="param"> The parameter at which to evaluate </param>
            <returns> A Vector parallel to the curve at param </returns>
            <search>
            tangentoncurve,curvetan
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.NormalAtParameter(System.Double)">
            <summary>
            Get a Vector perpendicular to the curve at a specified parameter between StartParameter() and EndParameter()
            </summary>
            <param name="param"> The parameter at which to evaluate </param>
            <returns> A Vector perpendicular to the curve at param </returns>
            <search>
            normaloncurve,curvenorm
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.CoordinateSystemAtParameter(System.Double)">
            <summary>
            Get a CoordinateSystem with origin at the point at the given parameter. The XAxis is aligned with the curve normal,  the YAxis is aligned with the curve tangent at this point, and the ZAxis is aligned with the up-vector or binormal at this point
            </summary>
            <param name="param"> The parameter at which to evaluate </param>
            <returns> The aligned CoordinateSystem at the point </returns>
            <search>
            coordoncurve,curvecoord,derivatives
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.HorizontalFrameAtParameter(System.Double)">
            <summary>
            Get a CoordinateSystem with origin at the point at the given parameter
            </summary>
            <param name="param"> The parameter at which to evaluate </param>
            <returns> The axis-aligned CoordinateSystem at the point </returns>
            <search>
            frame,axisaligned,aa,coordcurve,framecurve,curveframe,coordoncurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PlaneAtParameter(System.Double)">
            <summary>
            Returns a Plane whose normal aligns with the tangent of the Curve. Parameters are adjusted such that 0 is always the start Point and 1 is always the end Point.
            </summary>
            <param name="param">  </param>
            <returns>  </returns>
            <search>
            planeoncurve,planecurve,tangentplane
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength(System.Double)">
            <summary>
            Get a Point at a particular arc length along the curve
            </summary>
            <param name="segmentLength"> The distance along the curve at which to evaluate </param>
            <returns> The point at the given arc length </returns>
            <search>
            pointoncurve,curvepoint,pointalongcurve,distanceoncurve,distancepoint,distpoint,arclength
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointAtDistance(System.Double)">
            <summary>
            Get a Point at a particular arc length along the curve
            </summary>
            <param name="segmentLength"> The distance along the curve at which to evaluate </param>
            <returns> The point at the given arc length </returns>
            <search>
            pointoncurve,curvepoint,pointalongcurve,distanceoncurve,distancepoint,distpoint,arclength
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointsAtEqualSegmentLength(System.Int32)">
            <summary>
            Returns points spaced equally along the curve length  based on the input number of divisions
            </summary>
            <param name="divisions">  </param>
            <returns> Points spaced equally along length of curve </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointsAtEqualChordLength(System.Int32)">
            <summary>
            Returns points spaced along curve at equal chord length  based on the input number of divisions
            </summary>
            <param name="divisions">  </param>
            <returns> List of points on curve </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointAtChordLength(System.Double,System.Double,System.Boolean)">
            <summary>
            Get the point at a particular chord length of the curve from given parameter location.
            </summary>
            <param name="chordLength"> The chord length at which to evaluate </param>
            <param name="parameterLocation"> Parameter on the curve to measure from </param>
            <param name="forward"> true if move forward along curve </param>
            <returns> Point on curve </returns>
            <search>
            measure from,measure to,parameteratdist
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointsAtSegmentLengthFromPoint(Autodesk.DesignScript.Geometry.Point,System.Double)">
            <summary>
            Returns points spaced equally along the curve at given segment length and starting from the given point
            </summary>
            <param name="point"> The reference point from where to measure </param>
            <param name="segmentLength"> The distance along the curve at which to evaluate </param>
            <returns> List of points on curve </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PointsAtChordLengthFromPoint(Autodesk.DesignScript.Geometry.Point,System.Double)">
            <summary>
            Returns points spaced on the curve at given chord length starting from the given point
            </summary>
            <param name="point"> The reference point from where to measure </param>
            <param name="chordLength">  </param>
            <returns> List of points on curve </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.CoordinateSystemAtSegmentLength(System.Double)">
            <summary>
            Returns a CoordinateSystem at specified distance from Curve start Point. Y Axis lies tangent to the Curve, X Axis is the curvature.
            </summary>
            <param name="segmentLength"> The distance along the curve at which to evaluate </param>
            <returns> CoordinateSystem on curve </returns>
            <search>
            coordoncurve,curvecoord,derivatives
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.CoordinateSystemAtDistance(System.Double)">
            <summary>
            Returns a CoordinateSystem at specified distance from Curve start Point. Y Axis lies tangent to the Curve, X Axis is the curvature.
            </summary>
            <param name="segmentLength"> The distance along the curve at which to evaluate </param>
            <returns> CoordinateSystem on curve </returns>
            <search>
            coordoncurve,curvecoord,derivatives
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PlaneAtSegmentLength(System.Double)">
            <summary>
            Returns a Plane at the specified distance along the Curve from the  start Point. The normal of the Plane aligns with the tangent of the  Curve.
            </summary>
            <param name="segmentLength"> The distance along the curve at which to evaluate </param>
            <returns> Plane on curve </returns>
            <search>
            planeoncurve,planecurve,tangentplane
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PlaneAtDistance(System.Double)">
            <summary>
            Returns a Plane at the specified distance along the Curve from the  start Point. The normal of the Plane aligns with the tangent of the  Curve.
            </summary>
            <param name="segmentLength"> The distance along the curve at which to evaluate </param>
            <returns> Plane on curve </returns>
            <search>
            planeoncurve,planecurve,tangentplane
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.SegmentLengthAtParameter(System.Double)">
            <summary>
            Get the arc length along the Curve at the particular parameter.
            </summary>
            <param name="param"> The parameter at which to evaluate </param>
            <returns> The arc length </returns>
            <search>
            lengthatparameter,dist along,lengthatpoint,arclength
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DistanceAtParameter(System.Double)">
            <summary>
            Get the arc length along the Curve at the particular parameter.
            </summary>
            <param name="param"> The parameter at which to evaluate </param>
            <returns> The arc length </returns>
            <search>
            lengthatparameter,dist along,lengthatpoint,arclength
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterAtSegmentLength(System.Double)">
            <summary>
            Get the parameter at a particular arc length along the curve.
            </summary>
            <param name="segmentLength"> The distance along the curve at which to evaluate </param>
            <returns> The parameter </returns>
            <search>
            parameteratlen,param along,paramatlen,arclength
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterAtDistance(System.Double)">
            <summary>
            Get the parameter at a particular arc length along the curve.
            </summary>
            <param name="segmentLength"> The distance along the curve at which to evaluate </param>
            <returns> The parameter </returns>
            <search>
            parameteratlen,param along,paramatlen,arclength
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterAtChordLength(System.Double,System.Double,System.Boolean)">
            <summary>
            Get the parameter at a particular chord length along the curve from given location.
            </summary>
            <param name="chordLength"> The chord length at which to evaluate </param>
            <param name="parameter"> Parameter on the curve to measure from </param>
            <param name="forward"> true if move forward along curve </param>
            <returns> The parameter </returns>
            <search>
            measure from,measure to,parameteratdist
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.StartParameter">
            <summary>
            Get the start of the domain in which the curve can be evaluated
            </summary>
            <returns> The start of the domain in which the curve can be evaluated </returns>
            <search>
            start domain,curvestart
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.EndParameter">
            <summary>
            Get the end of the domain in which the curve can be evaluated
            </summary>
            <returns> The end of the domain in which the curve can be evaluated </returns>
            <search>
            end domain,curveend
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.SegmentLengthBetweenParameters(System.Double,System.Double)">
            <summary>
            Get the arc length between two parameter points on the curve
            </summary>
            <param name="startParam"> The start of the domain </param>
            <param name="endParam"> The end of the domain </param>
            <returns> The arc length between the two parameters </returns>
            <search>
            measure,distance,arclength
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.LengthBetweenParameters(System.Double,System.Double)">
            <summary>
            Get the arc length between two parameter points on the curve
            </summary>
            <param name="startParam"> The start of the domain </param>
            <param name="endParam"> The end of the domain </param>
            <returns> The arc length between the two parameters </returns>
            <search>
            measure,distance,arclength
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterAtPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Get the parameter at a particular point along the Curve
            </summary>
            <param name="point"> A Point along or near the Curve </param>
            <returns> The closest parameter along the curve </returns>
            <search>
            projectpoint,closestparam,curveparam
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Reverse">
            <summary>
            Reverse the direction of the curve
            </summary>
            <returns> A new Curve with the opposite direction </returns>
            <search>
            flip
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Offset(System.Double)">
            <summary>
            Offset a Curve by a specified amount. Curve must be planar, and, if a BSplineCurve/NurbsCurve, must have degree > 1.
            </summary>
            <param name="distance"> A positive or negative distance to offset </param>
            <returns> new offsetted curves </returns>
            <search>
            thicken,lines
            </search>
            <weights>
            0.5,0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PullOntoPlane(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Create a curve by pulling onto plane
            </summary>
            <param name="plane"> The plane on which to pull the curve </param>
            <returns> A Curve on the Plane </returns>
            <search>
            projectcurve,toplane
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.PullOntoSurface(Autodesk.DesignScript.Geometry.Surface)">
            <summary>
            Pull this Curve onto the input Surface, in the direction of the Surface normals.
            </summary>
            <param name="surface">  </param>
            <returns>  </returns>
            <search>
            projectcurve,tosurf
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DivideEqually(System.Int32)">
            <summary>
            Divides curve into given number of equal length curves
            </summary>
            <param name="divisions"> Number of divisions </param>
            <returns> An Array of Curves after dividing </returns>
            <search>
            chopcurve,segment,slices
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DivideByDistance(System.Int32)">
            <summary>
            Divides curve into given number of curves with equal distances between start and end of each curve (equal chords).
            </summary>
            <param name="divisions"> Number of divisions </param>
            <returns> An Array of Curves after dividing </returns>
            <search>
            divide by chordlength,chord,segment,chopcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DivideByLengthFromParameter(System.Double,System.Double)">
            <summary>
            Divides curve into curves of given length measured from the given parameter location
            </summary>
            <param name="length"> Length of  curves after division </param>
            <param name="parameter"> Parameter location for measuring from </param>
            <returns> Array of Curves after dividing </returns>
            <search>
            divide by chordlength,chord,segment,chopcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.DivideByDistanceFromParameter(System.Double,System.Double)">
            <summary>
            Divides curve into curves of given chord length measured from given parameter location
            </summary>
            <param name="distance"> Chord length of each curve obtained from splitting </param>
            <param name="parameter"> Parameter location for measuring from </param>
            <returns> An Array of Curves after dividing </returns>
            <search>
            divide by chordlength,chord,segment,chopcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.TrimByStartParameter(System.Double)">
            <summary>
            Removes the start of the Curve at the specified parameter
            </summary>
            <param name="startParameter"> The parameter at which to start the trim </param>
            <returns> A new Curve with the start removed </returns>
            <search>
            rem,remstart,removestart,trimcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrimStart(System.Double)">
            <summary>
            Removes the start of the Curve at the specified parameter
            </summary>
            <param name="startParameter"> The parameter at which to start the trim </param>
            <returns> A new Curve with the start removed </returns>
            <search>
            rem,remstart,removestart,trimcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.TrimByEndParameter(System.Double)">
            <summary>
            Removes the end of the Curve at the specified parameter
            </summary>
            <param name="endParameter"> The parameter at which to start the trim </param>
            <returns> A new Curve with the end removed </returns>
            <search>
            rem,remend,removeend,trimcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrimEnd(System.Double)">
            <summary>
            Removes the end of the Curve at the specified parameter
            </summary>
            <param name="endParameter"> The parameter at which to start the trim </param>
            <returns> A new Curve with the end removed </returns>
            <search>
            rem,remend,removeend,trimcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.TrimByParameter(System.Double,System.Double)">
            <summary>
            Removes the beginning and end of the Curve at the specified parameters.
            </summary>
            <param name="startParameter"> The parameter at which to start the trim </param>
            <param name="endParameter"> The parameter at which to start the trim </param>
            <returns> A new Curve with the outer segments removed </returns>
            <search>
            rem,remend,remstart,remove,trimcurve,removeends
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrim(System.Double,System.Double)">
            <summary>
            Removes the beginning and end of the Curve at the specified parameters.
            </summary>
            <param name="startParameter"> The parameter at which to start the trim </param>
            <param name="endParameter"> The parameter at which to start the trim </param>
            <returns> A new Curve with the outer segments removed </returns>
            <search>
            rem,remend,remstart,remove,trimcurve,removeends
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.TrimInteriorByParameter(System.Double,System.Double)">
            <summary>
            Removes the interior portion of a Curve at the specified parameters
            </summary>
            <param name="startParameter"> The parameter at which to start the trim </param>
            <param name="endParameter"> The parameter at which to start the trim </param>
            <returns> A new Curve with the interior segment removed </returns>
            <search>
            rem,removemiddle,middle,remmiddle,cutout,trimcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrimInterior(System.Double,System.Double)">
            <summary>
            Removes the interior portion of a Curve at the specified parameters
            </summary>
            <param name="startParameter"> The parameter at which to start the trim </param>
            <param name="endParameter"> The parameter at which to start the trim </param>
            <returns> A new Curve with the interior segment removed </returns>
            <search>
            rem,removemiddle,middle,remmiddle,cutout,trimcurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.TrimSegmentsByParameter(System.Double[])">
            <summary>
            Removes several segments of the curve, discarding the 1st, 3rd, 5th ... segments
            </summary>
            <param name="parameters"> A list of parameters at which to split the curve </param>
            <returns> An Array of curves discarding the 1st, 3rd, 5th ... segments </returns>
            <search>
            rem,removeparts,remparts,cutout,trimcurv,interior,odd
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterTrimSegments(System.Double[])">
            <summary>
            Removes several segments of the curve, discarding the 1st, 3rd, 5th ... segments
            </summary>
            <param name="parameters"> A list of parameters at which to split the curve </param>
            <returns> An Array of curves discarding the 1st, 3rd, 5th ... segments </returns>
            <search>
            rem,removeparts,remparts,cutout,trimcurv,interior,odd
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.TrimSegmentsByParameter(System.Double[],System.Boolean)">
            <summary>
            Removes several segments of the Curve, disgarding 2nd, 4th, 6th ... segments if the bool is true
            </summary>
            <param name="parameters"> A list of parameters at which to split the curve </param>
            <param name="discardEvenSegments"> Whether to discard even segments or not </param>
            <returns> An Array of curves disgarding 2nd, 4th, 6th ... segments if the bool is true </returns>
            <search>
            rem,removeparts,remparts,cutout,trimcurv,interior,even
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.SplitByParameter(System.Double)">
            <summary>
            Split a Curve into two pieces at the given parameter
            </summary>
            <param name="parameter"> The parameter at which to do the split </param>
            <returns> Two Curves remaining after the split </returns>
            <search>
            cutinto,divide,curve2curves,cut
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterSplit(System.Double)">
            <summary>
            Split a Curve into two pieces at the given parameter
            </summary>
            <param name="parameter"> The parameter at which to do the split </param>
            <returns> Two Curves remaining after the split </returns>
            <search>
            cutinto,divide,curve2curves,cut
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.SplitByParameter(System.Double[])">
            <summary>
            Split a Curve into multiple pieces at the given parameters
            </summary>
            <param name="parameters"> A list of parameters at which to split the curve </param>
            <returns> Curves created from splitting </returns>
            <search>
            cutinto,divide,curve2curves,cut,cut multiple,splitmultiple
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ParameterSplit(System.Double[])">
            <summary>
            Split a Curve into multiple pieces at the given parameters
            </summary>
            <param name="parameters"> A list of parameters at which to split the curve </param>
            <returns> Curves created from splitting </returns>
            <search>
            cutinto,divide,curve2curves,cut,cut multiple,splitmultiple
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.SplitByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Split a Curve into multiple pieces at the given points
            </summary>
            <param name="points"> The points on the curve at which to split the curve </param>
            <returns> Curves created from splitting </returns>
            <search>
            cutinto,divide,curve2curves,cut,cut multiple,splitmultiple
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Join(Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Join this curve and the input curve into a new PolyCurve, maintaining the original curves exactly.
            </summary>
            <param name="curve"> The curve to join to </param>
            <returns> A PolyCurve made up of the two curves </returns>
            <search>
            convertcurve,curve2polycurve,joincurve,concat
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Join(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Join set of curves to the start of the end of the polycurve.  Flips curves to assure connectivity.
            </summary>
            <param name="curves">  </param>
            <returns>  </returns>
            <search>
            convertcurves,curves2polycurve,joincurves,concat,joinall,joinmany
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Extrude(System.Double)">
            <summary>
            Extrudes a Curve in the normal Vector direction
            </summary>
            <param name="distance"> The distance to extrude the curve </param>
            <returns> The extruded Surface </returns>
            <search>
            pushcurve,pullcurve,curve2surf,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Extrude(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Extrudes a Curve in the specified direction, by the length of the input Vector
            </summary>
            <param name="direction"> Vector to extrude along </param>
            <returns> The extruded Surface </returns>
            <search>
            pushcurve,pullcurve,curve2surf,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Extrude(Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Extrudes a Curve in the specified direction, by the specified distance
            </summary>
            <param name="direction"> Vector to extrude along </param>
            <param name="distance"> Distance to extrude </param>
            <returns> The extruded Surface </returns>
            <search>
            pushcurve,pullcurve,curve2surf,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid(System.Double)">
            <summary>
            Extrudes a Curve in the Normal direction by the specified distance. Curve must be closed.
            </summary>
            <param name="distance"> Distance to extrude </param>
            <returns> The extruded Solid </returns>
            <search>
            profileextrude,extrudeprofile,curve2solid,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Extrudes a Curve in the specified direction, by the length of the input Vector. Curve must be closed.
            </summary>
            <param name="direction"> Vector to extrude along </param>
            <returns> The extruded Solid </returns>
            <search>
            profileextrude,extrudeprofile,curve2solid,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid(Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Extrudes a Curve in the specified direction, by the specified distance. Curve must be closed.
            </summary>
            <param name="direction"> Vector to extrude along </param>
            <param name="distance"> Distance to extrude </param>
            <returns> The extruded Solid </returns>
            <search>
            profileextrude,extrudeprofile,curve2solid,curveextrude,extrudecurve
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Extend(System.Double,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Extend a Curve by a given distance at a particular end determined by a pick Point.  The picked side will be extended.  Closed curves like Circles and Ellipses cannot be extended.
            </summary>
            <param name="distance"> Distance to extend </param>
            <param name="pickSide"> A Point on the end to extend </param>
            <returns> The extended Curve </returns>
            <search>
            makelonger,stretch,extendside
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtendStart(System.Double)">
            <summary>
            Extend a Curve by a given distance on its start side.  Closed curves like Circles and Ellipses cannot be extended.
            </summary>
            <param name="distance"> Distance to extend </param>
            <returns> The extended Curve </returns>
            <search>
            makelonger,stretch
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ExtendEnd(System.Double)">
            <summary>
            Extend a Curve by a given distance on its end.  Closed curves like Circles and Ellipses cannot be extended.
            </summary>
            <param name="distance"> Distance to extend </param>
            <returns> The extended Curve </returns>
            <search>
            makelonger,stretch
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ApproximateWithArcAndLineSegments">
            <summary>
            Approximate a Curve with a collection of Arcs and Lines
            </summary>
            <returns> An Array of Arcs and Lines approximating the curve </returns>
            <search>
            rationalizecurve,fitarcs,fitlines,arcs,lines
            </search>
            <weights>
            0.5,0.5,0.5,0.4,0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.ToNurbsCurve">
            <summary>
            Converts the Curve to a NurbsCurve approximation
            </summary>
            <returns> A NurbsCurve approximating the Curve </returns>
            <search>
            curve2spline,convertcurve,tospline,lines
            </search>
            <weights>
            0.5,0.5,0.5,0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Patch">
            <summary>
            Patch a closed Curve
            </summary>
            <returns> A Surface on the interior of the curve the Curve </returns>
            <search>
            fill,profiletosurf,loop,loop2surf,edgesurf
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Project(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Project another piece of Geometry onto this along a given direction Vector
            </summary>
            <param name="baseGeometry">  </param>
            <param name="projectionDirection">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.SweepAsSurface(Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Sweeps this Curve along the path Curve, creating a Surface
            </summary>
            <param name="path">  </param>
            <returns>  </returns>
            <search>
            sweep1,curve2surf
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.SweepAsSolid(Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Sweeps this closed Curve along the path Curve, creating a Solid
            </summary>
            <param name="path">  </param>
            <returns>  </returns>
            <search>
            sweep1,curve2solid,loop2solid,profile2solid,curvetosolid,looptosolid,profiletosolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Curve.Simplify(System.Double)">
            <summary>
            Returns a new Curve approximated with the supplied tolerance
            </summary>
            <param name="tolerance">  </param>
            <returns>  </returns>
            <search>
            fitcurve,reducecurve,simplecurve,approximate
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cylinder.ToString">
            <summary>
            Get a string representation of the Cylinder
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cylinder.ByRadiusHeight(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double)">
            <summary>
            Construct a Solid Cylinder defined by a parent CoordinateSystem, the radius, and the height of the cylinder
            </summary>
            <param name="cs">  </param>
            <param name="radius">  </param>
            <param name="height">  </param>
            <returns>  </returns>
            <search>
            cylinder,tube
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Cylinder.ByPointsRadius(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double)">
            <summary>
            Construct a Solid Cylinder given the bottom and top center point of the Cylinder.
            </summary>
            <param name="startPoint">  </param>
            <param name="endPoint">  </param>
            <param name="radius">  </param>
            <returns>  </returns>
            <search>
            cylinder,tube,by center points
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cylinder.Radius">
            <summary>
            The radius of the Cylinder
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cylinder.Height">
            <summary>
            The total height
            </summary>
            <search>
            cylinder
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Cylinder.Axis">
            <summary>
            Axis of the cylinder
            </summary>
            <search>
            cylinder
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Edge.ToString">
            <summary>
            Get a string representation of the Edge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Edge.CurveGeometry">
            <summary>
            The underlying Curve making up the Edge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Edge.AdjacentFaces">
            <summary>
            The Faces adjacent to this Edge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Edge.StartVertex">
            <summary>
            The Vertex at which this Edge starts
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Edge.EndVertex">
            <summary>
            The Vertex at which this Edge ends
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Edge.CoEdges">
            <summary>
            The CoEdges associated with this Edge
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ToString">
            <summary>
            Get a string representation of the Ellipse
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ByOriginRadii(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double)">
            <summary>
            Create an Ellipse centered at input Point, aligned with WCS XY Plane, with specified X and Y axis radii.
            </summary>
            <param name="origin">  </param>
            <param name="xAxisRadius">  </param>
            <param name="yAxisRadius">  </param>
            <returns>  </returns>
            <search>
            ellipse
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ByOriginVectors(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create an Ellipse centered at input Point, with two specified axes.  Axes should be be at 90 degrees to each other.
            </summary>
            <param name="origin">  </param>
            <param name="xAxisRadius">  </param>
            <param name="yAxisRadius">  </param>
            <returns>  </returns>
            <search>
            ellipsebylengths,ellipsebyvectors
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ByCoordinateSystemRadii(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double)">
            <summary>
            Create an Ellipse centered and aligned with input CoordinateSystem,  with a x_radius radius in the CS X direction, and y_radius radius in the  CS Y direction.
            </summary>
            <param name="origin">  </param>
            <param name="xAxisRadius">  </param>
            <param name="yAxisRadius">  </param>
            <returns>  </returns>
            <search>
            ellipse,aligned ellipse,ellipsebylengths
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Ellipse.ByPlaneRadii(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double)">
            <summary>
            Create an Ellipse centered and aligned with input Plane, with a x_radius  radius in the Plane X axis direction, and y_radius radius in the  Plane Y axis direction.
            </summary>
            <param name="plane">  </param>
            <param name="xAxisRadius">  </param>
            <param name="yAxisRadius">  </param>
            <returns>  </returns>
            <search>
            ellipse,aligned ellipse,ellipsebylengths
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Ellipse.CenterPoint">
            <summary>
            The center of the Ellipse
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Ellipse.MajorAxis">
            <summary>
            The major axis of the Ellipse.  This is the longer axis.  The length of the Vector is the Major radius.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Ellipse.MinorAxis">
            <summary>
            The minor axis of the Ellipse.  This is the shorter axis.  The length of the Vector is the Minor radius.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.EllipseArc.ToString">
            <summary>
            Get a string representation of the EllipseArc
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.EllipseArc.ByPlaneRadiiAngles(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create an EllipseArc in a plane with the given the radii along the X and Y axes and the angles to sweep through
            </summary>
            <param name="plane"> The plane the EllipseArc is contained in </param>
            <param name="xRadius"> The radius of the EllipseArc in the X direction of the Plane </param>
            <param name="yRadius"> The radius of the EllipseArc in the Y direction of the Plane </param>
            <param name="startAngle"> The start angle of the arc as measured from the positive x-axis of the input plane </param>
            <param name="sweepAngle"> The angle to sweep from the start angle in degrees </param>
            <returns>  </returns>
            <search>
            ellipsearc,arcs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.EllipseArc.ByPlaneRadiiStartAngleSweepAngle(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create an EllipseArc in a plane with the given the radii along the X and Y axes and the angles to sweep through
            </summary>
            <param name="plane"> The plane the EllipseArc is contained in </param>
            <param name="xRadius"> The radius of the EllipseArc in the X direction of the Plane </param>
            <param name="yRadius"> The radius of the EllipseArc in the Y direction of the Plane </param>
            <param name="startAngle"> The start angle of the arc as measured from the positive x-axis of the input plane </param>
            <param name="sweepAngle"> The angle to sweep from the start angle in degrees </param>
            <returns>  </returns>
            <search>
            ellipsearc,arcs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.CenterPoint">
            <summary>
            The center of the Ellipse
            </summary>
            <search>
            ellipsearc,arcs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.MajorAxis">
            <summary>
            The major axis of the Ellipse.  This is the longer axis.  The length of the Vector is the Major radius.
            </summary>
            <search>
            ellipsearc,arcs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.MinorAxis">
            <summary>
            The minor axis of the Ellipse.  This is the shorter axis.  The length of the Vector is the Minor radius.
            </summary>
            <search>
            ellipsearc,arcs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.StartAngle">
            <summary>
            The start angle in degrees
            </summary>
            <search>
            ellipsearc,arcs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.SweepAngle">
            <summary>
            The total sweep angle in degrees
            </summary>
            <search>
            ellipsearc,arcs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.EllipseArc.Plane">
            <summary>
            The plane in which the ellipse lies
            </summary>
            <search>
            ellipsearc,arcs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Face.ToString">
            <summary>
            Get a string representation of the Face
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Face.Edges">
            <summary>
            All of the Edges around this Face in counterclockwise order
            </summary>
            <search>
            faces
            </search>
            <weights>
            1
            </weights>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Face.Vertices">
            <summary>
            All of the Vertices around this Face in counterclockwise order
            </summary>
            <search>
            faces
            </search>
            <weights>
            1
            </weights>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Face.Loops">
            <summary>
            All of the Loops contained by this Face
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Face.SurfaceGeometry">
            <summary>
            The underlying Surface making up the Face
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Helix.ToString">
            <summary>
            Get a string representation of the Helix
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Helix.ByAxis(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point,System.Double,System.Double)">
            <summary>
            Create a Helix. The helix always rotates clockwise about the supplied  axis direction. If viewing along the axis direction, the viewer will see  the point turning clockwise around the axis as it moves along the curve  in the direction of increasing parameter. Pitch is Distance the helix  moves in the axis direction per turn. This can be positive or negative.
            </summary>
            <param name="axisPoint">  </param>
            <param name="axisDirection">  </param>
            <param name="startPoint">  </param>
            <param name="pitch">  </param>
            <param name="angleTurns">  </param>
            <returns>  </returns>
            <search>
            helix,screw,corkscrew,thread
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.Angle">
            <summary>
            The angle in degrees through which the Helix turns over its length
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.Pitch">
            <summary>
            The pitch of the helix
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.Radius">
            <summary>
            The radius of the arc
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.AxisDirection">
            <summary>
            The direction of the axis of the Helix
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Helix.AxisPoint">
            <summary>
            The base point of the Helix axis
            </summary>
            <search>
            origin,helixstart
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.ToString">
            <summary>
            Get a string representation of the IndexGroup
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.Equals(System.Object)">
            <summary>
            Compare two IndexGroup's
            </summary>
            <param name="other">The other IndexGroup</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.GetHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.ByIndices(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Create an IndexGroup storing four indices
            </summary>
            <param name="a">  </param>
            <param name="b">  </param>
            <param name="c">  </param>
            <param name="d">  </param>
            <returns>  </returns>
            <search>
            quad,polygon,mesh,meshes
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.IndexGroup.ByIndices(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Create an IndexGroup storing three indices
            </summary>
            <param name="a">  </param>
            <param name="b">  </param>
            <param name="c">  </param>
            <returns>  </returns>
            <search>
            tri,polygon,mesh,meshes
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.Count">
            <summary>
            Either 3 or 4, depending if it represents a triangle or a quad
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.A">
            <summary>
            The first index
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.B">
            <summary>
            The second index
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.C">
            <summary>
            The third index
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.IndexGroup.D">
            <summary>
            The fourth index
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ToString">
            <summary>
            Get a string representation of the Line
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Creates a straight Line between two input Points.
            </summary>
            <param name="startPoint">  </param>
            <param name="endPoint">  </param>
            <returns>  </returns>
            <search>
            line,linebypoints,lines
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ByBestFitThroughPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Creates a Line best approximating a scatter plot of Points.
            </summary>
            <param name="bestFitPoints">  </param>
            <returns>  </returns>
            <search>
            line,approximate,lines
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ByTangency(Autodesk.DesignScript.Geometry.Curve,System.Double)">
            <summary>
            Create a Line tangent to the input Curve, positioned at the parameter Point of the input Curve.
            </summary>
            <param name="curve">  </param>
            <param name="parameter">  </param>
            <returns>  </returns>
            <search>
            tangentline,tangentto,lines
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Create a straight Line starting at start Point, extending in Vector direction by specified length.
            </summary>
            <param name="startPoint">  </param>
            <param name="direction">  </param>
            <param name="length">  </param>
            <returns>  </returns>
            <search>
            linebyvector,lines
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Line.Direction">
            <summary>
            The direction of the Curve
            </summary>
            <search>
            lines
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Loop.ToString">
            <summary>
            Get a string representation of the Loop
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Loop.Face">
            <summary>
            The containing Face of the Loop
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Loop.CoEdges">
            <summary>
            The CoEdges contained in the Loop
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Loop.IsExternal">
            <summary>
            Whether the loop is border or inner
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Mesh.ToString">
            <summary>
            Get a string representation of the Mesh
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Mesh.ByPointsFaceIndices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.IndexGroup})">
            <summary>
            Create a mesh from a collection of Points and a collection of IndexGroups referencing the Point collection
            </summary>
            <param name="vertexPositions">  </param>
            <param name="indices">  </param>
            <returns>  </returns>
            <search>
            mesh,meshes
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Mesh.FaceIndices">
            <summary>
            The vertex indices that make up each face in a counterclockwise fashion
            </summary>
            <search>
            mesh,meshes
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Mesh.VertexNormals">
            <summary>
            The normal vector at this vertex
            </summary>
            <search>
            mesh,meshes
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Mesh.VertexPositions">
            <summary>
            The positions of the vertices
            </summary>
            <search>
            mesh,meshes
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ToString">
            <summary>
            Get a string representation of the NurbsCurve
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByControlPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Create a BSplineCurve by using explicit control points. NOTE 1: BSplineCurves with deg=1 have G1 discontinuities, which cause problems for extrusion, sweep, and other operations. They should be avoided. Use  a PolyCurve instead.  NOTE 2: If the curve is periodic (closed), then the first and last points MUST be the same.
            </summary>
            <param name="points">  </param>
            <returns>  </returns>
            <search>
            nurbscurve,spline,lines
            </search>
            <weights>
            0.5,0.5,0.45
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByControlPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Int32)">
            <summary>
            Create a BSplineCurve by using explicit control points. NOTE 1: BSplineCurves with deg=1 have G1 discontinuities, which cause problems for extrusion, sweep, and other operations. They should be avoided. Use  a PolyCurve instead.  NOTE 2: If the curve is periodic (closed), then the first and last points MUST be the same.
            </summary>
            <param name="points">  </param>
            <param name="degree">  </param>
            <returns>  </returns>
            <search>
            nurbscurve,spline,degree,lines
            </search>
            <weights>
            0.5,0.5,0.5,0.45
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByControlPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Int32,System.Boolean)">
            <summary>
            Create a BSplineCurve by using explicit control points. NOTE 1: BSplineCurves with deg=1 have G1 discontinuities, which cause problems for extrusion, sweep, and other operations. They should be avoided. Use  a PolyCurve instead.  NOTE 2: If the curve is periodic (closed), then the first and last points MUST be the same.
            </summary>
            <param name="points">  </param>
            <param name="degree">  </param>
            <param name="closeCurve">  </param>
            <returns>  </returns>
            <search>
            nurbscurve,spline,degree,smoothness,lines
            </search>
            <weights>
            0.5,0.5,0.5,0.5,0.45
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByControlPointsWeightsKnots(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Double[],System.Double[],System.Int32)">
            <summary>
            Create a BSplineCurve by from control vertices, weights, and knots. FROM ASM DOCS: Degree: Should be greater than 1 (piecewise-linear spline) and less than 26 (the maximum  B-spline basis degree supported by ASM). Weights: All weight values (if supplied) should be strictly positive.  Weights smaller than 1e-11 will be rejected and the function will fail.  Knots: The knot vector should be a non-decreasing sequence. Interior knot multiplicity should be no larger than degree + 1 at the start/end knot and  degree at an internal knot (this allows curves with G1 discontinuities to be  represented). Note that non-clamped knot vectors are supported, but will be  converted to clamped ones, with the corresponding changes applied to the  control point/weight data.  knot array: the array size must be num_control_points + degree + 1
            </summary>
            <param name="points">  </param>
            <param name="weights">  </param>
            <param name="knots">  </param>
            <param name="degree">  </param>
            <returns>  </returns>
            <search>
            explicit,nurbscurve,spline,degree,spline byarray,lines
            </search>
            <weights>
            0.5,0.5,0.5,0.5,0.5,0.45
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Create a BSplineCurve by interpolating between points.
            </summary>
            <param name="points">  </param>
            <returns>  </returns>
            <search>
            fit,approximate,spline,lines
            </search>
            <weights>
            0.5,0.5,0.5,0.45
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Boolean)">
            <summary>
            Create a BSplineCurve by interpolating between points. NOTE 2: If the curve is periodic (closed), then the first and last points MUST be the same.
            </summary>
            <param name="points">  </param>
            <param name="closeCurve">  </param>
            <returns>  </returns>
            <search>
            fit,approximate,spline,lines
            </search>
            <weights>
            0.5,0.5,0.5,0.45
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Int32)">
            <summary>
            Create a BSplineCurve by interpolating between points with specified degree.
            </summary>
            <param name="points">  </param>
            <param name="degree">  </param>
            <returns>  </returns>
            <search>
            fit,approximate,spline,smoothness,lines
            </search>
            <weights>
            0.5,0.5,0.5,0.5,0.45
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ByPointsTangents(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Returns a BSplineCurve through the points, with tangent directions.
            </summary>
            <param name="points">  </param>
            <param name="startTangent">  </param>
            <param name="endTangent">  </param>
            <returns>  </returns>
            <search>
            spline by tangent,tangents,lines
            </search>
            <weights>
            0.5,0.5,0.45
            </weights>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsCurve.Degree">
            <summary>
            The degree of the curve
            </summary>
            <search>
            smoothness,interpolation,continuity
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsCurve.IsPeriodic">
            <summary>
            Whether the NurbsCurve is periodic or not
            </summary>
            <search>
            isclosed
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsCurve.IsRational">
            <summary>
            Whether the NurbsCurve is rational or not.  This defines whether any of the weights are not 1.0.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.ControlPoints">
            <summary>
            Get the control points of the NurbsCurve.  These are the points that the curve interpolates.
            </summary>
            <returns> An Array of Points </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.Knots">
            <summary>
            The knots of the Curve.  These, along with the Degree, define the domain of the Curve where a particular control vertex acts.
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsCurve.Weights">
            <summary>
            The weights of the control vertices of the curve.  These define the magnitude of influence of the control vertices.
            </summary>
            <returns>  </returns>
            <search>
            ptweight
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ToString">
            <summary>
            Get a string representation of the NurbsSurface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByPoints(Autodesk.DesignScript.Geometry.Point[][],System.Int32,System.Int32)">
            <summary>
            Creates a NurbsSurface with specified interpolated points and  U and V degrees.  The resultant surface will pass through all of the points.
            </summary>
            <param name="points">  </param>
            <param name="uDegree">  </param>
            <param name="vDegree">  </param>
            <returns>  </returns>
            <search>
            fit,topoints
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByPointsTangents(Autodesk.DesignScript.Geometry.Point[][],System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector})">
            <summary>
            Creates a NurbsSurface with specified interpolated points and  U and V degrees.  The resultant surface will pass through all of the points.  The number of tangents must match the number of  points in the corresponding direction.  The resultant surface will be degree 3 in both the U and V direction.
            </summary>
            <param name="points">  </param>
            <param name="startUTangents">  </param>
            <param name="endUTangents">  </param>
            <param name="startVTangents">  </param>
            <param name="endVTangents">  </param>
            <returns>  </returns>
            <search>
            fit,topoints,totangents
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByPointsTangentsKnotsDerivatives(Autodesk.DesignScript.Geometry.Point[][],System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector},System.Double[],System.Double[],System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Vector})">
            <summary>
            Creates a NurbsSurface satisfying a collection of different surface characteristics. This is the most advanced surface fitting method.  The resultant surface  will pass through all of the points.  The number of tangents must match  the number of points in the corresponding direction.  The resultant surface will be degree 3 in both the U and V direction.  The corner derivatives should be  second order (dP/dUdV) and should be supplied in this order [ lowU, lowV ], [ highU, lowV ],  [ lowU, highV ], [ highU, highV ].
            </summary>
            <param name="points">  </param>
            <param name="startUTangents">  </param>
            <param name="endUTangents">  </param>
            <param name="startVTangents">  </param>
            <param name="endVTangents">  </param>
            <param name="uKnots">  </param>
            <param name="vKnots">  </param>
            <param name="cornerTwistDerivatives">  </param>
            <returns>  </returns>
            <search>
            fit,topoints,totangents,fit corners,complex fit
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByControlPoints(Autodesk.DesignScript.Geometry.Point[][],System.Int32,System.Int32)">
            <summary>
            Create a NurbsSurface by using explicit control Points, with specified U and V degrees.
            </summary>
            <param name="controlVertices">  </param>
            <param name="uDegree">  </param>
            <param name="vDegree">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ByControlPointsWeightsKnots(Autodesk.DesignScript.Geometry.Point[][],System.Double[][],System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            Creates a NurbsSurface with specified control vertices, knots, weights,  and U V degrees.  There are several restrictions on the data which, if broken, will cause the function to fail and will throw an exception. Degree: Both u- and v- degree should be >= 1 (piecewise-linear spline)  and  less than 26 (the maximum B-spline basis degree supported by ASM). Weights: All weight values (if supplied) should be strictly positive.  Weights smaller than 1e-11 will be rejected and the function will fail.  Knots: Both knot vectors should be non-decreasing sequences. Interior knot multiplicity should be no larger than degree + 1 at the start/end knot and  degree at an internal knot (this allows surfaces with G1 discontinuities to  be represented). Note that non-clamped knot vectors are supported, but will  be converted to clamped ones, with the corresponding changes applied to the  control point/weight data.
            </summary>
            <param name="controlVertices">  </param>
            <param name="weights">  </param>
            <param name="knotsU">  </param>
            <param name="knotsV">  </param>
            <param name="uDegree">  </param>
            <param name="vDegree">  </param>
            <returns>  </returns>
            <search>
            lines
            </search>
            <weights>
            0.4
            </weights>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.DegreeU">
            <summary>
            Surface degree in the U direction.
            </summary>
            <search>
            surface smoothness,continuity
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.DegreeV">
            <summary>
            Surface degree in the V direction.
            </summary>
            <search>
            surface smoothness,continuity
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.NumControlPointsU">
            <summary>
            Number of control Points in the U direction.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.NumControlPointsV">
            <summary>
            Number of control Points in the V direction.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.IsPeriodicInU">
            <summary>
            Returns true if the Surface is periodic in the U direction.
            </summary>
            <search>
            closedinU
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.IsPeriodicInV">
            <summary>
            Returns true if the Surface is periodic in the V direction.
            </summary>
            <search>
            closedinV
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.NurbsSurface.IsRational">
            <summary>
            Returns true if the Surface is rational.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.ControlPoints">
            <summary>
            Returns NurbsSurface control points (poles).
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.Weights">
            <summary>
            Returns NurbsSurface control point weights.
            </summary>
            <returns>  </returns>
            <search>
            ptweights
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.UKnots">
            <summary>
            Surface knots in U direction.
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.NurbsSurface.VKnots">
            <summary>
            Surface knots in V direction.
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ToString">
            <summary>
            Get a string representation of the Plane
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByOriginNormal(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create a Plane centered at root Point, with input normal Vector.
            </summary>
            <param name="origin">  </param>
            <param name="normal">  </param>
            <returns>  </returns>
            <search>
            plane,tonormal
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByOriginNormalXAxis(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create an "oriented" Plane, positioned at Point origin with Vector  normal, but with a specific X axis orientation. This has no impact to splitting, intersect, project, etc oporations, it only specifies the orientation of the input CoordinateSystem.
            </summary>
            <param name="origin">  </param>
            <param name="normal">  </param>
            <param name="xAxis">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByOriginXAxisYAxis(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            The X and Y axis lie in the plane. The Z axis is the cross product of the two Vectors.
            </summary>
            <param name="origin">  </param>
            <param name="xAxis">  </param>
            <param name="yAxis">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByBestFitThroughPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Fits a Plane to the input Points; basically a 3D scatterplot fit.
            </summary>
            <param name="points">  </param>
            <returns>  </returns>
            <search>
            fit,bestfit
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByLineAndPoint(Autodesk.DesignScript.Geometry.Line,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create the Plane containing the input Line and external Point. Point cannot lie on the Line or in the Line axis.
            </summary>
            <param name="line">  </param>
            <param name="point">  </param>
            <returns>  </returns>
            <search>
            lines
            </search>
            <weights>
            0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ByThreePoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create a the Plane containing the three input Points.
            </summary>
            <param name="origin"> The plane origin </param>
            <param name="planePoint"> Any point lying on the plane </param>
            <param name="xAxisPoint"> The point lying on the X-axis of the plane wrt to the plane origin </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.XY">
            <summary>
            Creates a plane in the world XY
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.XZ">
            <summary>
            Creates a plane in the world XZ plane
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.YZ">
            <summary>
            Creates a plane in the world YZ
            </summary>
            <returns>  </returns>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Plane.Origin">
            <summary>
            Returns the origin of the Plane.
            </summary>
            <search>
            position,planecenter
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Plane.Normal">
            <summary>
            Returns the normal direction of the Plane.
            </summary>
            <search>
            perpendicular
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Plane.XAxis">
            <summary>
            The X basis of the Plane
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Plane.YAxis">
            <summary>
            The Y basis of the Plane
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.ToCoordinateSystem">
            <summary>
            Produces a new CoordinateSystem representing this plane. It is based on  the origin, and X and Y axis basis.
            </summary>
            <returns>  </returns>
            <search>
            converttoCS,convert2cs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Plane.Offset(System.Double)">
            <summary>
            Create a new Plane offset by this Plane in the normal direction by the specified distance.
            </summary>
            <param name="dist">  </param>
            <returns>  </returns>
            <search>
            alongnormal,moveplane
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ToString">
            <summary>
            Get a string representation of the Point
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Equals(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <summary>
            Compare two Point's
            </summary>
            <param name="other">The other Point</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ComputeHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ByCoordinates(System.Double,System.Double)">
            <summary>
            Form a Point in the XY plane given two 2 cartesian coordinates.  The Z component is 0.
            </summary>
            <param name="x">  </param>
            <param name="y">  </param>
            <returns>  </returns>
            <search>
            xy,position
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Origin">
            <summary>
            Get the Origin point (0,0,0)
            </summary>
            <returns>  </returns>
            <search>
            zero,origin
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ByCoordinates(System.Double,System.Double,System.Double)">
            <summary>
            Form a Point given 3 cartesian coordinates
            </summary>
            <param name="x">  </param>
            <param name="y">  </param>
            <param name="z">  </param>
            <returns>  </returns>
            <search>
            point,xyz,position
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ByCartesianCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
            <summary>
            Form a Point in the given coordinate system with 3 cartesian coordinates
            </summary>
            <param name="cs">  </param>
            <param name="x">  </param>
            <param name="y">  </param>
            <param name="z">  </param>
            <returns>  </returns>
            <search>
            point,xyz,localposition
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.ByCylindricalCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
            <summary>
            Form a Point in the given coordinate system given its position in cylindrical coordinates.
            </summary>
            <param name="cs"> The coordinate system to build the point in </param>
            <param name="angle"> The angle is the rotation from the X axis in the coordinate system around the Z axis in degrees </param>
            <param name="elevation"> The elevation of the point above the XY plane </param>
            <param name="radius"> The distance from the origin of the coordinate system </param>
            <returns> A new Point </returns>
            <search>
            point,localposition
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.BySphericalCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
            <summary>
            Form a Point in the given coordinate system given its position in spherical coordinates.
            </summary>
            <param name="cs"> The coordinate system to build the point in </param>
            <param name="phi"> The angle down from the Z axis in degrees </param>
            <param name="theta"> The rotation around the sphere from the X axis in degrees </param>
            <param name="radius"> The offset from the origin </param>
            <returns> A new Point </returns>
            <search>
            point,localposition
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.PruneDuplicates(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Double)">
            <summary>
            Prune points to exclude duplicates within tolerance of included points
            </summary>
            <param name="points"> Points to prune </param>
            <param name="tolerance"> Tolerance for pruning </param>
            <returns>  </returns>
            <search>
            unique,duplicates,remove duplicates,distinct,near
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Point.X">
            <summary>
            Get the X component of a Point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Point.Y">
            <summary>
            Get the Y component of a Point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Point.Z">
            <summary>
            Get the Z component of a Point
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.AsVector">
            <summary>
            Get the Vector with the same X, Y, and Z component
            </summary>
            <returns>  </returns>
            <search>
            convertovector,point2vector
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Add(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Add a vector to a point.  The same as Translate(Vector).
            </summary>
            <param name="vectorToAdd">  </param>
            <returns>  </returns>
            <search>
            movepoint,move,move along
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Subtract(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Subtract a vector from a point.  The same as Translate(-Vector).
            </summary>
            <param name="vectorToSubtract">  </param>
            <returns>  </returns>
            <search>
            movepoint,move,move along
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Point.Project(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Project another piece of Geometry onto this along a given direction Vector
            </summary>
            <param name="baseGeometry">  </param>
            <param name="projectionDirection">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ToString">
            <summary>
            Get a string representation of the PolyCurve
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Double)">
            <summary>
            Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.
            </summary>
            <param name="curves"> Curves to join into polycurve </param>
            <param name="joinTolerance"> Tolerance to determine size of gap allowed between curves to be joined </param>
            <returns>  </returns>
            <search>
            segments,joincurves
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Boolean)">
            <summary>
            Make PolyCurve by connecting points. Set the 'connectLastToFirst' input to true to close the PolyCurve.
            </summary>
            <param name="points"> Points to make polycurve </param>
            <param name="connectLastToFirst"> make  close or open polycurve </param>
            <returns>  </returns>
            <search>
            segments,joincurves,lines
            </search>
            <weights>
            0.5,0.5,0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ByThickeningCurve(Autodesk.DesignScript.Geometry.Curve,System.Double,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Make PolyCurve by thickening a curve.
            </summary>
            <param name="curve"> the curve to thicken </param>
            <param name="thickness"> the thickness </param>
            <param name="nor"> the normal perpendicular to the thickening direction </param>
            <returns>  </returns>
            <search>
            offset
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.PolyCurve.NumberOfCurves">
            <summary>
            Number of curves of the polycurve
            </summary>
            <search>
            curvecount,subcurvecount,numbersubcurves
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.Curves">
            <summary>
            Returns curves of the polycurve
            </summary>
            <returns>  </returns>
            <search>
            subcurves,polycurvesplit
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.CurveAtIndex(System.Int32,System.Boolean)">
            <summary>
            Returns curve of the polycurve by index
            </summary>
            <param name="index"> Length to locate point </param>
            <param name="endOrStart"> counting from end or start of the polycurve </param>
            <returns>  </returns>
            <search>
            subcurveatindex,getsubcurve,getcurvebyindex
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.BasePlane">
            <summary>
            Returns plane of planar polycurve
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ExtendWithEllipse(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Extends polycurve by tangent ellipse
            </summary>
            <param name="length"> Length of extension ellipse </param>
            <param name="radius1"> Parameter of ellipse </param>
            <param name="radius2"> Parameter of ellipse </param>
            <param name="endEllipseParameter"> Parameter of ellipse </param>
            <param name="endOrStart"> extending end or start of the polycurve </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.ExtendWithArc(System.Double,System.Double,System.Boolean)">
            <summary>
            Extends polycurve by tangent arc
            </summary>
            <param name="length"> Length of extension arc </param>
            <param name="radius"> Radius of arc </param>
            <param name="endOrStart"> extending end or start of the polycurve </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.CloseWithLine">
            <summary>
            Close polycurve by line connecting start and end points
            </summary>
            <returns>  </returns>
            <search>
            lines
            </search>
            <weights>
            0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.CloseWithLineAndTangentArcs(System.Double,System.Double)">
            <summary>
            Close polycurve by tangent chain of arc, line, and arc
            </summary>
            <param name="radiusAtStart"> Radius of arc at start of polycurve </param>
            <param name="radiusAtEnd"> Radius of arc at end of polycurve </param>
            <returns>  </returns>
            <search>
            lines
            </search>
            <weights>
            0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.Offset(System.Double,System.Boolean)">
            <summary>
            Offset polycurve in its plane.
            </summary>
            <param name="signedDistance"> Signed offset </param>
            <param name="extendCircular"> If true, corners will be made circular </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolyCurve.Fillet(System.Double,System.Boolean)">
            <summary>
            Fillet polycurve in its plane.
            </summary>
            <param name="radius"> Radius of fillet </param>
            <param name="rightSide"> If right side which to fillet </param>
            <returns>  </returns>
            <search>
            round,smooth,radius
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.ToString">
            <summary>
            Get a string representation of the Polygon
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.ByPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Construct a Polygon Curve by connecting Points.
            </summary>
            <param name="points">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.RegularPolygon(Autodesk.DesignScript.Geometry.Circle,System.Int32)">
            <summary>
            Construct an inscribed Polygon Curve within a circle.
            </summary>
            <param name="circle">  </param>
            <param name="numberSides">  </param>
            <returns>  </returns>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Polygon.Points">
            <summary>
            Returns all the segment start / end points.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Polygon.PlaneDeviation">
            <summary>
            Returns maximum deviation from average plane of polygon.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.Corners">
            <summary>
            Returns corners of polygon
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.Center">
            <summary>
            Returns average point of corners of polygon
            </summary>
            <returns>  </returns>
            <search>
            centroid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.SelfIntersections">
            <summary>
            Returns self intersections between sides of the polygon.
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Polygon.ContainmentTest(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Checks if point is inside planar polygon without self intersections.
            </summary>
            <param name="point">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ToString">
            <summary>
            Get a string representation of the PolySurface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Makes PolySurface by Loft through Curves.
            </summary>
            <param name="crossSections"> Curves to loft through. </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Makes PolySurface by Loft through PolyCurves.
            </summary>
            <param name="crossSections"> Curves to loft through. </param>
            <param name="guideCurve"> Curve to guide loft through. </param>
            <returns>  </returns>
            <search>
            loftbyrail
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ByLoftGuides(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Makes PolySurface by Loft through PolyCurves.
            </summary>
            <param name="crossSections"> Curves to loft through. </param>
            <param name="guideCurves"> Curves to guide loft through. </param>
            <returns>  </returns>
            <search>
            loftbyrails,loft rails,guides
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ByJoinedSurfaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Surface})">
            <summary>
            Make Polysurface by joining surfaces.
            </summary>
            <param name="surfaces"> Surfaces to join into polysurface </param>
            <returns>  </returns>
            <search>
            joinsurfaces,joinsrf
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.BySolid(Autodesk.DesignScript.Geometry.Solid)">
            <summary>
            Make Polysurface by surfaces of Solid.
            </summary>
            <param name="solid"> Solid which surfaces to use </param>
            <returns>  </returns>
            <search>
            solid2poly,solidtopoly,convertsolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.BySweep(Autodesk.DesignScript.Geometry.Curve,System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Make Polysurface by sweeping curves along rail.
            </summary>
            <param name="rail"> Curve to sweep along </param>
            <param name="crossSection"> Sweep profile </param>
            <returns>  </returns>
            <search>
            sweep,rail,guide,sweep1
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.BySweep(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Make Polysurface by sweeping a curve along rail.
            </summary>
            <param name="rail"> Curve to sweep along </param>
            <param name="profile"> Sweep profile </param>
            <returns>  </returns>
            <search>
            sweep,rail,guide,sweep1,sweepprofile,profile
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.Surfaces">
            <summary>
            Return new Surfaces representing the underlying Surfaces.
            </summary>
            <returns>  </returns>
            <search>
            subsurfaces,getsurfaces,explode
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.LocateSurfacesByPoint(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Locate Surfaces by point. Takes first intersection in forward direction.  Returns one surface if hit  surface interior, two if hit edge interior, and many if hit vertex
            </summary>
            <param name="point">  </param>
            <param name="direction">  </param>
            <returns>  </returns>
            <search>
            surfacesatpoint,findsurfaces,extractsurfaces
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.LocateSurfacesByLine(Autodesk.DesignScript.Geometry.Line)">
            <summary>
            Locate Surfaces by Line. Takes all surfaces hit by line.
            </summary>
            <param name="line">  </param>
            <returns>  </returns>
            <search>
            surfacesonline,findsurfaces,extractsurfaces,lines
            </search>
            <weights>
            0.5,0.5,0.5,0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.UnconnectedBoundaries">
            <summary>
            Compute 2d cell boundaries which are not connected to other Surfaces
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.ExtractSolids">
            <summary>
            Extract Solids from Polysurface defined by subset of surfaces
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.SurfaceCount">
            <summary>
            number of surfaces of Polysurface
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.EdgeCount">
            <summary>
            number of edges of Polysurface
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.VertexCount">
            <summary>
            number of vertices of Polysurface
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.Fillet(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Double)">
            <summary>
            Fillets a PolySurface along input Edges with a given radius.
            </summary>
            <param name="edges">  </param>
            <param name="radius">  </param>
            <returns>  </returns>
            <search>
            round,smooth,smoothedge,roundedges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.PolySurface.Chamfer(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Double)">
            <summary>
            Chamfers a PolySurface along input Edges with a given offset from the edge corner.
            </summary>
            <param name="edges">  </param>
            <param name="offset">  </param>
            <returns>  </returns>
            <search>
            bevel,flattenedges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ToString">
            <summary>
            Get a string representation of the Rectangle
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByCornerPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Create a Rectangle by four corner Points.
            </summary>
            <param name="points">  </param>
            <returns>  </returns>
            <search>
            rectbypointarray
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByCornerPoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create a Rectangle by four corner Points.
            </summary>
            <param name="p1">  </param>
            <param name="p2">  </param>
            <param name="p3">  </param>
            <param name="p4">  </param>
            <returns>  </returns>
            <search>
            rectbypoints
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength(System.Double,System.Double)">
            <summary>
            Create a Rectangle centered at the WCS origin in the WCS XY Plane, with specified width (X Axis length), and length (Y Axis length).
            </summary>
            <param name="width">  </param>
            <param name="length">  </param>
            <returns>  </returns>
            <search>
            rectbylengths
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double)">
            <summary>
            Create a Rectangle centered at input Plane root, with input width  (Plane X axis length), and length (Plane Y axis length).
            </summary>
            <param name="plane">  </param>
            <param name="width">  </param>
            <param name="length">  </param>
            <returns>  </returns>
            <search>
            rectangle,rectbylengths
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double)">
            <summary>
            Create a Rectangle centered at the input origin in the CoordinateSystem  XY Plane, with specified width (X Axis length), and length  (Y Axis length).
            </summary>
            <param name="cs">  </param>
            <param name="width">  </param>
            <param name="length">  </param>
            <returns>  </returns>
            <search>
            rectbylengths
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Rectangle.Width">
            <summary>
            The width of the Rectangle
            </summary>
            <search>
            rectX,rectx
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Rectangle.Height">
            <summary>
            The height of the Rectangle
            </summary>
            <search>
            rectY,recty
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ToString">
            <summary>
            Get a string representation of the Solid
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByJoinedSurfaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Surface})">
            <summary>
            Create a solid by specifying it's component faces as Surfaces.
            </summary>
            <param name="facesOfSolid">  </param>
            <returns>  </returns>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Create a Solid by lofting between input cross section closed Curves.
            </summary>
            <param name="crossSections">  </param>
            <returns>  </returns>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Create a Solid by lofting between input cross section closed Curves,  with guide Curve to assist. Guide Curve must intersect all cross section Curves.
            </summary>
            <param name="crossSections">  </param>
            <param name="guideCurve">  </param>
            <returns>  </returns>
            <search>
            Brep,brep,guide,loft
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Create a Solid by lofting between input cross section closed Curves,  with guide Curves to assist. Guide Curves must intersect all cross  section Curves.
            </summary>
            <param name="crossSections">  </param>
            <param name="guideCurves">  </param>
            <returns>  </returns>
            <search>
            Brep,brep,guides,loft
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.BySweep(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Sweep a closed Curve along a path.
            </summary>
            <param name="profile">  </param>
            <param name="path">  </param>
            <returns>  </returns>
            <search>
            Brep,brep,sweep1
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.BySweep2Rails(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Sweep a closed profile Curve along two rail Curves.
            </summary>
            <param name="path"> The input path to sweep along. </param>
            <param name="guideRail"> A rail to guide the orientation of the sweep. </param>
            <param name="profile"> The profile curve to sweep along the path </param>
            <returns>  </returns>
            <search>
            Brep,brep,sweep2,guides,sweepprofile
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByRevolve(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Double)">
            <summary>
            Create a Solid of revolution, sweeping the profile Curve around the axis Ray formed by the origin and the axis Vector, from the start angle in degrees to the sweep angle in degrees.
            </summary>
            <param name="profile">  </param>
            <param name="axisOrigin">  </param>
            <param name="axisDirection">  </param>
            <param name="startAngle">  </param>
            <param name="sweepAngle">  </param>
            <returns>  </returns>
            <search>
            Brep,brep,lathe,revolveprofile
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ByUnion(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Solid})">
            <summary>
            Union a collection of solids into one solid
            </summary>
            <param name="solids"> A collection of solids </param>
            <returns>  </returns>
            <search>
            Brep,brep,boolean,addition
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Solid.Area">
            <summary>
            Returns the surface area -- sum of all the areas of all faces
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Solid.Volume">
            <summary>
            The total volume of the Solid
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Centroid">
            <summary>
            The centroid of the Solid
            </summary>
            <returns>  </returns>
            <search>
            average,center
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Union(Autodesk.DesignScript.Geometry.Solid)">
            <summary>
            The boolean union of this Solid and another.
            </summary>
            <param name="solid">  </param>
            <returns>  </returns>
            <search>
            addition,merge,combine
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.UnionAll(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Solid})">
            <summary>
            Unions a list of Solids with this Solid.
            </summary>
            <param name="solids">  </param>
            <returns>  </returns>
            <search>
            addition,merge,combine,unionmany,union multi
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Difference(Autodesk.DesignScript.Geometry.Solid)">
            <summary>
            The boolean difference of this Solid with another
            </summary>
            <param name="other">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.DifferenceAll(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Solid})">
            <summary>
            The boolean difference of this Solid and the union of input Solids
            </summary>
            <param name="others">  </param>
            <returns>  </returns>
            <search>
            subtract,differencemany,diffall,diff multi
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ThinShell(System.Double,System.Double)">
            <summary>
            Obtain a solid Shell from the Faces of this Solid
            </summary>
            <param name="internalFaceThickness"> Distance to extend the shell inwards </param>
            <param name="externalFaceThickness"> Distance to extend she shell outwards </param>
            <returns>  </returns>
            <search>
            extract shell,offset and extract
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.ProjectInputOnto(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Projects the input Geometry onto this Solid, in the direction of the input Vector
            </summary>
            <param name="geometryToProject">  </param>
            <param name="projectDirection">  </param>
            <returns>  </returns>
            <search>
            projectonto,projectonsolid,projecttosolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Fillet(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Double)">
            <summary>
            Fillets a Solid along input Edges with a given radius.
            </summary>
            <param name="edges">  </param>
            <param name="radius">  </param>
            <returns>  </returns>
            <search>
            round,smooth,smoothedge,roundedges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Solid.Chamfer(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Double)">
            <summary>
            Chamfers a Solid along input Edges with a given offset from the edge corner.
            </summary>
            <param name="edges">  </param>
            <param name="offset">  </param>
            <returns>  </returns>
            <search>
            bevel,flattenedges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Sphere.ToString">
            <summary>
            Get a string representation of the Sphere
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Sphere.ByCenterPointRadius(Autodesk.DesignScript.Geometry.Point,System.Double)">
            <summary>
            Create a Solid Sphere cetered at the input Point, with given radius.
            </summary>
            <param name="centerPoint">  </param>
            <param name="radius">  </param>
            <returns>  </returns>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Sphere.ByFourPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Create a Solid Sphere containing four input Points on the surface.
            </summary>
            <param name="points">  </param>
            <returns>  </returns>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Sphere.ByBestFit(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Fit a Sphere as close as possible to the input Points.
            </summary>
            <param name="points">  </param>
            <returns>  </returns>
            <search>
            Brep,brep
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Sphere.CenterPoint">
            <summary>
            Return the center Point of the Sphere.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Sphere.Radius">
            <summary>
            Return the radius of the Sphere.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ToString">
            <summary>
            Get a string representation of the Surface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByUnion(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Surface})">
            <summary>
            Union a collection of surfaces into one surface. This method might return a polySurface if the resulting union is non-manifold or multi-faced.
            </summary>
            <param name="surfaces"> A collection of surfaces. </param>
            <returns>  </returns>
            <search>
            merge,join,boolean,addition
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Create a Surface by lofting between input cross section Curves.
            </summary>
            <param name="crossSections">  </param>
            <returns>  </returns>
            <search>
            loft
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByRuledLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Line})">
            <summary>
            Create a Surface by lofting between input cross section Lines.  This is slightly faster and produces a less smooth result than Surface.ByLoft.
            </summary>
            <param name="crossSections">  </param>
            <returns>  </returns>
            <search>
            ruledsurface,lines
            </search>
            <weights>
            0.5,0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Loft a Surface through the cross sections with a specified guide curve (aka a rail). Guide curve must intersect all of the cross section  curves.
            </summary>
            <param name="crossSections">  </param>
            <param name="guideCurve">  </param>
            <returns>  </returns>
            <search>
            loftbyrail
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByLoft(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Loft a Surface through the cross sections with a specified guide curves (aka a rails). Guide curves must intersect all of the cross section  curves.
            </summary>
            <param name="crossSections">  </param>
            <param name="guideCurves">  </param>
            <returns>  </returns>
            <search>
            loftbyrails,loft rails,guides
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.BySweep(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Create a Surface by sweeping a cross section Curve along a path.
            </summary>
            <param name="profile">  </param>
            <param name="path">  </param>
            <returns>  </returns>
            <search>
            sweep,rail,guide,sweep1
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Create a Polygon Surface connecting input Points in a closed Polygon and patching it.
            </summary>
            <param name="points">  </param>
            <returns>  </returns>
            <search>
            patch,surfacebypolygon
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.BySweep2Rails(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Sweep the cross section curve along a path guided by a two rails
            </summary>
            <param name="path"> The input path to sweep along. </param>
            <param name="guideRail"> A rail to guide the orientation of the sweep. </param>
            <param name="profile"> The profile curve to sweep along the path. </param>
            <returns>  </returns>
            <search>
            sweep2,guides
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByRevolve(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Double)">
            <summary>
            Create a Surface by sweeping the profile Curve around the axis ray formed  by origin Point in the direction of the axis Vector, starting at start_angle in degrees, sweeping sweep_angle in degrees.
            </summary>
            <param name="profile">  </param>
            <param name="axisOrigin">  </param>
            <param name="axisDirection">  </param>
            <param name="startAngle">  </param>
            <param name="sweepAngle">  </param>
            <returns>  </returns>
            <search>
            lathe
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ByPatch(Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Create a Surface by filling in the interior of a closed boundary defined by input Curves.
            </summary>
            <param name="closedCurve">  </param>
            <returns>  </returns>
            <search>
            edgesrf,edgesurface,patch,fill
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.Area">
            <summary>
            Returns the total surface area.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.Perimeter">
            <summary>
            Returns the sum of all edges of the Surface.
            </summary>
            <search>
            circumference
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.ClosedInU">
            <summary>
            Returns true if the Surface is closed in U direction.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.ClosedInV">
            <summary>
            Returns true if the Surface is closed in V direction
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Surface.Closed">
            <summary>
            Returns true if the Surface is closed in U or V directions
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.SubtractFrom(Autodesk.DesignScript.Geometry.Solid)">
            <summary>
            Subtract the input tools from this Surface.
            </summary>
            <param name="trimmingEntity">  </param>
            <returns>  </returns>
            <search>
            difference,trim,removefrom,cut
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Difference(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Surface})">
            <summary>
            The boolean difference of this Surface and the union of input Surfaces. This method might return a polySurface if the resulting boolean is non-manifold or multi-faced.
            </summary>
            <param name="others">  </param>
            <returns>  </returns>
            <search>
            subtract,differencemany,diffall,diff multi
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.UVParameterAtPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Return the UV parameter pair at the input Point. This is the inverse of Point at parameter.
            </summary>
            <param name="point">  </param>
            <returns>  </returns>
            <search>
            evaluateatpoint,surfaceatpoint,uvatpoint,uvs
            </search>
            <weights>
            0.5,0.5,0.5,0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.TrimWithEdgeLoops(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.PolyCurve})">
            <summary>
            Trim the surface with a collection of loops within the surface
            </summary>
            <param name="loops">  </param>
            <returns>  </returns>
            <search>
            trim multiple,removeloops,cutloops
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.NormalAtPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Return the surface normal at the input Point on the Surface.
            </summary>
            <param name="point">  </param>
            <returns>  </returns>
            <search>
            perpendicular
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ToNurbsSurface">
            <summary>
            Gets a Nurbs representation of the Surface. This method may approximate Surface in certain circumstances.
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ApproximateWithTolerance(System.Double)">
            <summary>
            Gets a Nurbs representation of the Surface within a specified tolerance. This method may approximate Surface in certain circumstances.
            </summary>
            <param name="tolerance">  </param>
            <returns>  </returns>
            <search>
            tonurbs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Thicken(System.Double)">
            <summary>
            Thicken Surface into a Solid, extruding in the direction of Surface  normals on both sides of the Surface.
            </summary>
            <param name="thickness">  </param>
            <returns>  </returns>
            <search>
            offset,tosolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Thicken(System.Double,System.Boolean)">
            <summary>
            Thicken Surface into a Solid, extruding in the direction of Surface  normals. If both_sides parameter is true, surface is thickened  on both sides.
            </summary>
            <param name="thickness">  </param>
            <param name="both_sides">  </param>
            <returns>  </returns>
            <search>
            offset,bothsides,tosolid
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Offset(System.Double)">
            <summary>
            Offset Surface in direction of Surface normal by specified distance.
            </summary>
            <param name="distance">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.CurvatureAtParameter(System.Double,System.Double)">
            <summary>
            The returned coordination system use xAxis, yAxis and zAxis to represent the uDir, vDir and normal. The length of xAxis, yAxis represents the curvatures.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.CoordinateSystemAtParameter(System.Double,System.Double)">
            <summary>
            Return a CoordinateSystem aligned with principal curvature directions.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.TangentAtUParameter(System.Double,System.Double)">
            <summary>
            Return the U tangent Vector at specified U and V parameters.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.TangentAtVParameter(System.Double,System.Double)">
            <summary>
            Return the V tangent Vector at specified U and V parameters.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.NormalAtParameter(System.Double,System.Double)">
            <summary>
            Return the normal Vector at specified U and V parameters.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.DerivativesAtParameter(System.Double,System.Double)">
            <summary>
            Return the derivatives at input U and V coordinates.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
            <search>
            tangent,normal
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.GaussianCurvatureAtParameter(System.Double,System.Double)">
            <summary>
            Returns the Gaussian curvature at U and V parameters.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
            <search>
            developable
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.PrincipalCurvaturesAtParameter(System.Double,System.Double)">
            <summary>
            Returns the principal curvatures at the U and V parameters.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.PrincipalDirectionsAtParameter(System.Double,System.Double)">
            <summary>
            Returns principal direction vectors at U and V parameters.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.PointAtParameter(System.Double,System.Double)">
            <summary>
            Return the Point at specified U and V parameters.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
            <search>
            surfacepoint
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.PerimeterCurves">
            <summary>
            Return all the boundary Curves of the Surface.
            </summary>
            <returns>  </returns>
            <search>
            edges
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.GetIsoline(System.Int32,System.Double)">
            <summary>
            Create a parameter line curve on the given surface. Create a Curve that represents a u or v parameter line on the Surface. A  parameter line runs in the direction of increasing u or v parameter at a  constant opposite u or v parameter. The resulting Curve will match the  Surface parameterisation and its range will be bounded by the Surface  parameter range. The type of Curve returned will depend on the Surface  type.
            </summary>
            <param name="isoDirection"> If direction == 0, creates a U parameter line, if direction == 1, creates a V parameter line. </param>
            <param name="parameter">  </param>
            <returns>  </returns>
            <search>
            lines
            </search>
            <weights>
            0.4
            </weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.FlipNormalDirection">
            <summary>
            Returns a new Surface with the Normal flipped. Leaves this surface unchanged.
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Join(Autodesk.DesignScript.Geometry.Surface)">
            <summary>
            Combines this Surface and input Surface into a PolySurface
            </summary>
            <param name="otherSurface">  </param>
            <returns>  </returns>
            <search>
            topolysurface
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.Join(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Surface})">
            <summary>
            Combines this Surface and input Surfaces into a PolySurface
            </summary>
            <param name="otherSurfaces">  </param>
            <returns>  </returns>
            <search>
            join multiple,joinmany,joinall,topolysurface
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Surface.ProjectInputOnto(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Projects the input Geometry onto this Surface in the input Vector direction
            </summary>
            <param name="geometryToProject">  </param>
            <param name="projectionDirection">  </param>
            <returns>  </returns>
            <search>
            projecttosurface,projectonto
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Topology.ToString">
            <summary>
            Get a string representation of the Topology
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Topology.Vertices">
            <summary>
            The Vertices of the Topology
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Topology.Edges">
            <summary>
            The Edges of the Topology
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Topology.Faces">
            <summary>
            The Faces of the Topology
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineEdge.ToString">
            <summary>
            Get a string representation of the TSplineEdge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineEdge.AdjacentFaces">
            <summary>
            The TSplineFaces adjacent to this Edge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineEdge.StartVertex">
            <summary>
            The TSplineVertex at which this Edge starts
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineEdge.EndVertex">
            <summary>
            The Vertex at which this Edge ends
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineEdge.UVNFrame">
            <summary>
            Return UVN Frame of the TSEdge (point on the hull, U vector, V vector and normal)
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineEdge.Index">
            <summary>
            Index of the TSEdge
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineEdge.IsBorder">
            <summary>
            Whether the TSEdge is on border
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineEdge.IsManifold">
            <summary>
            Whether the TSEdge is manifold
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineEdge.Info">
            <summary>
            A bunch of TSEdge properties: uvnFrame and index, whether TSEdge is on Border, is Manifold or not
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineFace.ToString">
            <summary>
            Get a string representation of the TSplineFace
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineFace.Edges">
            <summary>
            All of the TSplineEdges around this Face in counterclockwise order
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineFace.Vertices">
            <summary>
            All of the TSplineVertices around this Face in counterclockwise order
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineFace.UVNFrame">
            <summary>
            Return UVN Frame of the TSplineFace (point on the hull, U vector, V vector and normal)
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineFace.Index">
            <summary>
            Index of the TSFace
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineFace.Valence">
            <summary>
            Number of edges or vertices on the TSFace
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineFace.Sides">
            <summary>
            Number of parametric sides on the TSFace
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineFace.Info">
            <summary>
            A bunch of TSplineFace properties: uvnFrame, index, valence and number of sides
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry.ToString">
            <summary>
            Get a string representation of the TSplineInitialSymmetry
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry.ByRadial(System.Int32)">
            <summary>
            Create a radial TSplineInitialSymmetry with given amount of spans per symmetric segment.
            </summary>
            <param name="symmetricFaces">  </param>
            <returns>  </returns>
            <search>
            tspline,symmetry
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry.ByAxial(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create an axial TSplineInitialSymmetry with given symmetry axes.
            </summary>
            <param name="xAxis">  </param>
            <param name="yAxis">  </param>
            <param name="zAxis">  </param>
            <returns>  </returns>
            <search>
            tspline,symmetry
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry.IsRadial">
            <summary>
            Whether newly created t-spline has radial symmetry.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry.XAxis">
            <summary>
            Whether newly created t-spline has symmetry on x axis.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry.YAxis">
            <summary>
            Whether newly created t-spline has symmetry on y axis.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry.ZAxis">
            <summary>
            Whether newly created t-spline has symmetry on z axis.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry.RadialSymmetryFaces">
            <summary>
            Number of faces in symmetry segment. Only available if t-spline has radial symmetry.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineReflection.ToString">
            <summary>
            Get a string representation of the TSplineReflection
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineReflection.ByAxial(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Create axial reflection for t-spline symmetry by given plane.
            </summary>
            <param name="plane"> Plane for t-spline axial reflection. Given in World coordinates </param>
            <returns> T-Spline axial reflection </returns>
            <search>
            tspline,symmetry,reflection,axial
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineReflection.ByRadial(Autodesk.DesignScript.Geometry.Plane,System.Int32,System.Double)">
            <summary>
            Create radial reflection for t-spline symmetry by given plane with given segments count and given angle (in degrees) between each pair of segments.
            </summary>
            <param name="plane"> Plane which normal is axis for t-spline radial reflection. Given in World coordinates </param>
            <param name="segmentsCount"> Number of segments of radial reflection </param>
            <param name="segmentAngle"> Angle between each pair of segments of radial symmetry (in degrees). If is set to 0 it is defined by (360 / segmentsCount) </param>
            <returns> T-Spline radial reflection </returns>
            <search>
            tspline,symmetry,reflection,radial
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineReflection.IsRadial">
            <summary>
            Whether the reflection is radial
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineReflection.SegmentsCount">
            <summary>
            Number of segments of radial reflection
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineReflection.SegmentAngle">
            <summary>
            Angle between each pair of symmetric segments of radial reflection
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineReflection.Plane">
            <summary>
            Plane of the reflection
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineReflection.Axis">
            <summary>
            Axis of the reflection
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.ToString">
            <summary>
            Get a string representation of the TSplineTopology
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.Vertices">
            <summary>
            Vertices contained in this T-Spline Surface.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.Edges">
            <summary>
            Edges contained in the T-Spline Surface.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.Faces">
            <summary>
            Faces contained in the T-Spline Surface.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.RegularVertices">
            <summary>
            Regular Vertices contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.StarPointVertices">
            <summary>
            Star-Point Vertices contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.TPointVertices">
            <summary>
            T-Point Vertices contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.NonManifoldVertices">
            <summary>
            Non-Manifold Vertices contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.BorderVertices">
            <summary>
            Border Vertices contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.InnerVertices">
            <summary>
            Inner Vertices contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.NonManifoldEdges">
            <summary>
            Non-Manifold Edges contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.BorderEdges">
            <summary>
            Border Edges contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.InnerEdges">
            <summary>
            Inner Edges contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.RegularFaces">
            <summary>
            Regular Faces contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.NGonFaces">
            <summary>
            N-Gon Faces contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.BorderFaces">
            <summary>
            Border Faces contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.InnerFaces">
            <summary>
            Inner Faces contained in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.VerticesCount">
            <summary>
            Return number of vertices in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.EdgesCount">
            <summary>
            Return number of edges in the T-Spline Surface
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.FacesCount">
            <summary>
            Return number of faces in the T-Spline Surface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.DecomposedVertices">
            <summary>
            Decomposed Vertices differed by type
            </summary>
            <returns> Set of vertices </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.DecomposedEdges">
            <summary>
            Decomposed Edges differed by type
            </summary>
            <returns> Set of edges </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.DecomposedFaces">
            <summary>
            Decomposed Faces differed by type
            </summary>
            <returns> Set of faces </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.VertexByIndex(System.Int32)">
            <summary>
            Return vertex at given index
            </summary>
            <param name="index"> Index to get vertex at </param>
            <returns> T-Spline Vertex </returns>
            <search>
            tspline,face,byindex
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.EdgeByIndex(System.Int32)">
            <summary>
            Return edge at given index
            </summary>
            <param name="index"> Index to get edge at </param>
            <returns> T-Spline Edge </returns>
            <search>
            tspline,face,byindex
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineTopology.FaceByIndex(System.Int32)">
            <summary>
            Return face at given index
            </summary>
            <param name="index"> Index to get face at </param>
            <returns> T-Spline Face </returns>
            <search>
            tspline,face,byindex
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineUVNFrame.ToString">
            <summary>
            Get a string representation of the TSplineUVNFrame
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineUVNFrame.Position">
            <summary>
            Point of the TopologyItem on the hull
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineUVNFrame.U">
            <summary>
            U vector of the TopologyItem
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineUVNFrame.V">
            <summary>
            V vector of the TopologyItem
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineUVNFrame.Normal">
            <summary>
            Normal of the TopologyItem
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.ToString">
            <summary>
            Get a string representation of the TSplineVertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.AdjacentEdges">
            <summary>
            The TSplineEdges emanating from this Vertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.AdjacentFaces">
            <summary>
            The TSplineFaces adjacent to this Vertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.UVNFrame">
            <summary>
            Return UVN Frame of the TSVertex (point on the hull, U vector, V vector and normal)
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.Index">
            <summary>
            Index of the TSVertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.IsStarPoint">
            <summary>
            Whether the TSVertex is a star point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.IsTPoint">
            <summary>
            Whether the TSVertex is a T-point
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.IsManifold">
            <summary>
            Whether the TSVertex is manifold
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.Valence">
            <summary>
            Number of edges or faces on the TSVertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.FunctionalValence">
            <summary>
            Functional valence of the TSVertex, taking T-points into account
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineVertex.Info">
            <summary>
            A bunch of TSVertex properties: uvnFrame, index, valence and functionalValence, whether TSVertex is a StarPoint, TPoint, Manifold or not
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ToString">
            <summary>
            Get a string representation of the TSplineSurface
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByPlaneOriginNormal(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Spline Plane centered at root Point, with input normal Vector.
            </summary>
            <param name="origin">Plane's root point</param>
            <param name="normal">Plane's normal</param>
            <param name="minCorner">2D point of minimum corner in plane's coordinates</param>
            <param name="maxCorner">2D point of maximum corner in plane's coordinates</param>
            <param name="xSpans">Number of spans in width</param>
            <param name="ySpans">Number of spans in length</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Plane T-Spline Surface</returns>
            <search>tspline,plane,origin,normal</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByPlaneOriginNormalXAxis(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create an "oriented" T-Spline Plane, positioned at Point origin with Vector normal, but with a specific X-axis orientation. 
            This has no impact to splitting, intersect, project, etc. operations, it only specifies the orientation of the input CoordinateSystem.
            </summary>
            <param name="origin">Plane's root point</param>
            <param name="normal">Plane's normal</param>
            <param name="xAxis">Plane's x-axis</param>
            <param name="minCorner">2D point of minimum corner in plane's coordinates</param>
            <param name="maxCorner">2D point of maximum corner in plane's coordinates</param>
            <param name="xSpans">Number of spans in width</param>
            <param name="ySpans">Number of spans in length</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Plane T-Spline Surface</returns>
            <search>tspline,plane,origin,normal,axis</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByPlaneOriginXAxisYAxis(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a Plane by origin and X, Y axis.
            The Z axis is the cross product of the two Vectors.
            </summary>
            <param name="origin">Plane's root point</param>
            <param name="xAxis">Plane's x-axis</param>
            <param name="yAxis">Plane's y-axis</param>
            <param name="minCorner">2D point of minimum corner in plane's coordinates</param>
            <param name="maxCorner">2D point of maximum corner in plane's coordinates</param>
            <param name="xSpans">Number of spans in width</param>
            <param name="ySpans">Number of spans in length</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Plane T-Spline Surface</returns>
            <search>tspline,plane,origin,normal,axis</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByPlaneBestFitThroughPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Fit a T-Spline Plane to the input Points; basically a 3D scatterplot fit.
            </summary>
            <param name="points">A set of points to fit to plane</param>
            <param name="minCorner">2D point of minimum corner in plane's coordinates</param>
            <param name="maxCorner">2D point of maximum corner in plane's coordinates</param>
            <param name="xSpans">Number of spans in width</param>
            <param name="ySpans">Number of spans in length</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Plane T-Spline Surface</returns>
            <search>tspline,plane,fit,bestfit,points</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByPlaneLineAndPoint(Autodesk.DesignScript.Geometry.Line,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create the T-Spline Plane containing the input Line and external Point. Point cannot lie on the Line or anywhere on the axis of the Line.
            </summary>
            <param name="line">Line to build a plane</param>
            <param name="point">Point to build a plane</param>
            <param name="minCorner">2D point of minimum corner in plane's coordinates</param>
            <param name="maxCorner">2D point of maximum corner in plane's coordinates</param>
            <param name="xSpans">Number of spans in width</param>
            <param name="ySpans">Number of spans in length</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Plane T-Spline Surface</returns>
            <search>tspline,plane,line,point</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByPlaneThreePoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Spline Plane containing the three input Points. The Points cannot lie on a straight line
            </summary>
            <param name="p1">First point to build a plane</param>
            <param name="p2">Second point to build a plane</param>
            <param name="p3">Third point to build a plane</param>
            <param name="minCorner">2D point of minimum corner in plane's coordinates</param>
            <param name="maxCorner">2D point of maximum corner in plane's coordinates</param>
            <param name="xSpans">Number of spans in width</param>
            <param name="ySpans">Number of spans in length</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Plane T-Spline Surface</returns>
            <search>tspline,plane,line,point</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByCylinderRadiusHeight(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Construct a T-Spline Cylinder defined by a parent CoordinateSystem, the radius, and the height of the cylinder
            </summary>
            <param name="cs">Cylinder's center and base will be fit at X-Y plane of this coordinate system</param>
            <param name="radius">Radius of a cylinder</param>
            <param name="height">Height of a cylinder</param>
            <param name="radiusSpans">Number of spans in circumference</param>
            <param name="heightSpans">Number of spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Cylindric T-Spline Surface</returns>
            <search>tspline,cylinder,radius,height</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByCylinderPointsRadius(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Construct a T-Splines Cylinder given the bottom and top center point of the Cylinder.
            </summary>
            <param name="startPoint">Start point of a cylinder</param>
            <param name="endPoint">End point of a cylinder</param>
            <param name="radius">Radius of a cylinder</param>
            <param name="radiusSpans">Number of spans in circumference</param>
            <param name="heightSpans">Number of spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Cylindric T-Spline Surface</returns>
            <search>tspline,cylinder,radius,points</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByConePointsRadius(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Splines Cone with given base radius at start Point,
            extending to an apex at end Point.
            </summary>
            <param name="startPoint">Start point of a cone</param>
            <param name="endPoint">End point of a cone</param>
            <param name="radius">Radius of a cone's base</param>
            <param name="radiusSpans">Number of spans in circumference</param>
            <param name="heightSpans">Number of spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Conical T-Spline Surface</returns>
            <search>tspline,cone,radius,points</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByConePointsRadii(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Splines Cone with axis from start Point to end Point, with given radii at start and end. 
            This object does not have an apex, and is in the shape of a frustum.
            </summary>
            <param name="startPoint">Start point of a cone</param>
            <param name="endPoint">End point of a cone</param>
            <param name="startRadius">Start radius of a cone</param>
            <param name="endRadius">End radius of a cone</param>
            <param name="radiusSpans">Number of spans in circumference</param>
            <param name="heightSpans">Number of spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Conical T-Spline Surface</returns>
            <search>tspline,cone,radii,points,truncated</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByConeCoordinateSystemHeightRadius(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Splines Cone with base Point at CoordinateSystem origin, extending in the direction of CoordinateSystem's Z-axis,
             with a  circular base in the CoordinateSystem XY Plane.
            </summary>
            <param name="cs">Cone's center and base will be fit at X-Y plane of this coordinate system</param>
            <param name="height">Height of a cone</param>
            <param name="radius">Radius of a cone</param>
            <param name="radiusSpans">Number of spans in circumference</param>
            <param name="heightSpans">Number of spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Conical T-Spline Surface</returns>
            <search>tspline,cone,radius,cs</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByConeCoordinateSystemHeightRadii(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Splines Cone with base Point at CoordinateSystem origin, extending in the direction of CoordinateSystem Z-axis,
            with its circular base in the CoordinateSystem XY Plane.
            </summary>
            <param name="cs">Cone's center and base will be fit at X-Y plane of this coordinate system</param>
            <param name="height">Height of a cone</param>
            <param name="startRadius">Start radius of a cone</param>
            <param name="endRadius">End radius of a cone</param>
            <param name="radiusSpans">Number of spans in circumference</param>
            <param name="heightSpans">Number of spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Conical T-Spline Surface</returns>
            <search>tspline,cone,radius,cs</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BySphereCenterPointRadius(Autodesk.DesignScript.Geometry.Point,System.Double,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Spline Sphere cetered at the input Point, with given radius.
            </summary>
            <param name="centerPoint">Center of a sphere</param>
            <param name="radius">Radius of a sphere</param>
            <param name="radiusSpans">Number of radial spans</param>
            <param name="heightSpans">Number of spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Spherical T-Spline Surface</returns>
            <search>tspline,sphere,radius</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BySphereFourPoints(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Spline Sphere containing four input Points on the surface.
            </summary>
            <param name="points">Four points in list to build a sphere. Points should not be coplanar</param>
            <param name="radiusSpans">Number of radial spans</param>
            <param name="heightSpans">Number of spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Spherical T-Spline Surface</returns>
            <search>tspline,sphere,fit,bestfit</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BySphereBestFit(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Fit a T-Spline Sphere as close as possible to the input Points.
            </summary>
            <param name="points">Set of points to fit a sphere</param>
            <param name="radiusSpans">Number of radial spans</param>
            <param name="heightSpans">Number of spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Spherical T-Spline Surface</returns>
            <search>tspline,sphere,fit,bestfit</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByTorusCoordinateSystemRadii(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Splines Torus with center at CoordinateSystem origin and given radii
            </summary>
            <param name="cs">Torus will be aligned in the X-Y plane of given coordinate system with center in its origin</param>
            <param name="innerRadius">Inner radius of a torus</param>
            <param name="outerRadius">Outer radius of a torus</param>
            <param name="innerRadiusSpans">Number of inner radial spans</param>
            <param name="outerRadiusSpans">Number of outer radial spans</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Toroidal T-Spline Surface</returns>
            <search>tspline,torus,radii,cs</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByTorusCenterRadii(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Splines Torus with given center and radii, aligned with  default World XY plane
            </summary>
            <param name="center">Center of a torus</param>
            <param name="innerRadius">Inner radius of a torus</param>
            <param name="outerRadius">Outer radius of a torus</param>
            <param name="innerRadiusSpans">Number of inner radial spans</param>
            <param name="outerRadiusSpans">Number of outer radial spans</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Toroidal T-Spline Surface</returns>
            <search>tspline,torus,radii,cs</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByBoxLengths(System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Spline Box centered at WCS origin, with width, length, and height.
            </summary>
            <param name="width">Width of a box</param>
            <param name="length">Length of a box</param>
            <param name="height">Height of a box</param>
            <param name="xSpans">Number spans in width</param>
            <param name="ySpans">Number spans in length</param>
            <param name="zSpans">Number spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>T-Spline Cuboid</returns>
            <search>tspline,box,cuboid,cube,size</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByBoxLengths(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Spline Box centered at input Point, with specified width, length,  and height.
            </summary>
            <param name="origin">Center of a box</param>
            <param name="width">Width of a box</param>
            <param name="length">Length of a box</param>
            <param name="height">Height of a box</param>
            <param name="xSpans">Number spans in width</param>
            <param name="ySpans">Number spans in length</param>
            <param name="zSpans">Number spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>T-Spline Cuboid</returns>
            <search>tspline,box,cuboid,cube,size,center</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByBoxLengths(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Spline Box centered and oriented to input CoordinateSystem, with  specified width, length, and height.
            </summary>
            <param name="cs">Box's X-Y plane will be aligned with correspondi X</param>
            <param name="width">Width of a box</param>
            <param name="length">Length of a box</param>
            <param name="height">Height of a box</param>
            <param name="xSpans">Number spans in width</param>
            <param name="ySpans">Number spans in length</param>
            <param name="zSpans">Number spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>T-Spline Cuboid</returns>
            <search>tspline,box,cuboid,cube,size,cs,coord</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByBoxCorners(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create an T-Spline Box spanning from low Point to high Point.
            </summary>
            <param name="lowPoint">First corner point</param>
            <param name="highPoint">Second corner point</param>
            <param name="xSpans">Number spans in width</param>
            <param name="ySpans">Number spans in length</param>
            <param name="zSpans">Number spans in height</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>T-Spline Cuboid</returns>
            <search>box,cube,byminmax,by corners,by points</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByQuadballCoordinateSystemRadius(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Splines Quadball with center at CoordinateSystem origin  and given radius
            </summary>
            <param name="cs">Local coordinate system</param>
            <param name="radius">Quadball radius</param>
            <param name="spans">Spans number in two dimensions of quadball's sides</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>T-Spline Quadball</returns>
            <search>quadball,tspline,coordinate system,raduis</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByQuadballCenterRadius(Autodesk.DesignScript.Geometry.Point,System.Double,System.Int32,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Splines Quadball with given center and radius, aligned with  default World XY plane
            </summary>
            <param name="center">Quadball center point</param>
            <param name="radius">Quadball radius</param>
            <param name="spans">Spans number in two dimensions of quadball's sides</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>T-Spline Quadball</returns>
            <search>quadball,tsplines,center,point,radius</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByNurbsSurfaceUniform(Autodesk.DesignScript.Geometry.NurbsSurface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Construct T-Spline surface from NURBS Surface using uniform strategy. 
            Input NURBS surface is rebuilt with uniform knots placed at equal parametric or 
            arc length intervals depending on corresponding useArcLen flag, and approximated by 
            degree 3 NURBS surface. Output T-Spline is divided by given span counts 
            in u and v directions.
            </summary>
            <param name="nurbsSurface">Input NURBS surface</param>
            <param name="uSpans">Required spans number in u direction</param>
            <param name="vSpans">Required spans number in v direction</param>
            <param name="uUseArcLen">Whether to use arc length or parametric subdivision in u parametric direction</param>
            <param name="vUseArcLen">Whether to use arc length or parametric subdivision in v parametric direction</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <search>nurbs surface,tspline,uniform</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByNurbsSurfaceCurvature(Autodesk.DesignScript.Geometry.NurbsSurface,System.Boolean)">
            <summary>
            Construct T-Spline surface from NURBS Surface using curvature subdivision strategy.
            Input NURBS surface is rebuilt to degree 3. Output T-Spline has span counts and 
            positions in each direction detected automatically depending on curvature.
            </summary>
            <param name="nurbsSurface">Input NURBS surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <search>nurbs surface,tspline,curvature</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByExtrude(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Construct a T-Spline by extruding a curve along the given vector.
            </summary>
            <param name="curve">Profile curve</param>
            <param name="direction">Extrude vector</param>
            <param name="frontDistance">Extrude distance by vector direction</param>
            <param name="backDistance">Extrude distance againts vector direction</param>
            <param name="frontSpans">Spans number by vector direction. No extrusion by vector direction will be performed if 0 is passed</param>
            <param name="backSpans">Spans number againts vector direction. No extrusion against vector direction will be performed if 0 is passed</param>
            <param name="profileSpans">Spans number in profile direction. Automatically defined if 0 or less</param>
            <param name="uniform">Use uniform or curvature strategy for spans distribution along profile direction</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <search>tspline,extrude,curve</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BySweep(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Construct a T-Spline by sweeping a cross section Curve along a path.
            </summary>
            <param name="profile">Profile curve</param>
            <param name="path">Path curve</param>
            <param name="parallel">Is spans should be parallel in path directio</param>
            <param name="pathSpans">Spans number in path</param>
            <param name="profileSpans">Spans number in profile. Automatically defined if 0 or less</param>
            <param name="pathUniform">Use uniform or curvature strategy for spans distribution along path</param>
            <param name="profileUniform">Use uniform or curvature strategy for spans distribution along profile</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <search>tspline,sweep,curve</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByRevolve(Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,Autodesk.DesignScript.Geometry.TSpline.TSplineInitialSymmetry,System.Boolean)">
            <summary>
            Create a T-Spline Surface by sweeping the profile Curve around the axis formed
            by the axis origin and axis direction, starting at start_angle in degrees, 
            and sweeping by sweep_angle in degrees.
            </summary>
            <param name="profile">Profile curve</param>
            <param name="axisOrigin">Rotation center</param>
            <param name="axisDirection">Rotation axis</param>
            <param name="startAngle">Angle to start rotation from</param>
            <param name="sweepAngle">Angle to finish rotation at</param>
            <param name="radialSpans">Spans number in radius</param>
            <param name="axialSpans">Spans number in height. Automatically defined if 0 or less</param>
            <param name="uniform">Use uniform or curvature strategy for spans distribution</param>
            <param name="symmetry">Symmetry options of a T-Spline Surface</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <search>tspline,revolve,curve</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BuildFromLines(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Int32,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Create a T-Spline Surface from the list of lines.
            Accepts curves, but takes only start and end points from them.
            </summary>
            <param name="lines">Lines to build T-Spline from. Only endpoints are used</param>
            <param name="maxFaceValence">The maximum number of adjusted faces</param>
            <param name="snappingTolerance">The curve-curve intersection tolerance</param>
            <param name="creaseOuterVertices">Whether to crease vertices with valence 2 or not</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <search>tspline,line,build</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BuildPipes(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Double,System.Double,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean)">
            <summary>
            Make a piped surface out of a network of curves or lines.
            A smooth joint is created at each curve intersection.
            Some parameter take single value or list - two valies per curve.
            </summary>
            <param name="curves">A list of curves to create pipes from</param>
            <param name="defaultRadius">Default radius for created pipes</param>
            <param name="snappingTolerance">The tolerance used to detect curve intersections</param>
            <param name="segmentsCount">Numbers of segments in each pipe. Single value or list, two times longer than curves count, are allowed</param>
            <param name="endRotations">Values of end rotations for each pipe (in degrees). Single value or list, two times longer than curves count, are allowed</param>
            <param name="endRadii">Values of end radiuses for each pipe. Single value or list, two times longer than curves count, are allowed</param>
            <param name="endPercentage">Values (0 to 1) from the end of each input curve to start of the pipe mesh. Single value or list, two times longer than curves count, are allowed</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <search>tspline,create,pipe,curve</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BuildPipes(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Double,System.Double,System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean)">
            <summary>
            Make a piped surface out of a network of curves or lines.
            A smooth joint is created at each curve intersection.
            Some parameters take single value or list - one value per curve.
            </summary>
            <param name="curves">A list of curves to create pipes from</param>
            <param name="defaultRadius">Default radius for created pipes</param>
            <param name="snappingTolerance">The tolerance used to detect curve intersections</param>
            <param name="segmentsCount">Numbers of segments for each curve. The size of the list can be the curve count or 1 for replication or 0 for automatic determination.</param>
            <param name="autoHandleStart">If true, the parameters of the handle at the start of each curve are automatically generated, and the custom parameters of rotationsAtStart, radiiAtStart, and positionsAtStart are ignored.</param>
            <param name="autoHandleEnd">If true, the parameters of the handle at the end of each curve are automatically generated, and the custom parameters of rotationsAtEnd, radiiAtEnd, and positionsAtEnd are ignored.</param>
            <param name="startRotations">Custom rotation angle in degrees for each pipe handle at the start of each curve. This parameter is ignored when autoHandleStart is true. The size of the list can be the curve count or 1 for replication.</param>
            <param name="endRotations">Custom rotation angle in degrees for each pipe handle at the end of each curve. This parameter is ignored when autoHandleEnd is true. The size of the list can be the curve count or 1 for replication.</param>
            <param name="startRadii">Custom radius for each pipe handle at the start of each curve. This parameter is ignored when autoHandleStart is true. The size of the list can be the curve count or 1 for replication.</param>
            <param name="endRadii">Custom radius for each pipe handle at the end of each curve. This parameter is ignored when autoHandleEnd is true. The size of the list can be the curve count or 1 for replication.</param>
            <param name="startPositions">Custom position of each pipe handle at the start of each curve in percentage between 0 and 1 along the curve's arc-length. This parameter is ignored when autoHandleStart is true. The size of the list can be the curve count or 1 for replication. The start and end position should not overlap each other on each curve. Ideally, the start position should be close to 0, while the end position close to 1.</param>
            <param name="endPositions">Custom position of each pipe handle at the end of each curve in percentage between 0 and 1 along the curve's arc-length. This parameter is ignored when autoHandleEnd is true. The size of the list can be the curve count or 1 for replication. The start and end position should not overlap each other on each curve. Ideally, the start position should be close to 0, while the end position close to 1.</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <search>tspline,create,pipe,curve</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ByCombinedTSplineSurfaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineSurface})">
            <summary>
            Combine given T-Spline Surfaces into single one.
            Surface can be not connected to each other.
            If at least one surface is in box mode - output surface will be in box mode as well.
            </summary>
            <param name="tSplineSurfaces">T-Spline Surfaces to combine</param>
            <search>tspline,combine</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.Reflections">
            <summary>
            A list of reflections applied to the t-spline
            </summary>
            <search>tspline,symmetry,reflections</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.IsInBoxMode">
            <summary>
            Whether t-spline in box or smooth mode
            </summary>
            <search>tspline,boxmode,smooth</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.IsExtractable">
            <summary>
            Whether t-spline is extractable (Could be displayed in smooth mode)
            </summary>
            <search>tspline,extractable</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.IsClosed">
            <summary>
            Whether t-spline is is open.
            </summary>
            <search>tspline,closed</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.IsWaterTight">
            <summary>
            All closed surfaces are watertight, but some watertight surfaces are open.
            </summary>
            <search>tspline,watertight</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.IsStandard">
            <summary>
            Check all guarantees required for standardization to determine
            if the t-spline is standard
            </summary>
            <search>tspline,standard</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ToBRep(System.Boolean)">
            <summary>
            Convert TSpline surface to Solid or Surface depending on shape
            </summary>
            <param name="matchTopology">Determines should resulted body has the same topology as TSpline has</param>
            <returns>Topology entity (Solid or Surface)</returns>
            <search>tspline,brep,solid,surface</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ToMesh(System.Int32,System.Double)">
            <summary>
            Convert t-spline surface to mesh. Mesh can have both triangles and quads.
            </summary>
            <param name="minSegments">The minimum number of segments in each direction. At least one segment will always be produced. </param>
            <param name="tolerance">Maximum allowed distance from the mesh to the surface. Setting to a zero or a negative value will disable its use</param>
            <returns>Mesh entity</returns>
            <search>tspline,convert,mesh</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.Thicken(System.Double,System.Boolean)">
            <summary>
            Thicken TSpline surface by given distance in the direction of its face normals
            </summary>
            <param name="distance">Distance to thicken</param>
            <param name="softEdges">Determines if resulting edges should be creased</param>
            <returns>Thickened TSpline surface</returns>
            <search>tspline,thicken,normal</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.Thicken(Autodesk.DesignScript.Geometry.Vector,System.Boolean)">
            <summary>
            Thicken TSpline surface by given vector.
            </summary>
            <param name="vector">Direction to thicken</param>
            <param name="softEdges">Determines if resulting edges should be creased</param>
            <returns>Thickened TSpline surface</returns>
            <search>tspline,thicken,vector</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.CreaseEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge})">
            <summary>
            Perform crease on given set of edges
            </summary>
            <param name="edges">Edges to crease</param>
            <returns>TSpline surface with creased edges</returns>
            <search>tspline,edge,crease</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.UncreaseEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge})">
            <summary>
            Perform uncrease on given set of edges
            </summary>
            <param name="edges">Edges to uncrease</param>
            <returns>TSpline surface with uncreased edges</returns>
            <search>tspline,crease,uncrease</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.CreaseVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex})">
            <summary>
            Perform crease on given set of vertices
            </summary>
            <param name="vertices">Vertices to crease</param>
            <returns>TSpline surface with creased edges</returns>
            <search>tspline,edge,crease</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.UncreaseVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex})">
            <summary>
            Perform uncrease on given set of vertices
            </summary>
            <param name="vertices">Vertices to uncrease</param>
            <returns>TSpline surface with uncreased edges</returns>
            <search>tspline,crease,uncrease</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.WeldVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},Autodesk.DesignScript.Geometry.Point,System.Boolean)">
            <summary>
            Weld given list of vertices into a single vertex.
            </summary>
            <param name="vertices">Vertices to weld</param>
            <param name="newPosition">Position of the result vertex grip. Mean position of grips is used if null is passed.</param>
            <param name="keepSubdCreases">Preserve the subd-creases of the input topology</param>
            <returns>TSpline surface with welded vertices</returns>
            <search>tspline,weld,vertex</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.WeldVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Boolean)">
            <summary>
            Weld vertices of first and second groups pairwise.
            First group is considered as vertices of this t-spline.
            Second group vertices can be either from this surface or from any other.
            In case of different t-splines combine is performed before the weld operation
            </summary>
            <param name="firstGroup">First group of vertices to weld</param>
            <param name="secondGroup">Second group of vecrtices to weld</param>
            <param name="keepSubdCreases">Preserve the subd-creases of the input topology</param>
            <returns>TSpline surface with welded vertices</returns>
            <search>tspline,weld,vertex</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.WeldCoincidentVertices(System.Double)">
            <summary>
            Find all coincident vertices and weld them together.
            </summary>
            <param name="tolerance">Tolerance to seek coincidence within</param>
            <returns>TSpline surface without coincident vertices</returns>
            <search>tspline,weld,coincident,vertex</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.UnweldEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge})">
            <summary>
            Unweld all the given edges, It will unweld each vertex on all the edges.
            </summary>
            <param name="edges">A set of edges to unweld</param>
            <returns>TSpline surface with unwelded edges</returns>
            <search>tspline,unweld,edge</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.UnweldVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex})">
            <summary>
            Unweld all the specified vertices. All edges on every vertex will be unwelded.
            </summary>
            <param name="vertices">A set of vertices to unweld</param>
            <returns>TSpline surface with unwelded vertices</returns>
            <search>tspline,unweld,vertex</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.CreateMatch(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Int32,System.Boolean,System.Boolean,System.Int32,System.Double,System.Boolean,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Create match with T-Spline and closed loop of curves
            </summary>
            <param name="tsEdges">Closed T-Spline edge loop to create match with</param>
            <param name="curves">Closed curve loop to create match with</param>
            <param name="continuity">Geometry continuity to attempt to match: G0, G1, G2</param>
            <param name="useArclength">Wether to use arcLength alignment while building match</param>
            <param name="useRefinement">If true, extra control points will be added to the T-spline to match the surfaces within a given tole­rance.</param>
            <param name="numRefinementSteps">Max number of refinement steps. Ignored if useRefinement is set to false</param>
            <param name="refinementTolerance">Tolerance to hit. Ignored if useRefinement is set to false</param>
            <param name="usePropagation">Whether to use propagation while building match</param>
            <param name="widthOfPropagation">Determines how much of the surface is affected by the match. Ignored if usePropagation is set to false</param>
            <param name="tangentScale">Tangent scale. If continuity is not set to G1 is ignored</param>
            <param name="curvParamWeight">Carvature param weight. If continuity is not set to G2 is ignored</param>
            <param name="flipSourceTargetAlignment">Whether to reverse the alignment direction</param>
            <returns>T-Spline surface positioned between given T-Spline border edges and curve loop</returns>
            <search>tspline,match,curve</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.CreateMatch(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Int32,System.Boolean,System.Boolean,System.Int32,System.Double,System.Boolean,System.Double,System.Double,System.Boolean)">
            <summary>
            Create match with T-Spline and closed loop of curves
            </summary>
            <param name="tsEdges">Closed T-Spline edge loop to create match with</param>
            <param name="curves">Closed curve loop to create match with</param>
            <param name="continuity">Geometry continuity to attempt to match: G0, G1, G2</param>
            <param name="useArclength">Wether to use arcLength alignment while building match</param>
            <param name="useRefinement">If true, extra control points will be added to the T-spline to match the surfaces within a given tole­rance.</param>
            <param name="numRefinementSteps">Max number of refinement steps. Ignored if useRefinement is set to false</param>
            <param name="refinementTolerance">Tolerance to hit. Ignored if useRefinement is set to false</param>
            <param name="usePropagation">Whether to use propagation while building match</param>
            <param name="widthOfPropagation">Determines how much of the surface is affected by the match. Ignored if usePropagation is set to false</param>
            <param name="scale">Tangent scale for G1 or curvature scale for G2. Ignored if continuity is G0.</param>
            <param name="flipSourceTargetAlignment">Whether to reverse the alignment direction</param>
            <returns>T-Spline surface positioned between given T-Spline border edges and curve loop</returns>
            <search>tspline,match,curve</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.CreateMatch(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Int32,System.Boolean,System.Boolean,System.Int32,System.Double,System.Boolean,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Create match with T-Spline and closed loop of BRep edges. First,
            edge loop is converted to curve loop and then match is performed
            </summary>
            <param name="tsEdges">Closed T-Spline edge loop to create match with</param>
            <param name="brepEdges">Closed BRep edge loop to create match with</param>
            <param name="continuity">Geometry continuity to attempt to match: G0, G1, G2</param>
            <param name="useArclength">Wether to use arcLength alignment while building match</param>
            <param name="useRefinement">If true, extra control points will be added to the T-spline to match the surfaces within a given tole­rance.</param>
            <param name="numRefinementSteps">Max number of refinement steps. Ignored if useRefinement is set to false</param>
            <param name="refinementTolerance">Tolerance to hit. Ignored if useRefinement is set to false</param>
            <param name="usePropagation">Whether to use propagation while building match</param>
            <param name="widthOfPropagation">Determines how much of the surface is affected by the match. Ignored if usePropagation is set to false</param>
            <param name="tangentScale">Tangent scale. If continuity is not set to G1 is ignored</param>
            <param name="curvParamWeight">Carvature param weight. If continuity is not set to G2 is ignored</param>
            <param name="flipSourceTargetAlignment">Whether to reverse the alignment direction</param>
            <returns>T-Spline surface positioned between given T-Spline border edges and BRep edge loop</returns>
            <search>tspline,match,brep</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.CreateMatch(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Edge},System.Int32,System.Boolean,System.Boolean,System.Int32,System.Double,System.Boolean,System.Double,System.Double,System.Boolean)">
            <summary>
            Create match with T-Spline and closed loop of BRep edges. First,
            edge loop is converted to curve loop and then match is performed
            </summary>
            <param name="tsEdges">Closed T-Spline edge loop to create match with</param>
            <param name="brepEdges">Closed BRep edge loop to create match with</param>
            <param name="continuity">Geometry continuity to attempt to match: G0, G1, G2</param>
            <param name="useArclength">Wether to use arcLength alignment while building match</param>
            <param name="useRefinement">If true, extra control points will be added to the T-spline to match the surfaces within a given tole­rance.</param>
            <param name="numRefinementSteps">Max number of refinement steps. Ignored if useRefinement is set to false</param>
            <param name="refinementTolerance">Tolerance to hit. Ignored if useRefinement is set to false</param>
            <param name="usePropagation">Whether to use propagation while building match</param>
            <param name="widthOfPropagation">Determines how much of the surface is affected by the match. Ignored if usePropagation is set to false</param>
            <param name="scale">Tangent scale for G1 or curvature scale for G2. Ignored if continuity is G0.</param>
            <param name="flipSourceTargetAlignment">Whether to reverse the alignment direction</param>
            <returns>T-Spline surface positioned between given T-Spline border edges and BRep edge loop</returns>
            <search>tspline,match,brep</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.DeleteVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex})">
            <summary>
            Remove vertices from t-spline topology
            </summary>
            <param name="vertices">Vertex or vertices to delete</param>
            <returns>TSpline surface with deleted vertices</returns>
            <search>tspline,vertex,vertices,delete</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.DeleteEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge})">
            <summary>
            Remove edges from t-spline topology
            </summary>
            <param name="edges">Edge or edges to delete</param>
            <returns>TSpline surface with deleted edges</returns>
            <search>tspline,edge,delete</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.DeleteFaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineFace})">
            <summary>
            Remove faces from t-spline topology
            </summary>
            <param name="faces">Face or faces to delete</param>
            <returns>TSpline surface with deleted faces</returns>
            <search>tspline,face,delete</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.EnableSmoothMode(System.Boolean)">
            <summary>
            Change visualization style of t-spline.
            Smooth visualization if true passed, box otherwise.
            </summary>
            <param name="enable">Enable or disable smooth visualization</param>
            <returns>t-spline with chosen visualization style</returns>
            <search>tspline,visulization,mode,smooth,box</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ExtrudeEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},Autodesk.DesignScript.Geometry.Vector,System.Int32)">
            <summary>
            Perform a single or multiple symmetric extrudes on a set of edges and move new edges by given vector.
            </summary>
            <param name="edges">A set of edges to extrude</param>
            <param name="direction">Vector to move new edges</param>
            <param name="spans">Amount of new segments that will be created</param>
            <returns>t-spline with extruded edges</returns>
            <search>tspline,extrude,direction,vector,edge</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ExtrudeFaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineFace},Autodesk.DesignScript.Geometry.Vector,System.Int32)">
            <summary>
            Perform a single or multiple symmetric extrudes on a set of faces and move new edges by given vector.
            </summary>
            <param name="faces">A set of faces to extrude</param>
            <param name="direction">Vector to move new faces</param>
            <param name="spans">Amount of new segments that will be created</param>
            <returns>t-spline with extruded faces</returns>
            <search>tspline,extrude,direction,vector,face</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ExtrudeEdgesAlongCurve(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},Autodesk.DesignScript.Geometry.Curve,System.Int32)">
            <summary>
            Perform a single or multiple symmetric extrudes on a set of edges and move new edges by the path of given curve.
            </summary>
            <param name="edges">A set of edges to extrude</param>
            <param name="curve">The path, new edges will follow</param>
            <param name="spans">Amount of new segments that will be created</param>
            <returns>t-spline with extruded edges</returns>
            <search>tspline,extrude,curve,edge</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ExtrudeFacesAlongCurve(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineFace},Autodesk.DesignScript.Geometry.Curve,System.Int32)">
            <summary>
            Perform a single or multiple symmetric extrudes on a set of faces and move new edges by the path of given curve.
            </summary>
            <param name="faces">A set of faces to extrude</param>
            <param name="curve">The path, new faces will follow</param>
            <param name="spans">Amount of new segments that will be created</param>
            <returns>t-spline with extruded faces</returns>
            <search>tspline,extrude,curve,face</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BevelEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Double,System.Int32,System.Boolean,System.Double)">
            <summary>
            Replace given edges with a channel of faces.
            </summary>
            <param name="edges">A set of edges to replace of</param>
            <param name="percentage">The bevel will be contained to this percentage (between 0 and 1) of the faces neighboring the selected edge.</param>
            <param name="segments">The number of rows of faces in the channel</param>
            <param name="keepOnFace">Whether to create new faces on the box mode faces of the old model.</param>
            <param name="roundness">Determines how round or flat the bevel is. Takes values from 0 to 1.</param>
            <returns>T-Spline with beveled edges</returns>
            <search>tspline,bevel,edge</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.SlideEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Double,System.Double)">
            <summary>
            Slide given edges along neighboring edges
            </summary>
            <param name="edges">A set of edges to slide</param>
            <param name="amount">Edges will be slide this far (as a percentage between 0 and 1) toward the neighboring face.</param>
            <param name="roundness">Determines how round or flat the bevel is. Takes values from 0 to 1.</param>
            <returns>T-Spline with slided edges</returns>
            <search>tspline,slide,edge</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.MergeEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Boolean)">
            <summary>
            Merge given edges. Edges in each groups should create equal counts
            of continuous sets. Edges from the first group are considered as
            edges of this surface. Edges from the second group can be either
            from this surface or any other surface. In case of different
            surfaces, combine is performed before merge
            </summary>
            <param name="firstGroup">First set of edges to merge</param>
            <param name="secondGroup">Second set of edges to merge</param>
            <param name="insertCreases">The surface will match the original surfaces more closely.</param>
            <returns>T-Spline surface with merged edges</returns>
            <search>tspline,merge,edge</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BridgeFacesToFaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineFace},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineFace},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Build bridge between two sets of faces. Items of the first group
            are considered as children of this surface. Items of the second
            group can be either children of this surface or belong to
            a different surface. Topology within each group might not be adjacent,
            but should create the same count of distinct loops.
            </summary>
            <param name="firstGroup">First group of faces to bridge</param>
            <param name="secondGroup">Second group of faces to bridge</param>
            <param name="followCurves">Bridging curves for each distinct topology
            loop (straight lines are used if empty list is passed, if one curve
            passed it is replicated if more than one input loop is detected)</param>
            <param name="frameRotations">Number of full rotations around
            the normal of the frames along the bridging curve for each distinct
            loop of topology (0 is used if empty list is passed, if one value
            passed it is replicated if more than one input loop is detected)</param>
            <param name="spansCounts">Number os segments along the bridge for
            each distinct topology loop. Span count for each group should be
            greater than corresponding number of rotations (1 is used if empty
            list is passed, if one value passed it is replicated if more than
            one input loop is detected)</param>
            <param name="cleanBorderBridges">Delete bridges between border edges.</param>
            <param name="keepSubdCreases">Preserve the subd-creases of the
            input topology</param>
            <param name="firstAlignVertices">List of orient vertices for 
            each distinct topology loop from the first group (The number of vertices should 
            be the same as detected input loops or list can be empty)</param>
            <param name="secondAlignVertices">List of orient vertices for 
            each distinct topology loop from the second group (The number of vertices should 
            be the same as detected input loops or list can be empty)</param>
            <param name="flipAlignmentFlags">List of flags indicating whether 
            to flip alignment of bridge for corresponding topology loop. 
            (false is set if empty list is passed, if one value passed it is replicated 
            for each detected input loop)</param>
            <returns>TSpline surface with topology, connected by bridge</returns>
            <search>tspline,bridge,face</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BridgeFacesToEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineFace},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Build bridge between set of faces and set of edges. Items of the
            first group are considered as children of this surface. Items of
            the second group can be either children of this surface or belong
            to a different surface. Topology within each group might not be
            adjacent, but should create the same count of distinct loops.
            </summary>
            <param name="firstGroup">First group of faces to bridge</param>
            <param name="secondGroup">Second group of edges to bridge</param>
            <param name="followCurves">Bridging curves for each distinct topology
            loop (straight lines are used if empty list is passed, if one curve
            passed it is replicated if more than one input loop is detected)</param>
            <param name="frameRotations">Number of full rotations around
            the normal of the frames along the bridging curve for each distinct
            loop of topology (0 is used if empty list is passed, if one value
            passed it is replicated if more than one input loop is detected)</param>
            <param name="spansCounts">Number os segments along the bridge for
            each distinct topology loop. Span count for each group should be
            greater than corresponding number of rotations (1 is used if empty
            list is passed, if one value passed it is replicated if more than
            one input loop is detected)</param>
            <param name="cleanBorderBridges">Delete bridges between border edges.</param>
            <param name="keepSubdCreases">Preserve the subd-creases of the
            input topology</param>
            <param name="firstAlignVertices">List of orient vertices for 
            each distinct topology loop from the first group (The number of vertices should 
            be the same as detected input loops or list can be empty)</param>
            <param name="secondAlignVertices">List of orient vertices for 
            each distinct topology loop from the second group (The number of vertices should 
            be the same as detected input loops or list can be empty)</param>
            <param name="flipAlignmentFlags">List of flags indicating whether 
            to flip alignment of bridge for corresponding topology loop. 
            (false is set if empty list is passed, if one value passed it is replicated 
            for each detected input loop)</param>
            <returns>TSpline surface with topology, connected by bridge</returns>
            <search>tspline,bridge,face,edge</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BridgeEdgesToFaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineFace},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Build bridge between set of edges and set of faces. Items of the
            first group are considered as children of this surface. Items of
            the second group can be either children of this surface or belong
            to a different surface. Topology within each group might not be
            adjacent, but should create the same count of distinct loops.
            </summary>
            <param name="firstGroup">First group of edges to bridge</param>
            <param name="secondGroup">Second group of faces to bridge</param>
            <param name="followCurves">Bridging curves for each distinct topology
            loop (straight lines are used if empty list is passed, if one curve
            passed it is replicated if more than one input loop is detected)</param>
            <param name="frameRotations">Number of full rotations around
            the normal of the frames along the bridging curve for each distinct
            loop of topology (0 is used if empty list is passed, if one value
            passed it is replicated if more than one input loop is detected)</param>
            <param name="spansCounts">Number os segments along the bridge for
            each distinct topology loop. Span count for each group should be
            greater than corresponding number of rotations (1 is used if empty
            list is passed, if one value passed it is replicated if more than
            one input loop is detected)</param>
            <param name="cleanBorderBridges">Delete bridges between border edges.</param>
            <param name="keepSubdCreases">Preserve the subd-creases of the
            input topology</param>
            <param name="firstAlignVertices">List of orient vertices for 
            each distinct topology loop from the first group (The number of vertices should 
            be the same as detected input loops or list can be empty)</param>
            <param name="secondAlignVertices">List of orient vertices for 
            each distinct topology loop from the second group (The number of vertices should 
            be the same as detected input loops or list can be empty)</param>
            <param name="flipAlignmentFlags">List of flags indicating whether 
            to flip alignment of bridge for corresponding topology loop. 
            (false is set if empty list is passed, if one value passed it is replicated 
            for each detected input loop)</param>
            <returns>TSpline surface with topology, connected by bridge</returns>
            <search>tspline,bridge,face,edge</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.BridgeEdgesToEdges(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Curve},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Build bridge between two sets of edges. Items of the
            first group are considered as children of this surface. Items of
            the second group can either be children of this surface or belong
            to a different surface. Topology within each group might not be
            adjacent but should create the same count of distinct loops.
            </summary>
            <param name="firstGroup">First group of edges to bridge</param>
            <param name="secondGroup">Second group of edges to bridge</param>
            <param name="followCurves">Bridging curves for each distinct topology
            loop (straight lines are used if empty list is passed, if one curve
            passed it is replicated if more than one input loop is detected)</param>
            <param name="frameRotations">Number of full rotations around
            the normal of the frames along the bridging curve for each distinct
            loop of topology (0 is used if empty list is passed, if one value
            passed it is replicated if more than one input loop is detected)</param>
            <param name="spansCounts">Number os segments along the bridge for
            each distinct topology loop. Span count for each group should be
            greater than corresponding number of rotations (1 is used if empty
            list is passed, if one value passed it is replicated if more than
            one input loop is detected)</param>
            <param name="cleanBorderBridges">Delete bridges between border edges.</param>
            <param name="keepSubdCreases">Preserve the subd-creases of the
            input topology</param>
            <param name="firstAlignVertices">List of orient vertices for 
            each distinct topology loop from the first group (The number of vertices should 
            be the same as detected input loops or list can be empty)</param>
            <param name="secondAlignVertices">List of orient vertices for 
            each distinct topology loop from the second group (The number of vertices should 
            be the same as detected input loops or list can be empty)</param>
            <param name="flipAlignmentFlags">List of flags indicating whether 
            to flip alignment of bridge for corresponding topology loop. 
            (false is set if empty list is passed, if one value passed it is replicated 
            for each detected input loop)</param>
            <returns>TSpline surface with topology, connected by bridge</returns>
            <search>tspline,bridge,edge</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.FillHole(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineEdge},System.Int32,System.Boolean)">
            <summary>
            Fill holes in a T-spline
            </summary>
            <param name="edges">Set of edges with hole inside. Edges must be border.</param>
            <param name="fillMethod">Method for filling hole: 0 - tesselation, 1 - ngons, 2 - collapse, 3 - collapse and weld </param>
            <param name="keepSubdCreases">Preserve the subd-creases of the input topology</param>
            <search>tspline,edge,fill,hole</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.AddReflections(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineReflection},System.Boolean,System.Double)">
            <summary>
            Append given list of reflections to the t-spline
            </summary>
            <param name="reflections">List of reflections</param>
            <param name="weldSymmetricPortions">Whether to weld symmetric portions</param>
            <param name="weldTolerance">Tolerance to weld symmetric portions</param>
            <returns>T-Spline surface with new reflections appended</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.RemoveReflections">
            <summary>
            Remove all reflections from the t-spline
            </summary>
            <returns>T-Spline surface with given reflections removed</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.CompressIndexes">
            <summary>
            Compress all topology on the surface and make the indices contiguous. This function maintains the relative order of the indices.
            </summary>
            <search>tspline,index,compress</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.SubdivideFaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineFace},System.Boolean)">
            <summary>
            Subdivide given faces into four faces each in exact or simple mode
            depending on given flag value.
            </summary>
            <param name="faces">List of faces to subdivide</param>
            <param name="exact">If false, resulting surface can be flatter and sharper than the original,
            if true, it keeps its original shape</param>
            <returns>T-Spline with given faces subdivided</returns>
            <search>tspline,subdivide,faces,simple</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.Interpolate(System.Boolean)">
            <summary>
            Forward interpolation moves control points to their parametric locations on the surface. Reverse interpolation generates a point on the surface for each original control point and moves this control point to its corresponding surface point.
            </summary>
            <param name="reverse">Interpolation direction: forward if false, reverse otherwise</param>
            <returns>Interpolated T-Spline in given direction</returns>
            <search>tspline,interpolate,reverse</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.PullVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry},System.Boolean)">
            <summary>
            Take every given t-spline vertex and pull it towards the closest point
            on the target geometries. If surfacePoints is true then surface point
            of the vertex is pulled, control grip otherwise
            </summary>
            <param name="vertices">List of vertices to pull</param>
            <param name="geometries">List of geometries to pull to</param>
            <param name="surfacePoints">Flag, indicating whether to use surface or control points of vertices</param>
            <returns>T-Spline Surface with pulled vertices</returns>
            <search>tspline,pull,vertices</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.FlattenVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex})">
            <summary>
            Flatten control points of given vertices to a single plane.
            This command requires an input of at least four vertices
            </summary>
            <param name="vertices">List of vertices</param>
            <returns>T-SPline Surface with flattened vertices</returns>
            <search>tspline,flatten,vertices</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.FlattenVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Flatten control points of given vertices to a single plane
            which will be parallel with the given plane.
            This command requires an input of at least four vertices
            </summary>
            <param name="vertices">List of vertices</param>
            <param name="parallelPlane">Plane to fit vertices parallel to</param>
            <returns>T-SPline Surface with flattened vertices</returns>
            <search>tspline,flatten,vertices,fitparallel</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.DuplicateFaces(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineFace})">
            <summary>
            Copy chosen faces to the new surface. New surface has no symmetry
            </summary>
            <param name="faces">Faces to duplicate</param>
            <returns>T-Spline Surface with chosen faces only</returns>
            <search>tspline,face,duplicate</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.FlipNormals">
            <summary>
            Inverts the normals of all faces in the mesh.
            </summary>
            <returns>T-Spline Surface with inverted normals</returns>
            <search>tspline,flip,normal,vector</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.MakeUniform">
            <summary>
            Set all knot intervals uniform.
            </summary>
            <returns>T-Spline Surface with uniform internals</returns>
            <search>tspline,knot,uniform</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.Standardize">
            <summary>
            Standardize the t-spline to the point where exact insertion
            can be performed. If it cannot be standardized, exception is thrown
            with the reason
            </summary>
            <returns>Standardized T-Spline Surface</returns>
            <search>tspline,standardize</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.MoveVertices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineVertex},Autodesk.DesignScript.Geometry.Vector,System.Boolean)">
            <summary>
            Move given vertices along given vector
            </summary>
            <param name="vertices">Vertex list to be moved</param>
            <param name="vector">Direction to move along</param>
            <param name="onSurface">Flag, indicating whether to use surface or control points of vertices</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ExportToTSS(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.TSpline.TSplineSurface},System.String)">
            <summary>
            Export given set of T-Spline surfaces to T-Spline Scene file
            </summary>
            <param name="tSplineSurfaces">Set of a T-Spline surfaces to export</param>
            <param name="filePath">Path to file to save to</param>
            <returns>File path where T-Spline set is being saved</returns>
            <search>tspline,export,save,tss,path</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ExportToTSM(Autodesk.DesignScript.Geometry.TSpline.TSplineSurface,System.String)">
            <summary>
            Export given T-Spline surface to T-Spline Mesh file
            </summary>
            <param name="tSplineSurface">T-Spline surface to export</param>
            <param name="filePath">Path to file to save to</param>
            <returns>File path where T-Spline Surface is being saved</returns>
            <search>tspline,export,save,tsm,path</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.SerializeAsTSM(Autodesk.DesignScript.Geometry.TSpline.TSplineSurface)">
            <summary>
            Write T-Spline Surface into a string in T-Spline Mesh format.
            </summary>
            <param name="tSplineSurface">T-Spline surface to serialize</param>
            <returns>String where T-Spline Surface is being serialized</returns>
            <search>tspline,import,serialize</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.DeserializeFromTSM(System.String,System.Boolean)">
            Newly loaded T-Spline surface in list
            <search>tspline,import,serialize</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ImportFromTSM(System.String,System.Boolean)">
            <summary>
            Load a T-Spline Surface from given T-Spline Mesh file
            </summary>
            <param name="filePath">Path to file to load from</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Newly loaded T-Spline surface in list</returns>
            <search>tspline,import,load,tsm,path</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ImportFromTSM(System.IO.FileInfo,System.Boolean)">
            <summary>
            Load a T-Spline Surface from given T-Spline Mesh file
            </summary>
            <param name="file">File to load from</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>Newly loaded T-Spline surface in list</returns>
            <search>tspline,import,load,tsm,file</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ImportFromTSS(System.String,System.Boolean)">
            <summary>
            Load set of a T-Spline surfaces from given T-Spline Scene file
            </summary>
            <param name="filePath">Path to file to load from</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>A set of newly loaded T-Spline Surfaces</returns>
            <search>tspline,import,load,tss,path</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.TSpline.TSplineSurface.ImportFromTSS(System.IO.FileInfo,System.Boolean)">
            <summary>
            Load set of a T-Spline surfaces from given T-Spline Scene file
            </summary>
            <param name="file">File to load from</param>
            <param name="inSmoothMode">Show T-Spline Surface in box or smooth visualization</param>
            <returns>A set of newly loaded T-Spline Surfaces</returns>
            <search>tspline,import,load,tss,file</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.UV.ToString">
            <summary>
            Get a string representation of the UV
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.UV.Equals(System.Object)">
            <summary>
            Compare two UV's
            </summary>
            <param name="other">The other UV</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.UV.GetHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.UV.ByCoordinates(System.Double,System.Double)">
            <summary>
            Create a UV from two doubles.
            </summary>
            <param name="u">  </param>
            <param name="v">  </param>
            <returns>  </returns>
            <search>
            surfaceparam,parameters,uv,uvs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.UV.U">
            <summary>
            Get the U component of a UV
            </summary>
            <search>
            uv,uvs
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.UV.V">
            <summary>
            Get the V component of a V
            </summary>
            <search>
            uv,uvs
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ToString">
            <summary>
            Get a string representation of the Vector
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Equals(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <summary>
            Compare two Vector's
            </summary>
            <param name="other">The other Vector</param>
            <returns>Whether the two objects are equal</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ComputeHashCode">
            <summary>
            Get a hashcode for this type
            </summary>
            <returns>A unique hashcode for this object</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ByCoordinates(System.Double,System.Double,System.Double)">
            <summary>
            Form a Vector by 3 Euclidean coordinates
            </summary>
            <param name="x"> X coordinate </param>
            <param name="y"> Y coordinate </param>
            <param name="z"> Z coordinate </param>
            <returns>  </returns>
            <search>
            vector,xyz,vector3
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ByCoordinates(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Form a Vector by 3 Euclidean coordinates and normalize the Vector
            </summary>
            <param name="x"> X coordinate </param>
            <param name="y"> Y coordinate </param>
            <param name="z"> Z coordinate </param>
            <param name="normalized"> Whether to normalize the result Vector or not </param>
            <returns>  </returns>
            <search>
            normalize,vector3
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ByTwoPoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Form a Vector by two end points.  The result is a vector from the start to the end point.
            </summary>
            <param name="start">  </param>
            <param name="end">  </param>
            <returns>  </returns>
            <search>
            vector2
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.XAxis">
            <summary>
            Get the canonical X axis Vector (1,0,0)
            </summary>
            <returns>  </returns>
            <search>
            x,basis,right
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.YAxis">
            <summary>
            Get the canonical Y axis Vector (0,1,0)
            </summary>
            <returns>  </returns>
            <search>
            y,basis,forward
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.ZAxis">
            <summary>
            Get the canonical Z axis Vector (0,0,1)
            </summary>
            <returns>  </returns>
            <search>
            z,basis,up
            </search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vector.X">
            <summary>
            Get the X component of a Vector
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vector.Y">
            <summary>
            Get the Y component of a Vector
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vector.Z">
            <summary>
            Get the Z component of a Vector
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vector.Length">
            <summary>
            Get the length of the vector - otherwise known as the Euclidean norm
            </summary>
            <search>
            magnitude
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.AsPoint">
            <summary>
            Get the Point with the same X, Y, and Z component
            </summary>
            <returns>  </returns>
            <search>
            convertopoint,vector2point
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Reverse">
            <summary>
            Get the reverse of the vector.  Essentially this negates the X, Y, and Z components of the Vector.
            </summary>
            <returns>  </returns>
            <search>
            backwards,vectorflip
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Add(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Add a vector
            </summary>
            <param name="vectorToAdd">  </param>
            <returns>  </returns>
            <search>
            sum,sumvectors
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Subtract(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Subtract a vector
            </summary>
            <param name="vectorToSubtract">  </param>
            <returns>  </returns>
            <search>
            substact,diff vectors,between
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Cross(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Form the cross product of two vectors
            </summary>
            <param name="cross">  </param>
            <returns>  </returns>
            <search>
            perpendicular
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Dot(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Form the dot product of two vectors
            </summary>
            <param name="vec">  </param>
            <returns>  </returns>
            <search>
            project,projectvector,vectorproject,onto
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Normalized">
            <summary>
            Get the normalized version of a vector
            </summary>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.IsParallel(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Determine whether two vectors are parallel or not
            </summary>
            <param name="other">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.IsAlmostEqualTo(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Determine whether two vectors ae almost equal
            </summary>
            <param name="other">  </param>
            <returns>  </returns>
            <search>
            vector approximate,near,same
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transform this Vector by input CoordinateSystem matrix.
            </summary>
            <param name="cs">  </param>
            <returns>  </returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Rotate(Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Rotates a Vector around an axis by a specified number of degrees
            </summary>
            <param name="axis">  </param>
            <param name="degrees">  </param>
            <returns>  </returns>
            <search>
            around,axis,degrees
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Rotate(Autodesk.DesignScript.Geometry.Plane,System.Double)">
            <summary>
            Rotates a vector around the Plane origin and normal by a specified  degree
            </summary>
            <param name="plane">  </param>
            <param name="degrees">  </param>
            <returns>  </returns>
            <search>
            around,normal,degrees
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Scale(System.Double)">
            <summary>
            Scale Vector uniformly around the origin
            </summary>
            <param name="scale_factor">  </param>
            <returns>  </returns>
            <search>
            resize,size
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Scale Vector non-uniformly around the origin
            </summary>
            <param name="xScaleFactor">  </param>
            <param name="yScaleFactor">  </param>
            <param name="zScaleFactor">  </param>
            <returns>  </returns>
            <search>
            resize,size,scaleNU,scalenu
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.AngleWithVector(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Returns the angle between the two Vectors, in the range [0, 180] degrees.
            </summary>
            <param name="otherVector">  </param>
            <returns>  </returns>
            <search>
            rotation angle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.AngleBetween(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Returns the angle between the two Vectors, in the range [0, 180] degrees.
            </summary>
            <param name="otherVector">  </param>
            <returns>  </returns>
            <search>
            rotation angle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis(Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Returns the angle between the two Vectors, in the range [0, 360] degrees. It uses axis of rotation to determine the direction of the angle.
            </summary>
            <param name="otherVector">  </param>
            <param name="rotationAxis">  </param>
            <returns>  </returns>
            <search>
            rotation angle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vector.AngleBetween(Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Returns the angle between the two Vectors, in the range [0, 360] degrees. It uses axis of rotation to determine the direction of the angle.
            </summary>
            <param name="otherVector">  </param>
            <param name="rotationAxis">  </param>
            <returns>  </returns>
            <search>
            rotation angle
            </search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Vertex.ToString">
            <summary>
            Get a string representation of the Vertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vertex.PointGeometry">
            <summary>
            The Point where this Vertex is located
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vertex.AdjacentEdges">
            <summary>
            The Edges emanating from this Vertex
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Vertex.AdjacentFaces">
            <summary>
            The Faces adjacent to this Vertex
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ToString">
            <summary>
            Get a string representation of the CoordinateSystem
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Identity">
            <summary>
            Creates a CoordinateSystem as the World Coordinate System: origin at 
            0, 0, 0; x axis at 1, 0, 0; y axis at 0, 1, 0; z axis at 0, 0, 1
            </summary>
            <search>zero,wcs</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByMatrix(System.Double[])">
            <summary>
            Deprecated -- DO NOT USE
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(System.Double,System.Double)">
            <summary>
            Create a CoordinateSystem with origin at X and Y locations, with
            X and Y Axes set as WCS X and Y Axes. Z defaults to 0.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(System.Double,System.Double,System.Double)">
            <summary>
            Create a CoordinateSystem with origin at X, Y, and Z locations, with
            X and Y Axes set as WCS X and Y Axes.
            </summary>
            <search>translate</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create a CoordinateSystem with origin at input Point, with X and Y Axes
            set as WCS X and Y Axes.
            </summary>
            <search>bypoint</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByPlane(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Create a CoordinateSystem with origin equal to input Plane origin, and 
            X and Y axes lying in the Plane, aligned with Plane X and Y axes.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOriginVectors(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create a CoordinateSystem at the origin with X and Y axis. 
            Input Vectors are normalized before creating the CoordinateSystem.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByOriginVectors(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Create a CoordinateSystem at the origin with X and Y axis, with Z
            axis ignored completely. Input Vectors are normalized before creating 
            the CoordinateSystem. 
            </summary>
            <search>byxy,coord by2axis</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ByCylindricalCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
            <summary>
            Creates a CoordinateSystem at the specified cylindrical coordinate parameters with respect to the specified coordinate system
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.BySphericalCoordinates(Autodesk.DesignScript.Geometry.CoordinateSystem,System.Double,System.Double,System.Double)">
            <summary>
            Creates a CoordinateSystem at the specified spherical coordinate parameters with respect to the specified coordinate system
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.IsSingular">
            <summary>
            Determine whether it is possible to get the Inverse of this CoordinateSystem
            </summary>
            <search>inverse,testinverse</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.IsScaledOrtho">
            <summary>
            Tests if the scaling orthogonal, i.e. does it have a shear component.
            </summary>
            <search>uniform</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.IsUniscaledOrtho">
            <summary>
            Tests if the scaling orthogonal and are all the vectors normalized.
            </summary>
            <search>uniform,normal,samelength</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.Determinant">
            <summary>
            Obtain the Determinant of this CoordinateSystem
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.Origin">
            <summary>
            Creates a Point representing the CoordinateSystem origin. 
            </summary>
            <search>position,center</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.XAxis">
            <summary>
            Returns X Axis of CoordinateSystem.
            </summary>
            <search>left,right</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.YAxis">
            <summary>
            Returns Y Axis of CoordinateSystem.
            </summary>
            <search>forward,back</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.ZAxis">
            <summary>
            Returns Z Axis of CoordinateSystem.
            </summary>
            <search>up,down</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.XScaleFactor">
            <summary>
            Returns the X Axis scaling of the CoordinateSystem: the length of the X Axis vector.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.YScaleFactor">
            <summary>
            Returns the Y Axis scaling of the CoordinateSystem: the length of the Y Axis vector.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.ZScaleFactor">
            <summary>
            Returns the Z Axis scaling of the CoordinateSystem: the length of the Z Axis vector.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.XYPlane">
            <summary>
            Returns the Plane the X and Y axes lie in, with root at the origin.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.YZPlane">
            <summary>
            Returns the Plane the Y and Z axes lie in, with root at the origin.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.CoordinateSystem.ZXPlane">
            <summary>
            Returns the Plane the Z and X axes lie in, with root at the origin.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Inverse">
            <summary>
            Get the inverse of this CoordinateSystem - applying this CoordinateSystem to a piece of Geometry reverses the original.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Mirror(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Mirror the object across the input Plane
            </summary>
            <search>reflect,flip over</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.PostMultiplyBy(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Apply the argument CoordinateSystem after this one - Result = this * other
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.PreMultiplyBy(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Apply the argument CoordinateSystem before this one - Result = other * this
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.ScaleFactor">
            <summary>
            Returns a Vector containing the X, Y, and Z scale factors
            </summary>
            <search>get size,scalecomponents,scalevector</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.IsEqualTo(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Determine if two CoordinateSystems are equal
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Translate(System.Double,System.Double,System.Double)">
            <summary>
            Translates any given CoordinateSystem by the given displacements in the x, y,
            and z directions defined in WCS respectively. 
            </summary>
            <param name="xTranslation">Displacement along X-axis.</param>
            <param name="yTranslation">Displacement along Y-axis.</param>
            <param name="zTranslation">Displacement along Z-axis.</param>
            <returns>Transformed CoordinateSystem.</returns>
            <search>move,by amount</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Translate(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Translate the object in the direction and magnitude of input Vector.
            </summary>
            <search>move,along vector</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Translate(Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Translates any CoordinateSystem type by the given distance in the given 
            direction.
            </summary>
            <param name="direction">Displacement direction.</param>
            <param name="distance">Displacement distance along given direction.</param>
            <returns>Transformed CoordinateSystem.</returns>
            <search>move,along vector,distance</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transform the object by the input CoordinateSystem matrix.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transforms this CoordinateSystem from source CoordinateSystem to a new 
            context CoordinateSystem.
            </summary>
            <param name="fromCoordinateSystem"></param>
            <param name="contextCoordinateSystem"></param>
            <returns>Transformed CoordinateSystem.</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Rotate(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Rotates an object around an origin and an axis by a specified 
            degree
            </summary>
            <search>around,axis,degrees</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Rotate(Autodesk.DesignScript.Geometry.Plane,System.Double)">
            <summary>
            Rotates an object around the origin and normal of the given Plane by a specified
            degree
            </summary>
            /// <search>around,normal,degrees</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale(System.Double)">
            <summary>
            Scale uniformly around the origin
            </summary>
            <search>resize,size</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Scale non-uniformly around the origin
            </summary>
            <search>resize,size,scaleNU,scalenu</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double,System.Double)">
            <summary>
            Scale non-uniformly around a given Plane
            </summary>
            <search>resize,size,scaleNU,scalenu</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale uniformly around a given point, using 
            </summary>
            <search>resize,from,to,size</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale1D(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale in one dimension by base and 2 pick points.  The scaling axis is defined by the line between base and pick0.
            </summary>
            <search>resize,size,from,to,scale1d,1d, lines</search>
            <weights>0.5,0.5,0.5,0.5,0.5,0.5,0.4</weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.CoordinateSystem.Scale2D(Autodesk.DesignScript.Geometry.Plane,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale in two dimension by base and 2 pick points  The two pick points are projected onto the base plane in order to determine the 2d scale factors
            </summary>
            <search>resize,size,from,to,scale2d,2d</search>
        </member>
        <member name="F:Autodesk.DesignScript.Geometry.DesignScriptEntity.constructorThreadId">
            <summary>
            stores the managed thread id of thread which called this constructor.
            Used to alert users to potential multi threaded issues.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Geometry.DesignScriptEntity.disposedWrongThread">
            <summary>
            This is used for testing only.
            </summary>
        </member>
        <member name="F:Autodesk.DesignScript.Geometry.DesignScriptEntity.Tags">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.Dispose">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.DisposeDisplayable">
            <summary>
            This method is called when the displayable is no more needed.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.GetHashCode">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.Equals(System.Object)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.DesignScriptEntity.Tessellate(Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <notranslation>true</notranslation>
        </member>
        <member name="F:Autodesk.DesignScript.Geometry.Geometry.mGeometryContructors">
            <summary>
            A map between IGeometryEntity types and Geometry constructors using host.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.RegisterHostType(System.Type,System.Func{Autodesk.DesignScript.Interfaces.IGeometryEntity,System.Boolean,Autodesk.DesignScript.Geometry.Geometry})">
            <summary>
            Geometry Type registration mechanism. 
            </summary>
            <param name="hostType">Type of IGeometryEntity derived interfaces.</param>
            <param name="contructor">A delegate to construct Geometry.</param>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.FromObject(System.Int64)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Translate(System.Double,System.Double,System.Double)">
            <summary>
            Translates any given geometry by the given displacements in the x, y,
            and z directions defined in WCS respectively. 
            </summary>
            <param name="xTranslation">Displacement along X-axis.</param>
            <param name="yTranslation">Displacement along Y-axis.</param>
            <param name="zTranslation">Displacement along Z-axis.</param>
            <returns>Transformed Geometry.</returns>
            <search>move,by amount</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Translate(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Translate geometry in the given direction by the vector length
            </summary>
            <search>move,along vector</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Translate(Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Translates any geometry type by the given distance in the given 
            direction.
            </summary>
            <param name="direction">Displacement direction.</param>
            <param name="distance">Displacement distance along given direction.</param>
            <returns>Transformed Geometry.</returns>
            <search>move,along vector,distance</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transforms geometry by the given CoordinateSystem's transform
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transforms this geometry from source CoordinateSystem to a new 
            context CoordinateSystem.
            </summary>
            <param name="fromCoordinateSystem"></param>
            <param name="contextCoordinateSystem"></param>
            <returns>Transformed Geometry.</returns>
            <search>from,to</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Rotate(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Rotates an object around an origin and an axis by a specified 
            degree
            </summary>
            <search>around,axis,degrees</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Rotate(Autodesk.DesignScript.Geometry.Plane,System.Double)">
            <summary>
            Rotates an object around the Plane origin and normal by a specified 
            degree
            </summary>
            <search>around,normal,degrees</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Mirror(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Mirror the object across the input Plane
            </summary>
            <search>reflect,flip over</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale(System.Double)">
            <summary>
            Scale uniformly around the origin
            </summary>
            <search>resize,size</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Scale non-uniformly around the origin
            </summary>
            <search>resize,size,scalenu,scaleNU</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale(Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double,System.Double)">
            <summary>
            Scale non-uniformly around a given Plane
            </summary>
            <search>resize,size,scalenu,scaleNU</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale uniformly around a given point, using two pick points as scalars
            </summary>
            <search>resize,from,to,size</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale1D(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale in one dimension by base and 2 pick points.  The scaling axis is defined by the line between base and pick0.
            </summary>
            <search>resize,size,from,to,scale1d,1d,lines</search>
            <weights>0.5,0.5,0.5,0.5,0.5,0.5,0.3</weights>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Scale2D(Autodesk.DesignScript.Geometry.Plane,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Scale in two dimension by base and 2 pick points  The two pick points are projected onto the base plane in order to determine the 2d scale factors
            </summary>
            <search>resize,size,from,to,scale2d,2d</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.DistanceTo(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Obtain the distance from this Geometry to another
            </summary>
            <param name="other">The other Geometry</param>
            <returns>The distance</returns>
            <search>between,length,from,to</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ClosestPointTo(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Obtain the closest Point on this Geometry to the other
            </summary>
            <search>NearestPoint, GetClosestPoint</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.DoesIntersect(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Determine if another Geometry object intersects with this one
            </summary>
            <search>intersects?,check intersection,test intersection</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Intersect(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Get the intersection Geometry for this object and another
            </summary>
            <search>get overlap</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.IntersectAll(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry})">
            <summary>
            Get the intersection of Geometry for this object and a collection of other Geometries. Finds common geometry of all participants.
            </summary>
            <search>get overlap,multi intersect,intersect many</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Split(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Split this Geometry using another Geometry as a cutting "tool"
            </summary>
            <search>cut</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Trim(Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Removes elements of the entity closest to the pick point
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Explode">
            <summary>
            Separates compound or non-separated elements into their component
            parts.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.IsAlmostEqualTo(Autodesk.DesignScript.Geometry.Geometry)">
            <summary>
            Check if the two objects have the same representational geometry or numerical values
            </summary>
            <search>approximate,near,close</search>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Geometry.BoundingBox">
            <summary>
            Get the BoundingBox containing the given piece of Geometry
            </summary>
            <search>bounds</search>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ToSolidDef">
            <summary>
            Convert geometry to Solid Def json
            </summary>
            <returns>Json formatted string</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.Approximate">
            <summary>
            Convert internal structure of geometry from analytics to splines
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ImportFromSAT(System.IO.FileInfo)">
            <summary>
            Imports a SAT file and returns an array of imported geometries
            </summary>
            <param name="file">File object representing the SAT file</param>
            <returns>List of imported geometries</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ImportFromSAT(System.String)">
            <summary>
            Imports a SAT file and returns an array of imported geometries
            </summary>
            <param name="filePath">Path to the SAT file</param>
            <returns>List of imported geometries</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.FromSolidDef(System.String)">
            <summary>
            Imports a JSON string and returns an array of imported geometries
            </summary>
            <param name="solidDefJson">Json string containg solid def formated geometry</param>
            <returns>List of converted geometries</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ExportToSAT(System.String)">
            <summary>
            Exports the specified geometry to the given SAT file path
            </summary>
            <param name="filePath">The name of the file to export the geometry to</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ExportToSAT(System.String,System.Double)">
            <summary>
            Exports the specified geometry to the given SAT file path
            </summary>
            <param name="filePath">The name of the file to export the geometry to</param>
            <param name="unitsMM">The units to use</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ExportToSAT(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry},System.String)">
            <summary>
            Exports a list of specified geometry to the given SAT file path
            </summary>
            <param name="geometry"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ExportToSAT(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry},System.String,System.Double)">
            <summary>
            Exports a list of specified geometry to the given SAT file path
            </summary>
            <param name="geometry"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.FromNativePointer(System.IntPtr)">
            <summary>
            This method is meant for internal use only.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.ToNativePointer(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry})">
            <summary>
            This method is meant for internal use only.
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.SerializeAsSAB">
            <summary>
            Serializes the specified geometry into Standard ACIS Binary(SAB) format and returns serialized binary stream data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.SerializeAsSAB(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Geometry})">
            <summary>
            Serializes a list of specified geometry into Standard ACIS Binary(SAB) format and returns serialized binary stream data
            </summary>
            <param name="geometry"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.DeserializeFromSAB(System.Byte[])">
            <summary>
            Deserializes the specified Standard ACIS Binary(SAB) format data and returns a list of geometry
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.Geometry.UpdateDisplay">
            <notranslation>true</notranslation>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Geometry.ContextCoordinateSystem">
            <summary>
            Get the context/reference coordinate system that was used to create this geometry.
            </summary>
        </member>
        <member name="T:Autodesk.DesignScript.Geometry.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ArrayFormatException">
            <summary>
              Looks up a localized string similar to Given data : \&quot;{0}\&quot; is not an array.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ConversionException">
            <summary>
              Looks up a localized string similar to Conversion of backing object to Geometry failed. Could not export SAT..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.CurveNotClosed">
            <summary>
              Looks up a localized string similar to the curve is not closed.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.CurveNotPlanar">
            <summary>
              Looks up a localized string similar to the curve is not planar.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.DistanceNotEqual">
            <summary>
              Looks up a localized string similar to the distance between {0} and {1} are not equal.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.DoesNotExist">
            <summary>
              Looks up a localized string similar to {0} doesn&apos;t exist.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.EqualGeometry">
            <summary>
              Looks up a localized string similar to the {0} and the {1} are equal or at the same location.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.FileNotFound">
            <summary>
              Looks up a localized string similar to Failed to locate File: {0}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.GreaterThan">
            <summary>
              Looks up a localized string similar to the {0} is greater than {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidArguments">
            <summary>
              Looks up a localized string similar to the {0} is invalid.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidDataFormatException">
            <summary>
              Looks up a localized string similar to Invalid data : {0} for parameter {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidInput">
            <summary>
              Looks up a localized string similar to the input {0} is invalid for {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidIntersect">
            <summary>
              Looks up a localized string similar to {0} cannot intersect with {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidOperationException">
            <summary>
              Looks up a localized string similar to Can&apos;t locate Geometry constructor for type: {0}..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.InvalidProjection">
            <summary>
              Looks up a localized string similar to {0} cannot project on {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsParallel">
            <summary>
              Looks up a localized string similar to the {0} and {1} are parallel for {2}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZero">
            <summary>
              Looks up a localized string similar to the {0} is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroAngle">
            <summary>
              Looks up a localized string similar to the {0} angle is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroDistance">
            <summary>
              Looks up a localized string similar to the distance between the {0} and the {1} is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroLength">
            <summary>
              Looks up a localized string similar to the length is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroRadius">
            <summary>
              Looks up a localized string similar to the radius is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.IsZeroVector">
            <summary>
              Looks up a localized string similar to the input {0}  is zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.LessThan">
            <summary>
              Looks up a localized string similar to the {0} is less than {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.LessThanZero">
            <summary>
              Looks up a localized string similar to the {0} is less than zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.LowerModelerExtentExceeded">
            <summary>
              Looks up a localized string similar to Your inputs lie outside of the allowable modeling range, consider  choosing the {0} setting with a modeling range between {1} and {2} from the &quot;Settings =&gt; Geometry Working Range&quot; dialog.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ModelerExtentsExceeded">
            <summary>
              Looks up a localized string similar to You have exceeded the allowable modeling extents, consider choosing smaller values.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NoImplementationException">
            <summary>
              Looks up a localized string similar to No implementation of IGeometryFactory found.  Make sure ProtoGeometry.config is properly configured..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NoParameterNameException">
            <summary>
              Looks up a localized string similar to WriteObject without parameter name is not supported for {0}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NotEqual">
            <summary>
              Looks up a localized string similar to the {0} is not equal to {2}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NotSupported">
            <summary>
              Looks up a localized string similar to {0} is not supported for {1}.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NullArgument">
            <summary>
              Looks up a localized string similar to the {0} is null.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.NullIDesignScriptEntityException">
            <summary>
              Looks up a localized string similar to DesignScriptEntity can&apos;t be created with null IDesignScriptEntity.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.OperationFailed">
            <summary>
              Looks up a localized string similar to {0} operation failed.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.OwnerExistingException">
            <summary>
              Looks up a localized string similar to Input host already has owner assigned to it. DesignScriptEntity can&apos;t be created with it..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ParameterFormatException">
            <summary>
              Looks up a localized string similar to The data for parameter : {0} is not in {1} format..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.ParameterizedCollectionException">
            <summary>
              Looks up a localized string similar to Given data : \&quot;{0}\&quot; is not an array of name value pairs.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.PointsCoincident">
            <summary>
              Looks up a localized string similar to {0} are coincident.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.PointsColinear">
            <summary>
              Looks up a localized string similar to {0} are colinear.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.SATFileExportedException">
            <summary>
              Looks up a localized string similar to SAT file exported to an unexpected location..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.SessionMismatchException">
            <summary>
              Looks up a localized string similar to Session mismatch for begin and end execution call..
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.Sheared">
            <summary>
              Looks up a localized string similar to {0} is sheared.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.UpperModelerExtentExceeded">
            <summary>
              Looks up a localized string similar to Your inputs lie outside of the allowable modeling range, consider choosing the {0} setting with a modeling range between {1} and {2} from the &quot;Settings =&gt; Geometry Working Range&quot; dialog.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.Properties.Resources.VertexColorNotSupported">
            <summary>
              Looks up a localized string similar to Can&apos;t set vertex color to SubDivisionMesh with SubDivisionLevel more than zero.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometrySettings.RootModulePath">
            <summary>
            Provides path of the root script in execution.
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometrySettings.GeometryXmlProperties">
            <summary>
            Provides information about whether to dump XML property for ToString() method
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometrySettings.GeometryFactoryFilePath">
            <summary>
            Provides information about where to load the geometry factory file
            </summary>
        </member>
        <member name="P:Autodesk.DesignScript.Geometry.GeometrySettings.PersistenceManagerFilePath">
            <summary>
            Provides information about where to load the persistence manager file
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometrySettings.Reset">
            <summary>
            Resets the geometry settings to default
            </summary>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.LessThanOrEquals(System.Double,System.Double,System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.Equals(System.Double,System.Double,System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.EqualsTo(System.Double,System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.LessThanOrEqualTo(System.Double,System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.AreCoincident(Autodesk.DesignScript.Interfaces.IPointEntity[])">
            <notranslation>true</notranslation>
        </member>
        <member name="F:Autodesk.DesignScript.Geometry.GeometryExtension.PI">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.DegreesToRadians(System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.RadiansToDegrees(System.Double)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ToPointEntityArray(Autodesk.DesignScript.Geometry.Point[][],System.Boolean)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ToPointArray(Autodesk.DesignScript.Interfaces.IPointEntity[][],System.Boolean)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ToEntity(Autodesk.DesignScript.Geometry.DesignScriptEntity)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.GetCurveEntity(Autodesk.DesignScript.Geometry.Curve,System.Boolean)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ForEach``1(``0[],System.Action{``0})">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ForEach``1(``0[][],System.Action{``0})">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ConvertAll``2(``0[],System.Converter{``0,``1})">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.ClipParamRange(System.Double@)">
            <summary>
            Clips parameter between 0 and 1
            </summary>
            <param name="param">Input parameter</param>
            <returns>Boolean to indicate if parameter was clipped</returns>
        </member>
        <member name="M:Autodesk.DesignScript.Geometry.GeometryExtension.LocateFile(System.String)">
            <summary>
            Locates given file from pre-defined search path set to this system
            </summary>
            <param name="fileName">File name to locate.</param>
            <returns>Full path for the given file.</returns>
            <notranslation>true</notranslation>
        </member>
    </members>
</doc>
