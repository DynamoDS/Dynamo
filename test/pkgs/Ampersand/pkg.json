{"license":"","file_hash":null,"name":"Ampersand","version":"2019.5.20","description":"Dynamo v 2.0.2 / Nodes for lists management and geometry especially for applications to architectural paneling and 2D polycurve analysis.","group":"","keywords":["azimuth","boundingbox","concave","convexhull","hull","list","offset","panel","polycurve","vector"],"dependencies":[],"contents":"[&] Arc.CenterPoint - Works with a list of arcs.  Returns the center point for an arc or null if the item is not an arc., [&] Categories.ListAll - List of all Revit Categories, [&] Curves.Shatter - Split a collection of curves into smaller curves at each interesection, [&] Geometry.SplitByTools - Split one piece of geometry (other than a polysurface) by multiple tools, [&] List.ChopByLengths - Chop a list into sublists given a series of sizes.  Remaining list items after the sublists have been filled are discarded.  Remaining sublist capacity after list items are exhausted is ignored., [&] List.ContainsList - Check if a 2-dimensional list contains a 1-dimensional list., [&] List.GroupByContainer - Sort a set of objects into groups using their location points by their inclusion in a set of given list of containers.  Containters must be solids, closed polygons, polycurves.  Objects and points not included are returned separately., [&] List.GroupByKey - Sort the items of a list into groups (sublists) based on the corresponding items of a reference list.  Example: The list {A,B,C,D,E} with the reference list {1,anyWord,4,anyWord,1} will be grouped into lists as { {A,E}, {B,D}, {C} } and the unique references will be {1, anyWord, 4}., [&] List.PickByKey - Take items from a list whose keys match a given set of choose values. Items and their corresponding keys are output in the order in which they are requested by the set of choose values.  As needed, items may appear multiple times in the output list or not at all.  Choose values that do not correspond to a key value produce a null selection, and all values not matched to a key are given as a third output., [&] List.PickByKeyUnique - Pick items from a list using a set of keys values.  Items and their key values will either be picked or excluded, and they can only be picked once.  Pick keys that do not match any of the list key values will be listed as keysNotMatched., [&] List.SortAzimuthally - Sort objects azimuthally (like sorting numbers around a clock face) in a plane.  Objects are ordered about the origin of the plane according the position of their representative point (\"locations\" input).  Ordering proceeds from the positive x-axis of the plane in a counter-clockwise direction about the plane normal vector., [&] List.SplitOddEven - No description provided, [&] List.SublistByRange - Select a sublist by specifying start and end indices, inclusive. If the TO index is smaller than the FROM index, the selection will wrap around to the beginning of the list., [&] List.WrappingCouplets - Divide a list into overlapping couplets, connecting the first to the last items., [&] Math.ArcAngleFromChordLength - No description provided, [&] Math.ArcLengthFromAngle - No description provided, [&] Math.ArcLengthFromChordLength - No description provided, [&] Math.PartialSums - Find the sum of a set of numbers and a list of the partial sums., [&] Misc.Airplane - Airplane, [&] Misc.Bicycle - Bicycle, [&] Misc.Car - Car, [&] Misc.ChainOfCircles - Find a series of tangent circles with the given radii whose centers lie along a curve., [&] Misc.Pentagram - Closed polycurve in the shape of a 5-pointed star., [&] PointGrid.ToDiagrid - Create a diagrid point patterns from a rectangular grid of points.  Change the switchSet Boolean value to swith which set of checker-board points is selected., [&] PointGrid.ToQuadSets - Create groups of 4 items describing the \"cells\" of a rectangular grid of data.  In the case of a grid of points, the output will be the set of points describing the corners of 4-pointed panels., [&] PointGrid.ToTriSets - Construct three-point sets describing panels from a rectangular grid of points.  May use a grid of points in the form of a diagrid.  Boolean values \"swapDiagDirection\" and \"alternateDiagsByRow\" control how triangles are formed from the points.  Boolean value \"wrap\" , [&] PointList.IsCollinear - Whether a set of points is collinear., [&] PointList.SortAzimuthally - Sort points azimuthally (like sorting numbers around a clock face) in a plane.  Points are ordered about the origin of the plane, proceeding from the positive x-axis of the plane in a counter-clockwise direction about the plane normal vector., [&] PointList.VisualizePanels - No description provided, [&] PolyCurve.ByCurves - Create polycurves from an unordered list of curves., [&] PolyCurve.ClosedLoopsFromCurves - Find closed polycurves that enclose the \"white spaces\" from a network of planar, interesecting curves., [&] PolyCurve.ConvexHull - Find the convex hull for a planar polycurve, [&] PolyCurve.IsClockwise - For closed polycurves with reasonably straight segments, return true if the curve is clockwise relative to the plane, false otherwise., [&] PolyCurve.MinBoundingBox - For a planar PolyCurve, find the minimum rectangular bounding box in its plane., [&] PolyCurve.Vertices - Find the points at vertices for a closed polycurve and indicates whether the vertices are concave (-1), straight (0), or convex (+1)., [&] PolyCurve.WindingVector - Find the winding vector of the direction of the vertices of a closed PolyCurve. Find the normal of a plane by best fit through points, then sum the outside angles for each vertex to see whether the winding angle aligns with or is the negative of the assumed plane normal vector. Return the plane normal vector aligned with the winding direction of the PolyCurve's vertices., [&] PointList.VariablyOffsetTriangle - For a triangle vertices ABC, specify the points {A, B, C}, and the offset distance in the order {AB, BC, CA}.  Use (+) for inside offset, (-) for outside offset.  Output is a new set of points {A', B', C'}., [&] PolySurface.Split - Split a polysurface and return organized polysurfaces., [&] PolySurface.SplitByTools - Split a single polysurface with multiple tools., [&] String.ByListAsDS - Convert a list of strings to a single string in DS format that would produce the same string, [&] String.ExtractNumbers - Extract a number or a list of numbers from a string, [&] Surface.TrimMultiple - Trim a single surface with a list of closed curves and pick points (to designate the region to be subtracted), [&] Vector.ByAltitudeAzimuth - Create a unit vector by its altitude and azimuth.  The positive Y axis is taken as north and the positive Z axis is taken as up.\r\n\r\nAltitudinal convention is:\r\n90° = straight up (+Z axis),\r\n0° = horizontal,\r\n-90° = straight down (-Z axis).\r\n\r\nAzimuthal convention is:\r\n0° = North (+Y axis),\r\n90° = East (+X axis),\r\n180° = South (-Y axis),\r\n270° = West (-X axis)., [&] Vector.ProjectToPlane - Find the projection of the vector to the specified plane.","engine_version":"2.0.2.6833","engine":"dynamo","engine_metadata":"","site_url":"","repository_url":"","contains_binaries":false,"node_libraries":[]}