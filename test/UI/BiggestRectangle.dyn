{
  "Uuid": "8f8d1bd5-bfc1-4252-bf6d-ec2311e03b6c",
  "IsCustomNode": false,
  "Description": "test_backwardsrecursive",
  "Name": "BiggestRectangle_001",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "Surface": {
        "Key": "Autodesk.DesignScript.Geometry.Surface",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.Curve": {
        "Key": "Autodesk.DesignScript.Geometry.Curve",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.DesignScript.Geometry.Curve": {
        "Key": "Autodesk.DesignScript.Geometry.Curve",
        "Value": "ProtoGeometry.dll"
      },
      "CoordinateSystem": {
        "Key": "Autodesk.DesignScript.Geometry.CoordinateSystem",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.Geometry": {
        "Key": "Autodesk.DesignScript.Geometry.Geometry",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.DesignScript.Geometry.Geometry": {
        "Key": "Autodesk.DesignScript.Geometry.Geometry",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.BoundingBox": {
        "Key": "Autodesk.DesignScript.Geometry.BoundingBox",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.DesignScript.Geometry.BoundingBox": {
        "Key": "Autodesk.DesignScript.Geometry.BoundingBox",
        "Value": "ProtoGeometry.dll"
      },
      "Rectangle": {
        "Key": "Autodesk.DesignScript.Geometry.Rectangle",
        "Value": "ProtoGeometry.dll"
      },
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "03eeec9b10e040b584b068abf1d7d6fd",
      "Name": "KavelEntry_001_input",
      "Type": "number",
      "Value": "8",
      "MaximumValue": 17.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "0780277211c6450c984031d1a7d92251",
      "Name": "KavelEntry_002_input",
      "Type": "number",
      "Value": "16",
      "MaximumValue": 17.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "07b1a16747484e0d86f6092c2d7c57a9",
      "Name": "seed",
      "Type": "number",
      "Value": "16",
      "MaximumValue": 40.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "ef79868d0a684e16ab331b74fbd2963d",
      "Name": "AantalAansluitingen",
      "Type": "number",
      "Value": "4",
      "MaximumValue": 14.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "cd5fbf551dcf4b3d865eb8103ec6e191",
      "Name": "CellDepth",
      "Type": "number",
      "Value": "30000",
      "MaximumValue": 30000.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "323f5745a1bd4a1790a535f23291af5f",
      "Name": "CellWidth",
      "Type": "number",
      "Value": "16000",
      "MaximumValue": 16000.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "69b3ade986924478ba3f3d6cd2bdd178",
      "Name": "OffsetCell_X",
      "Type": "number",
      "Value": "0.5",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "NumberType": "Double",
      "Description": "A slider that produces numeric values.",
      "SelectedIndex": 0
    },
    {
      "Id": "e954dc79a0844581a77d6ec912931448",
      "Name": "OffsetCell_Y",
      "Type": "number",
      "Value": "0.5",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "NumberType": "Double",
      "Description": "A slider that produces numeric values.",
      "SelectedIndex": 0
    },
    {
      "Id": "b2def619db2c46e3a02daae5bf2418b3",
      "Name": "ThresholdNumber",
      "Type": "number",
      "Value": "0.9",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "NumberType": "Double",
      "Description": "A slider that produces numeric values.",
      "SelectedIndex": 0
    },
    {
      "Id": "766c2e72985d4ea9b7d074cec4952f2c",
      "Name": "Offset_Cells",
      "Type": "number",
      "Value": "2500",
      "MaximumValue": 6000.0,
      "MinimumValue": 100.0,
      "StepValue": 100.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "3d053fd8b20f47c29fae4955acde512d",
      "Name": "Treshold_BiggestRectangle",
      "Type": "number",
      "Value": "2",
      "MaximumValue": 25.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "4826d1077deb4d45b4c696b1904f1990",
      "Name": "UitgeefbaarTerrein",
      "Type": "float",
      "InitialValue": "91392.378236297",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "70ca96c298124d0ba25724e9cd217f35",
      "Name": "ControleM2",
      "Type": "float",
      "InitialValue": "91392378236.297",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "b933859834fb41bd9ce853a399281970",
      "Name": "Test_BR_001",
      "Type": "float",
      "InitialValue": "1370",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "ad0f4931b5da426f939811cc0036e169",
      "Name": "Test_BR_002",
      "Type": "float",
      "InitialValue": "1675",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "378ba2ffaf7b4c48ade5a7368cbd326f",
      "Name": "Testpunt_001",
      "Type": "integer",
      "InitialValue": "12",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "e8bb3a166a1d473ab783b220357fb24a",
      "Name": "Testpunt_002",
      "Type": "integer",
      "InitialValue": "6",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "c53474c86a4e4c058991917b35e81894",
      "Name": "Testpunt_003",
      "Type": "integer",
      "InitialValue": "4",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "ade213c6f09d4f6f885d2bca19f4f4d6",
      "Name": "Testpunt_004",
      "Type": "integer",
      "InitialValue": "6",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "363405c413e14ca38b21fdedb37616d5",
      "Name": "Testpunt_005",
      "Type": "integer",
      "InitialValue": "6",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "844e76c43f3e49ec9735193a91fdd086",
      "Name": "Testpunt_006",
      "Type": "integer",
      "InitialValue": "6",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "9458800e80a74ca0abb3334621d90299",
      "Name": "Testpunt_007",
      "Type": "integer",
      "InitialValue": "18",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "d351df11-e357-43b5-b442-502cc80f825a-00055686",
        "d351df11-e357-43b5-b442-502cc80f825a-000557e7",
        "d351df11-e357-43b5-b442-502cc80f825a-000557e8",
        "d351df11-e357-43b5-b442-502cc80f825a-000557e9",
        "d351df11-e357-43b5-b442-502cc80f825a-000557ea",
        "d351df11-e357-43b5-b442-502cc80f825a-000557eb",
        "d351df11-e357-43b5-b442-502cc80f825a-000557ec"
      ],
      "Id": "38be98d274f648e0a448502c7a4e435d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "85bc84ed8b25409c917c8fdae3c247c4",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "237fe14ed8854ce982c914b85de4da7c",
      "Inputs": [
        {
          "Id": "95d5e955f0dd430496dfb6d07075a055",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b173a7c5de0e461293fbb6727dc4673d",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "bddd129853ae49b9bed403afdf1cf6e7",
      "Inputs": [
        {
          "Id": "290a662b3bda4148be11d818e816080d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eec5a600f4b547d381b37b60398d4fef",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be914a5a7483412c91bf91523f663fe3",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "455ad1820ad140aeb719a76b18f580e7",
      "Inputs": [
        {
          "Id": "e0928d3873914c3f96032c74473154ed",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "409ff4d108b7401f997c955122418562",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Polygon.ByPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "8358c34c1b1a436bb4079ee71b221917",
      "Inputs": [
        {
          "Id": "6a758da51c164bf18d9a281313f680e0",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bb86f1892594da5a1604b15a2da017f",
          "Name": "Polygon",
          "Description": "Polygon",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a Polygon Curve by connecting Points.\n\nPolygon.ByPoints (points: Point[]): Polygon"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "f34a944aee3b44b1baeb4ec678adcbb9",
      "Inputs": [
        {
          "Id": "181a3e32acc5418182caa11dcf9c493c",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "188f8bd48e2c403bb9f93af9bce1c230",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "627fb4e0c3f3436ea8e7a11eb7207edc",
      "Inputs": [
        {
          "Id": "fd083403943846f88719a3c07ea187c4",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44c2cb59ab2148cc963f96888a180e0b",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "7666ab36935f4547bc6058603fb3a62b",
      "Inputs": [
        {
          "Id": "b6014ac26ebf4f9eb29105550e4a89a3",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08929a67a1044d01904093d5bfa8c7b0",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b5b4b92f803413a84abc21d0bb466c4",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "d351df11-e357-43b5-b442-502cc80f825a-00055686",
        "d351df11-e357-43b5-b442-502cc80f825a-000557e7",
        "d351df11-e357-43b5-b442-502cc80f825a-000557e8",
        "d351df11-e357-43b5-b442-502cc80f825a-000557e9",
        "d351df11-e357-43b5-b442-502cc80f825a-000557ea",
        "d351df11-e357-43b5-b442-502cc80f825a-000557eb",
        "d351df11-e357-43b5-b442-502cc80f825a-000557ec",
        "1a6f2273-7bad-401f-854e-42bdb7ea778b-00055d53",
        "1a6f2273-7bad-401f-854e-42bdb7ea778b-00055d86",
        "1a6f2273-7bad-401f-854e-42bdb7ea778b-00055dc9",
        "0504ec0f-7ff0-4b15-9f16-12b343fcc99e-00056492",
        "0504ec0f-7ff0-4b15-9f16-12b343fcc99e-000564f2",
        "0504ec0f-7ff0-4b15-9f16-12b343fcc99e-00056553",
        "0504ec0f-7ff0-4b15-9f16-12b343fcc99e-0005657b",
        "0504ec0f-7ff0-4b15-9f16-12b343fcc99e-000565d3",
        "0504ec0f-7ff0-4b15-9f16-12b343fcc99e-000565fd",
        "0504ec0f-7ff0-4b15-9f16-12b343fcc99e-0005663d",
        "2c750d2a-54f9-49c6-b1cc-607770071959-00056dba",
        "2c750d2a-54f9-49c6-b1cc-607770071959-00056e79",
        "2c750d2a-54f9-49c6-b1cc-607770071959-00056ebb",
        "2c750d2a-54f9-49c6-b1cc-607770071959-00056f00",
        "2c750d2a-54f9-49c6-b1cc-607770071959-00056f29",
        "2c750d2a-54f9-49c6-b1cc-607770071959-00056f69",
        "2c750d2a-54f9-49c6-b1cc-607770071959-00056fa2",
        "2c750d2a-54f9-49c6-b1cc-607770071959-00057017"
      ],
      "Id": "83aecb65b4374adbb02498cb58246e24",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ac5857247024b55bc152b2fbe3fcd88",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "092dd1d261264ce2afd169d3b61a5533",
      "Inputs": [
        {
          "Id": "6aba6b282333476184372d98c37832e9",
          "Name": "list1",
          "Description": "List of objects to be included in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca839e9a2d974c3f9598ecf4254ded71",
          "Name": "list2",
          "Description": "List of objects to be excluded in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c92ece7c0c24630a34629d3ae97d518",
          "Name": "list",
          "Description": "The new list that contains objects in List1 but not in List2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a new list that includes objects in List1 but excludes objects in List2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "d8c56f7aedfe4d7f86ac0eb613ff8df9",
      "Inputs": [
        {
          "Id": "17611d2d14fa44c691f987dc4d8968d4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a7989fcbf8c4038ab07a86416508517",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "d430a7bf7ce249869dd558ba37a9ed23",
      "Inputs": [
        {
          "Id": "027c4a466fa84774b0e0e0422738f1ed",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecf5672a0b224665a29c67663f22c3a1",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ef8bc069e9b4d91baa4d87f21fc76f6",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "86c26782c21545aa82cc60ea8580bf99",
      "Inputs": [
        {
          "Id": "79ed8e3e47e24ef19458ebcfd59a93a4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "627c50a20e1a4d6081f842eeaba766ab",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96237214bc814b2891305ed34689d82c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ab2a726fdaef40a0943133eb9b1b1c7a",
      "Inputs": [
        {
          "Id": "65d18baad7684ab79c31908e11055c19",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "719091e9834748c98324193feec2c455",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17baeefe45e14708b1098294b21f3a9d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "5ee04e4dd6be4ef9af447b00dd2c2630",
      "Inputs": [
        {
          "Id": "e2b1a682fb2846ba97722ec79f90bb8d",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45f98f79277d4870b5f86af3d71ac4ec",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9700774d6d784c6f93d0945e2fbeb2ce",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "cd82bbcb20de4ee396fb710347545d2d",
      "Inputs": [
        {
          "Id": "964c455c4964425a874809fb132cff89",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27254886212b47209e7bc73272a4ce6b",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "094cbeaece2349e2b3388c490f65256a",
      "Inputs": [
        {
          "Id": "ca2ba5975ce542c0bfc4540db12cad3e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8f64cc2213a4b169675c70eac751bd1",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fb263b9fcf041ebb69098af1c670870",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1000000.0,
      "Id": "316b7971661e4a8e87df7a79a181effc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7cc39dcd8a0848a59f6f4040419cf8c8",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "c4b0ab193ee54ef7bcdcd3a28ddce405",
      "Inputs": [
        {
          "Id": "1401476ad6554e9eb42e338be051bad6",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e20b17d3fbc44c78a59f36169f11128",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "dbbff9e5d6c84958989c36722e4ca73b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e6612c524637457dbb86089373fc3805",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "859f1d8f449243e69d6b633b4b49cb6b",
      "Inputs": [
        {
          "Id": "01ca60c5f6674576b5d7748f731a8b8e",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0de71b2a3f9c4614a3da26a2389982cd",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76c713dc568441d88aefdbeddcbd2e45",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "cf84f1b9e59f426586c721d18dec3afa",
      "Inputs": [
        {
          "Id": "f7c58df1e1ca417abfaca3979bba5b5f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "98702b0457684969bee34d77d3f0df87",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b6f5236b216446388b33fb9df583df1",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "de25c7fab1cf4881b0291b1b2b8f8144",
      "Inputs": [
        {
          "Id": "58e7c2d3f7644c3389502fa4d50ba14c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5bbcc0ba7ad84a0195e8391663e3f372",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d667f211e12a4aae88a013247c509b0a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "eeee196f1aa24e5b805a7470cd7663d6",
      "Inputs": [
        {
          "Id": "f2529aeea6fa4b77a068eac830949718",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1708f6496dac44dba5e2c88004725463",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d86296ce55bc4abc93eb7f2a6962889d",
      "Inputs": [
        {
          "Id": "3bec41ae86284977830ec55eb1cf1cf4",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "355ef20054524eb78987212f1aa6a75c",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7f5d8a77f7f4a7fb3f7cf7710592549",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e809f993f52e41f08fd0b132e2ef50e6",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7a9d1eb0ebe64100bc52e9ccbb19bd89",
      "Inputs": [
        {
          "Id": "e20385b475834b14b7a21e794d7feae3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4446f2ae47ac419a94bbfad0a69287dd",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3debcf92f34344318c1352981e9a313a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "872d66e58b924ba199f79f62de7d3c30",
      "Inputs": [
        {
          "Id": "c8b7ab10bbd14638aac890858b09995f",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac142b288a13497d9272ba764d4f54b6",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff6a02201a624649b059cbb540332a33",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "de969e9ff2c943c88b8dee5d795c56c1",
      "Inputs": [
        {
          "Id": "a25c841e7b2d4442a764f29599a94f59",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "915f420c6c474b2cb6a26eea555b3aed",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "64e7bb83cdf14b338d426670125cf00f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df5fa793abbc40fd8e973113bf822c62",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "a604878c57dc4764ab1e7b690ffcd52a",
      "Inputs": [
        {
          "Id": "f637f2fc37a447a4a2b16a5773000a94",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3190aa8d5aa48178243d3288e8d1971",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "828ab42fc18545cd907eb78b93579050",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6d776083caa04a2b84fb1cd8a4a6c451",
      "Inputs": [
        {
          "Id": "4c0e00a0a2aa497f9b2bdc970facc532",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89034d38eb0b4ea595aa76a5da34f22c",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b941ce892dc8471cb643018777e1c591",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "6f5a93e0bd144d2389d57e905cb7b199",
      "Inputs": [
        {
          "Id": "a33295c3cf2a494dad0ce615131e4b52",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5a0626a08d741d2aa77c09fa99da8fe",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56653b32aad140569d0a1c109a26d849",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e7a84959628545d6af055ae37cbdd104",
      "Inputs": [
        {
          "Id": "e7b548886d61417da7551290a8be9411",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf7156c1c9dd4f2f80989a06e76fce0f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3da6a23f1ff441aa93819ba84b95ed6c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "a43acb0f487c4ed28c95704e3c722370",
      "Inputs": [
        {
          "Id": "b8a016c200224471b8e4e5485b0ac0ad",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e578ba42145e4058aa9a0659e4400654",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ca36ee5e2de4397b8c9b1c3944e3695",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e17b8e5a3bf484c9641d9da7140780b",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Line\";",
      "Id": "8921bbe933bc453b9eb6f22146fa8e79",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "770ef0aa7e02493880529a3bee87beed",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "dac845c82f214a9891d5f85314d6b924",
      "Inputs": [
        {
          "Id": "999fb8af3ed14479afe0d29ec1e2f589",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d769b9666c640959b93cd7c9f07cdfa",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87432388f7164d45b5243bc4b42c380b",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70af3da058ee48efb488fc5882bb1ea8",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "bc8f554e32b14dadb2d7bb06ca7871a0",
      "Inputs": [
        {
          "Id": "d00c8b6e0fd741b89293ad14c73af5bb",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49cd695167a14a2081e994e319e61643",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "35cd6269d5654c32a1b507a2e793e8a5",
      "Inputs": [
        {
          "Id": "3fce9be080124bb4a24f6977d2eb6861",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50b99a02e8ff471b9f6a6fe0401d827a",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "692049fd76c9488aaa5a8140cbfe888e",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "70b1e2b4ef614c2faec8c77d4daa5785",
      "Inputs": [
        {
          "Id": "561d8204ea4a405184a25f28ff156cda",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b55355cb62f49babb42f0fd8b5dc628",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d01dd4fcd9c42a98b1a16c1659859cc",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "b2fad91f25944442b8b300c456de134d",
      "Inputs": [
        {
          "Id": "2d3710a9d7bc43ecb0b79b4fbb186742",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9426d0c66b314c00926ab3e9462f5842",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "e2c1b129d987473d813d2824cdb5210d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7157152039d0421bbbe6bd678ccc9e69",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "7da7fb917c71400cba87d13bf1f21594",
      "Inputs": [
        {
          "Id": "dc0d1edb2fd646e18a3e882442a8ad7e",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33cf0914a69742068c5995594712a594",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54ea807b553f4f2da49c7b0110f0c40d",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "843c7e3669ed42668fe8c46a427ae6a9",
      "Inputs": [
        {
          "Id": "d04dc67790fd4a96a0701efaef0e1db3",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69825cee2e2b49ba99af4642e85177f2",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ccec4a375bf4d5c9b0fd02696d86904",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "38d6d9e316f94e2fb1112d21f65e25b8",
      "Inputs": [
        {
          "Id": "2de019e59b01407691a505671c6da4aa",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "225328089f384595a42dbe6aae990d4f",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41d6c6091eb043b1b06e1639351618af",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "5ca133eaa781425f8394b7a22fcc8b80",
      "Inputs": [
        {
          "Id": "7e2eef2eb0b343e4a3f5b847a04194e6",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99c1cd9f4b854f5394a0eca78c051043",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ab08011496f4091a18e0d30bf97fc42",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9282431ba8bd47388bbb8fc9d1a6dd87",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "4c06886c3fdc45bc813f39b3edb05878",
      "Inputs": [
        {
          "Id": "e4422847847447b79e61b9cfd1a44857",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3316bc03da849be94bee99c3357964c",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a7a312da060f4031946bd09f270a3dc5",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "334df44163cc4d60908b88a81d0c9646",
      "Inputs": [
        {
          "Id": "ba2c06eee6054cc4af37b8f0db325e08",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcef418c78fc4e49afcaaf82e4ef7a13",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c14a042cbd2f499e8dd73fe3cd566a5a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "1fbdce3ccb734b52aa77f67fe93dd9f6",
      "Inputs": [
        {
          "Id": "021577eb3a64448d8908e49e7453eb32",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2401e48fba394776845d847cd76c6bde",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df1534d160fe4fcebeac7b46b42c6cb8",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "84b24c2c99ac4c54a34e48ae93827a22",
      "Inputs": [
        {
          "Id": "3e2f7471f4a84571b1b3619e22f19b06",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1de8c4e7fde34ca68d65dd471d82a099",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "6a7ff1f5faae4a35874138f9bc522cb2",
      "Inputs": [
        {
          "Id": "81161837480f4f2081fb53083516c465",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5f78355f8f04e5e81a2ec580512fa04",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "d0a28d16f1784fcc9cbefb406fd05601",
      "Inputs": [
        {
          "Id": "a74d3afafffd475bacfab352962c9755",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "360f7c788d0d4549b0e58280e9285211",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "770fbce93420479d84e9649d3abccf4c",
      "Inputs": [
        {
          "Id": "48e0607e3fd441ea8e9aa208dd9a2e4e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43148326abd843048e093b6d92641110",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a1fd5f9e04c419484e64312a1442d0f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "4ff37ecfcb8044afafa9635f38955e93",
      "Inputs": [
        {
          "Id": "9b59679ede8a45b3bb2c4a0d566b4bfe",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c730de13949148c1af5ae1a367948128",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "229906236b9d45789c7a802e5572f255",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "8e51e22974254aed9479cc0f16e88518",
      "Inputs": [
        {
          "Id": "e3a378de416e4c6995cb311054002cfc",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afcd602b089645df8071d6ecafc4d6d3",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6836ca016674916a7e63a8e63e277b5",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "1124d375da204fa1abdd8eaee8664deb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da5e6f55b8254f84bf35e707ead6ded6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4b6bf154e6b6479caf77cc574d4d16c6",
      "Inputs": [
        {
          "Id": "1c4764769fcb411d91e8ebc3568fe2a1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6988d37585c740aea29e9e0a60985409",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ce4d4892cee47a18af946e39c9542b5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "1aacc98d5bfc40a39c494b12de7a54cc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a804b110ce044696aaf167d8cbf616d5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "fe5f9185e3544ce19b6bd583e7e262f7",
      "Inputs": [
        {
          "Id": "98f8db643f9b4d52a34d409e39447c8c",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9fb531dbdd54768b71d05f2077c3f6e",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "910889a43c0744d7859a3a543a013472",
      "Inputs": [
        {
          "Id": "7c1fd1b37f99457faba4157dcc28586b",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b59cebdee4444bba9f925277bdc53585",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b30ee03c826451389e4fc15118c5be5",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "3448e0fc65ef44168167092b46faeb7a",
      "Inputs": [
        {
          "Id": "59261c39ec654ecb88faeafc756e8b28",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75c3c298d3ab432cb6555ce571c19887",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a8dc33e6eaa45c79bc0d997564cea3e",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "34407abd2ee8488892e6248b3e3cc4c4",
      "Inputs": [
        {
          "Id": "e2fa13cbe60d4eff918b5474946a8154",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dba4e4a70000424294b239749770c069",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a3afbef8a9b400ea5ba2a3dc17ad4b6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "38fe647eb63d45feb712fac3600d0f81",
      "Inputs": [
        {
          "Id": "eda0f281c1ff4ce8bc7ef77faf85084b",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a12a2cd786cc47d0b0cec8d9e38286a8",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc8a9f21a7b544ada2b05d906936343d",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "b8e79952d7f74006b2ebb45b9eb6c8b0",
      "Inputs": [
        {
          "Id": "71488e70f8e648999eb2398a9a2077d2",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20030da5f05d4a11a9af085f8133ce0c",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f71e0200aea849dcadc8f7ad352f6583",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7117250bc9ec4058a16922e42b7dcbfe",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "d2de2646cabc4771a149a8cb50c6aa7f",
      "Inputs": [
        {
          "Id": "3ae9856a44954cdf9630e8497a1333bc",
          "Name": "list",
          "Description": "List to be checked if it is empty\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01c247087c2e4ed5b21106c1d8984eb9",
          "Name": "bool",
          "Description": "True if list is empty, false if it isnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list is empty.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "fb5fe8e3488d470b91168b6ff0c7b001",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "56339ad413c241afb300ecde65c96911",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "1f182afd44784e229881a5d5043c1d13",
      "Inputs": [
        {
          "Id": "514955ba08124833a8a75f619c640bf0",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c527361e8cc546e2882d99b4a7b5c227",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33e8c8ca3dd44969a49ab98e0197ffdc",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0f5df2888ae42e3abd3e00f98f574ce",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "f44eab1294a64f3b9db6cc339471eb07",
      "Inputs": [
        {
          "Id": "2ef21ddc937d421ca99788f093500d0c",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdf2c7d4d1eb4ce5808bd8fa6662d4ee",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b929116dd58407f8d3a4e74b448115b",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "6f8c6e84123d43c9857fcadbc909494f",
      "Inputs": [
        {
          "Id": "7cb2309877ca4768b1f73b357f397e3f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3aa0cf36e24c4e65a377045fc9a40326",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "39a1c1b5b8fe4b9aa5fe4f8c45efee7a",
      "Inputs": [
        {
          "Id": "19246fb0bb904848abd76063654ed87b",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71b7715097e147c4bb6afe97ec1300b8",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "92e0285d5cb14f3a875e888d75d11948",
      "Inputs": [
        {
          "Id": "9f87574800974c4fb3122e1b8554eb4c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b5dd0f8122745d9bfad5e9a134eeb5e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f450f39ddd44bd099e0225f2d2fbbc1",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "64178a3cf9324f0f8c15c452835b02e4",
      "Inputs": [
        {
          "Id": "2435cdd7389c4dfb98f3b5f206fb64a5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bcba23cba7a4ef69e40af5e723831b6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b416dd74c8f945499f9af93484b00156",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "5b7505197bb247fbad9b7124acc9e01b",
      "Inputs": [
        {
          "Id": "4f3b1550057149c79538d13119498b1c",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1bc26f1efcf447a91b83027c39009f0",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12987339c635429eb4a27cb5bc1d6217",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "8397891a82514c90ac1cc4ff20945944",
      "Inputs": [
        {
          "Id": "b316264930044c099d0402e09339a119",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5373e75630048f187691139c8b7444d",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1ea0a5565d04721906741b7dce0e65f",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d1796507ccbc4f74be97a99698bb87b6",
      "Inputs": [
        {
          "Id": "0727e9574c724c4c9f7c30362036df31",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f49ac94b9d24c88a8ba97c5313ecffe",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76e876a3388b4c72a40841afcf707d93",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "c1c1283cb7da46239a0e129cf2c702a8",
      "Inputs": [
        {
          "Id": "1223e170aa9244d7bd0158ec21c95b30",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cefa01fa7c447d2a82519d8e93e828a",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bdf12cfd34448df9d7ec73e8650b721",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "d1d6f3ba311548838719e3001d620ef3",
      "Inputs": [
        {
          "Id": "7451e0219ce3403086c7bb5f23dbf53f",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b33ac5d3a63e4c91a5291175ab07c16c",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fd5d0b46fba44a091a921d13c4babb2",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "2289485f22eb4e6184ac812c07c6d8f2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5d9e2430c09a4f91b928ef0e2a6afc4e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "d4ea6d5c6d5943358bd8aa43724a313c",
      "Inputs": [
        {
          "Id": "868f4d4d531b4e3cb08deffd21b8f3f8",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8e6fa618ac141018f1f697016d23618",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df0aefde6a684382a9be30413868563d",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "1fb3c8a1003c4f17b7723d53e91ed395",
      "Inputs": [
        {
          "Id": "c9533bdcd09b40788aebee35521a2695",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60c5882062b143858a6419c258f0462b",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47c47d6844dd47c69ed376401d5a789f",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "adbc16a7778943bcbbb90eb5e825c632",
      "Inputs": [
        {
          "Id": "ef8ba13044b0469ba9545dc623a7b21c",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2882615642b64f37be304d1051aa2bbc",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ae7e3169bb6498a90cab72c305ec1a7",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d0f3fd66dca141079c9f00fb7bcdb46c",
      "Inputs": [
        {
          "Id": "c60bbbb5fd5940f1924c4112216639d6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e7ebc609044a4c7cb7dcec8fa18cab08",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab506df54fff41de90fb776d61196a28",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "c5dd673411a84e28b4a3dfc0517187dc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "317a6404f9e849bb89d5549723a00613",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "ac7e3710ab514c42a761d29b6bc0e9ab",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7017526752ef44719249e45a5dc37244",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0519f441614040058eb6aa6f15012066",
      "Inputs": [
        {
          "Id": "52b2869782ca4a309ec7177ef22f03d7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "932aa4c984e84f9387ab8ffcb1920217",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1862a64d839740e185d3968b0dcdaca2",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "choice=[a,b];\nchoice[x?1:0];",
      "Id": "dd45d4f4923544068f540a9b9d0093f9",
      "Inputs": [
        {
          "Id": "033efc2fa09d40849b9ba7ac72f5614a",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71bac5dc131a42ecacb4aa14fb1f9960",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca7d449bc93645e397665b37e550bee9",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "047fefb006154101ad08c621154c458f",
          "Name": "",
          "Description": "choice",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63f720b7c0de414f9b25a424ef08819e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "93b9882ee78c47728426af7347e7bc19",
      "Inputs": [
        {
          "Id": "1227c5160e154cf889ae9f1047693e4f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a9a58086a2494c6f911393a01086081e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fc2fbb8aacc43168b051fd0fc5db396",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "b996bfa5c581406aacb10fd14bb75f81",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "94df5b457cc5400f8858e0020a9179ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "a95b5489ee894138beb569616c274e1d",
      "Inputs": [
        {
          "Id": "1524cd53113d4ed7b2698d7ef2ab1fa1",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3dcc412276c4bebbfa379aebb044e72",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e67e185f60148fab8a95881ca624da9",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "6ec82ee12a334da7b9a8adef54eacb83",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "241e8b8322b34704a8a31945908590d2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "d110168d89cd4307a75ae9e391d9413b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fce032e6a9d9415eac98e2c9ef85044f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "cbcb8343cc9e47c9bf25ba14aca9177c",
      "Inputs": [
        {
          "Id": "c71877f6a4264b7dbed31d85c9fcbc18",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dd1f8325b3c484ea936022735fbd96c",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04a71045cfa14f6080ce867da17b69c5",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "32fccbba12994ac489d07f06da8b5ac1",
      "Inputs": [
        {
          "Id": "903d2be61218467a9231170429a0ee1a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47dc8915dc674bbba66dcab427396831",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd6a91fe7b3845ee87a72ca389ebc113",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "343e18e4038d4555b001d74a703a487b",
      "Inputs": [
        {
          "Id": "49503ac0acd842c3a8d443a1940c37bb",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "662e1fdcc7bc4f92817215fe2d220d75",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3abec68409d491dbfb1e7e9d1bd0ed2",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c6c97da8c7d844e2a5f068182682eabd",
      "Inputs": [
        {
          "Id": "f4cc158f88eb479699a35c60aa3242b8",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebb528e4df3d41ea8317a18d0b2ea908",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "434ad1b555e243dda06a9ce4865708df",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "b312ce0901dd4eddab5007c6ce215a40",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "514a4f5bff9c46f9bc8cd6a490f27c1d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "246c05ca6b93411595a3e41ad37ffca1",
      "Inputs": [
        {
          "Id": "3ac9717439514358954ed4d47b7279de",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cffd2ec2372d43079d60d3750ddf9930",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca571b7ad49b473ab3888e218097aa0f",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a49d81b6f9424e22882ae3b4c83c254d",
      "Inputs": [
        {
          "Id": "a7fcc95e04c94e779c106907542230ec",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b7627a58cd34fae8e4791e3dc13e106",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "643a3ee090fe4217ac6e6db14f6694cd",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "cb5367ee713d40ef9c69ff269b9ab72f",
      "Inputs": [
        {
          "Id": "ca7e9a3336f14769b529a7ff3d1308cb",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb1425d4a93e43739e850f0dc8dc9180",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d89d6e3bca24c56a9d8de9693c56106",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2e210134e80f4eaa99ed0e3d21026906",
      "Inputs": [
        {
          "Id": "f0ecf21b21814ff495f84fb27100db58",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1764e90f6da044249694a01bf270ddc3",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adc02d761e1748a8b9621b4424d82883",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "fe7d4a66e3fe47b4b35ff069db4b9bfd",
      "Inputs": [
        {
          "Id": "c1f13e3c4506453daefb37054d64c4e3",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d02b91d73f86482db23afecebcda06b6",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2c44cb8e59742c7b6e5dacf0b745114",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "c8c8646404444d68a95313d7051df54d",
      "Inputs": [
        {
          "Id": "9b5fbafcc9cd459aa4b67fb7198b563f",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a7f0b76db9b44808e66f8f224f419d7",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee65f40db9b143bcbd1316defd978f7d",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "955501f4a6734a1cb68bf6e9990ac320",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "e67cb05bbd0f4ca58930efa5fdcb0b0a",
      "Inputs": [
        {
          "Id": "4c31a44ac8874e0dab4c1e9d89f82600",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9094e69fe0c843c7834f5a00543dcbe2",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a702d5a5547d470b8095d2ec1df51d9b",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "171c6679a8844f3b829730b83c93ef95",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "35e6d9df2aa849c39812afeca6610362",
      "Inputs": [
        {
          "Id": "a7a665b61c49452ebd2cdd173d43d248",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49acaf6d8b3f4873bcd5a8b33b465fe1",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abac09f401284d9882aae286415c5b08",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Line\";",
      "Id": "26489c7945f940f48bcc3b42ce17a2ce",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "45197d4986934237998e6f99bd2c7f04",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d22b2032e23444a2a89dcc794f5bbb62",
      "Inputs": [
        {
          "Id": "81923982f80b4af689a1aadd95b2c4c1",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a21d69e45f774ef78ceb117b0424b3bf",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a17a5c0e5b5447e8a49c12289f9997f3",
      "Inputs": [
        {
          "Id": "7d0cb2f5de2a4507a1a37ca8b4cd7b94",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2e0484bb1414d86ab0e163fe727ed23",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "549f5746c70d4729856244b335a15178",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "7ef9f7c8e23046e2926c675eefa2f47e",
      "Inputs": [
        {
          "Id": "00020fe55d9642d4a5c9dcdfd56cac4f",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "823f497e9a544361a403ee51f250230f",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "664919b168084b65b79d1f62cd5ccc4b",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "54fcd0e03d7a442e824da61b775a335e",
      "Inputs": [
        {
          "Id": "e59d3fa09836470badbd945346f73113",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b81d0d8a55804f088de88098b4a747e0",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "71c03bfc208546779f0192631acc1c86",
      "Inputs": [
        {
          "Id": "148e819ea7834ff3a614a665f5748d34",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2ed190dc297b4266876bd855bccc42df",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f48e92b1fba840eabbddd0a328edb1dd",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "99eddc713c6c437286bc894bf17c118a",
      "Inputs": [
        {
          "Id": "77636a11af9c425cad11f1dad9d16534",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "3cc9d488d13943eda613c637a200634d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67afedface7a42bfa5ab1eacd07c6989",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "60ddba8664734b4f87418a4780784626",
      "Inputs": [
        {
          "Id": "fed156308ce841c1826cba67cb3a0dae",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5ef5777fb51a4010be25cb3d10907100",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ee0f159874d4093a67c3fd835e7a1c5",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "2876d8655c7d4d6a98fba3bcbc0742ec",
      "Inputs": [
        {
          "Id": "4d813170165e46d4adfb5d2621ac9f57",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "715bf92362994818a34a90a9022674e6",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "97dafe772aa5408a82ff5d70a13d426b",
      "Inputs": [
        {
          "Id": "292e7751268b4ef38ae474d52bc0da3f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f2f845783c04aa097197d34aee032ee",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "8c1c45082c14415e9fe9298f7cb7baed",
      "Inputs": [
        {
          "Id": "9024dea492da4351b28da0ac0585c827",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "243aad659b374e8ca5ccca5039c86b6c",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04c215ec9cd84693947bc1de05b2b375",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "30ae04055d56466da5f2d26fa6e15629",
      "Inputs": [
        {
          "Id": "0cd92e59745e4ff1ac9d02525834b2ca",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c46ad18b92654fe09201352e7dacd144",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70721c5d856a4cdf8050e406fd818faf",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b98b7680cd77437e8b3b24408399f9dd",
      "Inputs": [
        {
          "Id": "8b256980b3bf4a098dfea2caa6d96e2b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "cdb5a475ee3d4146a24cafda12fd6b4f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc790588a1d34d66a6d3e92c2c42ad66",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "e9af60cc01fe406385444f4ce8b43882",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "33f09b27279947b6b8745f2b6d7ec488",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "5a8b7ba8d5834c78bd7aaf1978fd7f4e",
      "Inputs": [
        {
          "Id": "5f6276a9058e4cc3868991362ac437fd",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e947bea886844e7ba90e3d6ef46e9c52",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "280d2766c4bc421c878346481729cbfd",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ebcb84b1040844ec810caa07b0fe5f7b",
      "Inputs": [
        {
          "Id": "ed912581cb8f4cfca53f64f325ccbb42",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fa13a1ae7a1484fa1446cf27b76e10a",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "212116bc070841a589a64caddcb9feed",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "8f6aad720cb84e6483315ddd091107e9",
      "Inputs": [
        {
          "Id": "9527741d51ae42259dc9db35661c8165",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00e80a0e0f8746f5961178fbe36b4b4f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "032ca287ed8a4bcea94f0c6daf7bca3c",
      "Inputs": [
        {
          "Id": "4e353071efe740d8a853f4a6cfe5767f",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0dbb3757b6dc47ea8177ca335a5c4541",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "39b9b1cb38914521a1719d5049353842",
      "Inputs": [
        {
          "Id": "99071d6d57cc4a6abb8aec9cc9b80049",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab1a6aabef454c6c8d3ba39f97d0b3bd",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ead4ef422ff4f699a048303500b8b02",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "f8d5d64d9e994ae9af3ee8fc3c49a209",
      "Inputs": [
        {
          "Id": "667a8e9429194423a1c372df2ee85655",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7695162012846139e135831244aa9bd",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a5abb2352f24fc4b2912135084a169b",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "40412fea99f745268fb03009b425c080",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f2d7d715c4944abba6187f84dee8bfba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "fa9d203157044b21a2732f12b8c68c50",
      "Inputs": [
        {
          "Id": "7474e825abf24f5287b1051bf2c0463c",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "556d38ec3c6f4bea9bc420a0562fec2b",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "44fe160f57a742bfb022a7d7f2f7c5d2",
      "Inputs": [
        {
          "Id": "6edf1c6cd8704babbe2a3306811206ed",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdec22a6ab34469c94e4c43007050e02",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4953b720672c46e7912020d1463907c0",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "d09001cd7b184ee69f63179deb2bdc6e",
      "Inputs": [
        {
          "Id": "cf429622e3f849728073e1336a231a9e",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea05349dfcdd414dbda10eab7962c711",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "89470d8409104871a406de1d7a86bed0",
      "Inputs": [
        {
          "Id": "659e146e12f3426a971ad2ff939e2a1e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f81f5cd6e82146afb348f71deeaf2156",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a52094c5f9fd4ab28dcc009aab20285f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "d2e3d2c9f502430795bad4e269508968",
      "Inputs": [
        {
          "Id": "29d15b06433b4640a4dd5349f43f27fd",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c760232b0c4e4644af285dbd4cfdfd07",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5850c2921c524a92a591d409dfccf1c6",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "e5d2788322184d8d85b58abb5f7f10dc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "30a25e01e5094b0a9c9c375fc756d2c3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "261cb84be1b14e8c908109d47ab29c99",
      "Inputs": [
        {
          "Id": "8c7cb98d91fe49fb9dafa7d0ee0ff93c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2d9563fc96124cf98851621708e1cc70",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d4f73310b73427ca5dc0e67d8ba7b54",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "f4884cade5994d3ea61b75071e6392d8",
      "Inputs": [
        {
          "Id": "4b044e5e81d14212b4872343eaf7f4fc",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b62232e7ee04ab1b60b8d14a331888f",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "19bf9025a47f49de9956bb08bd2fa0b5",
      "Inputs": [
        {
          "Id": "40734d0dc93a413fb1acad069643de83",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa5217d414874dcd8ec8ab1e770801d4",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8715aab782c9448886f5cc023762b68e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "12cdff4f3d8741e59f58924ce97e34c2",
      "Inputs": [
        {
          "Id": "43ed56c88076460ea933d1443b034483",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84d1aa08c4f54d029e3ce46fa374d91f",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72620c26c8c04c799edf9ed1e12bb5a2",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "be1b21d35f184b648dfc9c8a9a1ed93d",
      "Inputs": [
        {
          "Id": "9b62b2ccfa274267aacac17598808178",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "892bb485e91e43bbb7cf4afacce1c257",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b134eab3d7694dee851f2d6693bb166d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "89b09ce888044f43b69e37e94939a194",
      "Inputs": [
        {
          "Id": "55c71658bd8d41a491be72800cda1742",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e95133bb1344387ba35d20ba74c15f4",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1c1e0e6f7b9946bb9ed593d3a77adc36",
      "Inputs": [
        {
          "Id": "b0ab79242ed04a7a8cc18a28ded4c47d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c77a423b56224fa7a333b85428418579",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fbd413f8d9cb4a77883428cd687a0805",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "9cd39846ab6e45aa982caada5fdc5639",
      "Inputs": [
        {
          "Id": "437cffd7bed64c489ba52fb8b564cfe2",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ec9a1db1f9e4d4796593d2da4b47e03",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbec2c3dae6f4dda8ea46ed4cdf9711d",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78986c920aec456b889d3e959349de8e",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3f2b240cff10479f89f5f37793f4c353",
      "Inputs": [
        {
          "Id": "46a1aea9b2fa4945928174f09c30a539",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "278c0e61ab914aa0a9bfde03544cfe15",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1890491b598b4e5c8d18a56df5e8e2ef",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "f490f5f68f8d4036b61825754fbb017f",
      "Inputs": [
        {
          "Id": "b25d12fa553e4a078d93e80c0e911166",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31c486a45d224eec8ebbb306a73cb77b",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80f68e95d51a4bcaac6ec3a8a4f7e269",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "a1fd0870f0094d98911b6368b6db70d4",
      "Inputs": [
        {
          "Id": "21f6d6fd2b8f425ab14765e84169ca97",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b0c2fc69588465bbbcdbb170a4c7826",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb5ac9095ec54700b3670fa9c76d9325",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "b3bbeb2bd8a540809592494d562e3566",
      "Inputs": [
        {
          "Id": "7477451816af40cbb92b077bb1591c20",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61aca5c93c6643f78de26af34316158c",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2ebd10d12684b5680d57b005a52291e",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6a0539528863431582d3e6c09646489d",
      "Inputs": [
        {
          "Id": "a865801f90624426bb90bf4eb6b280f8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77e6c6b2f79b4f9684ca34d35d43bf33",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13ac091912a54f8f98f21dbb26363aeb",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ee269d1a193649b9b953a09065402bf7",
      "Inputs": [
        {
          "Id": "459e052ddaaf4c318d069b39b7d7933b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8a1ce44e65a4efd8b5230b0c98f7cda",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "115016ad3dd5421cbc56ddfc4e6f4cca",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "339d9f82033c45a5ba8951db4685badb",
      "Inputs": [
        {
          "Id": "6e40fb1a04504bfa851edaa7496d9727",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a655162dac6843449055eeaf4f92b82e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "487b5bff74014c69a0ad8dd47dd5d71e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "24b65244582d40f295ff3bc397c37e74",
      "Inputs": [
        {
          "Id": "454af104f0834b8a84d552682d0da28d",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9b24184382f4d64b4972336f4db234a",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8628ed8226294fa4ad64d0154e44bde6",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "6a06b2e2fbfb44ceaa164dc970107cd6",
      "Inputs": [
        {
          "Id": "7a6430c538ff4e3095ed3331d434a04e",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3fe3709dfdb0480e9c340667d2190351",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4f60413db7e645c19c27f9bdb4442a52",
      "Inputs": [
        {
          "Id": "f9226c0768c043058ab117701c56c35a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0a8845837d9747e1b6b4296681c73e9f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d24d19ed1324d20bbde7d01a3836d66",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n2;",
      "Id": "0b9c5b62f9c54366811ed21bac974196",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "18b81fbcafa7475abc1abf8f5b732400",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a7b7467edd94846bb3b387d712ed19a",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "a801d9a64f3f4b589abbd99eaf09a07a",
      "Inputs": [
        {
          "Id": "15d304f820464a5c949c0ed48af1de23",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "592589d7e92e4d639a532f6353306c17",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "ad74026a59874eee8cabec7eda8dda2f",
      "Inputs": [
        {
          "Id": "8d0f7da39f84486d9bba841a7d1b05c2",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c41170c132404a9993efa6da97ad8e0d",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e564c590c674017820664600f64d043",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "6bf9b130eb274903bf5d517c09219857",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "49e7cc576cb246c2b21752410cc0b57f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9453bb0772c74b7ba215b4130672bfc7",
      "Inputs": [
        {
          "Id": "04794455828a418d961874ceabb95f7c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb5e22b710f74f94b2bd5aedec102f89",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "536ad58f7251428aab5649a19d005faa",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ccc444e5a42b461197f9d5c62569fabd",
      "Inputs": [
        {
          "Id": "98997bbfb20247f298e1ec1579ed0e34",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d446345a74db43099ff84c75aff0c5c8",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ca424ea1964410a8574abec947ab8e2",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c67b34b080a64ca1a9ed4bf158a9e013",
      "Inputs": [
        {
          "Id": "43e8f1e2047e41f5882e0e658fa99d63",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9819b83a6f04532adc2481d936edb32",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd0dcb70a32c41f0bb1fb05f8b4cef18",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "50363477491c4fb1a0c47e1d30a99e7d",
      "Inputs": [
        {
          "Id": "32ae0b75143b4b6dba595f46b508d9b2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bcd4bca07464e27b2835324546c0ab9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d29b7c2adec48eca9c224ff851e12f9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Line\";",
      "Id": "ed30409e18dc47a9974e14b08cae2f9b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "74bfda6c766d4ff792a45349bd15fecf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "0b38fc39b20648df93d5dde03d8a8fe5",
      "Inputs": [
        {
          "Id": "78a1235f553f4c82887c389e7ad2dc3b",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c23e2234a32c4b6eb88f979c91efd23a",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad590c63ac4647f597313e9fed82dc1d",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5f3ad6a32e14b7d8cd3cb3fe2f4cd90",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "61c62d3ede8644e4a5e9295a2eb99587",
      "Inputs": [
        {
          "Id": "6633f3a0908943789296b459c7a9842b",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "813017b5b13a4aaeb88e9f3d3d204c94",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "61ce9dfccbee45b786a1d3e1fad24f88",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9c974bfa20204355a34da50796a419d9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "19896675fc6b4cbba0406ca88e5afbe3",
      "Inputs": [
        {
          "Id": "b98b5edf93c443b6a4031ffbdfe1f0f4",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "291f4636695343029129ce9e74311dc9",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99dc5a70f453427289b15d0bae77d6ed",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "37d6e545b9264e97aa78e3afe324b74a",
      "Inputs": [
        {
          "Id": "574312331d3141f791465487e42f48c7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e10f954e4734fc18f850a4a49b3eb90",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b40414290df44aa8351b055a8ed96df",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "037a3061765c47bdbcd41c9bbd694903",
      "Inputs": [
        {
          "Id": "a71c1544f84049e58cf93ed2f453342f",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ceb0f952d6946e98d201ce1e97cc622",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8f3d4164f244da59a35c31779485f1a",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "66b4a53a494544a685373d219b079ce9",
      "Inputs": [
        {
          "Id": "af3b5e538b9442518c6afa293a0e3530",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "564dad56563846d09a4c88c419a3f9ec",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19e291d807c84a8185ef7055c6a44509",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e19349c552224dde977c3907333ecd5d",
      "Inputs": [
        {
          "Id": "9b332d10edee43a3a12b54b151bc8d76",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a84c855c847450b8c032a86c9a47818",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e91820027894f60b005467af8e57590",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c3bb7231e4744fec985748d8668311f5",
      "Inputs": [
        {
          "Id": "9ff0294cdb6d444894f093fd3921cd1b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9eb80a91c29d4d71a274232597851374",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ba8d790b24b47f59acc352e2f06efc4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7172df7d82684fcb86b6bf39e9a82dfc",
      "Inputs": [
        {
          "Id": "b605e022012843a8ada916e0f6bd46a5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92e720d3c0604be19c8f28072d0d6ff6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e0321944f6446329caf2bae6d837307",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "14e5f940a01d42b8b55b8678f5c507b2",
      "Inputs": [
        {
          "Id": "d548c220375f4e098637ddfb7e54d100",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b76d3aa8a9a41828e5a889e2703f1b2",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35253e8b53314cf38d83090076cebc24",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "c0ad703d7d2944f1abdd10f7337ea58e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca1f2a617d9e4ec7a5be32a183b4c102",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "5dc31788439b4f61ab06a16750c1b735",
      "Inputs": [
        {
          "Id": "140ae4f6b42a44f9ad5fedb35b7838c1",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9b18e24a6f1466ba0f6bbee9ff5cb37",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "72d47a6f12994d7ba1ce05241c831e05",
      "Inputs": [
        {
          "Id": "e631f82f7b2749288edb218c9a0808d3",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a11ab5746e4468b98ca9f44ae1850e8",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e3bd9bbfc4d482487180b7f0d8641bf",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "a68f6eb5742443f39853d7449b8034b2",
      "Inputs": [
        {
          "Id": "13310d263e77433f9046e41823eab6b4",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50fa5f0167974c299005c6dd417adf1a",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7c415d26e85149b1980306885f892f2c",
      "Inputs": [
        {
          "Id": "6a297e4ae5924fd18f50fef5c30a79c1",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad20ab74056a4d4c9be4fe7a757fa3fa",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04651c1498944b47b54ac01886b5e068",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "65c50ecf7dfa4c1f903a0ecd173e8920",
      "Inputs": [
        {
          "Id": "f6f11e68ffb6473e9a1b858ff8848882",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc8bff5c68bd48bcb03906faa39b477e",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d86451a59f6745aca94e91d44de9299a",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f08b23a88c63495c9132cec7635c540a",
      "Inputs": [
        {
          "Id": "08543e40d9a84c1dac2aec6dbb9c0ac4",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f6407a189cad4d038889c18522428108",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2f2ceb2d52f406fbb04b55eafa2c3d9",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "b8fcb539c1fe4d1f968058e95c7b4b6e",
      "Inputs": [
        {
          "Id": "1c790c36804d465fa34ff1e5bfc14838",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "39da34182cf64119a6705b1bdacaa06c",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b50a1d900f904977a57e4d5d1868f292",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "d1cf030fb0214bb5a67d7fe324178458",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91d575cb522048e4860b61874f642a11",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "97edbf0b99c34e5e9e4b5e109a8ff7ef",
      "Inputs": [
        {
          "Id": "024d5e6b79cd4a48ab797c1ba99c8741",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "abc8438d9b124752903462bd3df05f7b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e25fa38c3f9148fa9a3cd6eca34d98f4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "b4dababe28c046a8bd6e0c70ced7d3be",
      "Inputs": [
        {
          "Id": "bcc63026521f4de38e7ba785a471d6c4",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43982a94968c45f9aaa63a855b423a30",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "74c19ecfbdcb481989f21df7bf193174",
      "Inputs": [
        {
          "Id": "7af0d9d10706472e862a3f74e6b976c2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69cc90be91d240e4a4610f47af8547d9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9dafb722d587450d975fcdb034f7e864",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "f5690e0ceec64be89cec41558af6e3b6",
      "Inputs": [
        {
          "Id": "c52e67c1ba784470b4450e87ff81e362",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7871eb6e34447f5a8e81f8be9f019fb",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67046305ddaf427db6bd2a6ff3c86cb4",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "6aa903355e4544dc8b053a16d7694af3",
      "Inputs": [
        {
          "Id": "397deefcb6914fd1bbacf585ca3abe35",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c310ddeca3494abf9aaac49c30216c65",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7a217366648b4aa5a1b712f84ffc86f6",
      "Inputs": [
        {
          "Id": "489c557d5ff543bab9b96addced1ecd4",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0f955159aa004989a9f9a672e74f347c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47d494eeffa74b14b0ba7c72cde03725",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "2cc6595be67a47fb933276f4bf01b563",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "69e5099316904d1ca8ee3c77bf3f00dd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "e99766de795148a19a1ad702eb12095e",
      "Inputs": [
        {
          "Id": "374d9c1efedf4078aab2b7c13e408e66",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14a4474952fb424c9097a6bc3158e754",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d65b0677e9e1499ca1b767ea80e28629",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4d3c9010ee0b4c1e8df90085e1abb0cf",
      "Inputs": [
        {
          "Id": "257c4a12d332439f9a5c6ad20279cb7b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42273166f42b4f00952af6da92a995f6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3988b9c95982410384a424ebae39ae07",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b01244e81cdc457f846a893de36f916b",
      "Inputs": [
        {
          "Id": "ac0a4a93b76e43fca75c96a150c304e6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "039351f2dba04ef59523603db531e45f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0988c23ff7874e38be1dddfcc9731938",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a9e82b1079e047ffab6f3cd42c3826f3",
      "Inputs": [
        {
          "Id": "f11417890a54426292d5b1cf003812c5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "dd891343bfed49c7b89685ae57d67a68",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da8a32b683ec46d4b108349900f4aa4e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n2;",
      "Id": "367c722c5da9494dac85078fb9368b0c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "43b44f2a86444f67ad9ce01f58c61a7e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e255d34db0534ae6b919a8258f03eabd",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "d45a8638ec084b68a5e58214a7ca9155",
      "Inputs": [
        {
          "Id": "c4f2a05bc5d44a8493d312f1bafae6a2",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8824f7f8ba3487d86801264aab7d635",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9682a4bb381f4c4caa6f9c37fc886782",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "19c43ade2ad243958476a5392f228a84",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "615b9ec66c9f480a9fe893745b5c6e2b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "239849e5914a472c8611795df998b929",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d605d1865ffa49438d1b152af58e4ba0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "814135e11b2948a48adc4e69ba4a3b0c",
      "Inputs": [
        {
          "Id": "44844c9ad21a4485a1f80b116f60deac",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47dc61cba0fe454b969f218bf6317bb1",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e73e9fec1d74d2faf73a42ad0f6d4ce",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "935bdb63b07a4f9ba0f9138ac08aff88",
      "Inputs": [
        {
          "Id": "e6c6f13b45164e3b804b35e188447259",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2fdadee5ba4843e69b2d7c19b76e5371",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb0db98ec9a541108da204f90d4b637d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "f67392ad94ff4152a4121fb5b05a2e10",
      "Inputs": [
        {
          "Id": "50928249f3ee43279ac1396bdff42300",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3ca77bcd7b74e8c81c63d999f4e3788",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "b43dea033fa846349fbcb566956a8adb",
      "Inputs": [
        {
          "Id": "1a2ebe0d6eec43d6b7f9bea18a57af75",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1e1a190de9c4c5b96e4909f34b2483f",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "419d6af86ae745f5a6667700a9d31f9e",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a74e44e1b6f046f695b26928f33aed19",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "47460ece24af45e7a453285d90775cd8",
      "Inputs": [
        {
          "Id": "0b94174e3929449796657ed54041b77b",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1ddc18cc1004b7cb1d969cdc3d176af",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "4b700da853274808bc7a11eef2817b9f",
      "Inputs": [
        {
          "Id": "4129e6c5a32e41389fc0184815919b0e",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64d33c74339f494bae46bae0fa01769f",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a970691c2e664810808fc8d52446e7e9",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6f752e370a2848a29c0206ff25405eb6",
      "Inputs": [
        {
          "Id": "58cd1ee739794b1ca60b7d45d23be70b",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64d88dfcd4964d11ab1936b4412c6b56",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36db23d5250844cb9f54df7702030142",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "88dce6f4b0a940f1b00fb5265e093c18",
      "Inputs": [
        {
          "Id": "2abd521b7b5e4f7eacada27dccbfde10",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61775bb10e584f099edc731961ced2eb",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b87c02c791343d3a4e0cd7f1c72eb71",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Line\";",
      "Id": "2f8816a2af184b3a9382e179a4d17c2c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a233c4b10290488c8a09d66cec72b3a4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "2df335f3d9644656a10447e4a6fdc74e",
      "Inputs": [
        {
          "Id": "78eacf8af3344533927fb06b3f80ab76",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4258511b807480d9f9e26a8b0ecd46b",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2848ec7ae35343919afaed3ceb0f9aad",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ef1e7d39e704bf28f03ad388adba2aa",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "bc2e08e7496447a2b3aab17599a45233",
      "Inputs": [
        {
          "Id": "792d92f521d4404390a62c35b5a74507",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "daeccd231332439ea0dfd9170d917960",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "813f30c9a9814ee180329b311caaf6da",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bf3988330f6142908e666c5622135c86",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "d494506d4846471999a8017e17541f12",
      "Inputs": [
        {
          "Id": "ef73169cec314fb3b993953c8fbb85e2",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32fb9bc86aae44198442e1e9f6ee3495",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b41392a59584efc9e51cdda2f0ccb82",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d15858fb44c74c3c9270e2d2c46405b5",
      "Inputs": [
        {
          "Id": "6e357de5e6d24434b8046ddb1cac7669",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dff3e88ca3b943c08b80ba486029c567",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adc30b0503bc47eb8c6612e2f4b2c4ca",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "1259f1d9907f40cd9d59c843080f0d5c",
      "Inputs": [
        {
          "Id": "db1afcdd186b423081b0f311ac8c5ee0",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cd05ef6b50b46a6881176cf54e709d2",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81726b58fcce4db781131bfd8acd1536",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3575812e893247e8a918fa11cbaa76fd",
      "Inputs": [
        {
          "Id": "efc0cc6fbaee48d28d61aa0de667619b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecc5db29b97f42479f7a0d105c50fc1f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bc78dc643604276b0c4a2a80452bdd8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "9024c8c52a7044e58ad6c3e85103fffd",
      "Inputs": [
        {
          "Id": "6a6c1ddfba0b4151a8772c34ef3400e9",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df41e524864f4176ac6f7f1ce2d4eab1",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1fabcfa079d4cd99b1440a0cfdcc563",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "919426da47084ab6970ba8041964f2b9",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "b01c28e7a71c452fad73b10237ee6b5e",
      "Inputs": [
        {
          "Id": "0e250ed381e04e81a5c55833f8f9029b",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8dccd6ad10a14387a1ad95377a42cd7c",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "09ae3d337ced4d2cbdb2eb249502b000",
      "Inputs": [
        {
          "Id": "c6efb969fc8d49bfb3faa1fb3bbb57c2",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "dcdd71fedf974879b5daf908174af524",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "397635bcc8034481bfa128413f0ded87",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "12d10cfc3efe42778fd8f62a62778f38",
      "Inputs": [
        {
          "Id": "84ea4dfe48034bdcb186fa2c27d66f2b",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a05d5277200f4999b1b66cbb5f73d186",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2cd6eb28965e439f88f4b40ee8179df9",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9424a4e28ac34e4f81694a3d7eb4b0cc",
      "Inputs": [
        {
          "Id": "bb855652e6854840882fbc7e14fbbe6a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b2f30b07100346f2a80d6707d1be5a39",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2656595043f43ec898a7d4fb43e7ea9",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "1ea759d1df54489eb7c1456bb5377c22",
      "Inputs": [
        {
          "Id": "1ae2a29cb5a64a0c8a8aa235435a7c41",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "91597f63d01c46688450c7ca910b4824",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6d073f1ac7a462aafc6fccb9e6e5426",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "9221affaa44e4cec8ef72ae2e42481d7",
      "Inputs": [
        {
          "Id": "c83f2797d4ac43ce92a5d6ce2b470e67",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0a131dacd894574b1ba2205acc6f4d9",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "552769d0859e4bd997c06bd90a76f1c9",
      "Inputs": [
        {
          "Id": "d562350bd05c4c78ac5f22641d6d5293",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "029163cedeb741819f5dd8a52dee5174",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a962f1c49f3a49f4a88e5d6a4276c319",
      "Inputs": [
        {
          "Id": "1bfe977687194201b2c1efafea39cc7a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e581e5360c64490597cbcffd3c43bd9a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ef757c248f44484a75b13c2c0440eef",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "9070259638d94494bd45bc401fca2fe9",
      "Inputs": [
        {
          "Id": "0ebfaedd771f490cbcd5041bffaf8a96",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3d16ecc71be4a7db1743f19796eb5ae",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5dcdbcb2b5c4b0887cd6e2437bc62bb",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "d59507916a544c449391d61e2360bbec",
      "Inputs": [
        {
          "Id": "3addf11c284f4eb4ab390be506b17eee",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "482c9fdb1e104847b678e73ef072376d",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "589be5806ff141e0b2b7fe3bb88f9369",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "cc522c70aab34d78ac8f241e731b55af",
      "Inputs": [
        {
          "Id": "70ec9456aaba48f3a22e44c9f7b91c28",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22d0428103b44a49af49210446f68689",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5eeb76a8ff54b06a8f7407449e8318d",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "f8e54511861a462d8bce5d17caceaadd",
      "Inputs": [
        {
          "Id": "107ddbf8affe4fca9cadeea2aa692b27",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8fa84d610c34831b0b13ea855f4ffe4",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c5767b70d44424486ff5d083a7069d6",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "b70f170edc684b02b4816744ec5ca9b4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c73db73fe2c5426096332426617f5827",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "b3c99f8622004b0aad8c0f1843a60131",
      "Inputs": [
        {
          "Id": "d088822a37f740a289f00a37a0aa94b1",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a4f17cff5c0a4603bd1127494a90b15d",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c384bfef3354ac18d6be6a601cf8e20",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "545d968efaca470d80fc8fc897f82039",
      "Inputs": [
        {
          "Id": "661b7707cfb04cfb8959b5ace599e209",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d98270944062496bb28bc18e3778d19b",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e74e3944be140ff83f0275251f3a4d4",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "948563fa491146f68e941509ae53dfd3",
      "Inputs": [
        {
          "Id": "319c97eafef24c52b5680e611592688e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54df184eea1f4042859151b43ac5337a",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "68c816353dea4078b4c6bd34c65c9f1b",
      "Inputs": [
        {
          "Id": "dcbabca96df54f9fb0fa96311d2fa3bc",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5bcc5df22cd409786f2ae2dd4b52f6c",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "a31da3b246334222b6f7429ac0fa27b9",
      "Inputs": [
        {
          "Id": "26cb3df033634a7ea2fa26fc96b10f80",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8e4d44bf5644610a0cebdf359989079",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "43400f11d5134214999fead9bd2a2dec",
      "Inputs": [
        {
          "Id": "707e589c42804a8aa614b31e22c5a680",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0344655e1d6841ec919aa397d7dd1f3c",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6329b8250ea54724b84f6fc26ae19235",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "422fd25761ea43d984a8ea02062bec95",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7cbf345c707d42c5ab6c651957d3c21b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "96ea33f867fa458ea201960e3dd7be60",
      "Inputs": [
        {
          "Id": "bce7eb30e51648e791024619964c2344",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "247c8546f8dd4e3f83cd3642d301d0ba",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a36b1d46785747058d43f1af3bbdf64d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "b182fbf572c24ce3a009f8908889f124",
      "Inputs": [
        {
          "Id": "e030cf05bb6d4f7785814266e3e13903",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d89da7c11344da4b188c1671c30e372",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff80c25be46046f8a2d3c114f9a07dc5",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "92377479d7944cf290e1d4295bb33285",
      "Inputs": [
        {
          "Id": "d29684f84f0b43fbb0a012395c286131",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58734e99c19a43b1882e4d162f77a1fe",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "d0c62da7652e4e96a683961cbb11cea2",
      "Inputs": [
        {
          "Id": "d8afd0c26cf7423bbbd8e8f9c55928bf",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60408c76ff63456292edde34639fec16",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6edc571298c24189b0f2ce8e5a414958",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "d4a872557e0b41a59b5ba992f6728fb9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b9c335fc033245648c1d2fd8dc5d7408",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "5e82b9368d214b66a11c0021ea7886cf",
      "Inputs": [
        {
          "Id": "ce0f1277a3984a4795f2cd9d1bb55c86",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7b4abc3916e34a56863fd1f2874b05b9",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23ee575a08354f9ca3b800fdbf5cb474",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n2;",
      "Id": "b4b9784d38814521912d75a7f5ea1651",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "377297ff969a499e8e2421966663a5b1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1be956c6e9b14484817b166de2fda2c4",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "4b6181b28ee44359b67d5e035b1055a7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57b8417473324c739971a58b1c7dca7b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "5089953226c249568ec86d6f8084299a",
      "Inputs": [
        {
          "Id": "6db778ed01cf4a438780ead735f12c35",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d97d7b75af84dada16aec64c224b425",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "936685b241f74a1eba518a5b2a92710c",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "39301a8c68ec4546a1fa9b0e8e7ca7be",
      "Inputs": [
        {
          "Id": "ff2621ddd32b4f999a33b20dbc1a4c9d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c7201722c3649c3b6636d07edeba302",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adc9faed72974814a13df7ab683dec57",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "60d71e5e1c2d4e47bbb1e09d5cbaaf4d",
      "Inputs": [
        {
          "Id": "148b3ed13b6048519343a55bfdc84e87",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c35c88a86c24abf86fbd7e6b7425e98",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e0e87fe6f9d4a4b947271f28bd9e83d",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "cccaa5bf11bf4986b9239d9f10544641",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b2555059d6354f67891c92f9f4a61fc8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "6733cfbca87947508fb421402c543df7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e987bcea3cfd469c8710b86a75c1b00e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "01f2c512b2514b8aa27a58b6c44930d9",
      "Inputs": [
        {
          "Id": "d6380415148346bea12a132079587c02",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04820e1f7d5b4424a19eda753016c97d",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c934c12685f4854b01f438de9f3c2b3",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "60ee4e737adb49028a95e3579666c1c5",
      "Inputs": [
        {
          "Id": "e76dd91f6efa4210ae0537426647e385",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ae502e2c231642429ee7bd85e0f44661",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17f0c2729d0c4935a92fb14191f115ab",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "0b77575cc72e4a86b8330a24b14fe8f0",
      "Inputs": [
        {
          "Id": "9bef7da984ee4e1a9f7744124eca478a",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0eb0f3aea82942d4a4ac692c4bfff2eb",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "f7582d962f1e4d1393240c58d9b175f3",
      "Inputs": [
        {
          "Id": "fa680ce2feac4e7e98b161f48e55158f",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff949fa563474cc692c9f296eb98b8fb",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc1ab387f47d46bb87d3007e5a9460ac",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9ac11fa96e940e6855fabfc6e4d10d9",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "2b961f42bc2540d697db32fc144440f8",
      "Inputs": [
        {
          "Id": "58b46e83b52f4b5ebd3176ea76e7fc6a",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59dfd02c02474c6786586bd301c555c4",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8bb7795453ed4aac8a9d318afbf78c1e",
      "Inputs": [
        {
          "Id": "36474c6d07474b71a0eec83aff1e50c4",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e0a695c3bfc4b58bbf43bd9d4e4476b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b057010ad9241f09a9e6eacbebe9ebd",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "9b549a8962814dd98cd6e92cb3813df1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "26ed29b313ff481bb6c5629d9eb790fe",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "9deef2b2c48240f3859b7f10ca74688b",
      "Inputs": [
        {
          "Id": "2d41a0f455884a389ae77605e2bb5821",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f9083e23b8b4bd29a68258e2b0e29be",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1e4cbce30134b90962a3711a3b9cf81",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "fd10822be23c437781e214578712adfe",
      "Inputs": [
        {
          "Id": "9385e9e1e2744d99bda6dc892e9addda",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c63fefd109a4ac1999e1ac5b79ac36d",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "513763aa0b444cd58b92ff5bf6037fff",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "341467036a524281bdeffcbee10a97f4",
      "Inputs": [
        {
          "Id": "eb639968114c410585638fccab31b08e",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92d04faa164e44ed85144c1ed321f551",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c512c62b1ba49c1b9a71949bc56cfaf",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6dbb4a096e1240be9c0c956c9acd6c99",
      "Inputs": [
        {
          "Id": "828b4cd570da43e980feb70270e9ef99",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6a2ebfc003fe46ccb11f554d374707c0",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a84bf159f7f47be8d3c2a173ba6d24b",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "ae6db74e43df41389183a6f3193a1201",
      "Inputs": [
        {
          "Id": "655fcd87cc73429ba4d4e4a48b32099f",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4602b179b4394b4d98a987c170791daa",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adc8395123b5427497a302a0d76779d7",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "32e2ce209e29468a8e1883022a5fcf01",
      "Inputs": [
        {
          "Id": "b07eb58452c34647bd208884ccaf15bf",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8df8cb01dc9242eab484c1e583bbeb3f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6946d28cc0c4fc88303491afa764eb7",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "489303116186478e9700778fc54efacb",
      "Inputs": [
        {
          "Id": "8fbec471d32946e7ae0133ea04543db9",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b402dcf0cc644279b62ead54dfc6963",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d4d810866b1842109adccf752a23c07d",
      "Inputs": [
        {
          "Id": "896186dff4224d07aa2f9654fe42a1d7",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c387109f91c43c49c4d13f0c0e57c4d",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6a44c196d6043d5830a34591e385862",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f92e50d4048b4785806bf85820220656",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "55fae366dc10442999c779b41b9f58bf",
      "Inputs": [
        {
          "Id": "bce64a765092471e979b71a4c09511b1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98eaa994c8e34a98b2d999db61510a5b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96a3358c99404c9f95ce1acb9f53d6ee",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "2675eda8667b432eae06ffa8321072e5",
      "Inputs": [
        {
          "Id": "9bcab62cedd045fa91627848aeb00330",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aafe6ccb1f1242639e97f7c4154f08f4",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "779d41ee03fb441aace6dfc41fa92a80",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8f62a9a8d9124cf19313926ce1820362",
      "Inputs": [
        {
          "Id": "42359a9ade6d4943a0589767db387f06",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9bbbc58cc0814903a1e812d3f45e72ba",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77815a83d34741879fc946607c56c8e3",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "db2dc2f42ee744129e5bc984402629c9",
      "Inputs": [
        {
          "Id": "e4004253bd284a93a6a55992ac268878",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d0f8cea53c349f2ab1378a2e4a7e310",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48e005b0fc2147c190f30f4f3119e49f",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c77b7818963f4008ba204aa00e7c45b8",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "0a9fb078d90942d7ace421c23c480fb8",
      "Inputs": [
        {
          "Id": "fb7c0fa107b24643bb2109051a108f30",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "661a52f5e8e3484e9245b64487d13f04",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "7e699d92d83e4ab68b890ab0bcb4339b",
      "Inputs": [
        {
          "Id": "5e656fb245aa44328bd22219d1e63a1e",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "579488d7f29943618256368c0f785053",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "144c78019d3c4516865957c809471a6b",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "478fa0c359b845529cc1ef9c424b5cef",
      "Inputs": [
        {
          "Id": "0f8df20624dc4cbabe0cd8683e7394c7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8992494391e74a7c8d4cf7b9c4250bca",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "235f417970b24c6aa008f41361fcf07a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "be02f64a33ce4f1cbfaf930bb178948f",
      "Inputs": [
        {
          "Id": "f933a612c8474c3c8c062de99f7803f8",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0cffbf5a86e74084904780ea785e936d",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6dd1c1b3437c4397aa9b5736397dbff6",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "19636cc28c1c41568f5cdb533a808896",
      "Inputs": [
        {
          "Id": "cd68da1c46164dfca42b5ce487dc6f66",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd1d246ae0334d87a76396285aca1d93",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "056dcf4dc15d4becad6d7705b112c770",
      "Inputs": [
        {
          "Id": "33479b204237410d849221ea9bb16453",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc12cc31bdf443f58fb56431dd5700e5",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "35ba10ba63d643f493faa8e253ed9a49",
      "Inputs": [
        {
          "Id": "03b19f26f1364a5fa1d8cc753fda9a41",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c5f9ba2be835461899a51adb2c0ce7d3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8915c12891dc41aba4905554941ff2ab",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7dc642d6bcb0411883082eae1a4514dd",
      "Inputs": [
        {
          "Id": "560c4f87b503493cbef697c372d0aee4",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7077b156755644778042b53eeb5b9f39",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "567f69642c564cab825893536460a8b4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "a81500493e41428f92dde8b530452713",
      "Inputs": [
        {
          "Id": "901a4e5feed1478da9e5295b91ceeb1d",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cb5e09edcc04a1bab88f2c6f5d63b0c",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a35161e032845a1b5250ce587004e9d",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "0bd82bfde34348d8ad5ec689d17f8e6f",
      "Inputs": [
        {
          "Id": "2b826d89bb174cd6a6823c0ef59b0d71",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fcc95c4b1e847dcbff0467a0a96f90b",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2c37a1e2e0b4520847651ad6e8dc2f5",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "edc07693e3494048959b43be984b19c1",
      "Inputs": [
        {
          "Id": "775012e335aa4fd0a7a7be96a4b969de",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "060601228cd24c77bd6a4ffd116ebd22",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64c23292576445e5b8413125f518b5c0",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "48bc066cf6554b9b826eb093dc0de856",
      "Inputs": [
        {
          "Id": "efb7e7e22fe642eb847448f5da81971b",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93e34e143d3f4b1294401e9a5a569ee1",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfb1c552aca1401fb4f2efea2d9b0480",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "8d50f6b900704193b0524805c1cdd8f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "60dcef25fc5046e898a6f3da7f6ed8ea",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "4f5ada85112f4a29802a8c42919a1580",
      "Inputs": [
        {
          "Id": "dbcd6dda041c4ea48c67ccb22a068e72",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5e66571119964e03a3ce0f30558176c3",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ced5443d96a546d1bc452f26e9d9c4cb",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "3bb83b1fd22d4579806b4483aec710c7",
      "Inputs": [
        {
          "Id": "dbbd1f57d1da4eb19374a8b5b8930bcb",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3f795a86143488e868cfbd680484ab3",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4606d2b626c94dbf9093a591b979474e",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "15cb2ee21a1c4be190a6d2825ea72aee",
      "Inputs": [
        {
          "Id": "086ec48c86424054870828e9bdc0b6f1",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5f08f90a3d94b50bc684bb4d0be8a25",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "78e038fe5edd4795bd0e8afcada697d2",
      "Inputs": [
        {
          "Id": "b8f47eb3c3b2400ea0e0e405eadb86e0",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "226a0f6965224e5eb61834746cc8b30a",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "106b520b153949eab4acb38bc2c7534b",
      "Inputs": [
        {
          "Id": "13fa2d1fd6644cb2b5dbe5edf9596339",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f269ce3806f04718879bacf8d7e47c33",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0950685d05a42c1b670ea2cefabf9bb",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "aa2709ffa17040228ff6e01630452821",
      "Inputs": [
        {
          "Id": "f69f29d3694442a7a9d751640d22764e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bd7ecb764de44cd9d1f81b06416a727",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0567d17f2fc34dc6bc28736a4f4a12c1",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3249135edfc24f49ad287a95c3053f94",
      "Inputs": [
        {
          "Id": "3519d8c77c334d7fb98bba7c5620813d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11db57ead7de4a249a45c0c7f06717f9",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d441cb96c4154c838b2a9d31ecbfb2b3",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "52820104dcaa43d3a26ae0bc1f61239b",
      "Inputs": [
        {
          "Id": "0e3776ba706b43908dcf00b105054a6c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eff581c7067e420c96fec635329cfeb9",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b91602cb4b446c693da85d0af1c5665",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "17234024546045fc807e1835680a6b92",
      "Inputs": [
        {
          "Id": "4f2270ebd8d44a4887b75eb907c4bcc4",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cafbc98c95ca4932ae77355a535e918b",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99058861ddf74b759b67a67e9c23de75",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "48e1fe8e4d4e4aa9945c8a1b820e9492",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a828fd1eed714435bda1c1379f5079da",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "095e05fdd73f4f7fb3802bb0bbf52bf9",
      "Inputs": [
        {
          "Id": "854ac4696ffe41ba9507e6c60fa10b65",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b01536229ca748a1a6530c5e3468852a",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "9a391672755b45d18f299ec47d40d637",
      "Inputs": [
        {
          "Id": "b810dda6450948e3876b942e45df42be",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d671f1ce0bc3498589320c90a0a1b1b6",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5173e24fe6514e63834b35c14d80ac22",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "886ffc00d2e34ee7bed109c5d2afc0a2",
      "Inputs": [
        {
          "Id": "86eacda82185495c94bb7fe63c844a62",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d59efda9779e481dbeed9187f54c3e2b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c2cea56d3cc9409a8b42b647f98ebd56",
      "Inputs": [
        {
          "Id": "c201357aacc140d18a36df461e0dc6a7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2db2c2a2573d45c7aa4532be87a3dcef",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a53b93022af84643a8f832566102dbe2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "6bc5b2377abd411b91e8776bba3511d0",
      "Inputs": [
        {
          "Id": "7268d24336604096b074dde29417f7a2",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79490eb1c9d64360a0cd209dd7317a68",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c382c49acd2b45e19807762874b7e9d6",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9ac18d3943a04e06ab1d02d0bda7abec",
      "Inputs": [
        {
          "Id": "9345b8ad21a8415d9d363d5863059d4b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b739ac094f5344939ae090890c2b1862",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f152c7b81eb43d692ccaa2ae974eae8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "cadb8893f3b442a88a930406583615dc",
      "Inputs": [
        {
          "Id": "a2b37e7bfd684c9c9db21836ae48292f",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a110e5973c7849299d65f7e3d6008e2d",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb2ff674f6d747a7ad95327518d8477a",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "745ce91ba924468eac5a7fc5acdb352c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d09bd6b16d624abba7f2b192ead412a6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0e9544eb22e746c3bf906dc404bf1e2e",
      "Inputs": [
        {
          "Id": "a81cb6017c1748dc841c2cef629fd539",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "937bb9b669c34956b75d9827f5a6a498",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af426eff0808417bacba9280f44b895c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "62a567e7e82f4359addef896b8be2cd5",
      "Inputs": [
        {
          "Id": "5c000c6d0300406e83cbfad3b5568a40",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d8263db715e46c3b8805e8190807d7e",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "646124467d5b476c8ab4c03945e7fe2c",
      "Inputs": [
        {
          "Id": "19ef7f7edf3548ad8014a9aed73951e6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5266c575505402fb4d879fd944beae6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76cf5d7557bc4586996e7a3fd4344546",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "6ae242120c2b4f0684ecd1cde6723846",
      "Inputs": [
        {
          "Id": "9e85fdbb265a440693808eed59147406",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e8a4916f50a4fe19494df5c8cea8f09",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d99794ae82d0409a95ae426beac1349d",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "dabad50c2da44713a7206b3380594a1b",
      "Inputs": [
        {
          "Id": "b0d6aceae2f646cda6720f137696cbd2",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fa51643b2ba41658c680a210b0f15c3",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "5e6259cb0dd54d469838623bba21bf00",
      "Inputs": [
        {
          "Id": "bba038bf5ed34e7b921a52bb237b1d92",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e045c5f11f394c35a2e7b275273619da",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4b0e883b14c486a9d58c67e1b4bce64",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9311f196402445d8a303717ed95f475f",
      "Inputs": [
        {
          "Id": "ee039e4c599c475099f3a31919cf7294",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "44e9c63ad2b04f178c4687f2a25cb42e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e913572ae4334828b395edd7116c8862",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "2bf63c6fe3b04d9a8b023bb8c6592874",
      "Inputs": [
        {
          "Id": "4dbc72278dea47f8b764003e13561e74",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb386e806e7c4e2dbb78dd6101469a83",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "b11887d14c594bd8b6675d0322903304",
      "Inputs": [
        {
          "Id": "8a032b2455d6402ab4a925d31500d85d",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c83085f101a24b3babb081f24a734022",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c76a830cc784672bbccd636dad0a405",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "7b851c886eb541be83506e9b086b936a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4cb697a72be3422f9fb65c46de556a42",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "2f735fbdb0114ab59d6237da4e36727b",
      "Inputs": [
        {
          "Id": "3d80cbedef3c4c2fb4bafedf0127bc9c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2580830c49b4679bbd32b43da3725ae",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bbffdc3ec4ff4cb2aab3be53518b6d3e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "mainroad;",
      "Id": "a945f4de2683405e9c08f51433db82eb",
      "Inputs": [
        {
          "Id": "1666ff29b60d4c1ebcac9ab0396b347e",
          "Name": "mainroad",
          "Description": "mainroad",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3390d4da5684c54b923ad8e125f6d38",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a69bebbe6bda4673a06ece4f0ca5d78b",
      "Inputs": [
        {
          "Id": "d6c236583a4e4c1086780231ee9b55b2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a543b563f51c483d88a17003e6f19b5c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09bfa40543b64e9a8aa547b4abc086ad",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "cbee4b9445e849319dbf888863b207a3",
      "Inputs": [
        {
          "Id": "88e4748b0e094180bb17e39df6888e7e",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a53722ec3f3648caae95ed6fb7de2114",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "53af77bb4416475b8e7dc26da5cbd8fe",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "48aaf0ef5497458587603de86b8dd9e8",
      "Inputs": [
        {
          "Id": "872d34d938404f7e9642ecdff1dd6c55",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "01ac071987df4c90a933bf36f58ac4c3",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79e98956cb37433b8833536534e671d6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "fbb5507c6a0b4175aba1c8ea9c10dfe4",
      "Inputs": [
        {
          "Id": "da8844793f64461a967cf526e4980641",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f99daf1f4d74ecc9d2d2e0e7e724e10",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1f236da097746688e1fe92fd34c8c18",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "350457397b6f426dbf78f95a61577f5b",
      "Inputs": [
        {
          "Id": "4b99756e220f4d949681c88e2a5ad9f0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3a418a9050649218e75e8e1f999078e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4a0edcd70a641128ddfa2c6d040099d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "ecdd4d0bbfb540fc88e9535e4181f617",
      "Inputs": [
        {
          "Id": "b1b75435fced40da9f6a23415180ebad",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92f43a2ae0254753ad8b14c6a667e5e2",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc61a6f5ca0c4fd596502f2e82531f7e",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b1b816af4e44481191ac21fc336e2ace",
      "Inputs": [
        {
          "Id": "964652c854d64d0caf93b59757d1b70b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30c0598715204ef2bf550a5b9d8d65ce",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61ef919b1bc24dd8819d2e91090608b8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4018e5c9dabf485798b3c7290c3f4af9",
      "Inputs": [
        {
          "Id": "d230144f07d94493b190bc2b75dbf2ff",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ef75debad0041809271447fd137e50e",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b68c3dfa1204cbcbfbdef41eecd7de8",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f578867f26f844d89ffca7651cad97e7",
      "Inputs": [
        {
          "Id": "1212cda7858a41328d9fb9fed805c3f0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c71c941f0b944298b2922993f58fecc",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d762c3853474d3d9fa1eda09d90c52c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "6f2c3535433f4be9b893751d08761532",
      "Inputs": [
        {
          "Id": "33095b83ff154f4f85372ead9828bfb7",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1993382dcaaf465a99fcf016720a1772",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a3ff16365884e3899257955ceea67ec",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a935c397af684a70b93e2552f9fa8a6f",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "1f61ef8f9e3746a786afeb7e215bca06",
      "Inputs": [
        {
          "Id": "04ec19f15e0147a2b66240681cce1248",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8dd01a50902f4eafada3d8049a9057f8",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "196aff27114e49fd9f9de77902bf9b66",
      "Inputs": [
        {
          "Id": "ecdacedaf6e84c6792a47c6078a6225f",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "bd9d1e4cc90a4f1db652abbb5ff79f95",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5852d0fada44e7ea8ba742b4c18354b",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9255f73b83a8478fb92b747edca34297",
      "Inputs": [
        {
          "Id": "4e7dabedfe7644a398db6b78f66455ec",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "caf8897295a84639a88a8a7db281bb72",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e59fc87724824b5cb2ee4901e39ec625",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "2e199f09d663414faf9b359622938f4c",
      "Inputs": [
        {
          "Id": "26734c4fc79745378bca2380d002af66",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e0c99d457a2b4a858e60522f7fd7ee3c",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c1302d7eb2f4d53ae862682d3de3c3e",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "bc4506b74ca14e6599bbabb41bb98217",
      "Inputs": [
        {
          "Id": "f32a79e837b5485caafa99b0b8b2ebe6",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9f7bf4210a048358d6ee82457aa0872",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "2aeb0ebec1144378ab7faecc06c7ecb0",
      "Inputs": [
        {
          "Id": "62e6a166145a44f3869b37d67c2d22c9",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0be7ecf27c14887b3b5ad48003fe882",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e67ac464ece444a1a9f206bf0a5834e3",
      "Inputs": [
        {
          "Id": "6a2e19637e47481bb620cce5c70014c3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "35b07861ee92494c9fcbf07debe19666",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce3d72260e2b4b6b80f5d608e35f920f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "acd87c12939046e7b15e6fd7c92b1092",
      "Inputs": [
        {
          "Id": "c346c9856a574264a5fb567e5eb862e0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "17e8fb62449d4b2699c0578654e815bc",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5973e1bc470b4c239ead8dbf75f348f8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "b6370e2cfd224b92b2c88611b840251c",
      "Inputs": [
        {
          "Id": "56d28b95ea994868bab6b7454fff50d7",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2b8724a8c6749bd9917493a5c94f785",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62f9099e1753409cbed476f518bb44a6",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "de4ad25478ad47008e4f1323f40750db",
      "Inputs": [
        {
          "Id": "eb313297e1e549ba9e5b1779b7f9436b",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b5db2ae510c42a5bd30e43c9cf009f0",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "859bd985af694d1db52c7f3315662e2c",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "bdb610bab56f46cead81517d14447432",
      "Inputs": [
        {
          "Id": "0cd55d2796f1490fb1ca035cfbc5410e",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7bf7848d7914881976a8f73d940249a",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c36c24cda304c4bacb17d73bba8247f",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "ffa6a828ec1e43459c8b0752051539e0",
      "Inputs": [
        {
          "Id": "d1a5340b696a4b1da8db79fea235c498",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3c3a55401924833a8df75e8439ffc0c",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0120cf53e7e8454190b31ee205a1f08d",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "8e181b0f8d7144078d0c750b4f34fde7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b9b8b4999ed4f8d9cb1765e0ec28fc0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "de484eca01b544b088adc2684daee429",
      "Inputs": [
        {
          "Id": "03a7d0b91cb24450861d1ad092a18bd2",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f237265e384942ddb48eac79bc08a718",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1be5b7640524758a4ec21d586f575a6",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "caee770c87e1463fb786a2d858afbc62",
      "Inputs": [
        {
          "Id": "14f5b66b932944a684e209afe10eace7",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5113a6aa79b746dbb32b3452e0f523a7",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a40556f0c8554ec0a732da5b873d31c6",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "7b5a99dc16574a5db06c139a72c94dde",
      "Inputs": [
        {
          "Id": "ef917eaf941944dd93fa448169eb813a",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af70ed2772b045eead8ec40b4ca47122",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "050cdace957d49f69fd994097172aff5",
      "Inputs": [
        {
          "Id": "e109cfd480804433969021c871c3f68a",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e32498ba9fe94ad7a082b7f34feb5390",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "370013e2dd9e49c29fea595486dc34ca",
      "Inputs": [
        {
          "Id": "b8387023cef74437ba0fe4cb9f4b4922",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b96e8b1e844485581264e381ebe4f86",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e32890db99934fba9a54a4d40d98da11",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "1f472919beab44dcb26a181a595e6452",
      "Inputs": [
        {
          "Id": "65fa2dadaeb7430fb709a0258dcfc215",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3db385e61aea448ca70087c0a4dadb25",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "05881eadb38b4b1882739354464bb8b6",
      "Inputs": [
        {
          "Id": "b5006c24e78a4355832be0ae762a1957",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a20eacea96c84f7d96f2809f9b75dc1a",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9caccb00f4ed45798f07aed3d4b60a56",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "6d1f3a91e8434c88a8296b5224ea1a4a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4ba3773cbe424f798c3003a9d2f913a1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "d2ffeb1a819b4c6e9819ee2642505994",
      "Inputs": [
        {
          "Id": "371c90084bb84c2aa1754cba18db5051",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5f7c0ef5b9f43e680558960f896d270",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7317508004e74db68ad6c445a8e1628c",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "07d74aabb67e41f5aa129cc2cb440f0e",
      "Inputs": [
        {
          "Id": "e7a821c05c3249b5821bac055e21f7e9",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "194c68716e71472abaa353ed97c501a7",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39cb654027ab456ba51b55f4bccc672f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "c70ffcdec82b4ffaa24bb2422c40a658",
      "Inputs": [
        {
          "Id": "24c04c3254c7446891545e5a9a161555",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "80d6c836250a4c9185d4d1e766103075",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cb301919b3a4405b71e27d2976643db",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "0ef8d8ba65f54d5fa7d4f8195261e39c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c9058a308ffd4126a9e304c03906bc1f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4330207919624765b40f6ca8ad1b3847",
      "Inputs": [
        {
          "Id": "a38d3869afc843ddb630d31dc133c137",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "80dffb4f813c402fb6c98ec194862d59",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "319f01a9e14c4170afefe6810b71d9a3",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "7f8b32b92b3249189b136ea800796c35",
      "Inputs": [
        {
          "Id": "47c5ead6d5304e26b64d69ac35c1cb3f",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66eefa303e3e40c4b0c08524177d6238",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "be5d2d3ca07c40dfb09caad68e31fdc5",
      "Inputs": [
        {
          "Id": "6a74adb7bbe0452caa252b44a2d670ac",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62cfb540eac54e728831508e8c073ae9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f003870b20c447e189b837e5f4bf83af",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "6f4f1d8703f44f17b7c9afc525c4bca9",
      "Inputs": [
        {
          "Id": "72988714fa234e8a90a88cfd01be54a9",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62f8e4e919bc46e8873dff5bec64919d",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b27efcc28004998afeda231f3216f57",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "8c64f6c730bb4a599ee61ca46a30d844",
      "Inputs": [
        {
          "Id": "816c8c17555047bdb67dbe57dad480ef",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cf87fd0c0414ceabc2d644be35032b1",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f16a27bba0e0422f86477de5f4fb939f",
      "Inputs": [
        {
          "Id": "a0e90aed7ca9479caca3e861a29517ff",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1f644e991eb547afa14f3d8cb05ac91e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20a3e33e2515404195c8acbc30f1c255",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c36e444a954a4a88b54a483ccce2f336",
      "Inputs": [
        {
          "Id": "a2f880a3a36347779a5eda96cc76a87f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7aee1f2fcc714b34b348d2bfa0442cc7",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8203156a0ca434a8a67f8c0887f765c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n2;",
      "Id": "62914d6b6eb940de96c3e634292c3757",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c633f78905c4bce9795d319c4f81fbf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7415c39a39144e7aa3f7c0485dcd2b8",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "7e8726a95734479b81c57a2f50af8372",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c56571440c9c4de2a422702a9f275c9c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "064a42744ce049359263f10b4b6f546f",
      "Inputs": [
        {
          "Id": "e20460053d564f6fb99b3263e3689fdf",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de41fa8ed8c949638fa420510add49f2",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bef16ce0738346258525759e478fcf8e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "e7cb037d78584fe68abe1785e46d9af9",
      "Inputs": [
        {
          "Id": "03d55fa50ffe4824a855c4d077373b9f",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f162cf10373549fdb05cffda16a12818",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b83f6f64d18f4b5e9471fa1ae5536111",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "18f5148fab9348e185259434b799abb2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e3ad8a8209284fd7ba24bd26311adad3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "34033da6768f4bb89d01ee983f68cb0a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "21f686b1024d40a6861cc11718a5d86a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "6e7803828083403086edcea6c190bafc",
      "Inputs": [
        {
          "Id": "3ff0cf64123f4f948884bf64934c5477",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1f57d4b8293443681e83ec594143a08",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c23d6fc201114df0ac2107ccc56c97d6",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "52faf53087a4449a88d74690caacb53a",
      "Inputs": [
        {
          "Id": "5d9f4ee56b714703b4e8845daf1c3011",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bb9b26ccc79454cb7dcc0a3131adedc",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "98b526ffecf24310b266ef7ef724547c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f0997925e86042deac28897e418c290a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "1d8f0c4d950e4bc38edad01ca03b94d9",
      "Inputs": [
        {
          "Id": "654b8223f4a841d3a583247f4a5cef32",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "750af4c894c943578d3a135ec81146a4",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c7a6d5a01374bf297036a2fdf7e6045",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b13c906d2d3449bbb1ace52b61cd2b00",
      "Inputs": [
        {
          "Id": "ee8ef053f187449797ab0e619e8d6eab",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15ab7cc042554e3da8642cd57bab4fa1",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "603aa40a04064188a82ca56d709627b6",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "5d3c275f44b4448587a041521e838d68",
      "Inputs": [
        {
          "Id": "99fd96c24a4a464b8b20ad5dda8a5b4f",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cd715a3b1d746449f89a126b75c0c32",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4bf54f460ef54823a4ebd8fa17c2e0ab",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "89032c67c71f4462b2b6b091a4269ad5",
      "Inputs": [
        {
          "Id": "41fd7ade7d7c47728c7ddfb523906b92",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d91b0e5ee5e4363a1e97de04cb23934",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a29548b514fb4870ab618634b27d2e98",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8e0f379d45c412eabe7169ee5342bb9",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b85f458911804d2a8f9909172eb2c5ac",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4f467dcdbc1440108b9f3eb66ae94c95",
      "Inputs": [
        {
          "Id": "5432942c391545338cb50597df4df5b7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5af5653c08ad4d61b34ba4c216843eee",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86ef8c7b5df94aadb6e902be7970b040",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n2;\n3;",
      "Id": "5d11f14e06d448dea665cd836bf8bb75",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ec3c2c4d8d2a4f3196bbdc402e8f7d9c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff3bdd8186404c759c248f6e850ecd5b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1470b5fac137443aad0a14005ebd81e5",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "807a47ee8c7742ac93c2f8b6b4a2e7e0",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "70478537bd8448bd9b7c55640ddc1138",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4376c1e60b0d43998380890b8c9d8a2f",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "90f13639dc8a470da0d35a643bfb8036",
      "Inputs": [
        {
          "Id": "d2941a088527491c845a263f50d1d6b6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b913e16177464ba1b3acbaf614ea8b44",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36b83bd4e28746c6a2adb3d69fec1173",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "28881d480f564a25ad1f88422874cb16",
      "Inputs": [
        {
          "Id": "2c877d9b91614bc5987ce072ca087ea8",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b607a3cf744b4e5fbd51efdf5540ee40",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ac758763a6240cb81c8fae46c2965b2",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b279d57a8f1b45beba77433198be7a35",
      "Inputs": [
        {
          "Id": "ce60da1954ad4d9087a83b9949c99221",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82913323ef3f454faf41264c7038d434",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18fe3dc6a1a649aaa4ab9878bb3f6a1e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8d3f2259a9a6435d83fd31774bbfd67a",
      "Inputs": [
        {
          "Id": "536ca92b315744caa4378a9603f2d15d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "106e0a56efac44b0bbc938911e445325",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23664cfcdeb7465291c8edca71bb45b1",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "0f02cf88baef4766a9cbd38286fc8b9d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f9c9c530453a4b2480014ed82a8fad87",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "ec7ad49a8e2d45d8a54f74f1c764720a",
      "Inputs": [
        {
          "Id": "2bec2fcf74f84e42afa5ee70a8608e8f",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "652dae675571426f88e625d46142a582",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc35d03659af417db21182a3b14d557d",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "ed3476acf2254f6f85a64a74a3787ada",
      "Inputs": [
        {
          "Id": "d59beb8a3b484263bbd52c4758921622",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ec1c2b7a77e46f49f947aae608777d9",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de319545fc2047ec97e0ccc5dfe19b86",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "efd3a53499324d678bdbf308402915b3",
      "Inputs": [
        {
          "Id": "4e6e90e4af014d5fbc215ef9359a142d",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86f3193c7e4647b3a1b2ab6400c17657",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "264b2aa2261a4eea80fd1b4ccdbbcf09",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "35cc69b2a7d14ffcad7a3c2d039f7593",
      "Inputs": [
        {
          "Id": "ec29192e55e341249dc09826b921d514",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c014ba6c10b047399989fa050c9d4594",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a1e3bb110a24ff1bb8dea50d81c11af",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78bd743272c14fd2aa30b40396f3b47d",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c752d073272047cfa954000e188949a4",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "a9a43c81cf184d4c93783de91b29e2fb",
      "Inputs": [
        {
          "Id": "39a577f15a7b445e82674de7fe32183e",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d81da3791ab344739dd3c5e821e206e7",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "bdf78d96a6144526859a1a6a2a826738",
      "Inputs": [
        {
          "Id": "4b0d38dbb638481eb5559526ac976fba",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db3c123825cf46c6b650688781b9b311",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b17b6559883d47d99559fdfe15cafe63",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "8cf1ea1ea95442d7a7c7544444cd4431",
      "Inputs": [
        {
          "Id": "81eae7dc3c0944fb990e98b44efc0d53",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69d7c5ed559d492987f42bf13df6e26b",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80d60a54474842e9a51f86b43a857a21",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "152b9e015c2c4946a9a5cfebce7c6ab7",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cfb70470973487f88df3b021849f755",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "63b8270965ed4278b76beead6e0fdf0d",
      "Inputs": [
        {
          "Id": "f3dea113b3a645f093b4f0892e51041a",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d68c3293b474f659caac34c6ec508f5",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a00e7d2981545a0b50ac732e9cee7e7",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "0a36694eec864da3889938d417756300",
      "Inputs": [
        {
          "Id": "43e59a61e49a409291a9f4df68e275be",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "718e15370c53450fbfaac73f2baa3dc1",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "cd0740ead0e84b16a1ad1be82bcb5bf5",
      "Inputs": [
        {
          "Id": "07e60102783a48128f600033def04845",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a9aefd2a7c748c4a635af94312afe21",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0500085b25f4426ea5262d44dc08fa4c",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "4e6dfa93f47d40248a0b0677b379fea0",
      "Inputs": [
        {
          "Id": "89e2f1da1b914685bad67c9527855bc2",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b6155d8b4a340c08d66d6b8ca48a19a",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "780cab6e80f14e739e2a5cb23ccca2cf",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "7e573e96224e4a44baaf79a1a9fe71dc",
      "Inputs": [
        {
          "Id": "80052f1ffdf34180bbd00054b0bbb03e",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5eab6b05dcd4c78b912857ed52015e3",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c282fa07fad4cd7abf10ca5524911fa",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "bf6aa31bf2004e4f981f3d19e58a10c8",
      "Inputs": [
        {
          "Id": "0dba5ff335434b63add89980d10fc5b5",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10393bd98ddb44de88c9672dcacf9f69",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e290add2311846e2a76bba71397444f8",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29762353e70643e8888cbef2caf2a9dc",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86c4f0507a084279ada83c27b37ae432",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "32b26878486643529b24f6fe24dce017",
      "Inputs": [
        {
          "Id": "9a31e40ec7f14113896480f6e6bb0a57",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d80496a30ef498db3f743c3ead13dca",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46ddda4bbce745b7a45a5297151d7d02",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "401a8464f1444d32a23da1e0d82e248d",
      "Inputs": [
        {
          "Id": "406d30f1d03c4f2f9523ac76b127083f",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1dbc8315e92144bd92eaaf9216f140c6",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "c7c5f7587ef24fbfbbd28cf76206b720",
      "Inputs": [
        {
          "Id": "296f5083549949e68ed9fc52e96264e2",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e266c45fbdef414e983e26786c40ecdd",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6353c4030d124892bb96d45ec4a27fdb",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "08b1eff5595a49bebd4a4bf22393e9d4",
      "Inputs": [
        {
          "Id": "354b4109255b49e89db4dcbba29df09b",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51d3d040418141c08c241a433dc19c62",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab6e3c21086f485e94e57fb36ef64a13",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "6a82c078a7954c44a735f66ae87c6208",
      "Inputs": [
        {
          "Id": "c817f6f7899d4ff298c2c7831e28edc3",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eedebee87ed5480bb992c7f526411f0e",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c64b322cfd5b4850b53d75c788b581aa",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "556fe60f605a4d69a71ca1bc5e0def83",
      "Inputs": [
        {
          "Id": "281af220c4e7460c990ad420b1bb32bb",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d11f5cb2ed5421cac35d55ff70cce33",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fff926799b2402aa6f0fcbc8bd25931",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "34873fdaf659420386ee12ca29922836",
      "Inputs": [
        {
          "Id": "871270e5be6c4a5fb1fc560536734ae4",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6770dcd894df46e4b0b76abf66c73281",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33096961f21346f9b412a2c7b39be607",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "6f0ffb7a2ed24736982b5670dd37322e",
      "Inputs": [
        {
          "Id": "790735458c3048a1960048d1f4de8083",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b568d869bd884e169bef8a5510c9cf18",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "726152d1d41643c1932c1be6b8d9ef50",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "0ded9bf23a8f40a891fa6d63d4429dbb",
      "Inputs": [
        {
          "Id": "5d7a383da9a74929bd8d91f258cdabd6",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0612106d260845008b8f4a36765365b8",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6c0cb18104641a89e2d11a3249beaea",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28c9b45708464dbdbdf338f2f925da7c",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c6bcad3d3e04f4f8bea572f13708e82",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "ef1186f7ac8e4ef68ae5696c345c5d9f",
      "Inputs": [
        {
          "Id": "ac43ce19ff4249218a47e6e6823e22a1",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64965573d46247ee99067a51e15bcb79",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "229abfb2855f4db78f4d96fc36e44dc5",
      "Inputs": [
        {
          "Id": "70b0eac4f9d74cdea515e7d7635a2fd5",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f9152cf41df4716894c4bf21c4b16cc",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "396e9c4cc58a429684ab32551eaf2119",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "d687fb5008a940e68e6edb8d2292eb00",
      "Inputs": [
        {
          "Id": "b1c4536cf989445db296439c0e5d2f4f",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "236dbaa6f6a344a29c79e3569745b305",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05396562b7ec421c80e6d7dd2d9a2d79",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "d72278645e5e49adb3a16c2f0de0a590",
      "Inputs": [
        {
          "Id": "234f2644df864b989ff8360d3b910b5e",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "101b81ce6db847a3a2c796695382519c",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3482192fe3d4431b516feb9461f824e",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "9c4f09550e2648e8af9af9e42ead99cd",
      "Inputs": [
        {
          "Id": "53271795edff4c889ffc882cd94211c9",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50b80e8ddc3f4b24933c0690a79dafa8",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd0d87c381d94b66b13c81b492e0b413",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "ff3641e083f74f79b129a4c10e5a0304",
      "Inputs": [
        {
          "Id": "aa43d129c2a54d5fa3fb14efa812cfdf",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5003abc7ecd546c096be0a0aa88443b2",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff6133a1456b4b6b88409600eddf1fab",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "416fe94e89b04413b380561c24e825c8",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccf6e66e1f1c45d3b4455f3d5b852048",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "08720d94e4d3496a84ae0c13e599b0aa",
      "Inputs": [
        {
          "Id": "10f2693854d04ddc8741e946b59828b0",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "498e46f13e9d4ddabe71147095f134f1",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Empty",
      "Id": "d7a42158a30b4271a5ee3801c9a458a3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2a5584ed5ae94f6580b71f9eb80c6678",
          "Name": "list",
          "Description": "Empty list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an Empty List.\n\nList.Empty: var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "3be0d78c8e304f50b019e9f339c6a901",
      "Inputs": [
        {
          "Id": "cb8f194cf9854948a536fde278148b41",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b816881127a4a3bbc73ea165c6cd61a",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e0c38a3cb7e42188208be3bd16da369",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5b52c07b608401bafb5849d33171f41",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18bb038bd30445a1bb50f331828c77b9",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dec1744107bc49c991498fc415c6c1b6",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7358452803b7467a9ea20e3c28f6baa7",
      "Inputs": [
        {
          "Id": "b51b83efb5d6462f962137234de46684",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdb9262b0f1e4099bc1ca4341c8b475b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87480e94e3a34b8a9628dcd65a4abc11",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "6ba084c6f70b4348a0abd8361283fd68",
      "Inputs": [
        {
          "Id": "8a641df263274ea8963883e8574c8360",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3b173345a86462d893272ec8c0fbea1",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "86f2e0ca6f414281b05e33fe8c202d03",
      "Inputs": [
        {
          "Id": "02b50663466d43dd90ae3671d2600d73",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e1bc13a61384939966ffc04075b050c",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65d2b7245f364e3fac5f8f4175c93610",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "466790c55c064eaba1e13cd20a6aefee",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0bd657c036b948849a3a190a34a90480",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "95a717f0236c42d9a72e676fad150c43",
      "Inputs": [
        {
          "Id": "93715c7f19704303b3d3de29dc0fc4ef",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e14330242a8457e9b577a0b503f41cc",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85c9a71163a746848f6f48cbcc6e8ffd",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "ee5fd5dec9424052a7b9a748aaa8360c",
      "Inputs": [
        {
          "Id": "702834f19a084ef484a1a4ac7b90cf5c",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4dfe4fcfb6424b949c1b11ea52bd5bb4",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "5f314d0cd0fe4e86bc827ff0363bcfa7",
      "Inputs": [
        {
          "Id": "003d0870ab4e4a36b0fa3832f2158f13",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c3ff5cf12214d70b43cf6484eabefaf",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3011e3eae00441a892cbed4a2cd97b1c",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "f721fe9a76e14a06a8d7856ce4a63dcd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "86285316a64642449545b715b80e2d02",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a6a28cf66c294c93a3f866be369746f6",
      "Inputs": [
        {
          "Id": "7d82cde16de74a669190f0fb508147df",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "994430c6668147cc9861ab485548b91b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2fa8abce30b42fb983596e8b956ce04",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "choice=[a,b];\nchoice[x?1:0];",
      "Id": "d12117cf5a3f48248cae4880fcca122c",
      "Inputs": [
        {
          "Id": "96a4f5883c4344d9a7199f9b9cfdd0eb",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e388cc3ccc284dc78a626a14832c38ab",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "594c34e736f34adfaad83613aeec397e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f53ff04791c44ab59eeb4d2142b82e29",
          "Name": "",
          "Description": "choice",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ffe04667db041c198e2d326abf2661c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "choice=[a,b];\nchoice[x?1:0];",
      "Id": "5c33457af1d242738433cebd1f336e68",
      "Inputs": [
        {
          "Id": "2fbd920cc3e643738cea90d6c700afc5",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f5a598383d249c59291ce1d9a97f0c2",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76f87ae67a26410680041fc6e8a8e820",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c04967b0aae54157bd21849f31752a3b",
          "Name": "",
          "Description": "choice",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5d7df8ddab74fdb99b66ec417ee9e05",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "choice=[a,b];\nchoice[x?1:0];",
      "Id": "0f5c06f7662043a68bffa8bbc71f1a7f",
      "Inputs": [
        {
          "Id": "49420fd4a2754316bd1d135aea395bf7",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "963c9a353eb34b7d9450c3989e3288af",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3140e03ec3364b5bbd05a1e339baa1e4",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2dca86418454a18a34b76628dbfccf4",
          "Name": "",
          "Description": "choice",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d5b9e177c044b7da9136e508a36bad9",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "choice=[a,b];\nchoice[x?1:0];",
      "Id": "4922b5dd473a4edc88b83d58c2dce29e",
      "Inputs": [
        {
          "Id": "507bddaab2ac4a06929ecf8a23f609f4",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20410a23769f4227a100965e56cc9ebf",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57f996602a4f42c48af5d8dccf995d23",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca9a08bd5949481284347ff568819a23",
          "Name": "",
          "Description": "choice",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ef79a81a71649b7ba13e99e4970fe1f",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "choice=[a,b];\nchoice[x?1:0];",
      "Id": "d0314eb243ed41c38e39869949f3358d",
      "Inputs": [
        {
          "Id": "a3e9f8a610e54fcaa271443770820ff6",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdce254ecba948128041fb9e9994aaeb",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1f16a57e2d14b5890d22cf3966876ac",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c050aa228b444dd09fdcd24aebc989a2",
          "Name": "",
          "Description": "choice",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69e167d50da74350a8b0b9804c78fdf2",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "fc59141ce0344b8481b98c59c0f066f4",
      "Inputs": [
        {
          "Id": "d514aebf94f94862817a455a5b6c0319",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "921046dd2c8f42578e9105bbd78a5c08",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65d43b0d9114473cb94a2385ece95bdd",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "836d4112411846528ed3665c049b5a0c",
      "Inputs": [
        {
          "Id": "02a7bed637844f898812ca7c810e6787",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce5ab43ffd2d439e8bc6b045e0f2b9fa",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86647f8a1ee546d49eb398b22a3bb0b5",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b8dd97d6e35c4afe8e54551309d263d6",
      "Inputs": [
        {
          "Id": "f495bac52e0c42d19db1a7440f1b688e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "372334b7a8e2428da3bcb7c4b738159d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89ea8533f85c419e9797c65366e1e36e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Line\";",
      "Id": "4a0fc9301f0d4c17a4a8314274873d98",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "96136a7cbb1d45bc84c7b7f79f461e03",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "dd93953b02064baf9940e871f49bb00f",
      "Inputs": [
        {
          "Id": "d55f7f491ea84729b0d087e9c76c8676",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6be2a6813e3347cbbfefa9e77479a3c2",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3200e4724f6e46a0bdada30bb2e33176",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52a27cebeb70470c8dac7e46ad2e509b",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "af499c19e12547fbabf20c722a1e2ffc",
      "Inputs": [
        {
          "Id": "9b2d3896610e419baae7bcf85bc0e2b8",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebfaf648485042ee89907be6500eeea9",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "62cbf94932df4de7b8f2a19147f361e5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1286c1cea9934eb181ab4e7bc30af577",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "266d578de81f40e197e4ace64344cdce",
      "Inputs": [
        {
          "Id": "e015b06afa1f40489ab87c9f898a207d",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "836b50ac9ce046c1b94863e8ebcb4c0d",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "868c3ea9b12c442fbad5c6785a9c3aa5",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8b58eb1d0fe94acea4ef37782a3b107f",
      "Inputs": [
        {
          "Id": "2af57392859d46b3bd7f247c7eaf7e84",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56621ba3c8914023965cfc29eecb1aa0",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5e8f80e7c1341f6a892c31af72751dc",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "81bcccf982de4dd0b2cf662a3446796a",
      "Inputs": [
        {
          "Id": "b154c9e41a4241d8ada63d2ef2c43641",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "713271c6274c41f48106f64422fc76e0",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea72564163ca4898969c5ae9503a0c7f",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "f4f9cb4631354068bdf093d8a328fc31",
      "Inputs": [
        {
          "Id": "9a6e8499fd75442dbf4aa2a71d489af6",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "804b0ae52f314e76a9cb62aeb5425913",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b67153160ed4903b99d009cd4191f59",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e36b746bd7454f38b4acf9281fde1871",
      "Inputs": [
        {
          "Id": "75661be2ef6f4ccbb0f01056fddfdc4d",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3289ca9f67442668125b0842591d615",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3742fc138c1746e19923e7981d0b0ce1",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "431d033845924ffe9b8b374ac344a903",
      "Inputs": [
        {
          "Id": "ebf3842881df4b50adce410ddce7d046",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0faea3cfb69f4af289a1c9b993230058",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02a414142f9945799ee2b4fd8930a9a8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Line\";",
      "Id": "d23112db46154d19ae168ddbc754c8c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3b997d9d8d744effa4af9621b304eaef",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "b01829763961407b82fbfd713cebc2fc",
      "Inputs": [
        {
          "Id": "e9d19f6ac9fd434cb13820e6abedca0b",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce4a9837b25d47bb9bdc77eb387b3d6b",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "147b4dc9c1864326af627f47e1c652e5",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bbd0e20682448eabe8ba5fa796860d8",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "af5a7efe3a994e799c306bb00a339c05",
      "Inputs": [
        {
          "Id": "834ce85c5fb0490ca8af4ea23007190d",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75c509b617b7431396ccbd09f1b09af6",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "fc9a3453843f4ece97f05bfd85993285",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee4fdaa9e41b46808fa6b09ec3fe1ab2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "c1b72850619e46dd9142fb81f9809793",
      "Inputs": [
        {
          "Id": "d7b8a35692364e4f955030e49f65b121",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be427c4a23c54c6ebf7dec31ee0af8d4",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1827e3651cb4259acb381baa157729e",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0940e4aefc7e411c90495cf407a1fecc",
      "Inputs": [
        {
          "Id": "dce5566d07ca4632bef5ae6ea991af51",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "937092de08284f26ba7a3675b4830c83",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43f27cd037d542ac8d9518c2fc0913b6",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "cdd007a1a5dc4f7bb7a98a624ac3faff",
      "Inputs": [
        {
          "Id": "07848c6d9d2c407b97d4079a715ee627",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f3c58c6849a49c694084f61369e5d0a",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3dcb7fc213b9464eb3b8826f49323a43",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "curves;",
      "Id": "c5ff320e73fb446e833e192bd38d5639",
      "Inputs": [
        {
          "Id": "9d50126dfb564dacbac04ba3f4da6baf",
          "Name": "curves",
          "Description": "curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fba346b01da04023a0c2579c59883f9e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "0a7d5028727e4620beace58abc3e228b",
      "Inputs": [
        {
          "Id": "070e5efee685454491cf5db647fef21c",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74ab777df93d4fd8906c4b6ddcc544d2",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "18694277afd642e9b870563a3d1bced2",
      "Inputs": [
        {
          "Id": "ac4c1d92c1e14790915d943f37dd9646",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0194eb8ad06e42ce8d3c90e59e3fdb51",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48ff6f7d333843c68d9fe40792501f19",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "ab52ad4cbe41484598324c0323249f5c",
      "Inputs": [
        {
          "Id": "dadd06075b1849c8b2b1976cd3d3fa86",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9323d3c759714c5cb07bc2e6de5d7bb6",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "e1eaaf7884ac4c3388cd3b14ada334ca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "31971ccd13984a28bba43628002e38c0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "13795b269d304eb4a416989ac0bf068b",
      "Inputs": [
        {
          "Id": "2fcc2ad2afba48a8b6024c1a64203a9c",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4c89ed573f84679aab6c73f0f9df3d3",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e939b5397d440c3a8d0068a44e8fb97",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c5138acaa8e648348f1c985d0b1a71f6",
      "Inputs": [
        {
          "Id": "521b8352764a4a26803b53363b92eb72",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7e1d14f816644bc9136766722d3a904",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd4fba456c48463f8aa4134ebe0df884",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "02720b19eba34fcab03ea6b040450f63",
      "Inputs": [
        {
          "Id": "28ec4afc5368481d8649cc580e089650",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b4967286b054f388d7f1265844d01f6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12c862c774394fefb70e875e58ae22ef",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1dc7f1ca28d44b8b88aebcf63bf9ad2c",
      "Inputs": [
        {
          "Id": "6854d9869c744a7faef42b3f2f45a691",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d000249cbdfc499185bd809f6f7764f1",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6750ceb0295a4f7298d562e9992a840b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "229c801fc9504a448c6db581051a27a2",
      "Inputs": [
        {
          "Id": "db2801d14b034e6a963b4c5ac4783e21",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2abcc284b7a1473d849083cc836c8966",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01b388c37b394272be4abb69ae8205d2",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "0c768c59c4cf4d089766c6abab48d09f",
      "Inputs": [
        {
          "Id": "ce67c4c8e8a34a26ab4ff181950fd2ed",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84069ceb0feb42c6a2dc346f9ca918ce",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8054ce1163a54a07b079cc4c15a73f3e",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "876d429c45b041e9a64d6c0b3c840454",
      "Inputs": [
        {
          "Id": "d4a3cb5518b4473c9d2f3fdb0973ae16",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eae67324adf34d919bb301a92077178d",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Line\";",
      "Id": "a8c31f11bccb47e487ecd83a452bcdf7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1e56064b82aa4151a3713b60a36f6db8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "beec01683da2411dba2bb96e0ec0f272",
      "Inputs": [
        {
          "Id": "25e94ccc3d37464c9f2fb068afb002dc",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58381f04b0584fcea3fb7e6a5b2b6de8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f20647351da4717a9775910c73eaf56",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "9634ca97151041d1b35427436f69c9bc",
      "Inputs": [
        {
          "Id": "a6bed46f68e74a81ab6c67658587aae6",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66ad3af766e84fbe9187ecbf721a7f68",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "700f4a8713264b2791acebc6aec9b58b",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f0dbd9c57f84dfdbe240a8c0d8417ae",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "707ab92987a44b3d8811f2097f899607",
      "Inputs": [
        {
          "Id": "ef521ea85f7b4dec95302b0eee357926",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbf8dd3ff0464ed7b60643eac672191e",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45372566ebcc47169613fe4d8e5f3288",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea55402a2321496794b1a3bfb95fa0cc",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "80552ce0e42a4a80b212e0329a2ef29c",
      "Inputs": [
        {
          "Id": "c3121dac146d4bd6b8dd930f81c0e921",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "928a44c000b041aa9de2d838985f2de4",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32dbec24652146318f4f74eba5beb027",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "1af9b7399df747169e7825c71ef1b529",
      "Inputs": [
        {
          "Id": "b216c90cf8504fb0ad97c02e259a8e02",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d249a5b9e35b40fda119fb33f4274794",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0122aa40c55941768c2235c49803b806",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "18c7c84c3c10443dbab6656e1b994eb2",
      "Inputs": [
        {
          "Id": "81eb60cdd24c482ba05848bc3d2cd506",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4653fe3428af44b7824588ff69698862",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b93a55d2346545d684dac5dfa5aea7b0",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "3250dcbe724c41c08532b70378c54d34",
      "Inputs": [
        {
          "Id": "68f516203c8349e2b53c3a4955147ed6",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "090be410d45148c8996a6ddff2572617",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57e6f7923bf74d1d9af20eb8d9c700f7",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "592557f1fe1d490f8752bd9a61739732",
      "Inputs": [
        {
          "Id": "82ddb7b1697c450eaffe4b55a6acd678",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5baadf873076442380abd5b30e8582de",
          "Name": "function",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85a1833e4291422eb3fdb40432c38c31",
          "Name": "list",
          "Description": "Mapped list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "4127c464fdd04428822fa44714f111e9",
      "Inputs": [
        {
          "Id": "43d6482cfc124f09acb0e68c31402edf",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04af3f76efac4f229e2edf1858f5aa88",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Line\";",
      "Id": "39ba0329037e4d12b5cd1ce7393ba242",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "97b82805c78742ce802b482d79eeb733",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "11e393c508264e019e0c0a42072265fd",
      "Inputs": [
        {
          "Id": "092663761bc34e47aab26f95906c2aa0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24f0a2918934436dbcbf3157796104af",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cba84c17834444f2a6c649edb35235cd",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "05d3dca482824165a843b007e38d837c",
      "Inputs": [
        {
          "Id": "4971e84b90e64724aefacb6889e92de7",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "265a85a5b53c44bdbf62a5a3a65212a1",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de04086d30fc4a00bfec5b31a1715e98",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62debdc0487145f39b4cbe9a7f23ac83",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "f9fb22964b054df79343fe6fd34e27af",
      "Inputs": [
        {
          "Id": "ec538b29f3c54e0b86dc06958ffb1040",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c00905bb4dce418b843995d8a03e6f77",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdaea91d0aa84cf5b37e568e8782e80e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0eb186b8e51b46ecadb2538fa223805c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "d605ec094c514ee5b851bd37c2570c6e",
      "Inputs": [
        {
          "Id": "43ad859294bd4932bfd939cce27ca892",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e73d07c8d544f31957ee3828bafdc4d",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fafd00ff77548c186c3d4b41e2a1bff",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "cc2238c7bb304625bf316d1ea073348d",
      "Inputs": [
        {
          "Id": "849370f61c1d48e682ae3585df08ab89",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c3e6c9e732bf4be980784b86dfda1991",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfd70767fd6a43f8bb8f53ed0e718089",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "40357ca2484c4a49a0c0e29b550b489c",
      "Inputs": [
        {
          "Id": "abd5a7a99c604beab81a7c9551eae717",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0bcb012aa184701948d57f9f92edcd1",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31fac64b47234779a2903eb95e4eb3e3",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4c811340f6c546f99a2574992941fe57",
      "Inputs": [
        {
          "Id": "c19f53e8a7ae4c9da7c46a3a924acecb",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27c199a22aa3410bbcc42f370b563f9d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d29417eb65d48a999d80314515e1531",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 8,
      "MaximumValue": 17,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "03eeec9b10e040b584b068abf1d7d6fd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5b50fab19cea4da5acb466b0afeda047",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 16,
      "MaximumValue": 17,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "0780277211c6450c984031d1a7d92251",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2ee8dd77697d4b65904409f2dc284c5f",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d28bf6af42e24cac91a15d414a2eb072",
      "Inputs": [
        {
          "Id": "2dc20422f18848daa460e0865bae1f7b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e42ea4dda9ce421699f0eb6e5d464be7",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80456f5802be4c8caa806690d562ad87",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "94a6d4e05d134c49a85377e686781b87",
      "Inputs": [
        {
          "Id": "37766c0da5224452b25f46ed5b4eddeb",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96bdd7da21b94266baafa5794f31357d",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e668bc7c23540d8b33e80fb8983f0d7",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "d75c40ef2c2348fdba4e23f761b8da0b",
      "Inputs": [
        {
          "Id": "9b69fcf76b0340239826d59411558eec",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da2c07a9fb0d4109b324d7c1063dcf13",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35739b12c64c402d80968cfe9e69d77c",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Shuffle@var[]..[],int",
      "Id": "33331fe7798b4b0bae605acf7d1a1f5c",
      "Inputs": [
        {
          "Id": "57bd86b242b64856ba25c41828c730e0",
          "Name": "list",
          "Description": "List to shuffle.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "376de797dc674332a4bf795a43d87d30",
          "Name": "seed",
          "Description": "Seed value for the random number generator.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc17baedbe49497eaf8f06a9ffa760de",
          "Name": "list",
          "Description": "Randomized list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Shuffles a list, randomizing the order of its items based on an intial seed value.\n\nList.Shuffle (list: var[]..[], seed: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 16,
      "MaximumValue": 40,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "07b1a16747484e0d86f6092c2d7c57a9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8a2b4be6d8f4f438a1529a89a4154ec",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "00d761bb25c44984861715d831ccd7d6",
      "Inputs": [
        {
          "Id": "cd6c019114484ef39488096316cebbbb",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4626235bf1a548d2823cc2721ba77cf4",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da76bb6ed6b245a7b12f0782a81f66d3",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 4,
      "MaximumValue": 14,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "ef79868d0a684e16ab331b74fbd2963d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b3cff3bc578c4affba12d89964697fd7",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "0cd51cf6ca474a4b942be5c369bf2774",
      "Inputs": [
        {
          "Id": "e36da73c63b0477aa2f9f303c116ece7",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "252d023b600e441ab047a981b0107882",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f04f852f73ee468eab67f63021426252",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 9000,
      "MaximumValue": 9000,
      "MinimumValue": 3500,
      "StepValue": 100,
      "Id": "4bd12b9b1ba34932a68b838b07f47009",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ff7444cc5424979903a24207fa0e9ad",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "29e766870d8b404c88f18a28d64d6a7f",
      "Inputs": [
        {
          "Id": "5935650314c74082b66dc99ad28971b2",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "941a0fa4a74b4dad8f0bc0354728da1b",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af5f1a8a8d0143f2b74dad2f05d71216",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "c355d99d6e8144898d745874ed7df4db",
      "Inputs": [
        {
          "Id": "af09c9480c564713aa8c742b36c9dcfa",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "627882250c5a45b98098cd6d66d2c7ff",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71dbaf70a6cc4bab9fab503c28d05887",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "96ceb1b7feb644e8afeb81869bf10eae",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f566c3c0319412e8f436aaa23d90f5b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "6b5e425350764c11aa486c35d1713358",
      "Inputs": [
        {
          "Id": "5c23eeb0dfa54aafb79a1eb134fbd40b",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "033023a3651a460b87b34483b5edd54a",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e07ca8b9d69b4dcb9e853909cb653ca0",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "381719423f3c4260801cc569316bc4a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "88e0eed7cc1a474a92ac645760e07242",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "9deb6942f91442809dedb64a52747bd8",
      "Inputs": [
        {
          "Id": "22844be2b2c540c897cf852bdc407036",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c21b490bf3bb464b9161b7acbbb441a5",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "408cb8a9347f47dc9a7642616efa0e53",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "30aee3c273f74712ad963d18dade68d9",
      "Inputs": [
        {
          "Id": "11fe5919fe784de4b1debd84893a03ed",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfb6877fe58f43ef8efdcd5b68681982",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e08a9a84a8e842929fb84aedf5f6c07b",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "2683f0e7b6b24954b2999a61a58fb94e",
      "Inputs": [
        {
          "Id": "67e98208552f45eeb3d77955211ce4d7",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5bd1a42aa2c46998aaa6c3971f330af",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4c36a2f07714fa4859ce5d998f21ae5",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "1feb0a05301b4d9b8b9b48323e1f7071",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e6bb321582d4c7ea41e3017f04fd1a8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "c9603c76d41a4b4e885759285757b515",
      "Inputs": [
        {
          "Id": "20a6c888ae2d40d780b08e664ca047e0",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ad52ce645b44c64ba3878b4a737e77e",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73d4eb01ebbd46aa9ae0d4b80fdad873",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b04cb6f421544e5895cb89f9d23a9266",
      "Inputs": [
        {
          "Id": "7f224148e9174c3aac16fce71461f1d3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18c8b13cdef94ae689044e3f2ef4effb",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2117fad1745c478e9d888eb99f5a7232",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "2fe0e2fe17d248aba43aa9539202a9f4",
      "Inputs": [
        {
          "Id": "5864e989516644c998d5a5e33adcdadd",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85df3c8804824f2b9f1a2073a99460c3",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "87030e6d524a46c3bfcce6b59d45fff1",
      "Inputs": [
        {
          "Id": "ce52edbb8afe4662bb29aa25276cdd1f",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f090f0a582974f88ae5b2962fdae3fff",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6818c1eaecfc4fdab68a7bb8b0474c01",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "b2df5d341620491f9c613c0782a7ad2a",
      "Inputs": [
        {
          "Id": "a69b06e6b5114550bec61907f9da8dac",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01174f296a85453cad5ec5d555ec9d26",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "66ee6f6692d74a4f968368b91c76dbad",
      "Inputs": [
        {
          "Id": "1cd4e87a091043c48d2995f1d3091857",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bcbb1e6c05a4bea936da2f5a755f63e",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6bc685f842141dfbf599bf16b360964",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e28a5c19734248959e226d202b86201b",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ce284535aa9b4ae083e6e9707f47e9a2",
      "Inputs": [
        {
          "Id": "c248036a88d14b70ae6049d826a88f56",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d46977f75e548e4997ddba1ba233e2b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c13163dc2344ea3ba927da5d034b3a2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "86574239c5424714986e774f2e28929d",
      "Inputs": [
        {
          "Id": "07935ff8b3cc45b9ad40435a53ec65d1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd164bd0085d4113872d3543634d127b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "156eb8280ba046abb6de4b8f9d974bd1",
      "Inputs": [
        {
          "Id": "cd3f27a159a542eeb4c0b7fe76cc530e",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "147d7023a89f472cae0f2b1154c34c62",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8634b15128b04bfb9eec0f6d94aa8952",
      "Inputs": [
        {
          "Id": "eda54833cdc34cdf83a0dc7a68d1f152",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f5ede2adb4a4892b5a55a94cba6067e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "956b2dad7ea64e55827450e6c8cc709c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "3156b729fadc4fb495c51a490c2af056",
      "Inputs": [
        {
          "Id": "04aa7d2a81fc4cf0ac0a7ac399c582b9",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65be2d9f16f4481f867cc27ed324fd58",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0b6ef1dd8da404dbeb49b43ca837cf2",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "73c1635ee0f3450c8c97e1ee392c0b13",
      "Inputs": [
        {
          "Id": "bcb8ef88f4a748ef9455d7e293b84e1d",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f9e218d361c4355b9f5008ea72b52ae",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99ef72f2f1024d65a1bb7512c8fdceb0",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f32c1a055fdd4e53ae033cf8bacd6d9f",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100;",
      "Id": "3d4c885f167f48e4bd03503988925740",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "41c787f53a47491d8478a5f451d62d59",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "e6dc05179bde48a99411c9ab595e0537",
      "Inputs": [
        {
          "Id": "a61265a6704546ef9b8f5a3a4fbf83ef",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "102b23e3936a4b61be111bec317308d5",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "baf9da165736434680c3d1223dbea78d",
      "Inputs": [
        {
          "Id": "6bccab7365744ab18a83fb82ae785d11",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1bc1faef893453cb9f142b7dde015e9",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "697aa73b60914a6aa50dae1a93cd9b28",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "005675ca4396465ca7a765073e251271",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f38373f1b2b74c6e9760955941bd66ec",
      "Inputs": [
        {
          "Id": "901cf8b1103e4e56963da4a58a923196",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "076d4747cf0f4ca69c82622d0aac4dfe",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a0b81326dab4591818825e10667de70",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "4f0fb4e6a082454bbb792a92b4e0cc6b",
      "Inputs": [
        {
          "Id": "6ae5a9985491415ca3e6025daec60fe5",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6aed3aba5a574f459052b29c860ab2b9",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07f36674d0a44ac0bc85ae4122ff2f1d",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "05ec6b14020443d28d5c066c021b6bce",
      "Inputs": [
        {
          "Id": "c72b2f85be454bfe88850431938d84a1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a846312aaf7f42f58a8e7846f7539f0d",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05731593c6a043eaabd007f8439ad683",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "457bd0d2f5cb48d6972f2ec76cd9e3ce",
      "Inputs": [
        {
          "Id": "1c9b37daf7fa468e8bc51e71a16baa2a",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4facaa6a46cd47518724c920eae72fe2",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d31c688cebc40448619151b60282fce",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "6d0511d0ca734bc39e72472384581fb8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d272cb54aef34a1da6ab307dd3acec26",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "03ec2f997a1a429497fbf5865344527a",
      "Inputs": [
        {
          "Id": "60f7eaa69bfc42bd84052026af130f1d",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aee325dd773f476ea73ebbe6958c4014",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Offset@double",
      "Id": "a8840281360845d894292e02ba9fc88c",
      "Inputs": [
        {
          "Id": "501ed8099cc44d6bb1a2dfa1977ba9fb",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "edfa00f05fb948fda2f70d6b555cc4a1",
          "Name": "distance",
          "Description": "A positive or negative distance to offset\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b8ed64fe2bd4dc294cff17bdcb76d06",
          "Name": "Curve",
          "Description": "new offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Offset a Curve by a specified amount. Curve must be planar.\n\nCurve.Offset (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "602ca54d7ec64eb0bb8e12b5527a61e4",
      "Inputs": [
        {
          "Id": "3fd10e3bfe794ed5bdcbc9c038835a78",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "463880dd89544b86b553ac56d8705dd6",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "977c1dfe4a744d209445095f5f6c9bec",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "27c6f4eb4aa945e48e06a1a31bb5af41",
      "Inputs": [
        {
          "Id": "52ed0d74ead54a988e5d8a23a3dd6b43",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7d19dcbb743471183b88060b711446c",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "a9ee00c18d8c4ad0bf0da3cea0066fc2",
      "Inputs": [
        {
          "Id": "5a01144a9559433c9046071aa9419049",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f8f9daa0d7346168a012432828b556b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "7f5f853aee4f48e19ae6c67f15823e76",
      "Inputs": [
        {
          "Id": "732319441aba44ada6cffd8529a63e72",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7fca23f0322f4117a63f0d87e6329bfd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "41380069bebc4b68a23c553416ac0c2e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "37f306a24f2a48b280da8d1826525654",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "f7b9489a87954e109ce329ad0fc13461",
      "Inputs": [
        {
          "Id": "ba07ac3b5f1249f188b4d3bed428b2ae",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42d3affe70e34d7ab177e54d577d6580",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4384595e4ee94e478005359b1bf066db",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "b34064c4b731422a939992a8cd549248",
      "Inputs": [
        {
          "Id": "f901567ccb5f40348a96736863a9bec3",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a7e013d4d304a6d8c169f26e7d243cd",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2f36759cbc84b02b2dd16cdaf47f111",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71627643c7e04bdc9bdeaf4d70553db7",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "2234df3b0aca48a9bc2ab6b93e94de8a",
      "Inputs": [
        {
          "Id": "7fd8e61f486c4309a25c5939bc9d9601",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d8a282c17604f95966a8bcd69be754d",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "cc31bda3873d42c990697b99fce95bdb",
      "Inputs": [
        {
          "Id": "27f1369dd76641b9ac1b285a3c584b5f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91d2f7fcfe5a44029e925f85618c5bd1",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "947bb69c642d44d1a6788b02edfa0c2a",
      "Inputs": [
        {
          "Id": "ca77b9c122894b57a0e585b8e245b8de",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f851ccf25c504cc2a37d41660c1bb06d",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5a94cb685fa4ca093a33541700ddc55",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "17a1365a0bdd4d1392f76586e1a1c25c",
      "Inputs": [
        {
          "Id": "78f110e1b54948d1b813ac8e78a960e7",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "031d6656d19a49668386f309bdae1319",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01b99ac030e1411fa0a4a8298fe2d54f",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "467a3f3329fc48dab8ee645444dc7c6b",
      "Inputs": [
        {
          "Id": "aee0497c66de4b4f8dd589d1c05ed97b",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e828630eb344734907a0f285f37768f",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5b484102a5043b49a10672fd7d52ea3",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "885aef59c479462fa91b5600372e41ee",
      "Inputs": [
        {
          "Id": "86850fe2b85f43f6a9d550c6b72ccc13",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7548b49ce61043da86d134201f8a695d",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "52176e543d514062bbb29d247ff419db",
      "Inputs": [
        {
          "Id": "1665dc7acbe94123a7d841845e0fe305",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e337fc18c3824b748473deef8204ce8e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "927c110a2b5d469799ff9e4b56bef4d3",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "85892e2e2bb2426884ce28b6765dae12",
      "Inputs": [
        {
          "Id": "81ab501b41854571b06b8baf11fe8cea",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99004c3f8ef54e55b45e5651fffbd182",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d94939b48d5410f880685d1ab166e96",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "5eb94034304c455f81ce25b91b5c3fd8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ced02525486041e1965ca39b9109cffa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "dc8aaddc90124843b7332f62cb0c9cd6",
      "Inputs": [
        {
          "Id": "0ff0e4bbb577442baf03466fd50967cf",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b8fd9ba911a4fa1867c1634d133a77e",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "c0f0a03761464708a681cb273df4d694",
      "Inputs": [
        {
          "Id": "ac7e9ea5cff0462c9f809faaf358b567",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "985851ace5ea414fa37d00968699b2b2",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "202105932d1c4c2f99b5717cc373e5bf",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "db79242e004845459317b609012a65dc",
      "Inputs": [
        {
          "Id": "6693799aa6d8473795307ced7b55296a",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1386f5bb497941c6aabded9a7d08b9d2",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48c176327dbf4d99ab0ddd84fdd25eaa",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0e9fbb6c3e82433085d42e4c4da6bb6e",
      "Inputs": [
        {
          "Id": "9381aab6a9cf45ea8ac480b7dad6fe7f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14b11f88f6aa4f25aac0ce1d007e59a5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2bb59cd55518402a8ebdaed41810074d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "ad38ef7e5d364773a8c7cb55e633e414",
      "Inputs": [
        {
          "Id": "ade86154b4b340888f9b878ba8098518",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f706104b10d424e92e290746064a297",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76e648e039224215b5aba852c5fc379e",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100000;",
      "Id": "b535777d9fd24f76a04ad7e09d9eeed8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "af1cf8d1f7fa47d993764eb24d3d2b27",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "ebcb8c28090444218496afb2c978a75e",
      "Inputs": [
        {
          "Id": "e2c7eb2e5a85442e8b4c87186bb44c3d",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba6cc7b820464424b3d715070afa6b4e",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52b8f2c9ec0e49c38b7a7d7fec297fdb",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "2a8acc7d2c304f5da3b7cee92a71e13e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4ccf992d2c1949b58c1f09178b4f5837",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8f3a491202724fe0b197bc7dbd485e54",
      "Inputs": [
        {
          "Id": "15b1bc884f6444a591a7734320348caa",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bbfa50e94b142eebea0af8ce321c94e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71e7a33d7c3b45e697be1113591241ce",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "bc03a17c569943fdb42c5b252c1ba501",
      "Inputs": [
        {
          "Id": "c50d4355e5d44587b5fd89d6c46ce85f",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d1b0dfb1d12425494860439b7cbc294",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a8a8799828840a884850e64f60510ff",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d80a96eb0d94a99b53e6faa77f9b277",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4198c721d9e1454d8d242535df6172d0",
      "Inputs": [
        {
          "Id": "a96c5208a48f49569f1e0c3103a8327d",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b6b4d936f8a48c987c1c26fd8a3bea6",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6a2dc368c4646eca922ea03b8283437",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "a85fa9d7db144e919bae82e7fade3e3c",
      "Inputs": [
        {
          "Id": "a4dfe93225cd4b0bb5205978a39eca36",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25e12d45de89401f98aa73b0146c87e9",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "febfcb3327644de29e7be2e4c1695f17",
      "Inputs": [
        {
          "Id": "960e9f59011d48e39c280597d1956a9d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5ba3245fd5b346f4a44c227da33ffe71",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d932286b35a435da88d7ee3b097b3ed",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "7d6fe66d59cb41ab98bd59f26ed88833",
      "Inputs": [
        {
          "Id": "a220cb38e3384b42a0887e182513802b",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35ff25b35d4e41b0b3dd3ad3e649d934",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac3b39c150c44204be12b98bd930a53a",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "1278e0a678da49408aa5d7882256c267",
      "Inputs": [
        {
          "Id": "a13f0565bec0429eb9590bc0e94df0be",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a49018e640ac4555beda545f503e5fa0",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "0ef4b6af89794f6ab95ae3367dd6bf01",
      "Inputs": [
        {
          "Id": "47a392881f174471ae29759552c24070",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0848ae1f97a444429f52f77a9e0e5500",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4a6e3a231b441de849eb511f9c1f694",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34309be38460404c8e72d27c90f4ef34",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "ca7c3f07104c48fca7e4d21198654859",
      "Inputs": [
        {
          "Id": "8102eebe700241e89247f9c9ad4d5918",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a872e232d114afe96d0714df9c6ef46",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "e17e2036a37d4754aac19abd619810f0",
      "Inputs": [
        {
          "Id": "a00dc614772d4d41a8df23cf5f3ba167",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a2bd2ee644594e2b82f0f67fdd17214c",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b1d7c93993e467e9a2c08dcb3f3042e",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "01a9805ef15741b38b533a30ba524355",
      "Inputs": [
        {
          "Id": "9d39f2c788114aeeb0e34946ca45f078",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b66439416fd54dcc92708390cb125138",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a2b8f54481f4ff290fde9120633345c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "0d7c033936504ddc95aa8868a6e2c463",
      "Inputs": [
        {
          "Id": "5c0bc7b557ac4edba8ff81979ff72f69",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a28498673e454961b520f7be43ad9359",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "80e4766ec1514303bde07ce8135de36a",
      "Inputs": [
        {
          "Id": "b3c7a788a1b34466946a4c206b2b67e6",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfb1746ff79c455e8cdfff1ae05d5634",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87bec41d7f82445680a7ec0977107473",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "f8fce789e8ca49c7b11df089422eb18e",
      "Inputs": [
        {
          "Id": "063de4a001964bb4918601e5ebd0b8e4",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3393d45eace647e6ad27ef031851fc4a",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b74f38a25cae4fd693d5f4290c988ba3",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "667c479988b344f2817a00fef1f78039",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "441db34fc44e41c8917e16b14fcc9b21",
      "Inputs": [
        {
          "Id": "bfe59acecd394b398f35cc6030ef1737",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a0ad4ffba8a42c1a57039e7e32261b1",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "f19dd066670a4a05900d046a563cc611",
      "Inputs": [
        {
          "Id": "4b8f730115394ce0b87a144e6b3669ae",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eeae44d299b54219836253fc2a6398c6",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05066d1236334c1c8a26b39c5e86d108",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "164b17c8e87240baa37db194d44a4ad3",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100;",
      "Id": "4ef2b3ccc92d43fb8ad4d3fd16560ec3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bfd821f326ca4175abbe8dd06df7f8fc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "ccae1c85898646219a64c800e196408f",
      "Inputs": [
        {
          "Id": "67d4b27a6abd4b5c8f11ad9e2a2ae020",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d72fef078cf64d12aefa2203aa8588c1",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ca572b5b503465d882e66d33ed495f2",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6222d924a527436bac8eee0c9905499b",
      "Inputs": [
        {
          "Id": "fe2aba8b3e1c4fe2a0132988f90018d3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09e3236816c742a29284716b7126ca4a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e8041bb9eb448d8b97b07a172c46c91",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "77a23132ada94b928a80c9c39f35c5ae",
      "Inputs": [
        {
          "Id": "62e9b614c99c48118f734c7282085b95",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "64ad368d7f0e4c73b7d414ac04ef7779",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "618ce7d7aff34239bd6c8d17565f8c40",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "dedf8c4e17df4a7982d184e94b1acb7e",
      "Inputs": [
        {
          "Id": "2887955b58544b7ea91234309407c96f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62f4f948a66543a280b0d3ff826f41f3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e7a7ffc8d8f4b4c8f0cd9d6f36c6b3e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "0442778b4d214085be87fe0c1a2fc4ac",
      "Inputs": [
        {
          "Id": "5fe6f9e6b6c74338a53600ac8fe23d51",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6352648891fd4f3c9e089f256e730620",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f136daa4d104791aadc48caa9950fa6",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "a980c55cb70d4d068ef9bdda4c231b8c",
      "Inputs": [
        {
          "Id": "fdd6200c5d214ebc85364eddf1e4464b",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fffe324926e3416d8ae221cb392bfe63",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "6d9a1b5253cf43db8390ad4c8630d369",
      "Inputs": [
        {
          "Id": "1eb4ee450e784e759e5f15f32fdb63f3",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9a5cffea6674767a72dd2ed5103a79b",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "c4a599049ae54460908601e5e536f42d",
      "Inputs": [
        {
          "Id": "af3c3745d9b94deda27fac9bc0986ac5",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0649e2ea09c04091b15617071e316453",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f4ba555ef1740b193c7e453542b4c66",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e8c0b6a2ad1a430c921d27c5e88d6d9f",
      "Inputs": [
        {
          "Id": "1e550038594140dcaba6eaeaeb0d1c81",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63b9fa04d93743c29747c58ea48dbea3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "510ef62758cd4471889d3d50bbdd0b38",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "f054c07870eb4f3199f6ce5145ff4cb6",
      "Inputs": [
        {
          "Id": "16c4ed2ce5e24ff4869736dd4d0e746b",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcf5a291fc7c4a07ae6b4e18b6496076",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d8d0b4b3a374e19a86ba2376bd9a6b9",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Offset@double",
      "Id": "cf7bace5796b45e5938f9f8c83558604",
      "Inputs": [
        {
          "Id": "0056b663a4314630a19b598604b9e88d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4162b4d15a3c4855b9014408a370c235",
          "Name": "distance",
          "Description": "A positive or negative distance to offset\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebac504e826741c1b0b806677dfc9a65",
          "Name": "Curve",
          "Description": "new offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Offset a Curve by a specified amount. Curve must be planar.\n\nCurve.Offset (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-x;",
      "Id": "5fe40067ee5640bd9f00a39c3fb5aa25",
      "Inputs": [
        {
          "Id": "bd8d7e82b7684919a2c7fa5009686e07",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85483ae4cb664a5f91966ec6e68eef06",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "d7b4359072ff4217bf3f043172ab7723",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "021c41e803244c03b1d1e167e6e455a8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "4f1d2a08e92246c6823f82ee0247428d",
      "Inputs": [
        {
          "Id": "27d889ee5d0b48e4bb452ca792a4b680",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "962e290661c740c9b37c6be0981fd610",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64b32bd7c52c4665995f9a6741974dd7",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "97ffabe6648c443e8ea7fd01ff01ff52",
      "Inputs": [
        {
          "Id": "c58895cbe74d41f3958c000c91c353a5",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2973476be5a47ae8ecfd631e630f6f6",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "336ef5add4cd4b9da6fb0237c26394a6",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "caf0c076199d43e5a35b3e9aa6825182",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b9a4ea81c34f4ffa90d5d289688d0638",
      "Inputs": [
        {
          "Id": "aa7ca6e89e014326bcdb00c1abde57f9",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "250034a88b5d4567906b621c8ae807aa",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5303e61ca2314c94b85f974fd4a7f2ea",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "93baac87e9674f809029d5bcc6eebef0",
      "Inputs": [
        {
          "Id": "dbc8ae0f6f2546668cb21ff4c41dcba5",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "289be12116ba4962ae99a7dc641bde02",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e0eba5a094c146a7b9c490a05fe919de",
      "Inputs": [
        {
          "Id": "f726552c4aff48249aaab5d181886017",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f021db7f321415fa359011f372a58ab",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bab4fe071318439f81c252fb188e3b52",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "08589976cc694483beac93170b437b4e",
      "Inputs": [
        {
          "Id": "294e0a80694647d784762ad2831d05d9",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fa74ce854484edeb08a65b9c8a599c3",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4580b81d02a149d680bd30d369216dac",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "0aaf0dca7002423685a6a4c66e456eac",
      "Inputs": [
        {
          "Id": "f94fbef5cb9b4de6a85c0b15787a9e69",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd7d90c5fdfc45f38aaf4a316ded7672",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "31fc3cec919e47c8b69eb8f79da1e1a3",
      "Inputs": [
        {
          "Id": "58437e18f45a4410a580739cdaa74024",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "036fb7076ea14b6dbef5b305a375add0",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "f5055ee83a7f469f875d8e58b841375b",
      "Inputs": [
        {
          "Id": "511e401262de41f9bf4db2df263e16ed",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "41c5a2d301ac48958245475b639dcf34",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d52a705c0ee454082c47cc5d6469ee0",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "6c3489f5385f49dbbef3159238151b23",
      "Inputs": [
        {
          "Id": "73d891e2ecdc4551b26d30768ce6090f",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84635c4073794f70bba9eed2c827c532",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "921c65d7b53742719b54b2cef3bdd71d",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "24691a31ca6c43b1a5cb3cd16004c2ea",
      "Inputs": [
        {
          "Id": "d87f88dcd827421cabdef907b83c1719",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4727b4e83e7427f9689f232f2147f2e",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5140e0e67434451a92ef548e1d62c3e8",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "0b427c4084154b60aa92c1c993fa954f",
      "Inputs": [
        {
          "Id": "bae4517cb3ef4705b30e82fc6e2885cb",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "627de1150da44837abfd7e23868c0df5",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "5e69123047c4426d9b0f64cd73faf9d7",
      "Inputs": [
        {
          "Id": "4711ef2586d24bc2aaf552e8e77c3ffc",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7710eb5b63bd407c8c9cead89eb59149",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "f19225adb98c44a5a70a67396a222f5c",
      "Inputs": [
        {
          "Id": "4b6f4fae2af04c0f9c1d9701acc4049b",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b07b258d06a64899a7b699f52fbd3fb9",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7915e3ccc0634ac0bce0ecd241a8f4c0",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "861a3691d74841c5a304763492f5a919",
      "Inputs": [
        {
          "Id": "081172e8e1f44da29b6347c94e4bd7f7",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17aca41ac23f49cda337d1f39aa04865",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df9e55780c8144d691db1ed584b64999",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94b516affede4d27b22909f8208068f0",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "7540294aa83f4a19893b01a164fd2e9e",
      "Inputs": [
        {
          "Id": "cc063a32a7f24aa0a470c1220f883d05",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "771c4f4599d7433f9cf7067605ddceda",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c921f85ca434b4ba32d98a57a6857fd",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "429e9680ac174070bbbbb8019908e4b1",
      "Inputs": [
        {
          "Id": "11aeefc39f744d53a8f04b85a63eee53",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f49603620bda4aeebc7f243fa14616c8",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "143c234c473b47a6ad34bf2f53ed3d8c",
      "Inputs": [
        {
          "Id": "52c0519f378144a4a7b2e2200c571516",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "72226072228640988074a8ede8ae3417",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a57d01036fbd4c7fa35d212fce167fa4",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "fa2886abe4cb45db868590a6a347207e",
      "Inputs": [
        {
          "Id": "014b304982cb4ec1b41f723eb263e81c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "407da49c7aae47d393ac8b2762b3817b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bec6bd450a96478aaad47f87fd9ba47d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "147a944364d24e74a0ac8e85f8d4aa1c",
      "Inputs": [
        {
          "Id": "7abd0f1d445045b1b362197a31bcdd2b",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12166afeb6ee401fa1345342d8dfdbc4",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89e963d08d094f86929e6baccde9b6fd",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "53052c7fcf1f45e7bab17f6d4a85952a",
      "Inputs": [
        {
          "Id": "7dc5026a03e142f1959aff1ca3b3eb9e",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76262f38619f468ca10cacb5302cc470",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4edb7b1bfd0d4867a72ecb2a1795f334",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "a0d75a64a8cc463b8242695bb657e95f",
      "Inputs": [
        {
          "Id": "76672bd9d2f840a18012b7af92923fc1",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15c7b63c6d8c439c91837930e138a1d3",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82fddfc5c5a34536a5930e2916cd99a4",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef603aa9d12e49a9a4f5c05002f5ac84",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "bf9a286f50a74855905048d9a7322ee2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ddd24c30575d433e9efb8bc16799a4b2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "8f7ed5b67bb34b2fa4d47ed68f1aaa4c",
      "Inputs": [
        {
          "Id": "2b10b42273284d7f8d5b6a2672fb5650",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24ded1d46c6b44c99f84eef9552edaa2",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d923483e5fc48db86ce7429fd9919e4",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Offset@double",
      "Id": "55a93269cc384f99b74c459668436371",
      "Inputs": [
        {
          "Id": "84b921d4cc6e4e5dbbf0edaae0b7237d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44dd5a91bba44e729d7fc5d13aba47a7",
          "Name": "distance",
          "Description": "A positive or negative distance to offset\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "800ef22c2e084885ab4da98d3003ee0d",
          "Name": "Curve",
          "Description": "new offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Offset a Curve by a specified amount. Curve must be planar.\n\nCurve.Offset (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "1e7d44837db24d97a84216fb72f6d42d",
      "Inputs": [
        {
          "Id": "c1dc51cc09f04539a51934adceb89be3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97837cdacf33421796de732165476ab5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "259c90953e02424a8ba3e66d9d4182d2",
      "Inputs": [
        {
          "Id": "0cfda30d264b4c51b44dd6cc3cdee25e",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa687f2d0e8747c8bf599efa1618135d",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "5b6a54c731f541a4be5311ba76fcdd59",
      "Inputs": [
        {
          "Id": "913ae7f615c8480c9db2f7ae2723e59f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1cd87e7d4ab40b287b4dcc8e7e5eaaa",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "20e9ea35965241578021782a1cddd79b",
      "Inputs": [
        {
          "Id": "65f44362ff834cd1b0e78b32be7bd834",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08a0f25275274b2eb661d8bee48b471a",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "82d411bc67e1411fa4f62f271c5caeef",
      "Inputs": [
        {
          "Id": "e69a34e3d6d8429caaeab128c06f6566",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9222c99659aa4672bff09f769113e276",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c884613c2114ac8b96eae8bdc6ba322",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5459130e00684feb8077d4c903a0fd5d",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55a032a277564a25aa33b771b3107a8e",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Polygon.ByPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "eb51d0e0772542a7acb215000567dcd8",
      "Inputs": [
        {
          "Id": "1cba3c60d6e34f868372857fdf52e501",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b46ff5ed40434e7686df7c7d07028f68",
          "Name": "Polygon",
          "Description": "Polygon",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a Polygon Curve by connecting Points.\n\nPolygon.ByPoints (points: Point[]): Polygon"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "fb0373a4e7b5435ba472ac979da8510c",
      "Inputs": [
        {
          "Id": "84b43ffe392046bfae030c7a35e4d023",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a994e8f4cc4b4446ab1d060c9f5aeff1",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "a2a65ba0095345babfe787aa3545e432",
      "Inputs": [
        {
          "Id": "2787a0fb3c6046e1b8af2c04bf7ee7a4",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c79e09018a74e21a8f7a9ded51a0f2b",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9159a6e617e4c9fb6032ecaf0b2fc92",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "387de4c05ad34077ab89c2ea9cb55cc5",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "482f3b141f7b4c9082027f94e1d2ae9d",
      "Inputs": [
        {
          "Id": "1106cfb309ee48ae918659e012d2f420",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0212262f7b7d4d388a4f6ca74f237a53",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d6590a545ef4740a04c363833d0f3a7",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6698b194671f468fab1bc49ebbc60a29",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00d24b31d77e486eb49b6ce7197c966c",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac9485df9959491a8a986f55624c322f",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0a3e64a307948c392264e5943fe966e",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a13dd57b795840e6999815b7a68f1940",
      "Inputs": [
        {
          "Id": "adf32d2dbb0c4ebda885195016fe714d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c74568b26ebb49dbb92af004d6fab6cc",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24ebcd296fc34a7cad98e269586e400c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "d93aa7914e524d848042a2423a47f7cb",
      "Inputs": [
        {
          "Id": "51bc0b086f7d4cb084e2718b9d62d267",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9dc4596d986940a8a159fb2f6e6b3846",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "aa8b32fe515e4825803bc8d460f28d7c",
      "Inputs": [
        {
          "Id": "c30dd43348fd49aab562513efa7ec0f1",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b1ee25ee8874055ad309e2e5a3e8826",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a82de877c6cd4b49b858e86779dec7ac",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "4e4a54216edb49aca2a46e3eb004b361",
      "Inputs": [
        {
          "Id": "0a7f8a4f27dd44d9968608f49ea41ceb",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "189c2ab2ebe34ec687d6e288f8a822c3",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53ec32880a93462d8a720aed6d9ed870",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8da550fdd0045d6ab2f3e440fe15e4a",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "24c875befa6c45f4b5aa73da44ed50df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5466c30ed2a04623a2357c0328f0b882",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "ae753eaea1f24e7c8c516abaf1d3f585",
      "Inputs": [
        {
          "Id": "01960553868a4ffba4d66fa1b0a797d1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58aa4064996f422687371bc12b5df71c",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e44d96d8986148deaa0959765db77aa8",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-x;",
      "Id": "1f06e62cbe2748829eef17a9a4cbf889",
      "Inputs": [
        {
          "Id": "3dc16afd6f5f4b5db68cb48a1803df54",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6071ff4743ba4cf8ab475ca561f23c2a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Offset@double",
      "Id": "224b66de689848e098e4c8c3c180946a",
      "Inputs": [
        {
          "Id": "3dd5f2f7baeb439c8c7316c177cb1be2",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "874ba67ba1744f19b85451d9b5eae8a9",
          "Name": "distance",
          "Description": "A positive or negative distance to offset\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65b208c4f50f4f0d86b0281fe1021741",
          "Name": "Curve",
          "Description": "new offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Offset a Curve by a specified amount. Curve must be planar.\n\nCurve.Offset (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "439bcf88200843b18320ab6bc75bb6a4",
      "Inputs": [
        {
          "Id": "f8c5a6380f2245cc8ac2f9e574d24bfd",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07e1ddfd82c643b2856220d5ebd4c82c",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "cf39580d9fd84ab2a18b4baa32d389cc",
      "Inputs": [
        {
          "Id": "ab382678e3a946fd9ff917024c56d96c",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0892af5a1d1247c4ae83841a8c4bc457",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "542ebbde82324f49ae7be2dc1f412243",
      "Inputs": [
        {
          "Id": "b0ec4f1d1dc240aeb5e156d3d91530ff",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9971576bcaa9421b973dae52e744a850",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "5f65f15b576f42568f7b2f1a0d9a6917",
      "Inputs": [
        {
          "Id": "229631b559094370a30f95efad846615",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d808ec4e3c9f4ddf8489d2f12ae993ef",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6701cf60ae1547638e17ed2d52ffb89f",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98ae53fb15244fa5a3846441dca7fad2",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Project@Autodesk.DesignScript.Geometry.Geometry,Autodesk.DesignScript.Geometry.Vector",
      "Id": "8db7d55d97784deca86bf8c06d4b4d87",
      "Inputs": [
        {
          "Id": "81793120f12c4e8b83021aed100c48ec",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "004021ef92744f1f92dd289a5d177396",
          "Name": "baseGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d5b7e6c2130e43429cd2d7bdaf44b5db",
          "Name": "projectionDirection",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "065319ab64ff439fb58424436500fc8e",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Project another piece of Geometry onto this along a given direction Vector\n\nPoint.Project (baseGeometry: Geometry, projectionDirection: Vector): Geometry[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 9000,
      "MaximumValue": 9000,
      "MinimumValue": 3500,
      "StepValue": 100,
      "Id": "d4079a172c814579b51531da37f0a959",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eba67a7574374c56a7741e2f75242bd1",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "d40866a935fd4077b2bf60b350f0e53a",
      "Inputs": [
        {
          "Id": "27a209f0f3904a428531abcf4153b172",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ad516983acd465fb82f53297fbbafca",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "01b1e213fbbb440e8c4077b703fbeb00",
      "Inputs": [
        {
          "Id": "ed978d47898e4b079d697c0b9b04da3a",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd7aa04a98844463961f67399504b02e",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bbedd767e264cb39c79f7b08d4ce536",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "7c5724d4b3e345618c36a39b139990ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa095ade272d4a0ca7b3d1e9e5946092",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "960f40fa981f45759de5b2d97db68560",
      "Inputs": [
        {
          "Id": "e44e079cb02f4faf88a4159ddc0fc713",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a0c222e6ff94b1c8e1d132dac33caf7",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff5715c516604403bf46eb97faf045e8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "75be2cc3542444a39f59298e90a8e40a",
      "Inputs": [
        {
          "Id": "7b2d16a910744ac2958dbdccca43c552",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a598c6f77a1a41dcb8c7e017cf3c9d90",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6dcbce3515e4e09bcc4bd7542fe241d",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "20f7dfd365454e959c1738cf3118d7c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee49546fc293493980fd4139b43af76f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d367b6ac13d84147a8fe83de4effc956",
      "Inputs": [
        {
          "Id": "0816186c007a4e0e9dda1ae9759758ea",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "627c255823674a51aba10b8f4fefb8f8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e2b97136ade4605ba639eaba5566303",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "02631555e64b49c09a80fc91460f09ae",
      "Inputs": [
        {
          "Id": "fb3ff07810e0495db975133aaa816055",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "64d4c58fe4f24fc6b826782055a75cbe",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03672f864d204057810afb6e0ea29d6d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Reverse",
      "Id": "89f0cc5e1f8d4814a2f785bda45815a0",
      "Inputs": [
        {
          "Id": "3d25af50db3945d0859677bd9cc5129b",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "737ca8b807e64d24ac6664d3b1ac7591",
          "Name": "Curve",
          "Description": "A new Curve with the opposite direction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reverse the direction of the curve\n\nCurve.Reverse ( ): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "6906b9a9866f459db02c8075dd99e5e9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fd79dd00b8934d39a04f75ad000e8d53",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3af3b73c5e24436bb938950c3493f4f",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "8251191e7ec540e89113cb288666d301",
      "Inputs": [
        {
          "Id": "84436973a3b047178850bcee886504cc",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dca88209b1ea42c8ba4b85d3acb3ed4d",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26aa99c30f0b4b62a8838c05d0e31bb2",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "fd6f6a50c9e24c49ada8fb9f154b1941",
      "Inputs": [
        {
          "Id": "1cc066d565d9429291aa9dabd4cb2cc7",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86c36eec69bb411a9e3555eedd1d3979",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "27b10bddc5fb44bd8485a2e4897cd11b",
      "Inputs": [
        {
          "Id": "0de6a7ef864e4196b95fd641a83ad716",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c2ac49bbc0c4a5995bcde04f058e8da",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "724c3bf00c08480ba48004605197842b",
      "Inputs": [
        {
          "Id": "b8f81404341448d6aeb7e86aa0573725",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dea88a6ba9b84a8cb259605a70e2ccce",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d64f2702732746fa895f8f005b9385a2",
      "Inputs": [
        {
          "Id": "9406224fbaf34613964b28c4f7bbe4bf",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1f3dca2ca0649f0a0dbe439454e444c",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d9b72cd43e04d66b8a90d0fa9f2ff26",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca3221ad42e548498cac00b063babd0c",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2682d6c88edb4709af034c912224899d",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "fc622c05421e4251a947533d42bc7844",
      "Inputs": [
        {
          "Id": "0db15ce224e84fe0969eb20a2c3e29b4",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "485aaedf30a645938b9a3d3293ab51fa",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Polygon.ByPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "2562fe7db5814a23960e1f63466df2d3",
      "Inputs": [
        {
          "Id": "52d686ff90d0425691fb0100daac81c3",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6452e12ac3f436290d5a15f3d029c3d",
          "Name": "Polygon",
          "Description": "Polygon",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a Polygon Curve by connecting Points.\n\nPolygon.ByPoints (points: Point[]): Polygon"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6c99642c93eb4118bdf5cc43a91fae9f",
      "Inputs": [
        {
          "Id": "503779e4cda04276a82d069788eb2a32",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "da365392cdea46e59bbecd23ceeafbbe",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c76d0b28d324c69bd1c910b95e5e4fd",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b4dd4de8563645a7a26f89789560ebe3",
      "Inputs": [
        {
          "Id": "40807b3b7b8e4fa5b00dcd0f321105af",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "3de1eedf553d417ca9ad9929ccf35529",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b93e57530e004f69aafdde1a15af542f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a0d368865e19445d9166b2b7b59af013",
      "Inputs": [
        {
          "Id": "af8c96567d8d4be3b583fc005ff9ec0c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8e13f779cb834a5788827b2651619a5b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c231e0940f84bc987409cc621849e59",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "5b3ad14cb84e4bb58b1e998d48eea1ee",
      "Inputs": [
        {
          "Id": "e90aea63901b46609f591b50b60ce79f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b450ea8f594b43f794c6de42fb8114c8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a4214a8b4e4497caad3abecc1b3508f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "197a20533c7e4a789ab664e69b0e05ee",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6d55c462913f405987811a516e261907",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58ef879bfb3a4842a905af334433ccd3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "f44328dcbef34559b10b437e126096fc",
      "Inputs": [
        {
          "Id": "e7ac7f2da86c4d18869d1ffd2e27e01f",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb870772e3894b14966897e90ac29f25",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByUnion@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "f5cfe10e75ff435aa3a743a110858ae6",
      "Inputs": [
        {
          "Id": "9e9f7c567d3442a2aeb75912ed31d403",
          "Name": "surfaces",
          "Description": "A collection of surfaces.\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5020d4c6b3844a9aaa93d4822948ed25",
          "Name": "Surface",
          "Description": "Union of surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of surfaces into one surface. This method might return a polySurface if the resulting union is non-manifold or multi-faced.\n\nSurface.ByUnion (surfaces: Surface[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Difference@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "07d5c6a37b894dd2867c45b7bd03d869",
      "Inputs": [
        {
          "Id": "a9b42676a8e342768fa580b9a88c1076",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db071994743d4a7f81e5518d6107fd67",
          "Name": "others",
          "Description": "Other surfaces to subtract\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11b858c1e048461aa1138a6bc3eaa846",
          "Name": "Surface",
          "Description": "Resulting boolean surface or polySurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The boolean difference of this Surface and the union of input Surfaces. This method might return a polySurface if the resulting boolean is non-manifold or multi-faced.\n\nSurface.Difference (others: Surface[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "3187b9ceaed34b1d9d86a49b61f54537",
      "Inputs": [
        {
          "Id": "8967b8423f374b5780ce2f0c839a75df",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d497d1d0477b4c3a8a1f76457f7293a4",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "kavels;\nwegen;",
      "Id": "04575fab275346f1bf91d53b9181419d",
      "Inputs": [
        {
          "Id": "088f8bf709e84c409122bb410796542d",
          "Name": "kavels",
          "Description": "kavels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2327ab68737d47e79195b73a9f1b3128",
          "Name": "wegen",
          "Description": "wegen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46863ea114b94df5ad46e580289c21f1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8488041a505443eb88d7ec1643161401",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 30000,
      "MaximumValue": 30000,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "cd5fbf551dcf4b3d865eb8103ec6e191",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d9d38028e184426f81c1f5b887f3347c",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 16000,
      "MaximumValue": 16000,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "323f5745a1bd4a1790a535f23291af5f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "49ea3d420b4f4e9689a9abea13f0716d",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "InputValue": 0.5,
      "Id": "69b3ade986924478ba3f3d6cd2bdd178",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ea58df8271a9438089fb70d6852ac0e4",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "InputValue": 0.5,
      "Id": "e954dc79a0844581a77d6ec912931448",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "624b46c87bac4fcdb14b052c246aecb0",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Kavelsurfaces: var[]..[];",
      "Id": "d08a8a18158946ae83c4811328486feb",
      "Inputs": [
        {
          "Id": "3e01fabd439e41a0b9b02d727a700199",
          "Name": "Kavelsurfaces",
          "Description": "Kavelsurfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9edda9d422b435c83ff4822b06964bc",
          "Name": "",
          "Description": "Kavelsurfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "KavelBoundary: var[]..[];",
      "Id": "885f0252847248fe9dc28a9c2a5cdb94",
      "Inputs": [
        {
          "Id": "24936060d57f49ef92539aa4e18f0e22",
          "Name": "KavelBoundary",
          "Description": "KavelBoundary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b353945bf4b5480e8a4aa19075fb3df3",
          "Name": "",
          "Description": "KavelBoundary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "CellDepth: var[]..[];",
      "Id": "e526c21a1f7f4769b036cf648f12f7c2",
      "Inputs": [
        {
          "Id": "14872fcba013448eb03b7595fae85052",
          "Name": "CellDepth",
          "Description": "CellDepth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17944557ff23498e94e41679dd72845e",
          "Name": "",
          "Description": "CellDepth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "CellWidth: var[]..[];",
      "Id": "4397d0aedde84d659890cde3aaa59223",
      "Inputs": [
        {
          "Id": "93c2fd8e90204919ae260067a798b450",
          "Name": "CellWidth",
          "Description": "CellWidth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd759bf218d54e299adc714857752480",
          "Name": "",
          "Description": "CellWidth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 89,
      "MaximumValue": 180,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "b6478fd55b1d426bb2db3ec06c6b1c64",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0accf46cc41247dc8269ea7be5f14cca",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "b775898512d04141ac07c324407c4aba",
      "Inputs": [
        {
          "Id": "1680ef79c9534216ab18e031d8a7c4de",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "349626ee33b84230824cfc0a9316fc07",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.001;",
      "Id": "a452ef3e8ac3462e9357eda7b3b6e721",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91641504b512463eb62970d298380485",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a = [po.X,po.Y,po.Z];\nar = Math.Round(a/pr)*pr;\nar[0];\nar[1];\nar[2];",
      "Id": "3b4a575c182a49c5a13511016a0cbbca",
      "Inputs": [
        {
          "Id": "0b55ba0b2d514dbe849a51776b0a7f4b",
          "Name": "po",
          "Description": "po",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af3abcae780b40a495c1e73e619f71a3",
          "Name": "pr",
          "Description": "pr",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "716f7d256df04e44a99f1d81c23b7fd7",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fb319f852924784a75b5895ae72ab06",
          "Name": "",
          "Description": "ar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51e2ccf3b3394469809ef1ac20a41a98",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17192281599e4f0b86921d2d509d3e19",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1f1b96afbd74b169dae0a9879d04e27",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "1c560f07eca848bca7ebc5ec05ca1c8c",
      "Inputs": [
        {
          "Id": "67477012720246a1a56d6c6d51ac73fb",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d96684e30d1d4c3b86a9d64a8e1ceecb",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe5c2e3bbcb24d459d045c5b065a3d32",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d04a7669dc347e2ae3c280a80669b69",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "48a7a3a85b6f415b82eb09b7bb1820b6",
      "Inputs": [
        {
          "Id": "8b068931d8684d7db1871ca534c9cecc",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28793cc739b54962ba5471be921bfbd8",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3a7e9cc6cdf4bfeb7dca35672935aca",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "137d968023f84b5cb6a00ddf0fbac298",
      "Inputs": [
        {
          "Id": "3c34dbf305f94823b0c46e30f8f48158",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d28c86569a8408ca59165f9364998fe",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "4a160cdb91484e558782f278687318bc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "35cae6d423b94809baa267b9b2df9cf1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "5032a6416e764267985c1a19c251d03d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d07260b069a54bcfb602c3ca758ea790",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "d8e992d1c1dc476bb43566c2fe918285",
      "Inputs": [
        {
          "Id": "a994792c9ad8402db4243e1c79934cc7",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52cc49bb6ec64a298d51506eb7bccc42",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "77ad84242b2f42a6a63930a4f801d552",
      "Inputs": [
        {
          "Id": "54d833aeab574fdc8cb537a2b00d3ef4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1bdb021f63b47d09547cfee6bbe4f32",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66a4c0f1103d44e5bc4ad37691a5fc6f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "49048e9657f046578663f04606132a88",
      "Inputs": [
        {
          "Id": "5298a4f95ce64d44ad0921eaf3bc5007",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b30583fa50db43a88227d5181ddfb271",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c80dc5a7d32649f6887c1a389c21afc8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "17b775cbbac04accb7494ed490ed7f0e",
      "Inputs": [
        {
          "Id": "d598d2c10a97434bbedff0b88821ef76",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "17d0b48653fb4d069f23c875d9ba1ab3",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bafcb5c2343740ffa362b340a2cc77e9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "fc4060fda6754cdba362b4bbf3370084",
      "Inputs": [
        {
          "Id": "58d903308e644bf5a04c3e645743c830",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55b8194b57f4481f8165e265f8e78259",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "f9efcff1b279496d858d2f30dbf2ab32",
      "Inputs": [
        {
          "Id": "78068ffc9cdf4b2aa87c1628246ce408",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c135bdcdedd7464a91eb88ff816cfed7",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "006f283d0f9e4b998c148f43080966f9",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "157bc6a378c246bdbda60fbd64918188",
      "Inputs": [
        {
          "Id": "751071b4876b4391b971c366a80aa8de",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dae34c08f38f40fe8606da1013b5c86f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc96cd3d845245c498deea1a337a5055",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "94af06dc614d495f8ae711a2ad5522fe",
      "Inputs": [
        {
          "Id": "4d3247198f4e4471983b3a4dbebeb7b6",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5e0aa3c279cd44328c2b47cfd429af71",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3aa21cb856240aa946b139e4d276e84",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "2e7d90a3ad204c1e82fb15080248508b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b20987669f174f0d8aa202b74c12dae0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "be6c4319c10a494da7cdc8faa3c30017",
      "Inputs": [
        {
          "Id": "6e5c683e6c0e446a8b653d62456c5079",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9aafed09cad543e68f77af04c834476a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb9b43e604334f509a0508424374c0b1",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "23af4c8cf21847bd9239f13e657ce345",
      "Inputs": [
        {
          "Id": "afa8b50a1ba74254aec7fa03658a7927",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83f30994a1a5436bafaf422a7d68d1d8",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "9e2ae7a81ef7425c972b375cefa8ef4b",
      "Inputs": [
        {
          "Id": "83ae2bab2c2e4f26994d614ec0fb5d00",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc33e71166cb481fbe49875215bcc245",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "81652ea1138e43668306aff08a152ed6",
      "Inputs": [
        {
          "Id": "b5561381264d4cb7bbb3f4d8e0c13269",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c381a209666456daedcde4dfa736ab2",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af2db22e12434ceda9be325878d2e3f4",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "08ae0ee0d55742439ac0f0ba41ec0eaa",
      "Inputs": [
        {
          "Id": "7af6c4ad4f064acf884fe1efcdb89731",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73b8b7a1abf14e0282122f18760e75ab",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "121abbf62f3c40dcad8cdbc35188389a",
      "Inputs": [
        {
          "Id": "06c84b9a6e45415abbc844494af67fd5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "92b855e96fde4d5e91fa717784895f2d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b314c6fd05a046dc8ce85d00597c1088",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3185581453644e9b97b29e31e6127cee",
      "Inputs": [
        {
          "Id": "dfea22e1ae6e4566838600a83b0bca24",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "40fa4ceb3eec46f381f1d3ba179c767e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6476744e70e449dba78613ee9fffb1fa",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "df072889a9c34fa08e08349b9b800eaa",
      "Inputs": [
        {
          "Id": "3567971808e8474fa4eb757482eefacc",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e7327d7d60e94442bf39d3cb6472598c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea7ee8e9b26a457dbd3c9bb83a9f3769",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "448620e1cd36447abd8830700d11e568",
      "Inputs": [
        {
          "Id": "590427307bc14a7ba6966f8fea246440",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4e54ffea9f77447e9b9a28f2b55c7d4a",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d2652b55db44621b5536bfce593e883",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "51e20449983c4cc1af992c898ac70cb5",
      "Inputs": [
        {
          "Id": "67ce356727c34367816b720a095b3ddc",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65d6c2c618c345798ddc6f285e4941a7",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "9701af81234f41e78f9688a03e55d9f5",
      "Inputs": [
        {
          "Id": "cbf63f1600ce44438d18a2c07859a29f",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d109b443fd044e2ca2f92dc929ca9458",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0483b72a346c433b9b56818487b93e91",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "4c06aea8a2ea428b9f3f3c9d5bae467e",
      "Inputs": [
        {
          "Id": "7127f6f524d8426282f447267696c893",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2de6a818e7b6435bb379dc054e24fe7c",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "81cc74636aa24f7598c62ac871a4d845",
      "Inputs": [
        {
          "Id": "5a17f53e95664e54b95b66ced7ba8543",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2a573ada98b4787abb77ee2b91b2b62",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4ef89347f2fb41ff8ac3297208bcbe1e",
      "Inputs": [
        {
          "Id": "64e8ee07a3694c7192077ffbbcc66199",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16a1f60431cc45afacabb7dcef9cd071",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "894f30352750462c8484a32aa545d101",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "5f3f5b1885884e3da200c05a768c9d92",
      "Inputs": [
        {
          "Id": "0d5e9443e0004e45b9bc1bcf52696c8e",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d03c2d764aee42d4a0f2af2922031014",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bf71282200534af38fa971e77525acfe",
      "Inputs": [
        {
          "Id": "60516006ea0a43dcb19f53a96373b3e3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "80482e6fba904b0aa4a79e521e0e2b66",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "273adb4496ab496fb88f6829d21663d5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "fd0dd5204e3543eb87ad693409f9645b",
      "Inputs": [
        {
          "Id": "a249ca3663fa4359bbcf7ce3d470c243",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0168d36c448a4dcf844eb6cdc6958fb0",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7687a1cdedc4a76968d51f49988b1a4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "22d041637ceb4cf58b1570855cbd7959",
      "Inputs": [
        {
          "Id": "bb90e639228340ae9fe5dd37f09d6610",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9a3f6f6ba414cc1b83c53cc46db04ea",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6b4118ae17045f69a5646b4df8548e3",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4be628bb254b4658b7fa51f147590a3c",
      "Inputs": [
        {
          "Id": "fed041a0d0124426a52799b400500e13",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "422efa4deb424f0ba5e799373cfbe02c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c6ba31656d64286bd7acafb3afa52c2",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n2;",
      "Id": "6b5203d113734837990c0a81df6ba8db",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "20150d29ec2b4d9ca9c05e1bf2c5acda",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba1ecc58a2e445da894110e0e644bf09",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79f3d5af629a430fa8be1d502f88ee7e",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "0dadaf8225884817b6d02833bb0502e9",
      "Inputs": [
        {
          "Id": "357b1ebf48704030bf0e8906d87a802d",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ae0860b8eaa488a9c935c41a883f0e0",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7638ff54609d4cb7abec2d4fd7fc644b",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "5e229627bbb3477ca35c68db92277f44",
      "Inputs": [
        {
          "Id": "85f121516a2c44b4b81e9bec2d9e63dc",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32fe8469a9b84fc288be6a5e70f8fa78",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3cf1cc76a5e45ae93a17e791ac90c27",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "6c3b016c7e3a491486b0155fba347d44",
      "Inputs": [
        {
          "Id": "3dc2ee7006574e2ebb682cc13b7f1067",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4625f0a9c7f54059b1c42e156b9cf455",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleWithVector@Autodesk.DesignScript.Geometry.Vector",
      "Id": "0fd37e4c4bf44b0582747c02dc85e800",
      "Inputs": [
        {
          "Id": "2e265444d1ab4aa080600f2c6d5f915f",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65a0c92fc14c40e9b711d998de8d27ee",
          "Name": "otherVector",
          "Description": "Other vector\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b62726f862e4585b9f2491736d77e23",
          "Name": "double",
          "Description": "Returns angle between the supplied vectors in degrees from 0 to 180.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the angle between the two vectors in degrees from 0 to 180.\n\nVector.AngleWithVector (otherVector: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "1b2aa0bda9cf4818a256191b168030f0",
      "Inputs": [
        {
          "Id": "9ebc1701a48e422795cdc83222dbc2b1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6af61736742747619dded735f3486133",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "ef8c7726bf994681baec7dbabaea7dd4",
      "Inputs": [
        {
          "Id": "110c9d9bb90742cc87c790dbdbb31925",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a3cbb24641f4099b5c10bb5cdb1e23b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "33f0d1212c424f609c27151f382b157e",
      "Inputs": [
        {
          "Id": "5611c4958f0346188247faab840e4758",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34e7339847cb41a1be5ccdf1efe68e40",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d46058b280114d8aa31d7a6a42294b7c",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "5742283829ed45d5ab1e9e546fe6eb19",
      "Inputs": [
        {
          "Id": "26a36c8b80b24937b87071d9277189b9",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "683c4bd4a03e4230a1ab3b4e618842ea",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "74e5aed596e24101969bed0980605baa",
      "Inputs": [
        {
          "Id": "562b3d8cc35d4d08b1cfa493fadec904",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b32f3c104fc146a6bc4ad1642c44fc79",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db8363b880944e99b6c680ca24f647b8",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "18b5154a5e1a4b78b604d7708fcd96a6",
      "Inputs": [
        {
          "Id": "e44e3a83e2424b20b16bfb8fc3822a29",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d0a7ef2424d4fbf96970cb4509d80b0",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "06a51a5bc38e4b91989e03dc1fab24bb",
      "Inputs": [
        {
          "Id": "395cbf53913e4c8abdb57edb5d15732b",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0e759529d3347949918076bd8b71f3e",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6a08bb0799e46de899a33b08a4e28ac",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "037c036c37bb47f481b35ca437f6630b",
      "Inputs": [
        {
          "Id": "712a149b472141708ae22cb52b90ab4e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04d547406f0b4323b287bfb80cb7f721",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22cc10cc2d0a4bda822bebc1fd86c533",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "f160aa02d9f844a398dcdcf61dab1101",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "31075e204ec8449da1d3fe29583c3c61",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "791bfe7e7c0c413b81cf26d6e46f6693",
      "Inputs": [
        {
          "Id": "69f71727dacd4cc7a3c1e824a4b2a0e4",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3c8f4e1db954021bc0f509fbd12f1cf",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99e74498c582433b9250a1c4b7b26fc4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "31342fa41ccb4499bdf9eebd1bfa8588",
      "Inputs": [
        {
          "Id": "78ec6fda22294f35873f4f5049405586",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ada8f07082224213b3d3887ab37a1df0",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "49452e50a2894bd798e3746179b6c924",
      "Inputs": [
        {
          "Id": "ad42518bfb5046a394f680796a00c691",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72abc5c6330842988a7c5def4262c5a3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03f3c0078f51466b98938f26eeddd819",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "180-90-x;",
      "Id": "8632d35b07ac492c9502d0185b798e3d",
      "Inputs": [
        {
          "Id": "bf506498ef514d0a958c7db313926eec",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79b2027fa8624d5b88fe4f493895fa7a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c856f2b504424d9ea66f70570e68adb8",
      "Inputs": [
        {
          "Id": "2ad1e5d4252841259e88c49c022ff416",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f64375fd6dfd43b18e11177a09aa6558",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c6353eff7fb4feb80e795da99455e56",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "a37df4574b794186a2e94709c4cc69d5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "584bfddd0e384eb7ab64a817d22e20de",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "571b324bbd0249909c21243dd6c74bb2",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "2429b6d650904f9ca95c8818cdb16adc",
      "Inputs": [
        {
          "Id": "41631ab550e44c6480f058c319172a9d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d650bd01159468e85cdeb64e9ed284b",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29a071cb374b40728ef6f417732cacf2",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 25100,
      "MaximumValue": 50000,
      "MinimumValue": 100,
      "StepValue": 1000,
      "Id": "1616f5fc2e214160b0acdeb49d675444",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "69ff3dce06fe4aabae50110eab3a9637",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "48cf1b91fd694c5eb9bfb62331b2676d",
      "Inputs": [
        {
          "Id": "c2a649090e45461d9214967438c972dd",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1fb89c0f26d2480dbfae01bd7eef7fec",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17116f9bc64e4413b3f9ba430a3d2851",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.ClosestPointTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "e715b6d22eb84506bd67e57b7a154e7e",
      "Inputs": [
        {
          "Id": "8d762772d4c64e04a05418fec497d0fa",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b24ede1a5a9e4797848fb612a40f20c9",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8af098f0800944b89e8623d441ec4cc1",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the closest Point on this Geometry to the other\n\nGeometry.ClosestPointTo (other: Geometry): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "31d55cad0b4348048f7880baf9c1a8a7",
      "Inputs": [
        {
          "Id": "51cb40189821410fb770200fa8192a83",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06540bd3b3dd46d79508291517e0cbee",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7cb85a66a12441ce88d0eb86d84ff818",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "5f9d4e3403d14990b9ef645b1b3c8dff",
      "Inputs": [
        {
          "Id": "12657f9a50d94ac7b290d555ea1a6d4d",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54966e76b2964bde9508ea4c9f1f533d",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42e91d7d6e61458792e0f932a9db7d6d",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "1bd2992cc93f4f97a50e0be68e358e0b",
      "Inputs": [
        {
          "Id": "ee5f6f496f994d858fceb0ac3989f688",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "958e80a970ac47cc8097604419f14932",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7a94552aeec34e92a72171ef552e1b3b",
      "Inputs": [
        {
          "Id": "d9707a7823a0464585c8bbb3013bc027",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "16e0850204004fcc95dd7fbbd4cb817d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3e70f87c71d40b9aecfa0a701f85195",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "e04f158e703d445a9e2e1b09f093066f",
      "Inputs": [
        {
          "Id": "c27c8228462c497f82c0c4980dd47db2",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67ce678bf60d4e998fac2a71d288bd2c",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22786a666f5d4e4890b4df454b404eea",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "5782de906434437e999054a12cf8a041",
      "Inputs": [
        {
          "Id": "ea1f0b2872e4453991389c99056107d5",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0c992017fbe415b85a513ba7c0f9fa3",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "47b40f2b76f242aab013b5f33123af6c",
      "Inputs": [
        {
          "Id": "2e7a6ed881da4a269a1cf093f43e6ac0",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58c15a5772eb4e64a79e92f82a534135",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "967774ae71624a96b6ae2a40ed06bb36",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "bad3a63bf7f44e738c2675510951021d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0455e9382db84eb5ba24bae519cc3c14",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Cos@double",
      "Id": "8bad04810b764a3d849d07a211c62a99",
      "Inputs": [
        {
          "Id": "110a511bfcba42e2a92916c77f0ad952",
          "Name": "angle",
          "Description": "Angle in degrees to take the cosine of.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7faf532bcde34f8aaf581b5e4cb032de",
          "Name": "double",
          "Description": "Cosine of the angle",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds the cosine of an angle.\n\nMath.Cos (angle: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d7c491b0812c4d51a9fb342b45b2b6e0",
      "Inputs": [
        {
          "Id": "6f699a3c83714cff9fd767d4fc12c282",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7740263f206a40ef9df30c3f4d7de936",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "639c744536634eea8e307be3df765918",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 20000,
      "MaximumValue": 30000,
      "MinimumValue": 1000,
      "StepValue": 1000,
      "Id": "c848bc008f6a4bbfb3c2717a7016c9e1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "09bb428f069c4226a06609543b64d32d",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "3b278889fb9b43a6a64a4540d6b429f1",
      "Inputs": [
        {
          "Id": "debffe94c3cd47df8af1db64bdf49697",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d079c45c21a24b518e23a7913daedca4",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ca25833a5c44714b35c22e28488cdcf",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "578c6f3b786142bc9ac9b579a084e3ea",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ab25aeb0c9244dfba4b7098557fd95a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e59461076df4adf923092939c8abae0",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "254ba86979da4177960196f68d18d51c",
      "Inputs": [
        {
          "Id": "95e58cb95d0c4b389511011ea0bc49f6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4250d3c8f5754d0b87e41845e28fda73",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "480d9f0c3a3541fc8c897a9ea9da4f7d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "424381bcf6b541e1a9b6f3ea78fea8fa",
      "Inputs": [
        {
          "Id": "9282c3c9fed84f0d9fd98a232dd21355",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6303111fb44e4ed0a9ea91b66ea7daa3",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf3fee574a424af38f71ea52a5f82fee",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3e0aab527a0c4945974e4c063b4e0c50",
      "Inputs": [
        {
          "Id": "727c04d0450043c69feb075c4e2dbdfd",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "08cdf73edfeb4a079cd9b2b9a885120f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e22ca4dc92e5440ebfa77c90ea9038dc",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.ClosestPointTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "5e6d923c195d41758b5d7b4b62a444db",
      "Inputs": [
        {
          "Id": "9922b2d19bbf45bd80682cf46417f45b",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a37e87435c8049d985730f95f451cab7",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9c6fa2aedb84bd99c6740f659bb1577",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the closest Point on this Geometry to the other\n\nGeometry.ClosestPointTo (other: Geometry): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "d0cc93954d5d459d882a3a59c988e74b",
      "Inputs": [
        {
          "Id": "fe68710e972d4075a51e3f6bc1457633",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8af1912c802244b1b9fe159da6b668bf",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4933397123445b397cd213792959465",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "4541eb6aea8a4a9ab9e11b844b542142",
      "Inputs": [
        {
          "Id": "88553bcd9e1c4ac7ab7e07dc588de942",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "002801c16029479d87047eb78184daa9",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "cacfedd21496409c83b7eab66033244a",
      "Inputs": [
        {
          "Id": "dd0c32de36a5463087470329ead4ebbb",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8eba5b288d9a4de3bdceebc3f186fcd6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46efb0f469084a00b7582ee21759340a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1e6af6500b674c6a9c92028a4f1ccadc",
      "Inputs": [
        {
          "Id": "b905b8495761417ca7f998df43d2164c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aefe58c6f3e5414098ec1d768dee6f10",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63a227628a3645d080bba83820f20d2c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "6ddb398f7b5b4197b3cca7f6a71874c6",
      "Inputs": [
        {
          "Id": "c53fa799e16c4216a95c47937ba27e86",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dce7843e4fef433297c04a6583a62aa8",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "190b07caf5d94ff495152b6ed97c22bf",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "ee67bf91c0e043fa95f316c3d4e6d1c5",
      "Inputs": [
        {
          "Id": "4ca8365e360a45deb7580973c13929e7",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4dca787435d94706a4c82a7040459276",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "f9421a42e4644ec592086579d82c20d9",
      "Inputs": [
        {
          "Id": "67c8545b4f044f72ba2ff95feda3b81f",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03493e6d902343e899f1390203704fef",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a93c1e64b7ee46dc8ddf9a884a9bb342",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "01348905f3044fa2b765fbd8f239b7ee",
      "Inputs": [
        {
          "Id": "4f9819e6ef5647faa026fa89986df539",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eeae470824b64c7da100668d03ef7497",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "9c40d51abf1542ec88d535c81138ad83",
      "Inputs": [
        {
          "Id": "28836568a0f345928d6353224c313f66",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "156b16c24257409990c5d3c8e5963254",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "bb88b544e8d74570bc8a0c87925e51f6",
      "Inputs": [
        {
          "Id": "958eb27ef3054f2592ad5e6ee88f82e6",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67d5f6140bbf4437a0224aefd1671517",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4ade9599c4541349a610d2aad3e7f18",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "c81312fa3d8740d5a89a1a1d4a444270",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e2c2e2abecdc485faf2ee3fc63af2719",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ac31940711cb4a7299689d8affdd24de",
      "Inputs": [
        {
          "Id": "9e8296219a264789ac5f6e52bd7a0456",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c21cb7acbc194a90b80c3d21ef812aa8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67f594f429b84815b587786f5110b0e1",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "seq: var[]..[];",
      "Id": "c705573db3f84da9a1590efd972bf829",
      "Inputs": [
        {
          "Id": "1ce762fdc53d4676916ce697e8307470",
          "Name": "seq",
          "Description": "seq",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0dc0bc395954d3a95008d8e63046d99",
          "Name": "",
          "Description": "seq",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "replacement: var[]..[];",
      "Id": "1b1182c4b0f74a36a408f6e4f2323103",
      "Inputs": [
        {
          "Id": "9ac47c74e21947019fbf25226cccb27b",
          "Name": "replacement",
          "Description": "replacement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9b3b3851a7e485c80bb65fb353dc8ba",
          "Name": "",
          "Description": "replacement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "_list = IN[0]\r\nrValues = IN[1]\r\niValues = IN[2]\r\nif len(iValues) > 1 and len(rValues) == 1:\r\n\trValues = [rValues[0]] * len(iValues)\r\nif len(iValues) > 0:\r\n\tfor (index, value) in zip(iValues, rValues):\r\n\t\t_list[index] = value\r\nOUT = _list",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f0411b44c4e140f89d236dbfb3b40847",
      "Inputs": [
        {
          "Id": "0b2ef1d4337e45918459dc36212b09dd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "539943d67fef47aebeaf17c4f4140efd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be14809648ee4d5c88c10d2ff494cf72",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5eed23e1bf494e8281da7048f8cfbd9c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "indices: int[]..[];",
      "Id": "5892ebbcca1f407c99aed5fd268a95d8",
      "Inputs": [
        {
          "Id": "609741d6120c4d5890ce463049ccfed4",
          "Name": "indices",
          "Description": "indices",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad1c142428a64d90a9fd77fa5143bc94",
          "Name": "",
          "Description": "indices",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "seq;",
      "Id": "011700611b7a48b2ba313276fbaefdbd",
      "Inputs": [
        {
          "Id": "77755de6e6dd4c088e827d951c05c7b9",
          "Name": "seq",
          "Description": "seq",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e4b6248c7c44a568e3302bee6e44d88",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4db2c43fa740428c9fd4a712146cab29",
      "Inputs": [
        {
          "Id": "17a3f8b219974d1e8c7a75524dcf6f8a",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42ea3a4abfbb4b5e919ad0d9ab9cbe79",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e09e36d58a5746aaa2647180b9ba948c",
      "Inputs": [
        {
          "Id": "a465fec80be046829fe5af3be5bc71f5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0644b15f3fee4a57bece319fd3874997",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2266989fa355428c90f3d7454511cdd8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "21974e8e8aa3483fa4099f3f17d1157d",
      "Inputs": [
        {
          "Id": "ba2888ca995f40619b410b3c6a0e84ac",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "959b43c15f6d4f04987b30997bfe572d",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3c819baa78944a5b909767892717543c",
      "Inputs": [
        {
          "Id": "fc19c35db0c34054a95e639d77775d29",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9742dad1be94190965bdd37ef4316a4",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f298c80012764d9c9da52b8b6f09a1db",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "08de5bb1c1924f33a5d10d5700a4a305",
      "Inputs": [
        {
          "Id": "6d4d6a0b774c4cc4b6d5b017ae64c89a",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "118299c6138545ec92e725cf50176c99",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c444f2d416343dcb631c57c59496f2c",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "30a1c87e879d44ecb52861b47af4fbca",
      "Inputs": [
        {
          "Id": "56c07740ccba449c9310ad8cf02ebba3",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2115617fd72e4556bf3b6515b6ab12e3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "53621483a3814026bc94073d88ca01cb",
      "Inputs": [
        {
          "Id": "f21b0f7367fd49f391f4882a713bee80",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6000bd971e2468eb6a22287a917d42b",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd71a994d3dc4e6f8e89cbcc614df8c9",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "3059075fe65f4a2186f77a6e2135c0ce",
      "Inputs": [
        {
          "Id": "466a1b969e3d42e1897312ef536f8dfc",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ab1b0ad56ead4b56bed8ed32f35d4bd5",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "591f425e0e6e427cabc9caefe61b0b39",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7bdbef9503a34abb86e11432150ecd8c",
      "Inputs": [
        {
          "Id": "04e2a0cb2d234c6ea1a77f38946159f4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99d4a58efcd74920aca765c2428ebfc4",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "757c0f4353154aa2bc0d71ec30d9e63d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "0b3568c642d6472994db46fdbfb23f5e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e1d09690f5b04f4c813b8938375a92a0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "1e88830454ef4137a1da24a0efe62b1d",
      "Inputs": [
        {
          "Id": "91a19819079b4575a62797acb15a516a",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c7793fdf8924861b5e0b1d79b207315",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "162c46fb97944ad98dea6a329f4022da",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1973a41c6bf5422c880d9a6e9c91fd50",
      "Inputs": [
        {
          "Id": "cc5fe1d4b747433fb87bcdccc429ad27",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fd7769b62ae487c972a760d2763acdd",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "790c9b5c16374cdeb90e202543bf5038",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sin@double",
      "Id": "e7937ad909e04ef6b55e0188b406dcda",
      "Inputs": [
        {
          "Id": "fa7f44c34e394d30968825d2135caf6c",
          "Name": "angle",
          "Description": "Angle in degrees to take the sine of.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f6b8623949f4e34b841df771158651a",
          "Name": "double",
          "Description": "Sine of the angle.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds the sine of an angle.\n\nMath.Sin (angle: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "7758dece59dc42bc95654c1215ab9d84",
      "Inputs": [
        {
          "Id": "f3cdb97d494c45218601c67b88e22842",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa5510ae055a4386822ec241208ca0b8",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0dee9bcf4a024cecb34a2864f29effbc",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "f61be3adf32a45789c924044af161607",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bbe9dd327f1f49e6a4a088677b676347",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2bb720265b546e28b3d4f6d9ec1115f",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7b42bdee556844329ce6b403a704b593",
      "Inputs": [
        {
          "Id": "4e5094723ff64f239c4b8bcfd9fb77dc",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c13a9cb29a8b472fa510c32bcb1b95d8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "babf08853d384ad4851f7f57c0ac0a2b",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "cc693739f4704c76b7648ee1de8a1e5d",
      "Inputs": [
        {
          "Id": "adda2fe43069402c96ef6c98c0df7799",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "83aa1d991262402585932a211ea8c87e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd60ce6495ee471192c6431d3c5d4ce5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "1967320dcbec412497176f161d7b8d5d",
      "Inputs": [
        {
          "Id": "56b59f580401447fb639c1e476f85c59",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "678084431c1e4a5e8b724427c9a644ee",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b8602c373f44786ad1de25f3aaae0b6",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "5233f6e4779c4e45868b1858454696e9",
      "Inputs": [
        {
          "Id": "0bb481349b314307b7e8ce22adc7b91a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "39a82b9f565542ce81b8ab5b5625fb4e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a88bfbac84244fd1b28b3c560a818768",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.ClosestPointTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "fb1bfb5de68341de90049127e2e63e9e",
      "Inputs": [
        {
          "Id": "82d9531c792848d9b344e1472f0fe59b",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbf768a5b213420b903e629d6ac6ce92",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f9f3e817b80426c9903a60add59506d",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the closest Point on this Geometry to the other\n\nGeometry.ClosestPointTo (other: Geometry): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "d5c96a8cc5d5445c826b2b4ed344edf3",
      "Inputs": [
        {
          "Id": "69179e605ae84a888ded0c25db004322",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75da6c53f31446c6ab053beb0a43ada3",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09fffd927f5f4de287e8fc4bf358c628",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "30dc7db664a249348b45045004b68c8e",
      "Inputs": [
        {
          "Id": "a4b0cb0ccd9f481ba6d7793cb60b1056",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1464fa4fe66b4f11acef87a814f64c41",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e8f001bf60c4f1abd6ed903aa9ddfc5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "180-90-x;",
      "Id": "badcf8c4767246f7a6e4cecaf9cd27e8",
      "Inputs": [
        {
          "Id": "416a018109324b39a64074d07824cd51",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "493866657e364d93a145184313f14253",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "13ef8246389d4dbc95bdb03c2d20665c",
      "Inputs": [
        {
          "Id": "f073266ccfb04e1d9fa1ad4583310ca4",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ba2357045cd4a25a144fb282738ff10",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27990e32e5e24594b8dde2bd7b51f655",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "076817a1bb8a4b7caf286e23f3c3aa58",
      "Inputs": [
        {
          "Id": "efc6abbe6b9a40bb9f6541643d860653",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "caf80b993f8b4588b37c9185fad339b1",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "59cf8978ba794f83973efc5277068f56",
      "Inputs": [
        {
          "Id": "4d38f293593c4edd8845f3f202fde507",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "515dbf73611c4213aa1a04b86a3c4159",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "775877a83e91448eb0cfdd2b6f8c45a7",
      "Inputs": [
        {
          "Id": "ec891c743aee4f42a94cfc118153c31f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6ae53127a6f4b8ca33c020727cb6964",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e96355f3743c42e38b3af07ce94329d2",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "replacement: var[]..[];",
      "Id": "0a33bbf0c842449a8ab712140f175af2",
      "Inputs": [
        {
          "Id": "4965c2fd1bb1417cb07a191b3bc2c7c3",
          "Name": "replacement",
          "Description": "replacement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e42273bdd0fa425f89784baf2eafd705",
          "Name": "",
          "Description": "replacement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "69f24b8443bc4b829974db3118e7d436",
      "Inputs": [
        {
          "Id": "618e8b1bff4541d99bfdbb1156980fcc",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e290ed03b82445e84fad8d8a6c58e94",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "seq: var[]..[];",
      "Id": "0879e1dc6a6c4ce4aa7ac31271b300de",
      "Inputs": [
        {
          "Id": "7776fc69f9de448db77b6c01f72437f4",
          "Name": "seq",
          "Description": "seq",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c09ac09277da403cb0bb11e2310c3015",
          "Name": "",
          "Description": "seq",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "_list = IN[0]\r\nrValues = IN[1]\r\niValues = IN[2]\r\nif len(iValues) > 1 and len(rValues) == 1:\r\n\trValues = [rValues[0]] * len(iValues)\r\nif len(iValues) > 0:\r\n\tfor (index, value) in zip(iValues, rValues):\r\n\t\t_list[index] = value\r\nOUT = _list",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f5a8eb9eb4eb44d28a814278e58c0c74",
      "Inputs": [
        {
          "Id": "37c8ba2b25414be69b2409ba5157337e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e325886e4552409a94073a88a71c22f7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa2fd3d4ea3649a1ac90dc98a21b3bf4",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae0ae687035046e391f9159540aadd61",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "indices: int[]..[];",
      "Id": "4f6ac9992268490485ee2089ad51362c",
      "Inputs": [
        {
          "Id": "85d155b40ab546b0af05a95edf1ff891",
          "Name": "indices",
          "Description": "indices",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e5b6d39d5424daaa2cf059ee446aef5",
          "Name": "",
          "Description": "indices",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "46900992ddb645149a9e5699114bf07f",
      "Inputs": [
        {
          "Id": "3e96dccdc15a4ae8afb933e2e9d30f04",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09de54ed7c894589bd566d32db96d26a",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2d5e62cee15a4c939a78e4c49d68b521",
      "Inputs": [
        {
          "Id": "d8fa91e731c344449bb7c28c84610310",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "866c0b0a347e4df3ac7688fa15d9b935",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef4d2ddfc9c149b2b4e18e7fd545691b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "4b2c681fd4a04afdacab33019df9b32f",
      "Inputs": [
        {
          "Id": "57918952c85a408d8d37cbef21b18198",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab4d8c761f9c4778a06e6023d1b1746d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f91d1e620fc4edd8a99202bb366517b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "seq;",
      "Id": "08ecb500de924645a2afc324d67b24c9",
      "Inputs": [
        {
          "Id": "675b2a92297b4fb4991991af0816a7cf",
          "Name": "seq",
          "Description": "seq",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96e0a005e7a34fa7ae4f232692f3496e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "6b3f17b1376b425e9cd3aadcaa728337",
      "Inputs": [
        {
          "Id": "49fca60ec379421b9bb8a0b79b7d7c5a",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d63b8e8987cb4456b066ce77c3791c80",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "5df3b39993114bcbac6796add2f70297",
      "Inputs": [
        {
          "Id": "9c50a0ebdfe84db4bd310dc250fe4d2e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0eb12b0b7b4486c963afeea804e98ce",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59aad3a81cd14936a0b99a7022dbc458",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "8ca03d337e854f1db8820afd1a0478b9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "96f28807b3024bd895c6691409da14e1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "238d2fb3401d4a5f87efa06096c4aa5c",
      "Inputs": [
        {
          "Id": "b9d6e98c3c444c05a548622cb7fd32ac",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00712743962f4d638ad921b13a331711",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26ff4969b5d84be195420513649084e9",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "42948a45640e45d381e4a9b64883ea72",
      "Inputs": [
        {
          "Id": "cdf69d60987b4cdfa9dabbecf202faae",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a5a6d10c94f42cc8157b6ce4eee36da",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e12fdae8134451a9fa2d3d00daa4553",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "6f95b7214e6a401d9481e2ea775ecb12",
      "Inputs": [
        {
          "Id": "3ea094f458024177abaf96b73841c4ff",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00fcd937208a4d3399e30711690c2fd4",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c66e78121752474894ce473aba446b12",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "f10dac5ea96b4d45a8cdd241a899f48d",
      "Inputs": [
        {
          "Id": "bafda20577334be9a57d4aefe292f186",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "27f4653700b842a1ac4825e2393f2798",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "051bb562fd2d45ae87e127c9358d8dad",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "13740e79c35e492698221dead7b60a6c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5a8303e2e17a4458a0efd20b951fc361",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "47cd990d3ee14307be5e759c75ff66d0",
      "Inputs": [
        {
          "Id": "2abb8e549fe14cc6b5472a08c3cc4544",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78e221de6fd74e318f34d9440ac271f5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b18d9f15b374829af287a8822bb1128",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e686e9378e8542f4ba01eec8bee44ae4",
      "Inputs": [
        {
          "Id": "e49313b9537c413298774c8e8ab2c260",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8432a5853d0f43a7a9a70a70a1f525ff",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82759e1dc29642928bf86bf0eb851876",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "56b7a6d9cf8c4dacaa4af0062e630763",
      "Inputs": [
        {
          "Id": "7559dfa1b94946c3b91d879bed79a613",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f8312bbabfe42d986eefdd3a545bd06",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "3f05f845922f405b9f8476da4b67f118",
      "Inputs": [
        {
          "Id": "1eddbbed4c88433084d76c16eaa0a9ce",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d27766c79ed945a2913832c8149475b9",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18397af39ce441aca647e39e3c053e17",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "d924eb44dda5472dbc774ea9981b2779",
      "Inputs": [
        {
          "Id": "1887ba52a7bb4368be14a531caf8efb8",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "830156297c1147f4bdeb45bb29672659",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74bbdd2cecf64b9c99747c88d89433fa",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "8a41bd19e885450f8fe6f2bbd1741247",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e39052119f3940389a40557df0f88dfd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1b3d2489f7594442ab7c95a8d367cdc5",
      "Inputs": [
        {
          "Id": "c86bf0cbb56d48cb9a71e4c274a2075e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5569ca0311ac4ce78bdf843d7485c75d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bede83191bc14281984cd7b3b0925d8a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "2b1e581c9abd4d1facc1911f13e9cebc",
      "Inputs": [
        {
          "Id": "0948b0238c5a457e9e57fbd0e6db8354",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34bc201a34914a33804f956838ed0cfc",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa09df90aaad49159de3b5e8351ea3c8",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "8031196abe6c4d35985ae064a0903e2e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "76611c52e6f64327b0079060e09330f6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "1dbcc9e304104272a31db1fad9c51c4a",
      "Inputs": [
        {
          "Id": "2a2fbcda5b4743f9b23ba64411824fde",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8364afa00e7b41738cc9c37d4d6a6f7f",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c01251f63a742b888df0c43b4882b6c",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "ac9f317490d6421fb61269c5a8a99f39",
      "Inputs": [
        {
          "Id": "3518e64f52b74e1d91963ecf33b9d690",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2b8cb80d6e4543ff8ec5da0d210626ce",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "068dd1da481840519de111521eb4a817",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "82c65a3f8593473589fe1e1c12ac5cfa",
      "Inputs": [
        {
          "Id": "8b2bbc7621684a199e4ae9e6c37adb2e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "890702df41e3443dabebba201a5db0e6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e26a65f0429e49acb4603b6f7badaf40",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "35374d772925451a9197ee9bad2652ac",
      "Inputs": [
        {
          "Id": "eff8abaa171747bc9a2a40980563a19b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9fae8a10b904d91a3c8a533daea9bbb",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "981317af838a404b935e07b3767b6198",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "183cc3ca852f4a019106daf48665f379",
      "Inputs": [
        {
          "Id": "007bb4772ecb4a97892f8f61d4311af9",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "589624c09aa64b6298fa60edc6841743",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec0883352584d02b31f61c0cf80a2b2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "d3b9e9010b454685a096544e616d1a7b",
      "Inputs": [
        {
          "Id": "5e6363f4036348a8b1aebe8360493eea",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3a57a386cf947dd825ff3be984adaac",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "418af46706cb413bbcf59c96aca115ff",
      "Inputs": [
        {
          "Id": "d947a06ff34b49e790e0da95d1fa4278",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "575a4c1acc3545418f66fc008db0b8dd",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8996a5134e1d4200a245711cf550f8b1",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Reverse",
      "Id": "95e084a03a2e41738e6c17a47dc55dad",
      "Inputs": [
        {
          "Id": "5173f8e91f6849bdaeb7952cc6d381c7",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4380f547537f4d2895937008e9fbf24c",
          "Name": "Curve",
          "Description": "A new Curve with the opposite direction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reverse the direction of the curve\n\nCurve.Reverse ( ): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Extend@double,Autodesk.DesignScript.Geometry.Point",
      "Id": "cecad4710b3741699bac73b51d0baf10",
      "Inputs": [
        {
          "Id": "1d9cb97b036844f1bed4064992a11934",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8d86f685c9e4f86b611d4fcbf7f242f",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57ca58cdbaad4cb0b7b2148afc7e0827",
          "Name": "pickSide",
          "Description": "A Point on the end to extend\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edeeff6080a646ee9d61b1836a30d2ba",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance at a particular end determined by a pick Point. The picked side will be extended. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.Extend (distance: double, pickSide: Point): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "5ca129b11932407d9d520acf4f6887c1",
      "Inputs": [
        {
          "Id": "fa59b2e222b9450890d28904168bff1f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3894cd64f1e4bc58971185e24ec3df1",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100000;",
      "Id": "80b1e517aa2242ecb789f6783f9e54c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bf0149a8994b4feeb149d94c8f8e5701",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "807bb77c26bf46e2a2edbd450f8bc416",
      "Inputs": [
        {
          "Id": "451f626d62874877a757ef843253d414",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9df191caea39455a92235ab3e9e90b8c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67408112d95d47a984f5f63c3df6eb2e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "49500169a04c47e2898a0cb057f3d749",
      "Inputs": [
        {
          "Id": "55e716117218483dbdf5a21be6d0c008",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8d995beeb4564db1a113710d139252ff",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb1d442c9ea646ff95e6ab9c425812d9",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "b8cb2f4bc5d5440dbac49af9931a8439",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "49b68360f4814346ac3ce21168ab098c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce59380719c543ab9ff7a553b39c3b1c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ba39bcda75854b38bf10911ce00a10ac",
      "Inputs": [
        {
          "Id": "cdebeea57dd0467a859ca91bd93f369b",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c66f8744256341558a0a4c784ba4ec21",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a7d9ecb95b5842d1a2b227b871641b64",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c8da0cb7a585467f9f1d4e85d4c43de0",
      "Inputs": [
        {
          "Id": "bb5f72d7c6964aa3ac4f086d4b694639",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "fd02ff113cd04017b07557e92c22bb4a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f08b7eb7450b4520bf9d94b7d44b0e10",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4b11cefb164144c5b89e0d6cdf331c3e",
      "Inputs": [
        {
          "Id": "ee2969bbf46349338286e941de8600c3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d7e3df64f2448e9aa9d18ed2f2c1ddc",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0a12e1d88ab4f7ab2a15cc5e636a31d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "5e9a7004c98248a6a408b9aaca90560e",
      "Inputs": [
        {
          "Id": "769cbcd793c243e3aa8de59206f098e1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d972d152aa44b02bb7988956c84c56f",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0be00d6612874a8391ca887782c53a1b",
      "Inputs": [
        {
          "Id": "d725a26337f1470d8ea8bc9fe2d0a542",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab1c5f83438044eebd92ba397f204e29",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c431dbb5fe64a8e86c65a60ec479dc5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "2735a7d893f346bdb0de9b5795bad0da",
      "Inputs": [
        {
          "Id": "534e760d839b41538994a24a2c8f17a8",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d049ca30bc34e07969850d9d21ce5ef",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "603ee614f837436595504faacba24202",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "7d820e19604d4742b7b9fbd5058be449",
      "Inputs": [
        {
          "Id": "9fb85a2764864aae8895b0127ca5986b",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4caaeccd4aea4c31a13ad8a5c3ab915a",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7c8c4d0dd3c4ca1898352042c83017d",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "84d8ea3b0b634b42bb94396a37ae663c",
      "Inputs": [
        {
          "Id": "48be9c9381c940d184d62a007ef3c60d",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b0be06616a042799c9e226a80a090d1",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f8a7ac5292b4618b98541e2a4181cfd",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "9f3f8a3195624d3c8b029dfb76a2cdbc",
      "Inputs": [
        {
          "Id": "fc51514508fa43f2bc018ef9e52dcdec",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd0f67a962db49b89f2785d7d4f0beb3",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Extend@double,Autodesk.DesignScript.Geometry.Point",
      "Id": "3861e6172a1c4dae8da93d18ef42a016",
      "Inputs": [
        {
          "Id": "b5e14859314b479eb8184418ab1e53a1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fde2bc47f254050962dad78ab4c39f6",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de8c4cae8c194758a77787a0ced14e0a",
          "Name": "pickSide",
          "Description": "A Point on the end to extend\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dab6b027d3c74655a97cc680aff9433e",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance at a particular end determined by a pick Point. The picked side will be extended. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.Extend (distance: double, pickSide: Point): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "2058d3a6dfae4b53896980a7b7edb132",
      "Inputs": [
        {
          "Id": "2139764a3655425399e44decc2256826",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "baf8d6cd27b04ba485ec6a4b8010b810",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8b3d50991f94e3bb5788f6b861b14d2",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "f1555ebcf06a4fd49bb211ca81fca2f4",
      "Inputs": [
        {
          "Id": "ef1fa22512984407849578a9a445bfb4",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c969366978d241bd881e53ec2413209c",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18ea4dc62c174414a51c3d313b6ac85b",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "eec12cff67d141729417efc518846884",
      "Inputs": [
        {
          "Id": "54c53a57474f40ea8f78ded0a1c8bcb2",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74bdc0724c604ed5a1e89472915145db",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "62d12cff1de14523bea06f5ed4b8ffec",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bf8e4a6b2e844dfd832e4c203175675c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "4cea2df110d44c3a9ca3e63eee2f023e",
      "Inputs": [
        {
          "Id": "bdd04d0575b5482ab6de08499efbdfdd",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "007f604d43364f6297f70df185040e9a",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b87209f96a4c499b9698ee5f663aa162",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "244813b8a61a47d8b5a7ab94fe20fbf3",
      "Inputs": [
        {
          "Id": "84ca85aee0ba4bdc9c9530d1221920af",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99f3e8e708734c03b9bd41d96ca59961",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c685a8efeaa4a3885970f10ed8b62e2",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "f58a3ebc06cf449a8c81b867d3c9f87c",
      "Inputs": [
        {
          "Id": "d1f0b470eb1445b68c66c72bcde97dbb",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "535fb295c05a4ecebf9e29795ea1930d",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6659ec5d2cc94aed91174ecea57be253",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c614046f447f4d08af89baca6deca5c9",
      "Inputs": [
        {
          "Id": "a3d90e65a04e4ec7ac3ffdc6e80af0ac",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7b211c2df6748cbb031f356dbed6bc8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c0be6a1e7e54b58b7c310a572d8f063",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "e15e998e86044084bb7dfdee159365f6",
      "Inputs": [
        {
          "Id": "993d1e30299d4ec78aa1659b56ce92c3",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "aef1b0dff4e44620880cfb9e67b1b3fa",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "214da1b024374617988a988e422d83b9",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "e096d4ac472543f4ac626c22b47d5a98",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0ae8b7598a7747519ebe8f462e174350",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "591550b9ae774830b609f0c3a877916e",
      "Inputs": [
        {
          "Id": "64a8ff450c3448acbc5d67082af94c6c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "443b1796b7b84f229a1aefd47a5630aa",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d0714619cb04a58b8a0d42be87e010c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Geometry.Intersection.GeometrySplit@Autodesk.DesignScript.Geometry.Surface,Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "3007125f2aae40c6999e8ae0b1ace800",
      "Inputs": [
        {
          "Id": "1b78f0c16c4e40c2bd15f5c6d97ca36f",
          "Name": "geometry",
          "Description": "Geometry to Cut\n\nSurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1031c5544a24bd3b306b2f30f2035d3",
          "Name": "cutting",
          "Description": "List of Cutting Objects\n\nGeometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3b273cca39542ee9bc7b100d7b21c11",
          "Name": "SplitGeometry",
          "Description": "Split geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Advanced Geometry Splitting\n\nIntersection.GeometrySplit (geometry: Surface, cutting: Geometry[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8bfc3e202d0f453fac36cd08fa1790e6",
      "Inputs": [
        {
          "Id": "80bdcea8275e450ebfc0d34d05b864f4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6856d4a991df44a5a5778ece30a0523a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70dacabd122b499ea138d052d7cc1d6e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "dfd2c3abeecd4b7d998cb10a1474a1c5",
      "Inputs": [
        {
          "Id": "c5b925f850d44e2aa08b341483d7e38d",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e25b4492fd841d6a714a526f4ee62a8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "8a4e88a04f9d479c912e02342c870514",
      "Inputs": [
        {
          "Id": "6c81b2e528354d32b26100d632c6e32a",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a0d669adc47466cb0faa750e57af794",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5ace9f291814e9e8b99fbe94a9c5743",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "7d5645e07e874cbe87b0d55d225504ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "031b04f2d9c64ef0bca2241ebe52e411",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "92c80c20eb304e409408869d4f33fb01",
      "Inputs": [
        {
          "Id": "6d95d28e3d934546b868120977546585",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd68871d47584630ad3753671d84e3db",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79124e4ba0964864a84acf1cf3d00840",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b97eb79df6742879dd48603e43d917c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "853a007703aa4ed39374ae45dbb6f424",
      "Inputs": [
        {
          "Id": "95e81ddc3e8f413290814bc4ab98622b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d002ccd488d8438089272a25e3cea51f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "500a44e01882462eb192809fa73ecd9b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "88aa44d6beec4df790d2955a0a060e7f",
      "Inputs": [
        {
          "Id": "de4999835b6840fc843ca80427308e2a",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f81a8c624caf4fd1935daae9dd0ef7d9",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2aa4d5160234bd680d1ef4c06f39466",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "9b6774f22ed74a5c88df0abff79b8f8c",
      "Inputs": [
        {
          "Id": "842b6a9523634e94a0c29a105bfb383b",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72b20533cce443ecb0c6a6fa490088e9",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "82aaa32fad04438e9cad6c4de962f8cc",
      "Inputs": [
        {
          "Id": "8f2c557137b0439d87973b572da3ad27",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "328dbc4a535741109d9f84f2df793864",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "be88c60424b04d70aeac7f4079be34dc",
      "Inputs": [
        {
          "Id": "8a37c666774047cd8c7023a8520de399",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80b776163187465e8501ca1a8a503d7b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "0f48ef5458084321b63c9578787371e0",
      "Inputs": [
        {
          "Id": "3f19dd9c79864a6ebaad0e2dfb7b3514",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21835214fc0941fdb1be29946b6f45cf",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "bed69c1d71b94691adf3a4e784864516",
      "Inputs": [
        {
          "Id": "e5af927964c7486f935490237d32835a",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "002a4e1d52544371bb159e48a6209cec",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d7790887e844002af930a5ddb4f501f",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "83adff9bf1d7441189f79c7fa3e41521",
      "Inputs": [
        {
          "Id": "73991f8fc6644549a1f85fee44a2ad6c",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89c95ad0a27c4f29a7685aea69fc184d",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "967b5c5201224ec1b7ee497597199a1c",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleWithVector@Autodesk.DesignScript.Geometry.Vector",
      "Id": "b386933b5b814c46b37027cb34011a46",
      "Inputs": [
        {
          "Id": "bf42ef1617f7427cb28cb6a8864ae2b7",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "631796d864a04aeabf22f0e04367dd91",
          "Name": "otherVector",
          "Description": "Other vector\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9322434a9c0b4a29bf16267043b28347",
          "Name": "double",
          "Description": "Returns angle between the supplied vectors in degrees from 0 to 180.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the angle between the two vectors in degrees from 0 to 180.\n\nVector.AngleWithVector (otherVector: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sin@double",
      "Id": "9c3c7c4f1508490ca942623051d2646b",
      "Inputs": [
        {
          "Id": "9f85da5b703d469ab4db0a1cc8c8d24f",
          "Name": "angle",
          "Description": "Angle in degrees to take the sine of.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6c03a8966f14c19932a1ae2ff1457b1",
          "Name": "double",
          "Description": "Sine of the angle.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds the sine of an angle.\n\nMath.Sin (angle: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "0f862df1e9574653b16db6e9b378d681",
      "Inputs": [
        {
          "Id": "33a8313ec9f848ffbb520cf2fa863d1f",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39cc2e9038c04f3084961786701b0ac3",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "683bb568c4004e22b6c3d0229ea0eb56",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "c0754a02a8f046d88317eb24e6eeded9",
      "Inputs": [
        {
          "Id": "652ec99eafb14f7c87c547d38e72c875",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f164dac3ad54423954b349dc81dafd0",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ceec1bd797c4931b1d3efc57f7ebb34",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9c62c4fa5e994be2b71999a41d4dbaa1",
      "Inputs": [
        {
          "Id": "1741fdb6645c46a9945496be1c74f523",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5abf3a2cda8424693e25a5a5b42daf6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ec339c0d07344e08eeb7dab48af0a3d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e8f74673179348b694c7e30aae01730d",
      "Inputs": [
        {
          "Id": "6ba1a99f999445cd8c52c3bea99df9b1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7d12b9adda20402cacc640313c3be345",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fca76c2f86ef4f73a8d71ad6b1df412e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "c24192178ff24fc99055cfbf46aefa97",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3f032c1cb3a04deca1ebd581f4ecb652",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "da2f0bd77e364bbd91180455cf2bc7cd",
      "Inputs": [
        {
          "Id": "b5997e7af74c48eea145c5862fd74915",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f639412cf47a4b7f8776c10cc82355be",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "45f0dac4c60945bba4ca690057535a21",
      "Inputs": [
        {
          "Id": "3881dd05b11b45af8b2f4ec8f532afbc",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5eae567cdf145b2a15fa0241ed701ba",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c93b6192b4ba42e7acd35dc47783695c",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "47bd4bacbbaf44c19c5d7b2f11191290",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa9388b4780c4656abba2272de6b7cef",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "3e63e641fa714e5c83adcf3f031549e4",
      "Inputs": [
        {
          "Id": "ed8cf0a8d0d34a98952bc9105031dec8",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3df07fb691fe4ec99552cc3471867d1a",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e135823cb0db48bbb86279fb872410e5",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "8f1bdefeb8904d77b0d18ec6548565aa",
      "Inputs": [
        {
          "Id": "79cdf5d003e04e6291d9b51e3d5eb1b6",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89162576c2d6421289c80f69c1eb1381",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "ad1ab8aa66a14205978438da0e4bd869",
      "Inputs": [
        {
          "Id": "1b2783f8ea8b4d6e9903c51888877c90",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0e2df99c52342c4903e47e17bbea64e",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "782892cdad4742069cca2729b8e89b8b",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "94961e3b61bd4bc9943791e205e1fbd0",
      "Inputs": [
        {
          "Id": "bb24b779bb8648a7917542237e746104",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7c7cb07c8ea4a37a1a5885cd2392b9d",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "053c8f8710a74439899ca6bcc0c07a68",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "2ff772458be34a8ab8737fd603647837",
      "Inputs": [
        {
          "Id": "e5e722c898204578875e6484dae3f55b",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0ccf2b41ace442eb334f3451307b380",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "751511cdbd2140d79b88a049198b9bb3",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "313e15e447944d8dad9edbd1b5c64d91",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fabe19d8ce7a472fa2aef7af7b398b24",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "303085642bec4dc785da70099980123a",
      "Inputs": [
        {
          "Id": "773fb834ff944cc488876fe9c7d0cfd9",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "729cf30510234489a31c020880a847b5",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3dc3284397a94917b62feb0883ec23a4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "25d686b96b1743b5ad6a0861896b41ad",
      "Inputs": [
        {
          "Id": "01f5994129884268aa932ffcccd94800",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c9c3c12b2b54272aef1034d1e54b991",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82d0a705b573410eb8f00c7659295dc3",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b89de08325b34e2eb3cdf62cc9de6745",
      "Inputs": [
        {
          "Id": "66f0f210ff764697afce67c79b715827",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f0b31139ea74dd189f0b8e04f16c5a0",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a0a0d898e17426ab644ada8b60e2959",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "60aa2308e2dd44efad395e8fa6c58299",
      "Inputs": [
        {
          "Id": "e97045dbce814fe6b353cef37690b282",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8455fcf46a3247b6af030da901689084",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7deeff648f3e4487b04e8fe452a380d2",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "93aa3de05ae5420b84344caee148079f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d489a7ed243643ed8a3182d803f6c39e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "02ca2095dc424261a643e71d405e1768",
      "Inputs": [
        {
          "Id": "3f90dec918894c3295540340f485f5c8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46158c44e76348aea17da0424cc04b8d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edaff679c9164d579ae637310b58fb81",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "85467464c7e4498b9bd1220ad53cc3a3",
      "Inputs": [
        {
          "Id": "8e4f9015b81c46938f4e51d973f049a4",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "127e32306e2a42a7a8e64e663ff4ca14",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb33135b123c465c9d23532f8c6d027e",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.ClosestPointTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ee9e6e111dc44847a55e73c231bf5fe0",
      "Inputs": [
        {
          "Id": "4d617a9795d2425a81dab1d8718f9a01",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac4c1c8bfd78484488c99aa34acd759f",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6edb4ce758d4152b6c2f17052c0a261",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the closest Point on this Geometry to the other\n\nGeometry.ClosestPointTo (other: Geometry): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "28ba6a3252c74dfba1212f6f6f26e6be",
      "Inputs": [
        {
          "Id": "c218a220cf2846d2bb9d36312df28eab",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30f88453539d4e79a328a737c835f9ab",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f18147953d74bad82269098e64856a2",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "43ffc915cb3b4fbe8c5a6b57e7184896",
      "Inputs": [
        {
          "Id": "17601c67b3be430ea03e156c39a1470b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3336ceb04e34e7d96828bf5e56113a8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "530d71d591d044328ede1bab89000aa2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "1239361c589740e0ad9c3c3da19dc4f3",
      "Inputs": [
        {
          "Id": "f6cf1c7983124327a78f40c45f0db795",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a29d5a21c2b42f98645c63526a96cfd",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5ceb48dec724deb84cabc18ef0d433a",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "12f9880cb8e940a588f8c7b4096be975",
      "Inputs": [
        {
          "Id": "d1d13c478c534e2387d412248c3d3698",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cae76bc46caa46189d6b3e926cf6a1de",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc77f451afa949bda55a0a84f3da6016",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2fd3eaeeab9d4d97a90f1df6bff7ff83",
      "Inputs": [
        {
          "Id": "c4511da6822b443f8cdf880da7851bb1",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e839d147d254a4ba4b5f4797b4534d8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68cd19178f144c50936b5e40bfe26f51",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "9c2e7304971b425288952a197856388b",
      "Inputs": [
        {
          "Id": "aa5b2357cdec494ba73ccd24ad636923",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff7750e1b5e340a0ace63135e462bddc",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b61f872a4f24347ba6f7708eb16e1c4",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "ffc8a55901a94753ae628e18f2a45356",
      "Inputs": [
        {
          "Id": "f435915af23a413881664ef2f840296d",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2cf0bfa01571493f942604b6911f9cb0",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cbe723aba9642d48140d7db9f930b8d",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "b71dbcdb4fbe4ba097cfff33454e1cb3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8fd694656c554a57b36c3b65a5bfaf08",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "76a4aa70ab034ed6af19d9518848a15e",
      "Inputs": [
        {
          "Id": "07e282c8eae1468bb32fe9f7f68765f0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec0ad0e0409244ef8c60dc6f4cf1184f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32ce5fb97a054d41a8baa68459ac53aa",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Color.ByARGB@int,int,int,int",
      "Id": "5db7efb7835244368c38c08970b92d6c",
      "Inputs": [
        {
          "Id": "bb727b1ff8b745d081e02e4e5f9156ef",
          "Name": "alpha",
          "Description": "Alpha value (between 0 and 255 inclusive)\n\nint\nDefault value : 255",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aed2c26deec84512ad2235c1cd61b866",
          "Name": "red",
          "Description": "Red value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba0545383b4d4a7d9e8ba5f11adb6deb",
          "Name": "green",
          "Description": "Green value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7948c4326ef45ae87633c65b8d1fbad",
          "Name": "blue",
          "Description": "Blue value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "596f8c7f1a3a48a486e73879fdeed1d1",
          "Name": "color",
          "Description": "Color created from ARGB",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a color by alpha, red, green, and blue components.\n\nColor.ByARGB (alpha: int = 255, red: int = 0, green: int = 0, blue: int = 0): Color"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "78;\n129;\n0;",
      "Id": "f59d4e8df5474d43b44bd47e949ba86d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6b321d7057784a8ab6476aaa3a2a12d8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1169115fb6e94a5787fb6183af92a225",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb45bd194d774e209ea3b1f1710dae89",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "cd30ee99a04046faa958dada977a75d3",
      "Inputs": [
        {
          "Id": "d2a76e1464334735bec7d99d7ed34d3a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99825742c2774c16b91d73bc77c18f02",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "511df18267dc487c8d171659c2e78d66",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "ff3679963efc4423bd9aacb32878123d",
      "Inputs": [
        {
          "Id": "f64e4461189b409e9e9bff6026dc924c",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "940738eeb39e4225bc48daf46baa4028",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7343c21368bd433ab8baf6bdac58da9c",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Id": "4e8278b1ca7c43c688d39e6b6c3f2d4b",
      "Inputs": [
        {
          "Id": "313e6a07bcc94daba61776c3d7b33997",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bd2e798c5184421a4e79d59b0392019",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8237587d50cb4223b7662d619863ab50",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "614ff63293ea43a8addea9e50c8f139c",
      "Inputs": [
        {
          "Id": "6d7f73a712f54a5d9ab22005adffb72c",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56e4f3c3298b47a2844f78621ecca06f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "65add3d9fbc04affa5c6afa781a37371",
      "Inputs": [
        {
          "Id": "739e272c049f40b9907474d09538fae8",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0a304ce73ee413b9405587a1591b7c0",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "4826d1077deb4d45b4c696b1904f1990",
      "Inputs": [
        {
          "Id": "6481c4f917e14d2c943b05d2c16fe315",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca36519d813c476eb017258a1fbc9ce3",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "UnitsUI.DynamoUnitConvert, UnitsUI",
      "MeasurementType": "autodesk.unit.quantity:area-1.0.2",
      "FromConversion": "autodesk.unit.unit:squareMillimeters-1.0.1",
      "ToConversion": "autodesk.unit.unit:squareMeters-1.0.1",
      "NodeType": "ExtensionNode",
      "Id": "9b877b244244482abead6a40cd4be0a3",
      "Inputs": [
        {
          "Id": "1bdd56044de64efd8278f19672740298",
          "Name": "",
          "Description": "A value to convert",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "042eb074b2d6465daf464e72168b40d7",
          "Name": "",
          "Description": "Converted value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert a value between selected Unit systems."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "2bc11223974944dda26e7bdeed58ac6b",
      "Inputs": [
        {
          "Id": "fafb4338cc544ddbafec0ce1f667273f",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddc6757d35664aa082b5fcaf44a31b23",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Transform@Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem",
      "Id": "fcd6ad72b9554d11ac9f485faa165ea5",
      "Inputs": [
        {
          "Id": "270d21485f30484b891f5fce92ae8bfb",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "511db71309f641499f6425688ab6a12a",
          "Name": "fromCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8ec8c5b662e44fca8bb60fda0132820",
          "Name": "contextCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "520f7586f04a4891a4c2bc61b8d27df2",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Transforms this geometry from source CoordinateSystem to a new context CoordinateSystem.\n\nGeometry.Transform (fromCoordinateSystem: CoordinateSystem, contextCoordinateSystem: CoordinateSystem): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.Identity",
      "Id": "7b01bbe569ab458f989200953e7bd4e1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1e585bdbcff04d9fb8d8486607027e67",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a CoordinateSystem as the World Coordinate System: origin at 0, 0, 0; x axis at 1, 0, 0; y axis at 0, 1, 0; z axis at 0, 0, 1\n\nCoordinateSystem.Identity ( ): CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry@Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "bebaba6fe83c4727b5e2a6e48cf64aa8",
      "Inputs": [
        {
          "Id": "fa7ea5e7dd5d44de8e4206fd78a2fa4a",
          "Name": "geom",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a646267ddeb54aa0874b6dcf7a061080",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Create an axis-aligned BoundingBox around input Geometry.\n\nBoundingBox.ByGeometry (geom: Geometry[]): BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "53ac0547950449e7940774e1c4fba50e",
      "Inputs": [
        {
          "Id": "483d8b44472d4e4582382de9cafbdbdd",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd6a0172df7e4206a8e93ecb236e0240",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "4593355aaee248dab061fe51ad125145",
      "Inputs": [
        {
          "Id": "e2a9d58535594f0cac3deb615f230383",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "14d5959b05af401582e21403e1b23112",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "6b2277c022ca4e3e8fab1409f9761cda",
      "Inputs": [
        {
          "Id": "d83baf8e964441a6a3837f90fe521eba",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e35eb4569fa4bf7b9e5c900b0408c7d",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "c3834bb16302489b9a8eb38279ab935e",
      "Inputs": [
        {
          "Id": "15499037e28043599205900a195cb98a",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f3f084bc70f4f4a86e86a74c6c1d093",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "c386a0fb40e5451daa1ad36a95e3b09c",
      "Inputs": [
        {
          "Id": "78b55526cd9b46c1bdb36cc7231bf3ff",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "403030d4eb2c4d94811d7136bc911f13",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "a8e1b1f030344be9bec52c20c08cc24d",
      "Inputs": [
        {
          "Id": "bf1bb24da6ef46ba8b2995b269a1c09f",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2ff2ef2ec634ddf98c2c0176ecd3067",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "87997e99d47f46cbb56a4af68719d292",
      "Inputs": [
        {
          "Id": "d4917fe427534927acb6f6c0d2b3de1f",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1d9085f5d4ea41a4ab6e0abe1f6f013c",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a6cb34732eb424f92d9011694f051ae",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ba03a14fa9bb4eb6ad73b57e8aeea239",
      "Inputs": [
        {
          "Id": "5f598d8f9de346129638fcb3396f909b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef157c92c71c40aa8c8e04ddf3043abb",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06f4ba6a8928443e91307568aed20266",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.CoordinateSystemAtParameter@double",
      "Id": "37e93171a43a4623953e07d845480852",
      "Inputs": [
        {
          "Id": "fa42ed6e36244b079f4c2b5e96219395",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86e8578516df4e33972b1cda242c2b1e",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abafd4b2d1d84c508528da99f2faafa5",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem at parameter of curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a CoordinateSystem with origin at the point at the given parameter. The XAxis is aligned with the curve normal, the YAxis is aligned with the curve tangent at this point, and the ZAxis is aligned with the up-vector or binormal at this point\n\nCurve.CoordinateSystemAtParameter (param: double = 0): CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "8a77f54d1cd449a8a67848550851f8fa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "123ef32b66234301a80e25058c281e6b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "4e2c2d64dc4f4c4db48cb8d18f8a07a8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6c26aebf9c4c44ed959ca6f79bff98be",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Transform@Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem",
      "Id": "63dee91145b846f4977ceb614afdc0e0",
      "Inputs": [
        {
          "Id": "3d4a4a81528d48de9b03c6662902081f",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a8f96d5bcee47ea9cf6fcc96964504c",
          "Name": "fromCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31f308adb5604185af657bd9be3f8e76",
          "Name": "contextCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69ba5595ac2e4905b72a996617b4c011",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Transforms this geometry from source CoordinateSystem to a new context CoordinateSystem.\n\nGeometry.Transform (fromCoordinateSystem: CoordinateSystem, contextCoordinateSystem: CoordinateSystem): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "4036d0c54c7849bd8add9d2231a18d74",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ec0272bafa164b09832384bc00f8f6cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d05bfb7531234c79a4ae232608064499",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3753a32a4f19430d9f702faf6a2df920",
      "Inputs": [
        {
          "Id": "4a271f36cb214c6a9cafd5529294d348",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "09de811f172642fbbdcac8f188e7b31f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7977c3fc00df4c99aa73fd051b834128",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7a5eac6ff3bf49bdadf0a8698e4e7ce5",
      "Inputs": [
        {
          "Id": "292f92b7bd9e4ba4b9da4734d61ce9e0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0bcc6c12d91f491eb39bb6bf2a62088d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19ad9f7ac3d544b7a90b4d2a6e0053d4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "2b5e967fcce84bfc8a1026c286fbb1c5",
      "Inputs": [
        {
          "Id": "e7844f382d06487b90c7e4265cac35ca",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b866cbf227db4f5ca7c2a02e86f264bd",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66522dd702cf49f6b644d26bda90758a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0041894c5c2447bf8e0c958480b6cab4",
      "Inputs": [
        {
          "Id": "3fcc6c94fe8149539e8d7370e5482521",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "30924bf1cdea49c2b5c8e0252c2d7f12",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ce5904b20214a228991d66636e093ae",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "68bf9790d445487caac0fdf983055e27",
      "Inputs": [
        {
          "Id": "7668760fe6194c0ea766f03cdca7b91e",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8481b0dcebcf44a79a345c8e1aa368e0",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "db1b95abdae14903b69430bda749b185",
      "Inputs": [
        {
          "Id": "dbdda5ad7a7e40b19a2b95a8b671e0ab",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6fa089bbabbd46868783aab0510ccb45",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b32edac178ee48389b861b4d8046420f",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "a84e3e64e9584b2db15a9f784389eb22",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "16b2b924c3d54ef6b35cf6dd5da74da6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d0b719c1d7a497aaaeace59a062419b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7fd38c36dcf94c4dbd78d361f6169cbe",
      "Inputs": [
        {
          "Id": "a5d078e46d9c41dcb3032f4cc2f4c62d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "17e082093a3d44e089147b0f5930a943",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f36b04dbb33742f9a47cafea29614e14",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "9dcea6c8a7874dec9dbae9ae0afdfb51",
      "Inputs": [
        {
          "Id": "f24c2251a58149699dd0c9f96877f90c",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9e522704582474d82bfbe4a35fc41a6",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "552c66fc24d04e5ea4e0a40df29d81e1",
      "Inputs": [
        {
          "Id": "386665eacb164f70b728bcf1a8e35128",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "63f5333190e74e77964ba779fc1843a4",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50179d92eb434b2cbc7046ade1397ab6",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a = bb.MinPoint;\nb = bb.MaxPoint;\nr1 = Rectangle.ByCornerPoints(\n  Point.ByCoordinates(a.X, a.Y, z),\n  Point.ByCoordinates(b.X, a.Y, z),\n  Point.ByCoordinates(b.X, b.Y, z),\n  Point.ByCoordinates(a.X, b.Y, z) );",
      "Id": "103e4ac60df34cf8adbdb5c4438768f1",
      "Inputs": [
        {
          "Id": "4125529f2a4e4939830dc39f4015c1d5",
          "Name": "bb",
          "Description": "bb",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07eb5a24e3cc459cb8eab9f176ef0607",
          "Name": "z",
          "Description": "z",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ba0da58c15e4458ade62b249b781a16",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ac390cd2804471e8fe84f116a8aca04",
          "Name": "",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b71229e5aaa348d3b9ebad804b66703a",
          "Name": "",
          "Description": "r1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "eb670e6169f74d42890b220199688fee",
      "Inputs": [
        {
          "Id": "1212b20f52ac4a89bf79248b14691c8a",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e0349d85ef04cfb9747a840255f2c5d",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "52436554e93f465a8b79a87339441d96",
      "Inputs": [
        {
          "Id": "e14b0d2252544ca0b108de9349cc209e",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a71d3f94c3b94bd680c06fa816e5666b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "407e96dc5d9c40a48d8d4104bcc893d7",
      "Inputs": [
        {
          "Id": "55d117e0abd3482da8d4299a5ed1e893",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09526a5f61a84518ad499e86e38a8d84",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3437421b199d401ca88f78472899b81b",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "db31749a742947df95944d41e635e541",
      "Inputs": [
        {
          "Id": "f01e621f520640b79dcbbc553d9c4471",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d66e659102ad4d7b965d24f9c048fc33",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "6fd273318a8b4e90a045313330317bee",
      "Inputs": [
        {
          "Id": "53ce8519f46d405599b110cd28754c18",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c2acf6273ed4e109c6efda705ebf024",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12e8dd846ecc4e419a3b9fb8ccefb131",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "2ed55bf7e22840fe99d5f1abb12819f4",
      "Inputs": [
        {
          "Id": "92c7476a8159405ea962ce4f1a6a00d1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8644f4c3dee544d1838fc1fed6f6f12e",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "528f03dd9dc34578a509fbbb98511509",
      "Inputs": [
        {
          "Id": "74cb403c8049418ab8970f77100d8849",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e180b4e03e334734b2f90dc5f135a629",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea31b47d2e9b4d95bef06c8a67d58099",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "ce27f91ee8a3477f9c95b59026f7b956",
      "Inputs": [
        {
          "Id": "33ecaa8dc5dd4b02941a75f4c93001fd",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b44ed6c43237496fb250402c3f7cd3e3",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "5905df0708cf4cbeaf5902cd4a351f96",
      "Inputs": [
        {
          "Id": "f93680ae2ace4848a4d53d6afef1ea28",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e429b37f05d44b6cafb5c11afcfc739b",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7aac3d52e4e245ccaa15d576b8f8c17a",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "1fe8ae37cfab44ecab763d539007427e",
      "Inputs": [
        {
          "Id": "a535d8c07bc648b8b6c58a68d400b9f6",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "467c2d12b8f34e1eb6dd41d4f3431f5b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "0031e1e3385b42fa9e551d94651a6c08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ce80dddd59064a9b88f73efee721b28d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea2fba55ee0140b592d11a65c264a3cc",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "fe019fb2934b4db3a6f6aed1ed89c8f2",
      "Inputs": [
        {
          "Id": "bec457b353134b3a99f335a25fe9c421",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f692f8dffc446a18720d66472461220",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "5cffdd950261456daef32c76b7ba7800",
      "Inputs": [
        {
          "Id": "80c4a5e868c347269d99fcb5723185af",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8458ef71f656466cbeef13c4e10675ae",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5aebc019ba4547b6ba22470610a67902",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "3533f3f57dab4e0c89b5167ae09c514e",
      "Inputs": [
        {
          "Id": "1a4d1db9ba074d5d980b718cd7a29bf1",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e62d7394f9b74c0993b1200320880a9a",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7441d71b59d49af8fa45d233060707d",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "2d9804d839c84c089d5f14347ac5b994",
      "Inputs": [
        {
          "Id": "38834f805a2d47c9bc559f30a9835d11",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e2951b75a6042c492506358c32eaf1f",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "fb5f56be4bca4a96973a13487472c386",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "74b5423b8b7a412495552a6dc65ce39e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "957fafca876b48b59c03dea3ab31e0f5",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "cf51d190ec0b430e99631185938c036b",
      "Inputs": [
        {
          "Id": "e03a4d8a90f041978e78ba30879f4397",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29e3ca34e9984d73b2c60d96a0af565a",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67558f0313ca4ec0bee0befc9f89f5f9",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "aab3476eedc04fe690bdb6f373d30522",
      "Inputs": [
        {
          "Id": "af23a6c430664bbab2ff0060487ea60d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6600b528d88441f6b925ad25409417ed",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "8031cfeb822d48b2ba97c3bd4425ee4f",
      "Inputs": [
        {
          "Id": "11287659804f432f890ee848ed5946c0",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f1c48deeae04cc1b0085a227767f04e",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a59bf84991cc458196a991efa2dde947",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a07fe82bb73c447a9c509c458f65d270",
      "Inputs": [
        {
          "Id": "cd6afffc7a424fe896b442925ba25045",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "393ea0a61f3e478b95eb4b6c2ac8e835",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a82a95f2f3c44fb891f98e41a64a7b7c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "53982a6f548245689b7a7098b90adb73",
      "Inputs": [
        {
          "Id": "230d8ce26c6846bb9e053c5a21f76744",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82b4037b58404b65b69dd806a1fb2ce8",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointsAtSegmentLengthFromPoint@Autodesk.DesignScript.Geometry.Point,double",
      "Id": "fa4afa57939c47aa9b1e214e783ac4b3",
      "Inputs": [
        {
          "Id": "281aa7fa91fc483f886f05b36abf2c77",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b1f242a5c6d4cfc9030b3434ce4481a",
          "Name": "point",
          "Description": "The reference point from where to measure\n\nPoint\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "104db4af8b054d869649f275fcf8f8a1",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a460ffb718d3451fabfbd056e12778ad",
          "Name": "Point[]",
          "Description": "List of points on curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns points spaced equally along the curve at given segment length and starting from the given point\n\nCurve.PointsAtSegmentLengthFromPoint (point: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), segmentLength: double = 1): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d68b7fb887df49489360e097f5ba0f3f",
      "Inputs": [
        {
          "Id": "804de8f05b874142918152dd5641639a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "04bfb540db524a009a02b1dd8346ccd0",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01a2c05ec8de4015bd8843547a52c176",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1a662d3c496347aba19d6baf71608896",
      "Inputs": [
        {
          "Id": "71b3501163ce45408a4bfc09a784395a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8bb5d72366bf4725a4c025006f5b1b79",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29ba8e35384b40caa614ed7d3e2036f9",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "fb00646e6e8b48c498c738d4108bd65a",
      "Inputs": [
        {
          "Id": "1d4e67de57e7420b8c1fe532a9597907",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bae4e2a34b284ad3931e9137cf423532",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "159b374d88464830be8eb0f891ebfca5",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "59c59e3c31ed4d60b3ee92d26bc90695",
      "Inputs": [
        {
          "Id": "e4718c3d13d14373bdbf33610cd0d53f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "66386acee8c649788444ce6b2d1aedbf",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fbb5846b6d9497ab3422e97a6dc6dbd",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointsAtSegmentLengthFromPoint@Autodesk.DesignScript.Geometry.Point,double",
      "Id": "06eb5264c5154e1087224d6fed7d32a9",
      "Inputs": [
        {
          "Id": "9e5af09088bb4c42ac5e45bf288eae80",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e67d473f4dbe412492d1ef2d857d2ad8",
          "Name": "point",
          "Description": "The reference point from where to measure\n\nPoint\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30e08c04fff341a4bac967b3a39c5fd7",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e44b1a4b34d4b2f801ad37aea46e73e",
          "Name": "Point[]",
          "Description": "List of points on curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns points spaced equally along the curve at given segment length and starting from the given point\n\nCurve.PointsAtSegmentLengthFromPoint (point: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), segmentLength: double = 1): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e9792ae0a64a4c819cc9ea32755de424",
      "Inputs": [
        {
          "Id": "31633d7b2de94c3685b91d967d5889ff",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8d025ea5c767496d8f43289b17b9b1d4",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2456ddeba17a46e2af273e2657cf10ee",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "4f471372eea1456f8cb8d9ac51bf60bb",
      "Inputs": [
        {
          "Id": "930934ebd5444064b81d1c7aaae27bfc",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "354cb48e08e849b989bbde48e78a4955",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1edfdf6b1275467d84d32a38bf3ce784",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e9bd045efa8f41469911204e4b265d57",
      "Inputs": [
        {
          "Id": "3b48905915464fbf83110cb385ae967e",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "344f81dcbcbb41e6a1d2de2fd5dc22fd",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02a5b00b392e4b6d8b5e0859830ac4c7",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "8cdefcc760a24039bc95a2617ecfd30f",
      "Inputs": [
        {
          "Id": "5027217b0bcf4f7fa18d55f01d36617a",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc84e29173ea4abfbe99eca7e40d80ee",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ecf25f84d53d4e8382781cb16943b723",
      "Inputs": [
        {
          "Id": "c5e3bfe3472340de98b32007a3d6404f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "67b415ea946245ab9cfff82fd7343b14",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebbe51302ac24be595fab41a6c3ee9f5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Geometry.Intersection.GeometrySplit@Autodesk.DesignScript.Geometry.Surface,Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "fb1931c4c60747bdb0045452ba3ff804",
      "Inputs": [
        {
          "Id": "ec8aac38538e485da136a67fd7001fa2",
          "Name": "geometry",
          "Description": "Geometry to Cut\n\nSurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58b003e6608046c1bef4f3204606a20f",
          "Name": "cutting",
          "Description": "List of Cutting Objects\n\nGeometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fba564b5c4741a2878e14dc9fd26669",
          "Name": "SplitGeometry",
          "Description": "Split geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Advanced Geometry Splitting\n\nIntersection.GeometrySplit (geometry: Surface, cutting: Geometry[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "7f7bbf3ea694472ca4ed0a1d4de15302",
      "Inputs": [
        {
          "Id": "f2fadfe7588341688ad0ad577e8898cf",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17b1436ee4ef40d49a0c4f1ca4d83c02",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Cells;",
      "Id": "9234a16da7254d7388bd4cd6e257e382",
      "Inputs": [
        {
          "Id": "8ca2d595023e48b08700e871774e0ca9",
          "Name": "Cells",
          "Description": "Cells",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "267932c649b24cc0be35252c3914bae8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 1.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "InputValue": 0.9,
      "Id": "b2def619db2c46e3a02daae5bf2418b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aabaf1e404b948899780a0f029d5ba79",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "5efbb736511741cea349056dd569f50d",
      "Inputs": [
        {
          "Id": "9f64d7f120b0470db0ab8ae2042b2590",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67e072791d234c8cbbea8bcffa7c2eb7",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0826fdbda73c47819b7bb35353c323fa",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "8cb18c39746c4807b0031368254a0599",
      "Inputs": [
        {
          "Id": "cfea2c0907af4a02a5fc33742bed2031",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95bf148660534eac832d3f512ef55dd6",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd9a3a17af5747acb0a13783c62241bf",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100;",
      "Id": "ca7e9eeac23c445ea48b744061e19d49",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c1b60b87663448ba881eabcc54e951a4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "32030f0d6f70485eafbd29f5848451ed",
      "Inputs": [
        {
          "Id": "0fde7254328349278c347bc6ef360663",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "003291fb1480451eb65d917f72b2eacd",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90cce42dd9914d1cb820bdd2ee701414",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "5e4add8f1dc7440799c8dc3be9cb2619",
      "Inputs": [
        {
          "Id": "631aef7844f446ada6e9850e86e1be29",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00d94caf996e404aa433bd5f73aaae11",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8864feab8d864dca995b712c13c75232",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "0c56da24bcd44ff0a0ba8818f9dddcd6",
      "Inputs": [
        {
          "Id": "59d051a8b0c547459502e98a469c3274",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "921d0dc7bd434ec9956312bd240e3fd0",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "2c0bf218613a436b830f6a143e185e47",
      "Inputs": [
        {
          "Id": "f03b4150ead64e888e64803e14ff2024",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2bc704799aeb44b3a51e638aa09b869e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c49c17eae384a2fa7799ef289be8162",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4e6b8948ec41446f80a31b0efa819376",
      "Inputs": [
        {
          "Id": "db34cf5c81ab4dc19ad64443db9660a4",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6da619277fb4434b139790c47d4fedf",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08b1c2ea7f434e79848d412941e8b55f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "203562b8961c4ff584d67cf717aa30b3",
      "Inputs": [
        {
          "Id": "ecd8d85ba767431e9bc4342862decc0b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab869cf00f354a838c544e964f61cf06",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c22850170734377b77f2d2fe90f09b1",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "565327e97f1e44e78aad2bc9d30b801c",
      "Inputs": [
        {
          "Id": "b093ad293f884ba8be88518ccca582bd",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75039dd6d97941459756e05e1a019619",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcaa03b3a49848908eef86c766215a81",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "d00ec20338d74f21be009bc78fad0e25",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9e33037420cc45dc998083af19aec7cb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "bdb93cbe9e33452480916481d31bcd1b",
      "Inputs": [
        {
          "Id": "08876560cde1488cb9e86460343969ba",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c0176fcf3b44d218cefee415be89e1a",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e4be34e6ce04011a2e983f1c07fb4ea",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "284eb6747c1843e4924d0b16471456cd",
      "Inputs": [
        {
          "Id": "3cd388c7d3134826a189b1c6bdfcf6e2",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1c998c1ea87f457eade91c0d4dae70da",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c443fc156510496e89320085127a255b",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "57552b63460d46a0927464978432652a",
      "Inputs": [
        {
          "Id": "9e04f11021d04a299cd8481671c6520c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4adf9cbf59284665be695b0939c4dab0",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0eb0e666070446248b93c4fe24a06447",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "1cb58a534efb45a989dc287fe33c54e0",
      "Inputs": [
        {
          "Id": "fcb32d32aa5143baa4ca15f72756e98a",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ea0152f18bf439c8080b6d6c13279d0",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae199aeaba854f10b60df220569ed28f",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "PerimetercurveCells_Curves_Filter;\nPerimetercurveCells_Cells_Filter;\nPerimetercurveCells_Restant_Filter;\nAlleCellen;",
      "Id": "5bdca94ff4c5499a98c44527dd81b5ba",
      "Inputs": [
        {
          "Id": "b0e3b92614634cc8a86889c432b7b02b",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Curves_Filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a4cc895f9ed4de1a8fd7e15d437e862",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Cells_Filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cdf233dfa5944e38741bb85942949ee",
          "Name": "PerimetercurveCells_R...",
          "Description": "PerimetercurveCells_Restant_Filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d175375043d467fb9e9405a221b5a18",
          "Name": "AlleCellen",
          "Description": "AlleCellen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e14c1a52b0da41dcb9df964ffcec2f41",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe9af409aa3145f1a2845570cb3fcb4f",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea7f55dcb99d48b4a14ee75005af54d6",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a00709197394594bbfef3604319e353",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3a7116c6f2074c71b32b8005abc8026d",
      "Inputs": [
        {
          "Id": "69d6b9c5ca5344dfb5b48621377a1698",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f457328eead4bfc86d5815aa02dbd8d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afe946bd596e4233886d98088cff4d46",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "b4034bc4d7b043c09300675a9a6d0e53",
      "Inputs": [
        {
          "Id": "4e8cb7cf0da04e0a9820f54232b28bb1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f2c586c67784001840db6385c641cb5",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a2b0a3e1023c41b086b0be63966663ad",
      "Inputs": [
        {
          "Id": "a128bbf190bd456888a867f5767e9c51",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42fac58172f843e2ac6305a709dcbd2a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c819d804a2e04bcfb904c270eb36969a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "5553fb6791e843afab52bcecfeb4986f",
      "Inputs": [
        {
          "Id": "e18ea586615d44249282e0b73846043c",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3073e7c592644233bea2d42bfaf26742",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c55aa16abd2145bea3ade03b8f811ab0",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "c0f2253699b34bf1b6f6b7d81739e979",
      "Inputs": [
        {
          "Id": "8c6fa6722b1f44a393ce320fc1f66304",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9e334ac4d9e4f168914dd77b5b1e8b8",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be4fc6af1f8a4c66ba0e7b8d6fb1bda4",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "4e0588b03a99474299814bbbff04f5c4",
      "Inputs": [
        {
          "Id": "ed78fd596d2840a2b0f0a16617323d74",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82053b6bcf70492baf935b7f13f41475",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b21bf436892b4237ac4eec1f7fa5e7a7",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "9981144cbc2a443398853c953170ecf3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "025639fb2eb442f59f2d87b3032d2eda",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "3a9a0a9a0ea849f1bc4202d566a460fc",
      "Inputs": [
        {
          "Id": "a368d085e10d4993af14a8873faa43d6",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e67f8d78e56a4251b80e0b42bafe5ea5",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "466ae806a10a4ea3a00621c64350c8f8",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ab40c0eee3da419eb0bc7000968dba09",
      "Inputs": [
        {
          "Id": "171d68d4173f4da58bc143a432321e7a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "957995018906421194bcb16ec297c900",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83c7434e19964892873f85196aba3fbd",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "893eaa1362aa4e0badeebb588d0ea46a",
      "Inputs": [
        {
          "Id": "e33054e9b894476d9cce8796f9161d47",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e0aec37c724744ef84706d98370842fe",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba25255e26484ba386de678b0b1e12a6",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "b0cd7f5c07a749c6b88d3c96e223e0d0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f581eb07c6f04f0386b28f283f02f9b0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "26c49ac2f6e840098efa4eed944b0e39",
      "Inputs": [
        {
          "Id": "3b0a5971db3042c6922a2b5a16d0c420",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7639e4ed33ac43deb98ff01cfaab812e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03a5a6bccd854180920ccee8bd23d8ee",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "96ff9a6e12d149709c8d88add047480d",
      "Inputs": [
        {
          "Id": "6b4ff6acc30f463b8cbe6901867fbb5c",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcbe25c2a004435fa284366d51b5f23a",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b5805cd1b294904b34b40f3e87bd86f",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e8f12bcf27b84045b80b7cf8a51d4440",
      "Inputs": [
        {
          "Id": "192a0b83bbd145a882771541aa9efd34",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cdde130a8a1469aafec7d1664403738",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a71d53719da4e09a238c5cc2734b8d9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "70e094b0aa9c41cea09786e9852df8d9",
      "Inputs": [
        {
          "Id": "751ef8c37cfd4303ad5b9615c2750b20",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f45e85cef044ab98294fc77ad06afbb",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b90c0329d20a41ab8eb3810c7986cee3",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "f609c6bf92454b67b3425999323dac68",
      "Inputs": [
        {
          "Id": "eef359e3fc0e4bd28f6eb3e82ab79e75",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4f0d9b910de488d9e1fd66d963d4cde",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "ea71eb4e14db4559b5a5d75684388675",
      "Inputs": [
        {
          "Id": "a963c7c248bc447798597c05abf9755d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5200d767a2ef418b9b509cbc32c06e27",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84a83e083153449d8a3124e9922be5e8",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "7b9494df720e4efe9b107680cf2c1f61",
      "Inputs": [
        {
          "Id": "597a93d04ca9418bab9a0eaf2622a2b6",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b17744971b00457087de0dac85960136",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d8e9e3127d44d2fb9e23157f3086bdb",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "afed239fd9f4406abe78b806ceb1c099",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0921cd3173d6447e905a193d29aafdbf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "dad07a79f4ed4a3bb4b2c4a049693b18",
      "Inputs": [
        {
          "Id": "f017f496e760479b835052cbba0a1fdc",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "485619234411456f9055cce247e6e0f9",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "465682cf527840d294fd00b9430410bd",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "e8ebe74ef6064225a865d34386efd473",
      "Inputs": [
        {
          "Id": "0e01c67e2eb64717bd03a080a307d4af",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b9cf6fbc55ec4bbd8e4d87bbdca3de6f",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ee34e1c35c842e6b308ee44fbc8cee8",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "50710c1f0e1a432fb6758698e4f7f31c",
      "Inputs": [
        {
          "Id": "879e6f83ce1d413e9b7b9edd9f1496f5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "eaab98d90bf849eeb20539d578901e3a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11c9283ab74544e0a19b8487ecfe3170",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "a5bb27fc65eb4d399e7ebdae303be751",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4ede1cb26501463bb451150aa4a7cdbe",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0a1bb86acdbe4fc89e47b8a8ab313bca",
      "Inputs": [
        {
          "Id": "ad32b660b5584569a1a6dc3cb17d3183",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e3894474fbc4d709fcd171257dbe681",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "4ea574cb6837415da000502481c14a57",
      "Inputs": [
        {
          "Id": "084245c4c94b4828b877f5992e712ba5",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "762067b939be4d87a8c8e06220f935d7",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af0f2a189d6e4732b6d5c74ff52ee3ba",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ba566a3acabc4011910ab68e39c9afc6",
      "Inputs": [
        {
          "Id": "bd14373ce72146a2b496c196dce1df6c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c1930682c244892aef2a4b20409ab23",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1954c33643754394a0a88d26996d820c",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "16a40330c0f94800948431b04f9bbf8f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "714d3b55ec3e4836af131fbcbbdc78d3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "e5a24d572e584915b6545a2750df9d4c",
      "Inputs": [
        {
          "Id": "e29caee225c84955a0be6ec02e3188c0",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04978add10a145d2b802d0cd9bf0972f",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "3856b19168844304bdeca7e4196efec8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b3c8b188933a48cfaf0e8347bd032d7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "86a4cdb853494b53ad00df31a8d8da14",
      "Inputs": [
        {
          "Id": "9afd7dd2ed1d46cabcecb32afeb83e47",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e86b79cfb2e44ac4a9aab870ca28df81",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbd5f2072dc243e298bfbd50d86aa455",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "a723e6790d6a4016a465e3947e2b604a",
      "Inputs": [
        {
          "Id": "9ca66253f6204819861d12e51bd6e305",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "718edd2a9ee94aa9ac8766fb76632003",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4197aff148f244b881da1a3cdbf7123a",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "b27b0fcc94d043448868d588ad727771",
      "Inputs": [
        {
          "Id": "7b12cafaa304427e98656b9006167afa",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8330d1f1133419ba87f0612f3020b6d",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62f6430c37c240e4b5c9e42afe27839e",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "e270085ec9834546ab190ba1bc6b2c25",
      "Inputs": [
        {
          "Id": "aeb687c936ac4a0eaf8509a3d29792d2",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa54d7798c0a40e08bc9d40f3d97c704",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "AlleCellen;",
      "Id": "94ce89799e904fa0bc4a08959100f44a",
      "Inputs": [
        {
          "Id": "4ce2167dcab247f8a96c128249d28a9c",
          "Name": "AlleCellen",
          "Description": "AlleCellen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0448cbcf04714bbd83a73e96d7a6ac86",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "KavelSurfaces;",
      "Id": "61728d7b5c5d4552ae0375228108fd36",
      "Inputs": [
        {
          "Id": "00150ad801a34a7cac1ba8a25f062f86",
          "Name": "KavelSurfaces",
          "Description": "KavelSurfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71f1ec0fe8104bb0bf7d34c758c37c4e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e28d312e31ab49a7af862151e4d7ac9e",
      "Inputs": [
        {
          "Id": "b4f5e1ac29134b47acc501e1dba457b7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b851115e54643eabe37d78d5cc4af9a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c6a9c2dfb024b69831ada78fa838dfc",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9637ddcd2b42471284ecbc80cc4c1ba0",
      "Inputs": [
        {
          "Id": "32a9af8e7b7d483f86098df489d19add",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5fa4a118c694d77b1c8573f030dd644",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b80f3461bd7491a9baa6a68726a7250",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "487b7d047b08463db772b1ed8a81a36a",
      "Inputs": [
        {
          "Id": "d3b435d696ff410a965e889798b80b9c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a42c34d684e04564be84896dee7ec8c3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "647d9a8efa9c443dae3135c6a56cea32",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "e9bc29e50c3e4f2fa760ef3cc6e7cde9",
      "Inputs": [
        {
          "Id": "37f0491746e44d42a7f350e9d5252c13",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55565e5c596f4737880b209e07907e4d",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9232fff6e4643f48b1d19150520b522",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "c2793717fd904c45b06047fb77052723",
      "Inputs": [
        {
          "Id": "9976673663e54cf5996a4634cc451f85",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e36450d00b09491c84ee0523d60dbd3d",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5d09da3e8f2455883aeacd12e47968a",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "2f52e8311f9b41c68d868201fffa610e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "416ecc1867f541b79c32281a7585aec6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "37e01ef5cef24b3ab16482c3c2ce2bff",
      "Inputs": [
        {
          "Id": "bb35ae95da85420e8773e4a703b58d91",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5c7c7c7be1545f38ea4bd11afe2c1c4",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f87c58815034d6b90e4f3ad5f4c4e5f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "PerimetercurveCells_Curves;\nPerimetercurveCells_Cells;\nPerimetercurveCells_Restant;",
      "Id": "4044ca337faa49e3bd01a0b655da949f",
      "Inputs": [
        {
          "Id": "de44cda5bebb4263b89a904281875eef",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4821556785f4e3a9ae1a9d7f179408c",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Cells",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "466c9f814dd148b8838bae797afd5c09",
          "Name": "PerimetercurveCells_R...",
          "Description": "PerimetercurveCells_Restant",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19eac21263c046568bc890e926e18b0e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83b8a880a7514e589abd49751877ed2d",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2a9feaf081849e3a4afd31fe6d464ac",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "3f54bc7b765c40768377e8a206d7a5bf",
      "Inputs": [
        {
          "Id": "09609dafe8d5480ba172fce59b726282",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d390d0cc632c4df893fb5168dd647f69",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "93b7edc8e5c54a0a9a18f79737feaa97",
      "Inputs": [
        {
          "Id": "dbc56305824f49f68584014c999fa9fa",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cafa48b55d7240f2bd59b7b46dbc504e",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ddf7e25f49b4ba5ad7d35cdc8475500",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ecd88a53b6e94048912c069e2e9161d4",
      "Inputs": [
        {
          "Id": "5672050919b849ed93484d83105925cf",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ba4e657214a4e4b98fdc27134f10089",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3980dc9b4b149b4921c7bb27d3ac1f3",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "3b75537ff83b448394c00fd351a930f5",
      "Inputs": [
        {
          "Id": "3555a66c947e48a8b08c71544400bc6b",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cc4bed878d6440ab4f32f3bcaf81162",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "6168727becca4fb2831f7e833742dec7",
      "Inputs": [
        {
          "Id": "caa7158a442d4330b925d8e506c9cfec",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf822b03c8b74589a73300b720e00cef",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d64e14bbb3594736b6b99346d19cb554",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "10158403d2e74b97acca67c5b5890f0f",
      "Inputs": [
        {
          "Id": "8d5c45500dbf4c66a5f683b355415109",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2369664b86a4d9fa9119b10bf2897e7",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "fc4bec4edc7241e28309f52cdab4823b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "31c8e024b48446a18eda75d401d19d59",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "f1cebf7e9ddd4af8bf4f62ded00b9b90",
      "Inputs": [
        {
          "Id": "d9d3f1dc34274ba4ad01e25a245b0b9b",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3857ffbbac3473e886f33b5a452017b",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51312ffc825949deba0ca6a50b8a517d",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "e79de5a007b4455883242fd1b2f5d393",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f5a2501a1c6d4bf5b1e544ef82ae6e2a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8c326bb056f84754b63612ec84d46ee3",
      "Inputs": [
        {
          "Id": "daf2fabd86cb4d45913745a123caef52",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ccf29db2b585475480df0f8024f35082",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3d95cb14c504f68bc30b7400a90d429",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "d65331bda0fc43529a1fac0b03f3db4e",
      "Inputs": [
        {
          "Id": "65fe5e4b4b7a47be970ede317adaf149",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c128428ac005444ba519220aafaa0656",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6f0af0e494a04e9cbc41bf120e39bfea",
      "Inputs": [
        {
          "Id": "da0b353f5adc4e13b095541e0349e4c4",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "260a239bb87045eaa18765d4b28ead25",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa5be5b96a0d46df97d73df4821afb48",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "291380a39be94f2f80a018f3a4c11c10",
      "Inputs": [
        {
          "Id": "119c687a632b4ba095a9b808d9420396",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b9b5cc6b9d3455f9faf347bc257866a",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "900b7b772e77472ca51756bc9cd39cae",
      "Inputs": [
        {
          "Id": "8a579ab1825140b4b54c8f0a101b23f1",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1ef64c8b2c244b89ed94ec8b87f38e3",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "187c50e787de4d12970d2c01f5f98539",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "3660d2f71ff34458a42d93c6aea68e8d",
      "Inputs": [
        {
          "Id": "4ea4e5745154495a9f3d86384689fb18",
          "Name": "list",
          "Description": "List to be checked on whether all items are false.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1fb35e844554869861a1ecaf92e0c3a",
          "Name": "bool",
          "Description": "True if all items from list are false, false if one or more items is not false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a false value.\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "9ec903c67d644455a10fc077820dec17",
      "Inputs": [
        {
          "Id": "7892f91fcc234ef7bfd745f591775fbe",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11d3f299f841447890a34ef1e747333b",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "707f541c814d48f6886e3b9696995104",
      "Inputs": [
        {
          "Id": "8da29044474a4fb6bc89b43fd06a9d7b",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "610c43ed45af4659b98668bab2cef230",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ff04f66dd734ad4b5c25639445f6875",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "f9faec49b5db41f0b12766eb6c8d4696",
      "Inputs": [
        {
          "Id": "6ed11620d1634643924d6f6026232d20",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f2f738c5e22e4a62a95ad09df3effdd0",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a05afbb8a2b4bc1a9dddcbccf97642e",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "786b68f0855044c4a647d187cdbfc8c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a4792b44d97344dc9f857a79569a4336",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7fa55dab4d64467e87fb2a2b1988ad29",
      "Inputs": [
        {
          "Id": "bfcffce47c3c40ec81388bac9648913d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5814eef2723747a0a196f65e277a83c7",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06bcc7f7cfc54107ba10444810e778dc",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "44f36fa6c2eb478c9b6cd89292a9696c",
      "Inputs": [
        {
          "Id": "0638807f318b4eb2b58f084a93d10672",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dda166492ca44c72817e6d106ec0a63e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3fed7d105b0c46fd8f0b63d586ead851",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "705dde8e89584e24baf595121a264a9c",
      "Inputs": [
        {
          "Id": "0850843287ed4090b78fdaabd93776fa",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6b8f4c4d65941ff8926dd547a2e09d3",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d115178a59b54d0b9f254a51caefe404",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByUnion@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "8a0f384c885c4ff8b4090f95ad1be910",
      "Inputs": [
        {
          "Id": "44a0b5a1797c44f2948b102cffbb1719",
          "Name": "surfaces",
          "Description": "A collection of surfaces.\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fbcda104d18541f3b0345b856ff9ae1f",
          "Name": "Surface",
          "Description": "Union of surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of surfaces into one surface. This method might return a polySurface if the resulting union is non-manifold or multi-faced.\n\nSurface.ByUnion (surfaces: Surface[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "3c623a94be6042ad9d6d447cca44867d",
      "Inputs": [
        {
          "Id": "430dd2eb37d44000baf0520b26019730",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a4c65faf4cf4336bc6436c4312b2bf6",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2b48919063a4d2fb87a9424c33adcef",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "ce8485ade4a945bcb91fe55fa7de1bd5",
      "Inputs": [
        {
          "Id": "6f48f5114f51403aa89a22c0b7f6628b",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "942717a3f7c64f3fa14e73436b63c83b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "9cd903899f2c4cb4be7b45c7fe2a91b6",
      "Inputs": [
        {
          "Id": "01061c5f710d4ae69ed72a8c6fe08dea",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82ae5e0891504208a6efa90b264c0add",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "78754fe4a27b4a2182764a8bff667e31",
      "Inputs": [
        {
          "Id": "482c036da3054d4b8bd970ac4d91ed15",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d45e4691e11d4861ad3ea4092610630a",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38ba40a2aabc431b82d4dfed2452a5ec",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "334f9a144c9643f3bb0eee276ae49ba4",
      "Inputs": [
        {
          "Id": "8448479e2b274e939b0e7e72df5216e7",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e77f20e74864460d8f29502ffad74929",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec331a5dd7104208b18d735af6eb0837",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "9c4dde00023f4be2b4b0e592da6aa816",
      "Inputs": [
        {
          "Id": "b8ef24f595134d5fa2eef0f269593dde",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3a40e1b5d4a4b35aec2efcddabba023",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "92ba326bd5b549d09888ebf1cf8e149a",
      "Inputs": [
        {
          "Id": "4217b6c1e8514769a5d4981065b5cbfd",
          "Name": "list",
          "Description": "List to be checked on whether all items are false.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f35fadd8c9d4b76937a87633db0309d",
          "Name": "bool",
          "Description": "True if all items from list are false, false if one or more items is not false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a false value.\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "58a23e18349d494d95e74275c0f2ba83",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a63f65ee5974df095ff3b92f3071eb7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "f3888bfe7c184979b436918d68c70486",
      "Inputs": [
        {
          "Id": "d2b463ea45894e98af724be6e06e1756",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b8821812ec34d2494e4501131ad2ee8",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81402118f12940b79e307494d8b6632f",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "6e502ed1fb3c4c62a4a077cc47766eed",
      "Inputs": [
        {
          "Id": "99fba28d1a134e2b8ecb92edf0deda42",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "759fab5216dc42af9460d77fc0845ef0",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b0ead0f87f341fb94d2922ada22ad51",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "8a56295e8e4948e1acdd070be870e760",
      "Inputs": [
        {
          "Id": "28ae689ddaab46228417f3082b521afe",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09105a103b0a496f94d7e25bc81539aa",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3567e7e999414c42897241ffcfc075ae",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "cab041589c294b2c936211d1b46519a6",
      "Inputs": [
        {
          "Id": "11cc1bb49ef148e6937ffbaf6127d724",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ce654d845b24413b8928e39bf99aecfd",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90101d42c510453fab5b14c67617db76",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "16a3a3b7c9cf4b9f8f0a2cee0ae3cd71",
      "Inputs": [
        {
          "Id": "44e8b9f981384a5eb30203a72164de45",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99748232b5594b6486eb502373eb95d5",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "685613f27f1a41e09b2a05462bfb67d1",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02a62d256d274f2286d19248accfed7f",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bf4f88534708480e9cd027263e8db5bc",
      "Inputs": [
        {
          "Id": "457325b8cbc743218230edd42e51db0f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "398d40c40124413f9c7d205304b10a47",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a5f03126f1e4ad1b910861c98e7dd67",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "9b76d12eec344018b30e25dd31a5c059",
      "Inputs": [
        {
          "Id": "b43394bbf95b41c5ab21602cbc6a03c8",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fab4bc04f8854c898152cef2112b0476",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45c632803d264052872fbb2ec6822c6a",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "8d11589d8ba0481d9c7c7728f9f11084",
      "Inputs": [
        {
          "Id": "dc14755100c5454cb8eff5dd96614e7d",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a405a9154dd044ad8822d41fb0f816aa",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a20abe54701463da15173f3740d74e4",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "89d3c0788a5f41a6b6844f3bc4ef56d5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ad31bf739c14c26b388b336ed468a41",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6caf847c89714e519ce2099686a094df",
      "Inputs": [
        {
          "Id": "bfd2e95a6f374a6f91e8cd05ae0c864a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51f4ac27861f48bfa76f6d121a76f061",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b33c159dcc174685887810b19f36c8be",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "34e975ab3cc74e1caf0b4f877bf87c3a",
      "Inputs": [
        {
          "Id": "ef5d1aa9d6b8416a9724959e3b6b3bf5",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf6ad6a7f6dc419f9c8b8ef222bb71d8",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "9a902ca096c841f9b30284114718b197",
      "Inputs": [
        {
          "Id": "3e464bb3ed714a22819607c1c01567c7",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "239c58e75a334130af707079a679041b",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf289ea0fc2e420bad95271e142c830d",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "602ff68639814e58a43101e8036ede56",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bb610278cc054a32b16e8ae0583cad18",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "0002f445aa49411c9014d3e8fa6384c8",
      "Inputs": [
        {
          "Id": "65f442949cfa4a738ec13cee70955049",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad7fc8222a664836863f0ef9a77bd34a",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a2b6ec14a28479bb2e823c38ff452ce",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByUnion@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "bf5753b6a66640bba1f424a25ec42529",
      "Inputs": [
        {
          "Id": "f29f8b2cdd4047ada28e403beabdc582",
          "Name": "surfaces",
          "Description": "A collection of surfaces.\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e040a9552ed4c6bbbf448ac2e64956d",
          "Name": "Surface",
          "Description": "Union of surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of surfaces into one surface. This method might return a polySurface if the resulting union is non-manifold or multi-faced.\n\nSurface.ByUnion (surfaces: Surface[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "3be73e3792f045baa5ea477e2aa5099b",
      "Inputs": [
        {
          "Id": "a5444efc86584b11b30898fd0fb8309d",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "765ccd86069445188f54373544446f2d",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "CellDepth: var[]..[];",
      "Id": "533d2b87f34f4d88811574b3e1d8ec6f",
      "Inputs": [
        {
          "Id": "d936c7e5019e43a58ec0952dd9c7590f",
          "Name": "CellDepth",
          "Description": "CellDepth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdb7f026286744f183a8009ca5589b8a",
          "Name": "",
          "Description": "CellDepth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "CellWidth: var[]..[];",
      "Id": "bf309f536c644c86983b5c99bf85a862",
      "Inputs": [
        {
          "Id": "2bbdf709498449d1b7f31d60d108d1ce",
          "Name": "CellWidth",
          "Description": "CellWidth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4bd33a7a03b5411192120e9f1920c075",
          "Name": "",
          "Description": "CellWidth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ThresholdNumber: var[]..[];",
      "Id": "4fa5206215894af3b72516a71c190bb2",
      "Inputs": [
        {
          "Id": "87812b564bb14574b5e7d56288b909b4",
          "Name": "ThresholdNumber",
          "Description": "ThresholdNumber",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "347e4738cae94bbdb47c2d25dff405a2",
          "Name": "",
          "Description": "ThresholdNumber",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "AlleCellen: var[]..[];",
      "Id": "d8f962897a974011bcc82ad0e772fc7a",
      "Inputs": [
        {
          "Id": "6616240518204e7091de71477cd7c06b",
          "Name": "AlleCellen",
          "Description": "AlleCellen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "594c308653df4be4a7e30e599eff6d97",
          "Name": "",
          "Description": "AlleCellen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "KavelSurfaces: var[]..[];",
      "Id": "6a3491b8227f4314a1da26dd919ccf63",
      "Inputs": [
        {
          "Id": "35b87d09b77e4028a2670e66b1619e15",
          "Name": "KavelSurfaces",
          "Description": "KavelSurfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9e3966050674942834e33be18c14d25",
          "Name": "",
          "Description": "KavelSurfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "4b5f4e038bec43c6b4fb851dd1eb2633",
      "Inputs": [
        {
          "Id": "28101d28394949c7a83a5fa38c3fcb4b",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3be7d3e3f6024ababe73238ed6c21419",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "a0199336d9324581a4774eeceb869ce2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "547ee550395149bb91a5b4fb41119455",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "3d8dc5db7786435da19feecc9729c527",
      "Inputs": [
        {
          "Id": "97a9f1ca2cd54f9481b5531340881f7b",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5a33bf386e04b69bedee4549bf3ba49",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dce6fc481aaa41e48804460157aa80c7",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "ff8a0495a3614b46a1a0217c5c1df201",
      "Inputs": [
        {
          "Id": "58a51dde5baa4d7c843f239fa75eb561",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5f608355b5c4911bf5ebfc472138df8",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "4077a74038354dbda6d8cd3f9343d641",
      "Inputs": [
        {
          "Id": "95422ffc32db435d8020c3d00b18a5a0",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e0585b2cb547437c9c446de133384757",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0091dbd5ff9045cb96f7c08c2d605796",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "678016c005b14e09bad71d578d9f04c0",
      "Inputs": [
        {
          "Id": "9c0c9e788f8a48fc8d49796dd9302bdd",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "dcb8abeb951d4c10928e4c7fe7ce9ed8",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9620c3f2a7d0418385cd88fb101fa797",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "da3d293514ae4780bde39c029058061d",
      "Inputs": [
        {
          "Id": "33194ecc196142769e60185059477812",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "faea2e8e3b474036818539845b363dec",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7156636e871940eaa395c3792b8b83ad",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "8a2d5f47da2c441ab0ec2fbe8aeb364c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "09cced2037384bfb8673f8951aa36958",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "84d289509103408ea6ebea49b166e4fc",
      "Inputs": [
        {
          "Id": "9532d7d8ef024172b0de92c21617f69b",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "eeb664487e8d4d3fae70c4ce550bab77",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30eef6b94aea4830bd79bb81c4ad67cc",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "fdbd32fc396847c1881d0a5074761a2f",
      "Inputs": [
        {
          "Id": "11b140ec56fc407b961732f185db562c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fe19d838a9b410f800285ab2f20978e",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c02420b3f6104bdd83fdee37e6e8f5f1",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "KavelSurfaces;",
      "Id": "47f2ab727416403ea51c321cc2a5d6d8",
      "Inputs": [
        {
          "Id": "d9a59de328984d4f9dab6aa424b71205",
          "Name": "KavelSurfaces",
          "Description": "KavelSurfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c106e44cf65d4229be57bcd95dca3b71",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ddcdeca0242d468494cb9ad491b1aeeb",
      "Inputs": [
        {
          "Id": "ab2babedd2f842abacf47204dc0b3646",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6aa3bb09a0a4af68fa3281521f35826",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "564272d9a4164788b43672a9927ed8c9",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "593fe6e3b9a04b1bb97f93a3bf53f255",
      "Inputs": [
        {
          "Id": "9b77428c3f084ad4b7e05ecedfcb99c1",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ab30a0800e542f0a2a95e8cd480e860",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb4369aaeafc44f395006c2da9b04421",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "713d2b75604d40819fd1b681ba26d51d",
      "Inputs": [
        {
          "Id": "f64ebaec393840a29cca021f5a78cb16",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8aabc672c56245b6ac82d2fbf126fbbb",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87f29654d5be4bc8b66395b7e64f0baa",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "38e22a2759884135a5d07abafd21677d",
      "Inputs": [
        {
          "Id": "b206553b80fa4cebb5c96e2aae42796c",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21c90604cd2143059736ba922654bcf7",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11ff234517924450a5a4fa5366d32162",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "e18df5d7a0d94fbfa9e357dd37cff340",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "73a6f71b1d6d4ed78dd7b3d8236e5e2a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7d2532e5b2ab415ea3b4a7be1754b5ce",
      "Inputs": [
        {
          "Id": "18400bc27b424922838b5e0ebc316c27",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca8cd39aceef496f9c3669a095508002",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da8cae7e16cf4153827c1225d394e207",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "cc5e58ae53d34cfdab39f125486da3f0",
      "Inputs": [
        {
          "Id": "15eba8da0e8946b289c05bf20601a042",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a8ed16a3c4f64b0a8ab985f895e9365e",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b3c561a26cf43adb517cee91e272b6d",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "81588a8153c5481285f6e271be34aecd",
      "Inputs": [
        {
          "Id": "cd9d3dfc47984b50a4b6808b100b9998",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58c1e59a2d56483e8ab052ef8e636376",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a30421af2e945ba86c4b0daf9ab0a68",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "c6541584a326444697fdbb6a4ec8298e",
      "Inputs": [
        {
          "Id": "f3c00147142a463bae7fdb4b5bb7f128",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b38213e913e640ac92a6a97cbda6f688",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "588a12baf42c45fea17543d88a791194",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "PerimetercurveCells_Curves;\nPerimetercurveCells_Cells;\nPerimetercurveCells_Restant;",
      "Id": "e60c18e3df5a4ef1a18b02c4a1487901",
      "Inputs": [
        {
          "Id": "083e7c167eb1461188ba516dbe3a3323",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92fdf44e15f347bfb4c5c1368f5f9bd4",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Cells",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "721cdfce611a4a939fa7acd5dada19d9",
          "Name": "PerimetercurveCells_R...",
          "Description": "PerimetercurveCells_Restant",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c4e38bc23b946eba20a2c652bb35907",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "efabcfb6617b473588edad28174272c4",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "342464d0f7d64538875eeb0ef6b34bc6",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "239a0f54dd8e4718bb76307351b35cad",
      "Inputs": [
        {
          "Id": "1223a26890e84e409bdd9bd8afebdd62",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e2af15325e4444582a332f4d30c252b",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "0093e06a910a409785dad517bdc97398",
      "Inputs": [
        {
          "Id": "778e6e271c9245e7970ae82b7d444e8c",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32570438e0d0455db9a43ad699bab585",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "c576ccdd96eb403da303fd931d6ab01b",
      "Inputs": [
        {
          "Id": "fdfb7072c8bd4f5595b3cfe130f42a15",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7043b2606936480085acca9f4127f86e",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db99233f00504b92b8e131b02433718c",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "fb962ecc00eb4a5498ee0386a334bb1a",
      "Inputs": [
        {
          "Id": "d58520551edb43b5a9f02bb142fa7f9a",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d0ef14915334218bfb7ebc68bff01b6",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0caa2b7861d433c9d206d134cf48889",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "2cf62e26f8354941995ddfc7686fd8df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b8d643ba59104f03b332d6db4ca362ac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "5558714d795d4059b3adb20ef4560a3c",
      "Inputs": [
        {
          "Id": "daa71c6a52a146b38e8074ecd5b15917",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "043f9376c844425ebec7b5eb5e5bdb14",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37dd22bac1684951b63c13e77106c40e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "1d1a1f898a11499f963c4ac3a8b2de1e",
      "Inputs": [
        {
          "Id": "5528661d627649f0aa4e3bf4840116c6",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a01a2753c03e4e33aabc6ff2a16a879e",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32d631ddf39941bd8101c2d04e683c1c",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "fcbb1316d4e44eeab9dfef6e24499d15",
      "Inputs": [
        {
          "Id": "06415be30af44b90a8a39476cda52b7e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4030ec8585054e7f83b044337d0a3228",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2aaa4ff93ca447b8cd553bb4db4b7cd",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3b20159704224067a61d841daea07174",
      "Inputs": [
        {
          "Id": "5736df7adb784963b0813f39e8d793b3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee82dfd7804e428bb5ba32e0a1d30fe6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0beb9369ff154837a8afd27527a53b7b",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1ea87ed0bd5c405e89cd377efa78d319",
      "Inputs": [
        {
          "Id": "6572eee5be0048858177d6701f10c8d0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b077760373454edcb799f3623e12ecfd",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ac4b6914cc742638bf33b0018b93515",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "933eb587493b47b99e6352df0b0067b9",
      "Inputs": [
        {
          "Id": "d743654162b64c858e5cd48ac8e4860f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4c299c335484d5a963f14908464fc8e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2032dafa46de4ca0b866f8e24992f9ff",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "b2ff9d0e66384c22aa79727db1962e90",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "66a3d8b62071497ebd21d1d239f8d2f9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "08f72c1bda564244a30a746221f64f6e",
      "Inputs": [
        {
          "Id": "bb87edec3de34104b99c39d3f96149a8",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1fdbd0345ff4af9936120cac9f1f734",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "070847a465e04d349817e44b0af8813e",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "df0f497e0988466b8d2488ef35f89e82",
      "Inputs": [
        {
          "Id": "cc67c1d7b2c746579a7ea18b2f3ad733",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e54fe9a77b2c4af681eca61355b23147",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13dc46fb4e0d4c09bbbfa2c6d6553af4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "AlleCellen;",
      "Id": "a6b2d4cfe25c4e489cc97a722031b11f",
      "Inputs": [
        {
          "Id": "b8f5b2d837ba4397983fe5cd86ee9777",
          "Name": "AlleCellen",
          "Description": "AlleCellen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7b7e98e3fd343b38f0cc4d3d0c68992",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "1970dc63f9bf4a0fac5f18287a9f8a0b",
      "Inputs": [
        {
          "Id": "103049bddd62460b800929b2e54a3e24",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a067f5be5afd4622a9d8d1b201f83239",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb44dd7a4fbb41f194cc977d582bb8d9",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "1bb4f0ef5d084da588852a33b5231aff",
      "Inputs": [
        {
          "Id": "1fec1f0249544047ac4b873149414efe",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae16bd3210f94d1393b99f912d951f98",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0a3ee8f8f6749ff806e122ab07f2762",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "5b87df91466749b08a7291b46708afaf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4d5fed385a704e199335d010ec029f05",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "4acd14a6cc8f4efc95cdcbd46d5169f9",
      "Inputs": [
        {
          "Id": "2ea9a9f5fbe34140a2e7fd5278168119",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e387ae30e37849eea5af6b863660d1ca",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c989c47c096e41f28d8628cbc4922063",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "c894c5e6ac29422eab5f48d9a46675ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25169b695f354d9b9708765325bf1b35",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "b344aa2f717240c8aef2537dfb57b77f",
      "Inputs": [
        {
          "Id": "32e53e773cfc4399990db46767e5ae7e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bfdeb582b1d4cc98919310c3b6c03d0",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1dd070f678274022b04d3b48a4341a85",
      "Inputs": [
        {
          "Id": "3f7004f6f2704c38bcdf1990a8dad7b4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0090e62bc394200bc336c0bc3eace3e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a32fe437308d41fbb2e5aa41e2b9bd30",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "462b523cd197498abd3f9116717eb376",
      "Inputs": [
        {
          "Id": "ac1a00955bd14777a00f0f1303157190",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8a6caa0848440b79d7d190f2d41fb1b",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cf3ff915f1a4e7eaca97022ddf2450a",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "PerimetercurveCells_Curves_Filter;\nPerimetercurveCells_Cells_Filter;\nPerimetercurveCells_Restant_Filter;\nAlleCellen;",
      "Id": "822d7c6fabb14c51a7486b758fec2a09",
      "Inputs": [
        {
          "Id": "76f2d735b0e44eb58ae1e0fa5ed1ab35",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Curves_Filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0fa24589d00476fa61160a0e8d63c50",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Cells_Filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93af359477174ea38df6ca1087e97967",
          "Name": "PerimetercurveCells_R...",
          "Description": "PerimetercurveCells_Restant_Filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73cce0dd9cb44a47b4d98a5c467157c5",
          "Name": "AlleCellen",
          "Description": "AlleCellen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "965a61d356c8499eb48bfe27b94a2fe9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4ada7c4362b49c9a3125e7c50462381",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23f300215e5144c6856ceec2e99589aa",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04b8a7b012804cd8af7d9d9973c34cab",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "1aee3b0594204520ba3fb5b2f8f123d0",
      "Inputs": [
        {
          "Id": "9d7252b68ed64708be6257067b0e08e2",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b702155b47334be2ae557b266977990e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "1ec20268c3e7453b99d48ee4aef61833",
      "Inputs": [
        {
          "Id": "b0a0f701dfa04b3abd5e52df3676553a",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4909c2cafa7647eb90ed2c9c74fbe6ac",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "bf5c4745635d4485a629125dfe2ad980",
      "Inputs": [
        {
          "Id": "18c3cb70c99149f0a8ade5167f201738",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2007b7d4e23e44b380d74ba1c83c155f",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae280c32f7884dac844487984ca55bda",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "78d1d7c35d024be0969da7177214f138",
      "Inputs": [
        {
          "Id": "3bc4ea8f6ddf41d8b0fba5203d931492",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff86eefa7556422bae7240cafd1df5ae",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9387c9a4b0b342608da72129bf0491fd",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "6cb4848a0f22448aa1d4cbdfec79450f",
      "Inputs": [
        {
          "Id": "ae48ce748bc4475493acafe2b05a9813",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b595f63566f849fa9ed67dab20feba94",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "421f5079598540f7b030f347dc375ae2",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "5d0463187cce4646b74c878eb912e9b4",
      "Inputs": [
        {
          "Id": "7821c053d4a64bff8b41b1166119ed7e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "aac124f0d6764842a3c2c7995fa15919",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a97e4263ec3c4b7299549f3182f430aa",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "d0e97494a7b949239738649be601c69a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e86884d4a428436db36f1285e1985471",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c2ce720ae10b438bbee012191f74c62d",
      "Inputs": [
        {
          "Id": "979bfc42374a4bf9b2affd38e99b35cc",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ad2a117e35964e63ac8ae018a2497cf5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f012b6ec7204449094fa2b1d32d6ebcc",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "9b5a9718e5694cc49d96b5ce3b3c1881",
      "Inputs": [
        {
          "Id": "4e554052dfb049939c555f85bb18f30b",
          "Name": "list",
          "Description": "List to be checked if it is empty\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76d628a95b9a4760aadee016d3c6e489",
          "Name": "bool",
          "Description": "True if list is empty, false if it isnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list is empty.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "c1e9bccdc5224ca1b889728cbdd68b82",
      "Inputs": [
        {
          "Id": "ff524618aee74df2aabb02156441db0f",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "99760184f72c48439e006d421f487a50",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f25da94dbbf416ea0a8cd09fa731095",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "47e0d9902d7d445ba6cd908a4d848a1e",
      "Inputs": [
        {
          "Id": "e084a95cd6544432851d77cb06beb72c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f450abdbcc3b46a1972775e04caf4dba",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93b165c7702a46879b0bb46e904eb93a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2027f85bc7e644d1b6c510f93fd4a277",
      "Inputs": [
        {
          "Id": "c6cc162174a847e7aa1f5ed41cb324d3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c85ba7ebdfa940b08065d11539279709",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e88e0b6a1ff14865a5f1ef472aebe035",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e5224374109a4e8c93a889f085fe6901",
      "Inputs": [
        {
          "Id": "605a7a664eb747f48c3a2e6d531b920e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "372f98cac92f43859f888f68b823005a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e737d83c2c4445afa40ccd2c3e5457a4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "dc63374116314018b756dae4ee0707a4",
      "Inputs": [
        {
          "Id": "d75eac673a5448c5926783f0bb1528ce",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6687b75626c4507a6b35e0c2aa5b451",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59121c7770c8429fa18de166981b46be",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6fa700ac896149a98763fd5324907f6f",
      "Inputs": [
        {
          "Id": "fc965e7fb00e4254b45c1bdbfa175192",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c23433ece6e46279ac789de34415023",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "362a6d85f39a4e8e9bd583a88eed3f58",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "61844bd4851449179a0291f959b6e786",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "77f0db3f4d4e43bdabe20f9ede6bd49f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "6ae92845d24344b6a266ee261a4d5da9",
      "Inputs": [
        {
          "Id": "7d7db15099cc492bbcb0dc5f6059823c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "858c9387686c4f0a8f41af1176272a88",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26f87a2d2b30495695bb3aceb60ecd3b",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "33d00c96dc39477db1f5b7672797c25c",
      "Inputs": [
        {
          "Id": "c0b3022232a54f5fb749ed24b3df98a2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e82b44881cc4663949323adc728e48b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29e91bbaa3104260aadb2951aaa4fc1b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "f0ab62e4fbeb45219b4e960e353cced4",
      "Inputs": [
        {
          "Id": "7dc6d107af654388af0e8bfacb8b6681",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d4e4b45cd2e04481b88499a306564a29",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13f042ecda164e6f95175d9c33a412fa",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "abc383708df64476b2b7261a7e4f8d4c",
      "Inputs": [
        {
          "Id": "bcdc96d31df54d7ca0ecd101f11fc86e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0c0a8e7c31c45f6acc958bdc7ca2495",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44a406feea3646d4ad9337ef75e84fd4",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9b84286a098e4732ab87c2779fa7aa19",
      "Inputs": [
        {
          "Id": "08ca0e12fd194650a99b54b5fe50d39c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46bec6e7d1934052ba30a4c8445c1077",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05eafd561e844d9f83bb7dbdef7df68f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "011832c432ae45f9898f4b041693ad18",
      "Inputs": [
        {
          "Id": "c6258c50b4e148a1a2ae7a646c617423",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07d02f45f3234827b2e1e1b0748ee810",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c46ae5efa4bb4d96833d3c1413094bef",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4c0ff715c3c145caa864520cc1fe7547",
      "Inputs": [
        {
          "Id": "272c155a96b44d998967777781064961",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ee4b5b7118e4a6f8f4b254491d07434",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc17e1fd95b54ca3a3465eff068fbfbd",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "d4038abee2a7408883c1c933501c1795",
      "Inputs": [
        {
          "Id": "5a36cc538ec345b5a7689a504d82b30b",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1c8f0b40e2447f89a2ab0bb2d2d22b7",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc0ca30b78c24ce9afc5070cdc04276e",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "6550c89258a24b6f8ea03ef8624fcbb1",
      "Inputs": [
        {
          "Id": "a29784f9e4414fcc8269a9e00bcdf8ac",
          "Name": "list",
          "Description": "List to be checked on whether all items are false.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e59c3c16e244e73b637be1c7d10432f",
          "Name": "bool",
          "Description": "True if all items from list are false, false if one or more items is not false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a false value.\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "64eba6a9a6464bc2a083d5e026483b2c",
      "Inputs": [
        {
          "Id": "8098ac92a6bc443da87887dc193f5063",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1af912f53adf4c1d99ab78630a44c64f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "583f32d16f5e48a2a15e533b9748f318",
      "Inputs": [
        {
          "Id": "1e7db61e30eb4559b5a08c7d0aed4b23",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ddff50bc776542bfa3a3e5003d4ad521",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e348c3d6dba54dad8fdca17794273089",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "7cea8ce078d1421494dff35779ce16e3",
      "Inputs": [
        {
          "Id": "cc1bba8e061145ba8920223107b440e4",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "65dc8c2ef9c048dab1d1204b1f6d2984",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "848da3b16f544d6fa34eec62fd66181e",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "ac2246db92a848be9ebde9154f755814",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "26e664c22c9742db80c9bf2aac195928",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "47b2c1096e8b4a0b9a8d5f2860dca706",
      "Inputs": [
        {
          "Id": "208d40e5d2a74452b5b1cbad477ec789",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c5709f34eb946ec82bac4a1a363742a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4779c9862c9543cf85e86ad2ef6656c6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "eec2388517fe48b18464ff6428e0f6fa",
      "Inputs": [
        {
          "Id": "d745dc0e022f48d68f5f67c14735f52f",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94d2f73924c64e24a03baaa6b39dde69",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8dc73c8af44f44969a6d34f04d2a7495",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "af68548832464d09b129f002401f5e6f",
      "Inputs": [
        {
          "Id": "a823a004de06417da1451313ae29a06d",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ff194a7a3204873926c4d8478a6dcf6",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f2bcf770e96047b888b8028248d04527",
      "Inputs": [
        {
          "Id": "0b9b0193481849108dea767b1109634d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e03e60cc467a4c2fb85bcc8f4ef11f77",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0297246f551a4426bcf76c08686161e2",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "7eff8e5faa3e47b4b004c8d7c8dd8399",
      "Inputs": [
        {
          "Id": "603a07d50b7b407691a47ec4c76ddcfd",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89b2cdcd6868408d902d6484b9df147f",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b36e1e65cbc46d494ee06fa76d946bd",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByUnion@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "0776d6f9ec1f42bf8ee720107141a3fc",
      "Inputs": [
        {
          "Id": "996af742a01d4d21bee471932164f3c8",
          "Name": "surfaces",
          "Description": "A collection of surfaces.\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "724aa074225d436a9832ed43ca807899",
          "Name": "Surface",
          "Description": "Union of surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of surfaces into one surface. This method might return a polySurface if the resulting union is non-manifold or multi-faced.\n\nSurface.ByUnion (surfaces: Surface[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "5989ee0d0f3949a18f55fc74c68219ed",
      "Inputs": [
        {
          "Id": "949009a3ae094b3a99e906a9473e3eae",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0684f6a073204799baed5fe7f3c5c2d0",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "8ecee48498d043c7ab8902606d309fde",
      "Inputs": [
        {
          "Id": "d9f825b73e124d27b20385f56cbb789f",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cadd29254dcc41ffbf2df9355f01f5d5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "fd0f1aa294e44c32a6c8ad269e0f97a3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "023ee3245cd34135bfb51091cd56e14e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "2ff8156058ef48a6978a6b3055533ac1",
      "Inputs": [
        {
          "Id": "e408a85cf44140b1be659c66c5001b48",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9564a9e9aac54873b639a00ba1fb9d55",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b37fc711a2c4bb9a26102caa87d2923",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "174db3d788cc448cb6ea0f8ab552ec99",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0bd9169ade3d4507bd9ae52657e01db3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c9d5694880d64d31a0de581a710245bc",
      "Inputs": [
        {
          "Id": "bb4e288c9247414fb26543a7e31e360f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9685c4819abc44059a743e27fbd4c4a8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "554eb92f0a5d45a6b5a7ab91cc09a600",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "1710bc3860504c889da2f878d8f71104",
      "Inputs": [
        {
          "Id": "0cb21a073df7408db65b6ec095540cb9",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ffea347d4a94322acef631f9f09c223",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "7a9e9f349eed4062b26fc7fdebd31eb5",
      "Inputs": [
        {
          "Id": "12d2ef2290054f1fb66a19742210989d",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ed62b1913f04df8897d11fc0b1cfee7",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71181b3f182a4b68a0be134d84f2db16",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "918ea60a355a4a94adf9671c60f901e6",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "39a1731747e24daf81f3266f8a013521",
      "Inputs": [
        {
          "Id": "2d213b9900ef4bca8ba2836163bbc7a9",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ea02109c94347d8a62de3094ccf0f68",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "768168beb6754a28be41222619d9e1b4",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "739af60ba1c145509b7e5f16bfcd90b4",
      "Inputs": [
        {
          "Id": "0c092faa6f394a3ba86d1a81a93e7a4e",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39d9c9c55dbf4887a3e16fd778a1a0dc",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cf707d4bafd4163ae76839193ad4e4b",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "0fed6824493d4e8f907dd9d6d37f97e8",
      "Inputs": [
        {
          "Id": "f16e22546c7e4c00bff986461f5e3161",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "437fe5ace94f407d9a0e98783bebc699",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06554ff8ef5943c48a41300b9fb70ef3",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "917762344c28458a9134e168a78f5d4d",
      "Inputs": [
        {
          "Id": "9bc091ea8037450a839ecd2926cbbdd0",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1d01a1494de43b7a0739c3ed6899585",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "033c1e2fca9740a78d6a729503deb0a3",
      "Inputs": [
        {
          "Id": "7c93aef510944498bc92945e50ad7351",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6887dfbc5a02440784dcfe4508337cfc",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "d2892af2e86e4d68b11648bd4e77e7c7",
      "Inputs": [
        {
          "Id": "7578b2872eec4fcdb1ff33a110c411e6",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33ee593aee3c45829cf27c441322a962",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da3302383b854204be4b3b71eaeafac6",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "bef564eedba74f34816f66366aa549a8",
      "Inputs": [
        {
          "Id": "b3295e39d819403f9b914ec431388140",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f32c96cfbaf48918fec3632102745e2",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "decfefbdbec742d898d2812e7bb3bc17",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "82e6a5a3bbd0481899350cdef658bec8",
      "Inputs": [
        {
          "Id": "7188330429b24170a75a78d2e1246dcb",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0dd2ab1420b472fb5ea4a9a0cca5890",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "0b86d07958894644ae152a8b65687df1",
      "Inputs": [
        {
          "Id": "d9fa83c01dd441e58bc6912ffb280f9a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0e4b6f4df584109983039744ccfe251",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "067b19a86e9e42f3a556b90076704895",
      "Inputs": [
        {
          "Id": "6fb86f059ee84bb1aa3f0c097bcbfe37",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58e272304e7f491480adecdbbf25dd02",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "61d0823933b14369a20d05b4b7b34890",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cec981beaea247828cb34d1e12c65f96",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "_list = IN[0]\r\nrValues = IN[1]\r\niValues = IN[2]\r\nif len(iValues) > 1 and len(rValues) == 1:\r\n\trValues = [rValues[0]] * len(iValues)\r\nif len(iValues) > 0:\r\n\tfor (index, value) in zip(iValues, rValues):\r\n\t\t_list[index] = value\r\nOUT = _list",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "c2610663787d4a20b63bc6e73d5dae1c",
      "Inputs": [
        {
          "Id": "8b9e71bec2eb47e980e9a9892955d415",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17faabd4b77f4d61829fc65e3c66139b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a102d4611db4420ab055891ab9a1e152",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4f1e954f60040e285fb74f4c13296b5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "9fc6ed6a649a45d2a52ace12f25a7f30",
      "Inputs": [
        {
          "Id": "0c71bd16a5ac4becbee2f97854a02c5d",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "436d660b5c8a410f9dce6fce19adb84c",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9ea3f5cbbfac4881b650dbd0aa09c89a",
      "Inputs": [
        {
          "Id": "7de574bcf9284395a05120357555afc5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d67ad6fa71c64bee90911cf847e1384d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51ba4089ba8b4e4a9e7faffe26682a23",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "ce986d58154c432a835e89e1b05f7ebc",
      "Inputs": [
        {
          "Id": "c6bc661e06024c7fbd68384e67587a2a",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50a155fc2cc74854805e16d9ddb7e1e0",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9dc8cdc7092d4891846c55a8fc70f239",
      "Inputs": [
        {
          "Id": "3e9109c88eda4d6f8534bf2f8d7a1874",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a465593c81ba4f8a8dd2f4fc4233f71d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "529211a3b4f94631b787edea1368dd15",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "c43b65b5559f41099bd1d354dc675838",
      "Inputs": [
        {
          "Id": "8de6908d55114d92a3b8adeb31903f9a",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "507fdfd163044ed6b6ffe553a3ad083e",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "000535569db746e8b1262cb11e82fba4",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "e4129f13d4604938bdac6dbe2e02e814",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "64a8c242a34249789a48a294753d346d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fb9a869372844f99927c2dd0e6c29992",
      "Inputs": [
        {
          "Id": "4589529e581342b78dbe9000218d73e7",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a6fc46ddd1c455fa4befd43193b81ce",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "6f1241dbd1c54490bc53dca56aba3363",
      "Inputs": [
        {
          "Id": "086992a5550441a39bb5cee433271fcd",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9c728192eef34ed48cf468f2e0cebc24",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cce07f465e44d7d9b5ab50c0bffd0c1",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "d982d5db1afc4083830e040b6ae0f5dd",
      "Inputs": [
        {
          "Id": "05bc12eef6a74f4e9e222063057180a9",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73c2c908541b4514b6f8151c439fc1e7",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb68b9fbe7814dceac04050c63e7ddb3",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "0113a2eb95834fb6871ec99a925e2417",
      "Inputs": [
        {
          "Id": "0983dc84bf52404e977f361f1d052649",
          "Name": "list",
          "Description": "List to be checked on whether all items are false.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85ca7b0743c64f15a95c81236b0bcf0a",
          "Name": "bool",
          "Description": "True if all items from list are false, false if one or more items is not false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a false value.\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "cd8a31f6543943d198b5d566cb76a305",
      "Inputs": [
        {
          "Id": "ee61c8ef3b5b4980bd5088e0c809019d",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3149b6b0fd4d454ba996d1efb9f23b32",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "913f64b85452481b85083be129880adb",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "34a7299da26848acbb39e1bb7ad6f64b",
      "Inputs": [
        {
          "Id": "28283ac54a734a7fbef965daf690459b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "52bafa8349b048a9baf3d3bc28c6b0d6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a2c36b99339421fbd0a4165d6273a65",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByUnion@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "fb7f9a6e439a4c9082c1cef48e52ac30",
      "Inputs": [
        {
          "Id": "0a0748f8e7ba458686bb465c77f256c1",
          "Name": "surfaces",
          "Description": "A collection of surfaces.\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92284b1e04194b3aa182c235beefd613",
          "Name": "Surface",
          "Description": "Union of surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of surfaces into one surface. This method might return a polySurface if the resulting union is non-manifold or multi-faced.\n\nSurface.ByUnion (surfaces: Surface[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ef46e0654bea49bc9d4bf7a6b3284080",
      "Inputs": [
        {
          "Id": "d45316dadc7449c59d863283e59020e4",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "720734c12c1e4124a6fa9e6ab96e2e84",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad92e5c2f33f48e49d2566846b34beb8",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "899120c61f0b4e0d824a0298f2ebd0ce",
      "Inputs": [
        {
          "Id": "86b75d36cfcf49fb90c586c6e63d9fe1",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9882b02b125e4afebb06777324033305",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b402563c0ae460b8c6869daf0c44ff8",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "c660fb178a934837be8aefcee2a3e5af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ff5afb04795d4f33b5346a53e70a2ef6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "cd267831aced4f989c2e24bb670b10f0",
      "Inputs": [
        {
          "Id": "cbaed8e74787495391ca2f2b01f94eb7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9eb403178ce74043a0238a6c522fe663",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a6667defc8841c88c4c9fe6ebc45a96",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "127817d11a3c42aea49b40d73c11737a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bc42103fde27471898b8cd5105d879ad",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "84fb1140db4e42dd903a63660935dc03",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f2e3afc5637343279ed37fa9b5c9ac19",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "64a802acee634771a0b4affbd5fa5585",
      "Inputs": [
        {
          "Id": "cc98a04f5e9948bead1cb6c4bd0a4db2",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ad89d6f2b11a42569adce45874285f17",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b531022b0604479ae5e9c0d0aaabf7e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "AlleCellen;",
      "Id": "aa1fd19a85dd46a682aeed1a8f7c6d56",
      "Inputs": [
        {
          "Id": "bf40011ea55842bbb2fdca5980f429e0",
          "Name": "AlleCellen",
          "Description": "AlleCellen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f08efea739074e86830d3606238b9e31",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "ea7920d272964451a70303b4623c6aea",
      "Inputs": [
        {
          "Id": "2c1461af078b4a35b42cfc185cfadb8b",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc7176ceba7d4388b908b01c5368d360",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "dc4a8b1b5c274c00b7bff98357dddc5a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dacebb8d4b444a6a9bc8732ba9f67172",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "ee920dec3c374f2c831a49c2a9c4953f",
      "Inputs": [
        {
          "Id": "d5bd4e317b974ac29d564fc7be970296",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84d5daf223dd4f318129f3f2d49f7fc9",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34985810c52e49b48b75c6acf137dd3d",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "f954497958ee4077996147c623f26f9d",
      "Inputs": [
        {
          "Id": "4f3f505db6604244b690ea7216d9ec77",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a7c6fa21b5744258dc2f5560f796b3f",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4769188bf5cf4478a986be4d76c5f9a0",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "14dae9fc853e41089cc873f3b862b8f2",
      "Inputs": [
        {
          "Id": "7d7a95097b174e4b90a6b3b9b96d1958",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f0616e8b98694b9c9ea63b76c61ac3b7",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf5562c1620e464ca400390368c2db43",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c5c04b164f0544bb970560f907a34297",
      "Inputs": [
        {
          "Id": "edda90e0908c4b1590df1aaa00443ff9",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ca45533b71b48e2ae36d67cd1496e36",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "4b22186a388846c0a6943ef53df7ba81",
      "Inputs": [
        {
          "Id": "53d9c96634484044a697c4debb19b7b0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ab6be1a26334f9d8525ffd5a11ec774",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86d1c764e11745dfbad5f9369c1c1946",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "014d1a76002e4b9d8131f715d8562bab",
      "Inputs": [
        {
          "Id": "54e522c4cfef4198a3f60a4992bcd16a",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de0ccf90ca2d4b4da78476f2a035f6e8",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4622a412f5b4b8294f3b8ff94a6c6a9",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "4fc12831337b41d8bee039e7841f30db",
      "Inputs": [
        {
          "Id": "5cdff853956b4922ac28323553056067",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71b14eb6efc44f9a9c8c219322255bdb",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "df5dad3fbcde4b6397805370d826c3ea",
      "Inputs": [
        {
          "Id": "deef3d141f3d4bfaaca3b66b0a9069ac",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e0e888dbdc3542229f03a7972db084d9",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bad1d7b36dbc481d9fd54e53b088385d",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "982d9964de094b87be802d896be26003",
      "Inputs": [
        {
          "Id": "5b1c155a1f2e4f53acbe53d576a18d48",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95a03ca6419f48be80233b1d5392a127",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b099bc5874494db3b59715c840999fec",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "b57d3b8e19794f819e16e99cb3cf9530",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "577f7b342ccb4f4ab26f385dfd6b15cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "5abfc57319f942a49b80cd215e10a829",
      "Inputs": [
        {
          "Id": "eec09c3236ed4a298c674994fc642874",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "82b61ecd34a748ce89edaa4db6d0f057",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3f8c885b77e412dbc874f46be0de591",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "875139f65a2347cc942c2bc54efb2e34",
      "Inputs": [
        {
          "Id": "be1bcd93148e4f529521a7a1fc163209",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79cf941c0efc41538116234366f3c762",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3bf0318dc7c42d5a9f8b8f598516e57",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "KavelSurfaces;",
      "Id": "c9049369d5b84782ac994e2a3282a2d6",
      "Inputs": [
        {
          "Id": "6089bebcb938436b94ce29b5bf9e8851",
          "Name": "KavelSurfaces",
          "Description": "KavelSurfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b9e70f5f5964d9a948eae806cf4e943",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "906707b9885742fc8a364555539ab85b",
      "Inputs": [
        {
          "Id": "fba36f49691c4df8874235f3fa166a39",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7deb50eee90435fbaac92cf45814955",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64c66eef734e42bca50c4f654d785fec",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3b00ec50aa5f43558d11e561d74f177b",
      "Inputs": [
        {
          "Id": "91fbf1f6dd4b4b8a8cd578f8446cac14",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe3c3c9370a34acba8e1c71c2f99ab55",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4e568dc93ea4890af1a96b8618ffb84",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "048ffd80167b482297464f100a3af274",
      "Inputs": [
        {
          "Id": "cc51a11a79bf42389d279f49991eeb73",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b00c41140d5b4604ac2927530c10e068",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e5bbbcae5c704ee68740bcb5a74ac31f",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "c6ca22fde485446193c8c6dcce78d043",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7bc4aabdbd484fad83fb4fcac2dae1a8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "11ee4569444449ab88b4e956b12549c7",
      "Inputs": [
        {
          "Id": "4a9f077685c9486c870ba68b9111e252",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9bdd4e329ceb4c99bf782b7a783758c6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "acfae7c5db8e45fa9063b796d55c3386",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "2ba0f43257064e0f8da82c678deb0ade",
      "Inputs": [
        {
          "Id": "a6c4776eda5742ed9b1c8e84dd7ea8ab",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "52c5119ff55241af94bfcf3ddf1ec88d",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a7eb76d4112b4770a2b92796f800bfac",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "df4afc4f3fa04918ad5f044af6a189f0",
      "Inputs": [
        {
          "Id": "4698693c376f4cfea1a51e1159b14be2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ed0f18a2a9845e2b77c12831c62588d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20a3d53eec674525be412d233bffc1b6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "ff1a0ba1d2494248b736c8e484d75dff",
      "Inputs": [
        {
          "Id": "3ee8ba52d96e4101b74578d3a1d95662",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ced39c6ec7f4151be3c76e2561fef43",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3934ede5325143138abff2fb1d924cad",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "PerimetercurveCells_Curves;\nPerimetercurveCells_Cells;\nPerimetercurveCells_Restant;",
      "Id": "a6d285834d8d443da42841397ea9f1f3",
      "Inputs": [
        {
          "Id": "55695d522bdb4950aa221721ae0ff5da",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bbf66d802924f20965cbf56e035eced",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Cells",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfca33a87f644f25aae5331ade69f331",
          "Name": "PerimetercurveCells_R...",
          "Description": "PerimetercurveCells_Restant",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9096d050866b44709e8283694f64edb6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcbe4453ce7e4e2f8ce801754ad713d6",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9530640351fe46d2a58dd48b1ec6b1ac",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "2e883edc9f1c4ab4aa1b932f26c06f1f",
      "Inputs": [
        {
          "Id": "17a79d8b78ff48d2a2d205b150cc7209",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0158e196b914d6593d139208663de1e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "f4c2b615fc544b3f8ca59b82dcfe8d1d",
      "Inputs": [
        {
          "Id": "6c7faffd5fa8479cbe9a2c855f6a6b25",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffaed9f25f53417bac577d40f5730e84",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "773a52387ae0472f88e3ef5a32585c6b",
      "Inputs": [
        {
          "Id": "6c7f4d86c9214b338f5339d80ad87730",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12381cca0f8a41e3bb989452cf05e280",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "eb52782435ab4b2eb3e5236b661051d2",
      "Inputs": [
        {
          "Id": "0b59160a5cec425e818eaf5e1f48819c",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e84893d877d4480d9db1fb6def8161d7",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5bbd57694084107858e6930d1b0b372",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "9da4a96e40484a7ea3a577ce1add69bf",
      "Inputs": [
        {
          "Id": "9f79680d1ad24ed48b2736e34bdb477c",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23be02d19960499eaef2ce7c71280911",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4770aaf2926487d80777c344f744ef4",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "0ee129b817d942c88392d3484ed5e069",
      "Inputs": [
        {
          "Id": "9e6d1949ad78426ba1201e5a38034b0f",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec6e12736b264dcfa9ea1d1009e19e00",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f99b45e0bf64bc580156b34befdebad",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<=@var[]..[],var[]..[]",
      "Id": "620e0991fbb44440a0e2bbbf19d84d23",
      "Inputs": [
        {
          "Id": "0488ff07c4e24e088f9fa9d637334d8b",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab4e31daa9c74892859084265e4740dd",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d32b7f2d72d4fcda334877f0640e1fe",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower or equal to y\n\n<= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "2f1ba28381bd4baa9a03072370d86d31",
      "Inputs": [
        {
          "Id": "fc9121a4de6744648b17833e7657928e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c8d93709c6b4b1aa12c47d557af0dc0",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8722e07d8824498aa68e82192c6a696",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "812ae6d55d8c4839bcae27ae7b26a1bc",
      "Inputs": [
        {
          "Id": "5c48c35cb7eb4435b6150a2f9ca0ae72",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e470123f5ddd44be8eb1f41554b32a06",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "2141e066c79a493aa947dc5bd864c015",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eb754dc95da1459c8e46e9269ea66c10",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6ca7c0fab902468cb9edb100a3d32a25",
      "Inputs": [
        {
          "Id": "6d488910e8754305a44b3387ded62b66",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b6ef91b992b4e6abb34b684168fa692",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e307571679e43e293b87b5e2cd4a588",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "46d6c9b235ab48b488d615eee7093ca6",
      "Inputs": [
        {
          "Id": "e10b11e9f9324153951db0d865b02a9d",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e040215d80b44104bc32e6a85c2fce68",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b362ed11ec7f462988416b970281dd88",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d6ef0ea0dcc1404b96b3fcb850fb8a06",
      "Inputs": [
        {
          "Id": "21948b4112324455834c904f5cbd0a39",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "270ec7d279b24154bd4922ad8fe8292d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1b7c1994dd04a5c8e64ba6007e100d2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "00c0f4b0d66e418288dda8b698e42e01",
      "Inputs": [
        {
          "Id": "d706ccedfa9449558d6081274cd886a9",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a54cc8c908f434e9b2464e2a11a5a44",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9054077b3c14735a08b6f708e7306a9",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "5dbe511c727f48d189f4147fe5496c17",
      "Inputs": [
        {
          "Id": "396003b6b8e84258884b25fc3090714e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35899d1b184847e89f7c304b8da0328b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83deb5ed45444de6b03e70ec9a27aa7a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7b0c895d986e44c78e85d119986f0672",
      "Inputs": [
        {
          "Id": "ea54207336764e91862eed55ba45344b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81f28a6c6aea445fb58765a2de35e546",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ef0db710d6945fdaa88f4f4e647f3fb",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "50cba33aaebb4a0e9f1f2249e3c882c6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "770605b538c0412baae5e500e14630c3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "014792206c6a434aa42cded0bc5fb403",
      "Inputs": [
        {
          "Id": "81d52999a8ee4fc9b89a04f667bcdcf4",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89c505f2f13c4db3be827879af3b65a2",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93e758071be54d89a2d84d867d3c85ad",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "2dfb7fdd96a84204a9e93b9306001b2e",
      "Inputs": [
        {
          "Id": "0a7d23c4d69e4f13a1c9cea776ed6f84",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d0ba7f928722440e85b9c11719ed82f0",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2c838551f3740a08caed8c53b8c16c3",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f592d3b04d72423db2f3c022fb9fbba5",
      "Inputs": [
        {
          "Id": "9ecf33679fc8455895eaebfd1e49c805",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "189182328fbe4299b3532145de832275",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0adc339b94c14d12b1c381af443af235",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "16182fd82b804603b319df3a7180cf41",
      "Inputs": [
        {
          "Id": "592667055f624e649a42cc1417d9b5b9",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d640f29a66f42e7b7511fb7170155c5",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40ff7ae1461245c89f9a16b88b306abd",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "PerimetercurveCells_Curves_Filter;\nPerimetercurveCells_Cells_Filter;\nPerimetercurveCells_Restant_Filter;\nAlleCellen;",
      "Id": "007c12087bd54df186ef5bc92bebd9b0",
      "Inputs": [
        {
          "Id": "428d8f44eb86492abfb3a0e7d9b3d53f",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Curves_Filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ea52470e3b94a819da0adff3b40b810",
          "Name": "PerimetercurveCells_C...",
          "Description": "PerimetercurveCells_Cells_Filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3348bb7297da419f89eb97b3ae4c30b3",
          "Name": "PerimetercurveCells_R...",
          "Description": "PerimetercurveCells_Restant_Filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d592fee7d46f4807b81029d92aa4a7ef",
          "Name": "AlleCellen",
          "Description": "AlleCellen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be11be02b4a94f5b90378e3f04fb97bd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6060a5ad491d4a9db4b5c559200c411e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2861187126f47b0a16fa00c0b0ea178",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa9b66834da54792804f28b1e2bac8be",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "c5afe1725fec4e0c94b41c755cb17ca8",
      "Inputs": [
        {
          "Id": "cacdb2750cc64461a6bc664df97d00d6",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b8a35cef99b49f48aeaac194297944b",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "69a5defe6b834b98ab7d3ea810463967",
      "Inputs": [
        {
          "Id": "afc635311f704722ab2d0404d8d8a92e",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bff09e8499d44fe9b0cbdb1ec0309223",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "dba4b749ee1246e2b9c3b91b6b4d834a",
      "Inputs": [
        {
          "Id": "440cbba41f134b689631ebd92bce6a2e",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f5cb6381e9e496ba22818e56688b020",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "dd69a7ce502e49d99d816497199be596",
      "Inputs": [
        {
          "Id": "4a505c97d92a4851a414627fcb24694f",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "007f433653df4d42a9ff49aac940c82c",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15bcc694b5af47d9b82ee10e9aca54ce",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "515cf7fbbfbc47ec952d1727856eabae",
      "Inputs": [
        {
          "Id": "81a1f6a68b47496b89ec8145a1356453",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e66590dbe89d41c381e24007d916b593",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "2b4fb4ac9e9046f595474d73a0b7dce6",
      "Inputs": [
        {
          "Id": "88344a10773b4017a4ba29974cf32833",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99b5d487c53743a3b69da88263eb666a",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a88eb806fb6f4dcfa133e6fcf9f5c3bd",
      "Inputs": [
        {
          "Id": "4c5ec0fbb9114b44bb8fa2a82f66f4ca",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "46a0ce03f6004b64a111e1d7ae4e2117",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a63772fbb8084449909c52e49f571c59",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "d788ae2507d74d2187cc897fa6886475",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e80f342e628d4e03a5d5e30f86af69c6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0549d4854fe14db5a89d661c8f62aaf5",
      "Inputs": [
        {
          "Id": "aa449852985e4694bbb50be779b204d1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06e6679bb040496fa45a923c4896e3b3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afad334b221a48089bcc314d1f7fed0a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "688d058c44e74cccb01e83e76fef096a",
      "Inputs": [
        {
          "Id": "d963cc9c593741db8136c05b35c6d169",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6264dfe1c9ec4cd5b9a9f4d51d153e7e",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "672019fc278749118d311a9ee3aae0a5",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "bd8e1293eb204491b73f526433735cef",
      "Inputs": [
        {
          "Id": "31fb24712c8549d28ba369e889e5d706",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0629361d9cae47ea89ecc1c91e63b084",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "157463ceb69442298c15e2c021345d77",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "135612e0410a4db9b56bd1855bda845a",
      "Inputs": [
        {
          "Id": "4e131c877b654d13818c97920cc65a0e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b666451cf0274ba9b683843a3801753e",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1afc2466c59a44ee875636687d0d21d9",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "17f6f0e9bcb344ad8f3472cf51be2650",
      "Inputs": [
        {
          "Id": "2fa86db2c3e84b6092cd0fd5059e18e3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79309c0a920d4c20a2110be43238861b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef342ecc7f8340aebc6327d33cae2521",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f1095bda3b1c4350836f14c7c1e8ebf5",
      "Inputs": [
        {
          "Id": "bc9ec6663924466889bbeb5eb401d11e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d19192967850410ebdf2dd92c9ad50ff",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7ef0e9be3af49d7b2ab05d30a02309d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "844de5b1d94749649cf27c7d2a8eb236",
      "Inputs": [
        {
          "Id": "84cb41513ed14980b17ff8c56e456a2a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b55a7634ca84534bc3f79058e267465",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8932447e9c047fd973b27f179e2a90b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "4c7429d5beda463bac56085a692608aa",
      "Inputs": [
        {
          "Id": "e98db792ff94426787093852eff4b8ae",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2aefe0d5ff946f293586334500a8188",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57d31226b4854f18b9716470cead4f6b",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "1450492ec6a045c9a309aa306d0177c7",
      "Inputs": [
        {
          "Id": "e91c440f8d384d1d979014faa64d8959",
          "Name": "list",
          "Description": "List to be checked on whether all items are false.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "397f77466e56413fa1b926059d4c83e2",
          "Name": "bool",
          "Description": "True if all items from list are false, false if one or more items is not false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a false value.\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "384d7c9f0f8e47f783d11b790c08dbff",
      "Inputs": [
        {
          "Id": "4accada1173844d89131f3ef48a2367a",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1dbf954cdc4419f840cd245351f3c6d",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "867d1683b81d44f0b3b7417c74af83a3",
      "Inputs": [
        {
          "Id": "d927b0fd8c0e4ca79b2069416154636c",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24380fa6080c464e8182206cdcc9b44b",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa108a85eb1a40a5909da72d2457e726",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "ecb0be2af687432395c3d1518799c3b3",
      "Inputs": [
        {
          "Id": "d554c2cfff6c4d129d5edeb4931a263b",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7d13e8f4507a4fa4bccaebef938d25b9",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac680c339fe24e1da7e8d65d8aacfa34",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "319da91ba9d148afb622097b714590b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f1302c3a0597479abcf70144ee298923",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "011e5254e7584bb38c7510c94ef3c83b",
      "Inputs": [
        {
          "Id": "086d040ab17c4a2e964574348bd79039",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3992a29ef3d46209359089802b2a946",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "386fdee78c2c41bf9239eb10a25eb164",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f1b214eb3c3b4075916633e2cf3ae5f8",
      "Inputs": [
        {
          "Id": "c6d8bcbbf72344e2a3a601bc033ac43d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1296352340d64303bdaf7d3ba56a0971",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50978ce6d044453bb91fa5d9ded54579",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "fa86ded83cca401399a5a33d24f58ee0",
      "Inputs": [
        {
          "Id": "681b5e68abb04362810b8f6898b13189",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8bc3875750b4fdb88f4d7f1eabead7f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0aa60d9e71b4216a3a788938b943ea9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "478bce69c6e84ab187b06940423bfa43",
      "Inputs": [
        {
          "Id": "c136abbaae594cd280d8840188473634",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32ed2833ac0c47ac9173ac98efd735ed",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b8a6518a7be479aa7ad1990507b6143",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "14088e2c6ea94319b8ef003bdea7602a",
      "Inputs": [
        {
          "Id": "3c85ef70c3b0455a9358e48cb24a9fba",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd61938f1fb842f0b907c4301c088aea",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ca816d8648654778ba0223cb848ff032",
      "Inputs": [
        {
          "Id": "d8e0654ea51346249042a9abde735a4b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ea04ba3f0fb4870bd806380df658b9e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bdd36dd2fdf48f7acfc1cd1cb82b3e0",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "0b12d5bc8f2642a7882b944b6890492a",
      "Inputs": [
        {
          "Id": "2658460b0819453581ca89d5927334a3",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37822b05565e46e398b28d797c5ecd76",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "10e31a3c5f2b4956a6476abb2470c8af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5c54ced2f9974168935c8b20c2aa88b5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "8963d1da7dd740f08a2b1fb8ddeba949",
      "Inputs": [
        {
          "Id": "c92d93d88c114c6fb872d63e6d3f64f0",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71a03590a14c4ba89a115de7e7159b21",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "7d86a7c275fb44dfa57ebec7ddb686fd",
      "Inputs": [
        {
          "Id": "d98f0a25b0e04298bd171698518ce479",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a22b7efbe8c4d1e9755da043dae1288",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "60d1fcd1c5b14da5b0900a89b8bf521f",
      "Inputs": [
        {
          "Id": "f0eb71d564724462b7d6e8e2b24a0be8",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aedf5166819b40149d4829d64fe27f4d",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19079e8938eb480989997862488e2fa6",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "74c71c65d42a4acf943b2ce53e05f007",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "44a1d0286bd9497a8abbe7ee702d79a8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "288f7b13c6b44a6ca2367b2f794ce2fb",
      "Inputs": [
        {
          "Id": "078cff33b1df4d31adca7683add98d6a",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a58ca13c550146f493e7fbf7ccf22925",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55d7d02c165f4d1fa5f2139b1bd7c81c",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "bbca81f6fa704d4e9af24f390d12d982",
      "Inputs": [
        {
          "Id": "c0e866c0e3c446f4a9b3b9c676859f53",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bf90494f523403e9aa7fe4f84d869bd",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f588e8ffd83b42739c42ccfacaa95f57",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "d42ffbf81a7b4d809c8bb95742255340",
      "Inputs": [
        {
          "Id": "181fd897ada94dfc840f0cf659ee9c9d",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "967bfbe4e0044fc28d0a4d7206b64a2c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "0d06367fd55a491a8e888617aa01717a",
      "Inputs": [
        {
          "Id": "2a6498b52a6949c690982cb072a46e24",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d37ee30b555407ea867b5affd471edf",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "387ec73e40a34f898989b67c493b96c4",
      "Inputs": [
        {
          "Id": "1ed0a6c3529a4d15b4398a1f427ea986",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd0bf09a983d4ebc8d172740e1f977e4",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ef94a7e490d4016b6c0a1152892ce52",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "af36c860f2954e7394930ed55325a495",
      "Inputs": [
        {
          "Id": "bc2f27fc98554580b3a63154be2ccd6a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d420079f8ba74147a2cd0b2f2101d3bc",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "839e21f6763141eeb6e15e9f4ffbac27",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "13b7b6531cb4435f8dcad54d12b51ce1",
      "Inputs": [
        {
          "Id": "98e5fcd8ff4248feac177376f91d4103",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc2e979e1eb44d40b9cc8ccdc0d2338e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "176d9ee9a39c49fdae6643f681f5aef5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "20629481b2034306b4a7662b3c2fe624",
      "Inputs": [
        {
          "Id": "fd2b1a11c6cb4edebb6d8033fe6628ae",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c7c95eaa3764c0d89676bedc075a78c",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ce51dd2763344889423fe466392bd35",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByUnion@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "d6893ff7426e47a1b8b409e002533ff4",
      "Inputs": [
        {
          "Id": "35dec213cd3045fbb685ad0c20afb5b1",
          "Name": "surfaces",
          "Description": "A collection of surfaces.\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8b623ba0bec4fbf94770d2de6c25abc",
          "Name": "Surface",
          "Description": "Union of surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of surfaces into one surface. This method might return a polySurface if the resulting union is non-manifold or multi-faced.\n\nSurface.ByUnion (surfaces: Surface[]): Surface"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "31e5b3ac038f47c9b53d64c7e02cf951",
      "Inputs": [
        {
          "Id": "d21310989e934bff919f7541519397ba",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97e6893569124210b7b4ca86af526bbf",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "527de3cfced847528bd3f33cca412375",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02aa4aed86bc4dc98561b47ab8af58c6",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7781c0b0bc9c4409b4ace4aa3dbb4d57",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e50031b03b88421c861e887f1296967c",
      "Inputs": [
        {
          "Id": "e7f8a59ff4284c5a903a55fd7cbde39d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32176096603f40919d6eab3360c3f2db",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f0ab7d17c1e402c81622fc502ec5289",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "585d6e602e2d4c8da574021574d27473",
      "Inputs": [
        {
          "Id": "59bbd4cb536e4730aee9bd62a1812ccf",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7cc2b5ff88a4545b79ffaed381b8eb7",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f338f9df5a094750b8321e61c49d1c30",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "4188b90293a2428f86a8ce58c3bba52d",
      "Inputs": [
        {
          "Id": "88845d5594e44763b6e63e46d7ab13b7",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e6d6191e89fd4a0096a381009e88941f",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7933ad8239146fca9bb7a4563a1b9d1",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "b3d83bdf3cb44a11ab85751f022b363f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "050b3be4f24341579562ed9bb5df1bef",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1f7420024967430187b33e1328238e44",
      "Inputs": [
        {
          "Id": "4d6f08a1f9224c3281b64906d64ba2a7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "721088b29f0849c7972df84be404cabb",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9938042b87034a0cba30cec37a4e27b3",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "0df39cd4e95b42e4afbe84c06b65fbfa",
      "Inputs": [
        {
          "Id": "2b182d370ed645a5a15acce54d3a31ed",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "395717959abd4a1aab402597316ed4ff",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "38a042ff4ff848d0999cd751d29cb8bd",
      "Inputs": [
        {
          "Id": "24b4f6bc41d94e7a8ee3e8f7f26ae86a",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ce919e00c154bdf94c0b4a0ca3f4595",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "113d1c3cf1884c2394b39588cb635b2c",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "24e7e2847cfd4d30a3f6c30c3c1da28f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f814eb0adca7434db02e4319fb497707",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "819fe753d2114b9b873a6fcc56910e8e",
      "Inputs": [
        {
          "Id": "da6479e806d8484f84983bdfaabaf8fe",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0aca339c4e1445a93bcac4b8a2364a8",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9029b6dad6245f89699c9544c465dda",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "d8b248a28c6f472eb7dde6e83902f5a2",
      "Inputs": [
        {
          "Id": "ac8ef311028e4474a9514bb1e3ca5366",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11bd5cc627714cea9d1fac7ffd73563f",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e850032643e848ffb38292e3112bf16f",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "03522d6397a04513bb12c76c4c02ae8c",
      "Inputs": [
        {
          "Id": "c15fbb772d0a44fd8979d3c626775068",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46f966b7e1154006b157bc1066f77294",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "cc1f8ed872a04a4db240d8b5a682d4b5",
      "Inputs": [
        {
          "Id": "9840542f5aef494f813eafbacde301ea",
          "Name": "list",
          "Description": "List to be checked on whether all items are false.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05d2be3aa81f4fc8ae1f0e04b547d28c",
          "Name": "bool",
          "Description": "True if all items from list are false, false if one or more items is not false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a false value.\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "0c75fd57814049cfb1c604276239c235",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d34b4a9e75a1415c9444eab18a53571f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "479e7c51e0f4486a855ffdc9a716aaea",
      "Inputs": [
        {
          "Id": "755f527194bf434a8691893b3938e18d",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23f07e97630f4ba1bcb80118c6246bf6",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49624d173e1143bb9060441eddf2219e",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "82a98b53226845189199a78658a18b66",
      "Inputs": [
        {
          "Id": "cd4b4d9691714440aa747cb496adfda3",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e5bb76f9508649b8825a9a1e7046c857",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0af1b840a06848b185a90f59a821bad5",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "5aab67d5e2ec43868084048dab1b9269",
      "Inputs": [
        {
          "Id": "2df293f721e64453acb42599c09cf50e",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f11c7df8ad64860b4b11feaa12c3308",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "376799d543d04d728d9f795d0e612ae6",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "911d6ff44c0e4be2a29648212bfdfb36",
      "Inputs": [
        {
          "Id": "04a130007ba9416ab0db648bcc2f52bd",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9468d7ff58ed4a40a3db7bbfc7f3955b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99f37635c6254768971a123e2d98a414",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByUnion@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "9c3dd5a07ed1406185e4003252902d0c",
      "Inputs": [
        {
          "Id": "3120bb6dc4c447809a12ff36cec4e947",
          "Name": "surfaces",
          "Description": "A collection of surfaces.\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34c9504ad8964e9a8f6a76ac5c645204",
          "Name": "Surface",
          "Description": "Union of surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of surfaces into one surface. This method might return a polySurface if the resulting union is non-manifold or multi-faced.\n\nSurface.ByUnion (surfaces: Surface[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "ec752c60710b442d9faa2915d3bf13a7",
      "Inputs": [
        {
          "Id": "597ce459a1e248408867fc9433bee3fd",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0dec566b2d5942508fda78bbe90b9822",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "1ab28a43e530426b85e3aac3bdfc61aa",
      "Inputs": [
        {
          "Id": "943897d138af4408a55b23cb70c5ff74",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f503f8036bae4875b7c53c4ff0604b1f",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5bd261af7f3845cbb3e2a6df54d9a25f",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "ca994dd7c38a443b846175dd299d44f2",
      "Inputs": [
        {
          "Id": "bb43f9338cf640c29890aac644a60e0c",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68ec006a4b914717ac2e9f68e55ddac4",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "dfc5b16054214485ab74a07918f823c3",
      "Inputs": [
        {
          "Id": "051c23caa6cd46b9a7110fddc635d978",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "960eec0c0c3c455d99655b593db3df0d",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89bbdf78d1de4a968f0bdd35f13b8c08",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "f069f0f14e6a40fb875f4e2c0ec116dd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d974bb8725f46ff912ed8a2a3cee07d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "363f2c2aeecd4f78806fb584bf659aac",
      "Inputs": [
        {
          "Id": "d9400b4b59c047429266d1b892d33ed1",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ffaaca8531d4035bcf44f246eff7353",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dafd1f74b8134bad83bb195d9f136cc8",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "1219221fdade486e9d8d0a2779ed4dce",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd12b58407014c468e2b0aa8e2056c3a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "15ea498e5aac42b99172f5a4acea02b1",
      "Inputs": [
        {
          "Id": "4d1d3018307b415c919aac86bcaf6f02",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9cfb2384db843aeb3fada27a317466c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "421e8d4f32364f2380f426053f59a63d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "1e88a800bfce461e8868f161c0c59d0d",
      "Inputs": [
        {
          "Id": "76257555ffb24afc8c57b9739e62399e",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73f94a5ef45b4add93f250e1667df8ac",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a463d23f63004ab6a95198f40ada7c01",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "b3d5b88f022644d380a6015bcd86ae3b",
      "Inputs": [
        {
          "Id": "aa65ab4011604387872d0c0d7fea1281",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad17438b80f94f79accb09217ecb8bad",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "202e5318b7d14c9481af052343b20808",
      "Inputs": [
        {
          "Id": "281c3a2491834f2ab5ae702d21f84493",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49b16c10de6146d280b222aa0399d7a3",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a0ff2f36d88435cb79bf4265b4e08e4",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "fa8df60133ea49cdbb7e478068bff721",
      "Inputs": [
        {
          "Id": "6a137a0a4e014a9ea6175510977e22e8",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b886e5ad6fb34d42ad6628e4c19bd899",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e6ae4ae48574044bfc74e99b0d8fe28",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "dca27957af5d4ce297c925a77410aba9",
      "Inputs": [
        {
          "Id": "fe6bbb831c954fe99da4f3c421af0e80",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fcf79447d4447809fb84ff13a5e17cb",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "449fd420fa674441b7867f1303790b9d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "414b0234d346410b8f6ce9493b276c6a",
      "Inputs": [
        {
          "Id": "64758f350b8b418989f80c9c81495cdb",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b3a00dd7d4a4c0e8259c9489e5b891c",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "59bab92db28d405b9f41d5dc8caa756d",
      "Inputs": [
        {
          "Id": "339926505dff461f801c6d67169a3a9d",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "635188854a73492d94a64efaef42f682",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37b90d96ca954fb9a49368595892af1a",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "c08ec883e6ea4e6696babf23ae47d5ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1494f647cc814c949bf9cd27cd1fcb64",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "8f0a3b97ceb34bdaae38409511275cce",
      "Inputs": [
        {
          "Id": "cb2e10c8190341af8b8c61401533c9bf",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04cf1135111d4910af5930f7757c48e0",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09b974547e8c41e8b2dc073bbaf4e6b7",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "02e2a8a219404b8faaae59a4b7498429",
      "Inputs": [
        {
          "Id": "5b0e2b420efd4a26ad8149d33565d4fa",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5ad6b8a627e24ca68c60f2d10ade52f4",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0a20d9cb09f4abcadf75bbbd6ac0b2c",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "6780b82a658d445091ab3c6fa42d1054",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0c27ae9f42e44aafb3c1361be0ccafb7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByUnion@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "ae2fcf91f3c84ff6b640e89f5a30e882",
      "Inputs": [
        {
          "Id": "502c92625d1f4e559660fef1868e067d",
          "Name": "surfaces",
          "Description": "A collection of surfaces.\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9affcec58d654cd68db5daba04eaafb7",
          "Name": "Surface",
          "Description": "Union of surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of surfaces into one surface. This method might return a polySurface if the resulting union is non-manifold or multi-faced.\n\nSurface.ByUnion (surfaces: Surface[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6c6550830c52440b93e63aea023353d7",
      "Inputs": [
        {
          "Id": "b2f771d1ca1d4fba864186be6afeba64",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0618b12d263e42058cb83dcf861ec647",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "541d88011b2f45408ea9edccf1731adc",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "f25a6ddb98ff4d1284f6d188f2af58ec",
      "Inputs": [
        {
          "Id": "d4dcf14fac87424f8856a04237e47092",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c21a1da25add4cc6acf9ef15514db11f",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "5ed65d9604a643e19aff303c69f5d81b",
      "Inputs": [
        {
          "Id": "4493563cb52a4a9b9e7a717ded910626",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd1a7d8042cf44f8afc13165ea312605",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40e00dd60d6b440f9d4ac054111b377d",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "1a99ace4243749588e1f8015af0d302f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "12a6169e276240d28be010cb6ce6fc99",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "4c2df434b61a4a54b02f62ce905cc27c",
      "Inputs": [
        {
          "Id": "d42f152c13034741aead537d9a0ca840",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9fe0f9cda414e2caf934c4d121a9a2d",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5a63d115aaec4dbc90b9cc0eb76c65ea",
      "Inputs": [
        {
          "Id": "7cf582af6f944532ab1e6a5e8ba3c06c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6111ad11c7d47d2aa4990bdaf29ac10",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "734d2096cda246ab85bb78c61dadb0bc",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "5331836b7c5e497fa67fafbe4f21909d",
      "Inputs": [
        {
          "Id": "eabc14d7afbb49a980bccde36234a86c",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "981b46398cdd4f6399df5b1fa031f2a2",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "9e60fdea8fb84265a67dfaef30c35897",
      "Inputs": [
        {
          "Id": "d2f1c3b254af47a8b650d25d02b36b58",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1a36e162b6841d1be2d06bb052e8540",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "70ca96c298124d0ba25724e9cd217f35",
      "Inputs": [
        {
          "Id": "dcb17a872dab48b0a2d1709c3c579615",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5cd2f6d951c41698247098c6355fa36",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "6f69d47772194174afc15de9eca40dea",
      "Inputs": [
        {
          "Id": "5688940ef5a14249835de32f0bb48c1d",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "916a9e7796a440309056b28164932322",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "b0faadd85d614dee8bffe0b92057f621",
      "Inputs": [
        {
          "Id": "d5efe96a2c6a4d68b5c419156349a95a",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fda22d7d689444089deab45c839a2a8f",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "69974953c31e4b71b07cf0206392d14a",
      "Inputs": [
        {
          "Id": "b8a8001ebe7446eab31eccf2bd7966ba",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1c587b6a9424c44bedc28eee2d30437",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b03e1145701249d2b4394b76c58e1610",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x*2;",
      "Id": "776092cffc5a42cf99bf779b8aafb461",
      "Inputs": [
        {
          "Id": "ef4232a40aa0402396c9658bb6fcd1ff",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1dc7f30ecdc94e42844392f45e489cdf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Id": "f838b49c98874bb5bb4dc74f3f7caea1",
      "Inputs": [
        {
          "Id": "8183c1f2f7ed402ea9c31194ef0602c5",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c02eed54409c43888a8d9276da054bcb",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "051ede1886c6482e984cb0793900c0ce",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "444e9f0e0e744d73a1310cfaab026f5e",
      "Inputs": [
        {
          "Id": "6d369512bca846f0b4de591bdbc76fbd",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0097d4801ea41dc9e9b8d5f18545634",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7501e151203b4f8cac85e63f047077c3",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "794b46630454451a915688ea1a4033fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b0a8d101c8274916b0de318e949581fd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "b6d79f53cb5c4dd68b82cf20478134c2",
      "Inputs": [
        {
          "Id": "ebb5fd3a469541d49772bfd8b662822b",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8edbba097b440dbba84c90d701d27dd",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b1af88070e24640b66f4d12cf5a7d22",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "542fcf0ddd58424dbe107be57cbb198e",
      "Inputs": [
        {
          "Id": "4a72b3d02e444c64bb02283c6fa6e6d0",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1924fbdbe7de4435a831997fbc71142f",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 2500,
      "MaximumValue": 6000,
      "MinimumValue": 100,
      "StepValue": 100,
      "Id": "766c2e72985d4ea9b7d074cec4952f2c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a4cd36593d5142028ecc5e9ca7fc031c",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 2,
      "MaximumValue": 25,
      "MinimumValue": 1,
      "StepValue": 1,
      "Id": "3d053fd8b20f47c29fae4955acde512d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1cf43d5ada174dccbbdbdf21737a8313",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "CellWidth;",
      "Id": "4b367229e98547bcaf7b59b6df49d626",
      "Inputs": [
        {
          "Id": "5b5d7555bbb04dbcaa800eaf48a26a9b",
          "Name": "CellWidth",
          "Description": "CellWidth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb100ec3ae8b4d57afb4c922031f494d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "NietBruikbareSurfacess;",
      "Id": "84822a67f5bd4703940d6474f36225ff",
      "Inputs": [
        {
          "Id": "6f54eedc56c949e588802346ea5868ed",
          "Name": "NietBruikbareSurfacess",
          "Description": "NietBruikbareSurfacess",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2b1c9f2819346bbbe8e61b1391c3fc9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-x;",
      "Id": "017bc2d4a98b4b4e99acb71cd0f470db",
      "Inputs": [
        {
          "Id": "e35a5fbc323b4be98ea0d6db5088b2b8",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77fe4da4b7fd4c6a88141507e7423334",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "a33500bd6bfc48a6a2aadc2101cf86c6",
      "Inputs": [
        {
          "Id": "a33b2458c0ef4f9c9979ace1137e7341",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7c8b02cfd954bf6b5e80c6c618d99e4",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0b9b577838443f0bafa383fc7388a87",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Offset@double",
      "Id": "42eb689486484cfdb02dd69850518db1",
      "Inputs": [
        {
          "Id": "5a492a69d1084e1c99fb688cfaa89787",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b504f79cbdc40cab0e335f2354d0934",
          "Name": "distance",
          "Description": "A positive or negative distance to offset\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d06996324e14e61a8c34cdfaa4e5b62",
          "Name": "Curve",
          "Description": "new offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Offset a Curve by a specified amount. Curve must be planar.\n\nCurve.Offset (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c1a466b93c094f2ebcc84486d6099a23",
      "Inputs": [
        {
          "Id": "861b2bceb6b0419cadcc763c7768b101",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4c69638d58e40dbba5c313084711ffa",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47d404299d994047a24032758b98ba80",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "c461c0d0a0b84034b5edaabf099cd0d5",
      "Inputs": [
        {
          "Id": "9449278d6bfd420692a5b427955e2324",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ee43dca5f2c49bf839209b5c478fc85",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "CellCleanUp_Surfaces;",
      "Id": "e14f374564ea4f48851c42ad05d1a6e7",
      "Inputs": [
        {
          "Id": "58874b93b46c49d5bfac938ef4794646",
          "Name": "CellCleanUp_Surfaces",
          "Description": "CellCleanUp_Surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9971561960d04e3b85e165218bed0a57",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "b5b59729b1d64c90932061f06e0775b4",
      "Inputs": [
        {
          "Id": "20e682d6b640462a8ca69c2100b957c1",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34f3f95f296545129cf57bafa3bdd5fe",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "surfaces;",
      "Id": "2a38c9767c7a4698936c50f40b835486",
      "Inputs": [
        {
          "Id": "463f083546d34901b13bf7268b583dbc",
          "Name": "surfaces",
          "Description": "surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e47edad325946b7929c66588ac15456",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "0488b46cfba14813a5e22d726a9cb13f",
      "Inputs": [
        {
          "Id": "f9deb5c39285401aa45f066dd5b9c6d2",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14e00b38b07440da8ca6fc07bf714013",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d612faaa07974b96be9819923c1a657b",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "9c374d82a4924a0b92f1e7cc5687d119",
      "Inputs": [
        {
          "Id": "882fdfc16bb7486583e49f364babca2d",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f77931c99994e5c88e2ce3730040b23",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f97613ab5944de680623f8b1bd8860f",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "a0e2864297ab45cd983d563ec71819b5",
      "Inputs": [
        {
          "Id": "0d58cd2fd0994caf92cdeab2bdfa92e0",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0508391eb3e948298d9215eae87448c2",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80909ffef2634134b8eeeadbec9c8eae",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "be782d4ab79b4d93a3033dafe725add5",
      "Inputs": [
        {
          "Id": "e9c3e3b92fd247cda9a9b01b65ecc273",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99d1e7704c5943be9bb5daedcf4a4022",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "01258a7c2f3547fab1ba05c323545e91",
      "Inputs": [
        {
          "Id": "e9c6c14785ac46e895344f7a7c0f9c4d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d1a78d27dcf45caafc7c420bfac42d0",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf0663d24c3f4df999f73c6b3551befc",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "fc148574bd4f400f90b33f52072fb228",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aad6a94bbce14b6882480cd7ccb7dbf5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "2aa88f9042bb48538bdc6439f1a35060",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0ae67f1c4475444a9caee18bbbed1b11",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "d72e0ee3efab488f909798ffa1a3b8e4",
      "Inputs": [
        {
          "Id": "08fe253e8c9546da8ea16e6acd3e7797",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "264428c06f8e484a8ac4ae875d81514e",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "surfaces;",
      "Id": "66d1976b2bdb4299a390ee5870acc488",
      "Inputs": [
        {
          "Id": "cb6f389fd6294e829f2ade894d793678",
          "Name": "surfaces",
          "Description": "surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d3486e4434a4becb9e75114da3ac4dd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "957eca0bd4b54386a8eda4de4f0afb98",
      "Inputs": [
        {
          "Id": "5ece98697b5d418aa140622597291c2f",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da3bde33ce924813bb66b635fb9c00ac",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "90;",
      "Id": "10350bc1bf3143cf8a23c77cd65722de",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1af729342c9f4532b0bb5bd7f3d176dc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "023bc9f2dadf412ba658d14d80a60161",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2575d2f7b694a6cbf316718dd9fb5e9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "16768b45a73f4badb86a16a782a44f0e",
      "Inputs": [
        {
          "Id": "03c84a5cbf414b2f9537cd34e8251fd2",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf348ef911d8441ea92e062e19cf07c0",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b15c01d991604374a58a8a67057b2651",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "4ce26db0ae9d476cb3dbb1dba677561b",
      "Inputs": [
        {
          "Id": "dd83cae0168f432eb6be71afc14e9362",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4a58a71f9274328813a7e972c720370",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "5ce9719e8edb43e3b9e9792d324be505",
      "Inputs": [
        {
          "Id": "88f616c6c174418b98a33fee56e104a2",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07e01592615946c18e36b0fcc17f84a6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7e8a89299c24276b8bf231aacadaa4c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "8558666257414477a726291b101d4e68",
      "Inputs": [
        {
          "Id": "9db61919796e49968d4f646a655bb383",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c5d298aecdd451bbe07ec7d96f4ba53",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "57f1007f36db4a6e99729df84ce4b624",
      "Inputs": [
        {
          "Id": "1f2c66d805194846a409505edab35200",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1725fe99b29e4c65a34ad89510d33cc3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ea6ba2ff3814e65a1fb87c08cb7b7d8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "34605c820eff49609a82091457540630",
      "Inputs": [
        {
          "Id": "09c1d2629f584b399ec882df2fc3f2f7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b53243bc7b484ef48b237f996f25020b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3158edc3cc72459da7609e72e1ea3278",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "388860716a9a4e2ea46a9cf7a3c037ce",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "73df77509723455a9c4ead84fbf5ca52",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "d6b9eba4b3db47f5b9c79965f9ee0081",
      "Inputs": [
        {
          "Id": "9192793826a84242ba69d16c338ce6a2",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1a3f72341ad2496ba0adcf6071898588",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "552e4185baa6431d87d8240948f3c441",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ac7b67b3275e45949b767d6885ded251",
      "Inputs": [
        {
          "Id": "ae6cb082dff04c8db6ce4494a5c940d5",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2178deb575b94acd8dedb18e5745bd29",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4cef83e96d74a5ba2c58111e3e030f9",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "9bc2c495b3f147f38164d6588ea1eae5",
      "Inputs": [
        {
          "Id": "23c65fc2958c477a8cd72b06f6392fb3",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e8068d0a3a84fdfa4649424609e1d50",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The direction of the Curve\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "edf0db12c258455eb16ee2c23e49e8c7",
      "Inputs": [
        {
          "Id": "8267ce2d0d154fd3a2999a910c651e33",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1931051748f40b8919be30944766353",
          "Name": "otherVector",
          "Description": "Other vector\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "577c3f7e91d34e2ca499990f077bbe4c",
          "Name": "rotationAxis",
          "Description": "Axis of rotation\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "567499d84b934a4184ba45a80f7eeff2",
          "Name": "double",
          "Description": "Returns Angle between the supplied vectors in degrees from 0 to 360",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the angle between the two vectors in degrees from 0 to 360. It uses axis of rotation to determine the direction of the angle.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "4ce0b7c8b9a0454b8411897137d5956a",
      "Inputs": [
        {
          "Id": "2b9c20fcdc424ce7bfba7c096a2a1584",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a7dae6d6dc03442f856d7f980987e056",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "bba54c042ba246c7b2aec95c6d5c41d9",
      "Inputs": [
        {
          "Id": "8d34a4cb9fd24b3cb95280eae276f0c3",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f77c35507f4e36bf0b41c3f4245249",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "a5c032dbabf04b80b292bb37c0e8e168",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "791857a410a64169bc0db5756a899692",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "27fcadc89faa45229712618cb0617c58",
      "Inputs": [
        {
          "Id": "b5ed7b1498cc47af9689ff15d7b1f3ba",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "438a5f8992a8480c8d44158c064b7965",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da259d12ac79485bb9c414091f445c4c",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "2211a278f4864441a0baa3b989a72b4c",
      "Inputs": [
        {
          "Id": "f594910fa1574745b2dc833f66e936a7",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9ff8aba7dd74c38973dd1a6db02e946",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e195303d12af4819a0e427136079f265",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "4ebef9c147e14fe18f2713edb41ce0f1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ad5ccd1e749742dda06e59e1ba25ba9f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "63989635985d4a9e86ecc7e21b4dcf10",
      "Inputs": [
        {
          "Id": "ac9ef4fca78242d1b5da446f40decb44",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab18a5cd068c48a7810cdde0ee90dc60",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00895b0246664d02b37d4c846344b5b5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "360-x;",
      "Id": "2f0a08982a24452aace84a520aed7233",
      "Inputs": [
        {
          "Id": "569ad868634d4abfb9a7259fbfc5f28c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb240fde190547cda400efb1f0453393",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "ba1f47cf53004172836aad52bf635a67",
      "Inputs": [
        {
          "Id": "1d74786a5e794955817d1302887b81d7",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72fc467eb9814537b7a5173b5280b140",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a3ab5a100974da7ac7084209c4fd9d6",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "b76efed60b4842e8a49e40b23db121af",
      "Inputs": [
        {
          "Id": "5e436ba0aaed44f39c5ef56d81d37cf8",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f17c3a43e031446ab91b57273cf3a3a4",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "ef84c7c765984dbf849786ec5bd27938",
      "Inputs": [
        {
          "Id": "d99c2aba18c4449a84f337513a666326",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18af3639b26e4b78b3e825abfbeaaa07",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd04709c36d845bc8411e267a9e09525",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "8fe8da5340944619837a399c91d8ee41",
      "Inputs": [
        {
          "Id": "460a68b42f0043f5be0e28cd1520ba5c",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "765d6e861ac445f28c0ee4b12b30e2eb",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27760d6dc8e942a993cf7c0754f9a54c",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Id": "58e5b514aa6f42128d42d2036ad23bd3",
      "Inputs": [
        {
          "Id": "858b0351468c409fb171ba6e819e7183",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a18a339f20c462fa60559b95e5bfdb0",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54a6712da97446d9a2a536cffa35e79b",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "55038b2f19f2449ba49a99957e55909a",
      "Inputs": [
        {
          "Id": "8d257230ad7f486cb21ffe161c774e81",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "831da16c0afc40379e1b461fd2c66185",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "400a12c20e514115941b82c509ae579d",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "7439c09c45034c6cb085d14cd9220705",
      "Inputs": [
        {
          "Id": "6860b896ac8e4f2ca99d5e90f7989187",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "feff650a3ef54544808257b1ef8304ef",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "d85ffeb8546942f9955bef3e8b33b311",
      "Inputs": [
        {
          "Id": "a2d7ec94eea843fa886f3aed5dd1742e",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "daa26130f23e4a289fa00c004dc28355",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "81131c01b17e4ca78c074b291f8befbf",
      "Inputs": [
        {
          "Id": "ce87c24ac6284291906f926940bf3347",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de95b23fed31420c8989bb4b92be43a3",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Geometry.Intersection.GeometrySplit@Autodesk.DesignScript.Geometry.Surface,Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "5841858bdffa49c79b1c050ba009e833",
      "Inputs": [
        {
          "Id": "28c150e312a6436a8e542dbf66a74899",
          "Name": "geometry",
          "Description": "Geometry to Cut\n\nSurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "812e8741174d492e8c5f08966f38f91c",
          "Name": "cutting",
          "Description": "List of Cutting Objects\n\nGeometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07cedfc9f9564361b949ac7ddbac6596",
          "Name": "SplitGeometry",
          "Description": "Split geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Advanced Geometry Splitting\n\nIntersection.GeometrySplit (geometry: Surface, cutting: Geometry[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "fb991323a07a4c9eba8ec8d38b64afc1",
      "Inputs": [
        {
          "Id": "976ecf530edf4377918e9208ac6627e6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "675d3d1901834e3990d4788183be6846",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "520cc5c0ad7646f296e73bff131989be",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "3edb6bbde22c42739b867a2fb7d53358",
      "Inputs": [
        {
          "Id": "e5f773c9b7774618a0925eee93841cfa",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b934d0594e33439dadeb2ebc645d97c8",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "180;",
      "Id": "218d0b7fe83545a29011a31a605af8e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "28bc17fa47194200b7b6df13a4b8fdc9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "055b3edffe6e4d4aa7b7840e292faabd",
      "Inputs": [
        {
          "Id": "3fb3f4cc2e8146a39f802adcf205cae5",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "917eec00dbea4019bcdcf66e9c570fdd",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f30f47ace07a40f189aa519f271b309e",
      "Inputs": [
        {
          "Id": "4ebc3034e2c94fec8a3b588b089117bb",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a7b78bf53644843896d9411dbb0553b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d944fd1737214fd4ac537b2aee04cdc0",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "e3b50d0339c14601b5d95a093004660c",
      "Inputs": [
        {
          "Id": "01a8fdaa78a94b53891190f2fbc82f5a",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83b91516c30e4050a34e4b18b5465201",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "6bd4258ab7b645cd9c65d265cede2291",
      "Inputs": [
        {
          "Id": "9ad5c7dc9b0f490e9e03f4da32a735b6",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "305ded4054ed4d8a9fa0fbbf97642afc",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfcd3b8ef4f6469d8bcd8e6a7b55d151",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Offset@double",
      "Id": "6737c0c9100440a28c1abf99674503d4",
      "Inputs": [
        {
          "Id": "d1e514d3bdb74adf861fe1cdc5e1ff33",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f612d943675e4c66b1a2f1339e53cd2c",
          "Name": "distance",
          "Description": "A positive or negative distance to offset\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b6c77a170a64a2ca023004fc5fe83b8",
          "Name": "Curve",
          "Description": "new offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Offset a Curve by a specified amount. Curve must be planar.\n\nCurve.Offset (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-10;",
      "Id": "6958eb12c3e54cb9847213e471c21260",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6b826eddd8c64603a9b03dfbacc454b5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "054be7a466a342738d2fe7f17b7b906f",
      "Inputs": [
        {
          "Id": "4e5d14b41a8445e99a90c5a831485104",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30b8cee227f6499081c6804d9154641d",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "a5e2ac130f1841128025c1ba48f92e7a",
      "Inputs": [
        {
          "Id": "e015140dcc8c479c845e44e892f295e4",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa3333a36d5b45c39143079cbac30c59",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5758b86253fa40b2b9e670eeb30637e9",
      "Inputs": [
        {
          "Id": "deee30056c39447e9f94d08f8829a9ab",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e6fb80c66fc490fa644c46aa6c1e78f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "913bfa02bf7a4b73b6a5c85027f28a57",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "5651c9d21790456f83df394439b276c6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "09e69280aed04de996e685b73731dcf9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "6c741ec549704160a38080ab348e3962",
      "Inputs": [
        {
          "Id": "24feda742069448890d232c44c76777e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a3d7d3a5dc5242c4b9dcbf78577b8560",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a565fad325f4767a8d6a0d50edc2b45",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "981547fcb4164fcba947ddd6b7147200",
      "Inputs": [
        {
          "Id": "298c7100150f4a7cad4b808fa66038df",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d77d44fa1d594b7b8e2d7701988205b2",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c56d1a2d6bf94228861028ff5e16e047",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "241712c8b750415fb127b095192a69b1",
      "Inputs": [
        {
          "Id": "34902224922b4565ae1d5d0f40d49d3a",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3dbe9c98e4f24ff3ba8c65491609e452",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c2b2298929f842fe8cdbcb47ac88c0e9",
      "Inputs": [
        {
          "Id": "b65abf86700a40af8c836e4842319cb2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3316986ca8f4ce0927394423cb9558b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bca67a1d82f4d72b4958e08fde1484f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "fedd78ef322c484984dbf226e5d6c57e",
      "Inputs": [
        {
          "Id": "f4a5c31014554d879d1f7b949cd6c835",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb2c629124ef47fd9867ce3726f3a03b",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The direction of the Curve\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8a5b6f3374dd41e0b1a0be3d599d64c5",
      "Inputs": [
        {
          "Id": "e669267bd7e84f9599a355e1a44e823a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b17d715edcb4bea930f4ea1e56b6a64",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "018f9fe8f5454c6abb65f42fea799853",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "89737c4245234c048b3860fe710d9b00",
      "Inputs": [
        {
          "Id": "289e67089c5e46c1911fb548dd7da8d9",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "698461596cbd435295db61a77deeaca5",
          "Name": "otherVector",
          "Description": "Other vector\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76a319d1734f4aa0b5f8e75b851ed2ac",
          "Name": "rotationAxis",
          "Description": "Axis of rotation\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8094c8df0394766b5551bf7f9f7f78a",
          "Name": "double",
          "Description": "Returns Angle between the supplied vectors in degrees from 0 to 360",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the angle between the two vectors in degrees from 0 to 360. It uses axis of rotation to determine the direction of the angle.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "f4986b1bcc22477da86d438a48be104a",
      "Inputs": [
        {
          "Id": "860f79db5f53415eacb904693d0fc9ad",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "126d37ff8f06487895bfc67bde49003d",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "33b91d7062204005bee4933b2b4d55d3",
      "Inputs": [
        {
          "Id": "23df37ffd3144739b010e82f15c621df",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "219bdadb1e234490a7b788532eac389b",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "0e6c0ad27d4d4f1d82bab84cb0f51add",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "08503eba2d16422da3035e773470432b",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "5bb1c1c63de94d1c9ef5ba746809522c",
      "Inputs": [
        {
          "Id": "024b524a735a4089828ffef569c4954d",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99d6089ec5a346ffa746e0b681f3c955",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1246d34ab6784d0fba0f7b86bd850d15",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "06537230153649f386922dcb0146d451",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "66bd222024794df4bc6313ceba2765ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "180;",
      "Id": "41797d55c7c74980a7304b36c11b8f3d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3b208f2112df43a59c832a0eefce554b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "fe9c02f4219d4420a70625912e0125e9",
      "Inputs": [
        {
          "Id": "2904bc0f79c84a7a8398b2255dd105e9",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8095bc5d0d6e4fceb2f9452dd806781a",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31ce0eeacbb24d8282093dbd8e144e9e",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "def514f7f3cb4fa28870dadaaa457e15",
      "Inputs": [
        {
          "Id": "96b8071788304f5b82e34f851b47d440",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57b7a96deabb492582c3decb24db4733",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39263e927e544a31989c9cb4d7939973",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "360-x;",
      "Id": "0321647c556a41ee9ed76a77e90c9122",
      "Inputs": [
        {
          "Id": "a979181b3df540f2aebf8cc258909a8a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca7cfa52df454d819616839b66e35a50",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "8fd6673990174768bb8f55f391c2619d",
      "Inputs": [
        {
          "Id": "4213081ddaf74a08a5f146cd7a0163bd",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a28ea7ead2cb4aee92a36b43b84257a1",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "527e88f7ab98496bbae34a9ed4a57ae6",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "1cad847ab6334bb89b557a57c95a1e4f",
      "Inputs": [
        {
          "Id": "caa13eae9e3844a986a01a9fe9442140",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3481cc31896c49768a9f7a024d6888a4",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "188bdb8442094c6f9b644768491046fe",
      "Inputs": [
        {
          "Id": "4eb82449c8534ee2900f1a993c9daacc",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2721b871c6e445b78fe5b70ad0df3e1d",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23aa9e1c3bbd4cfab89741c1ee2c9a48",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "90;",
      "Id": "3af32125224a49c5a35c367143ae4485",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "799ddb42368b4ea6ad127c8db7927138",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "9470202ab5d54b05934d84853815a851",
      "Inputs": [
        {
          "Id": "ead298207e7b46a7b9cfd7dc9d373083",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55dbaaabf39647219821d7de9d2caf38",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "45080f352e5e462daa54ee34d136c117",
      "Inputs": [
        {
          "Id": "92dca12af7be444cb71f5c03240c24cc",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d33f92c64cf4555bc1096cf3aded3ae",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36883e7a3b5e4c32a2ee994a99c4fc36",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "d511a56abde84412bcc0f89d5d8eea80",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6fd5bbe0e41a409fb5c8062857d42f09",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "4755d57806284e7784993e0ff160e1a6",
      "Inputs": [
        {
          "Id": "801c76dcc50d4c089fcd007384d09172",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d54edd6f2a044c98a60af4620a9e9ab",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fc5b4b32c9347dc9fc22638778331f3",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "adc8f6fadf8f477e9296dc066fe00a38",
      "Inputs": [
        {
          "Id": "1b27768112e346488a03f198bba2d414",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09a17e0de20b42eba2e7477e37576b60",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebd0135e0b014fc6a76f624c82a2b03c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "3b2e0151ab5346d9bff8f5a8325777fd",
      "Inputs": [
        {
          "Id": "1be37f7ab7d547a2813214d2773f2102",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "644f7d873184494e87dd300d1473f71c",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61faba1049b543c2ae8db8b21b0a30ac",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "15cbd1b1f9de458391992b87a7c198d8",
      "Inputs": [
        {
          "Id": "4e5347f13dbf4b539276c2770a171413",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc2f618dbd304042b48149184228c43d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac26939eb84d4aa7a6127d47baf2f208",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "e6603521b7214a1c836e0aa6acd08d02",
      "Inputs": [
        {
          "Id": "028cd9d2274e4285b41ebc265a8fce0f",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "351290d6b0d247fb842fe8902f2fc3f5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "teszt: var[]..[];",
      "Id": "99f4dd3d66384f5ab4f7d44386800165",
      "Inputs": [
        {
          "Id": "7c5a4a9bab894acabfb82a32a803c9c6",
          "Name": "teszt",
          "Description": "teszt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1db66e8c1ee54ab294403390270e4c99",
          "Name": "",
          "Description": "teszt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "45d764bc8a4e423f95bf2f671e258ae3",
      "Inputs": [
        {
          "Id": "3c1823a579cc4186bf248a5b4671bc1e",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15f7646fc8a94382a23de1ef37e4e713",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b28a39820baf429c81abb6b3c2f239a4",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Inputsurfaces;",
      "Id": "cc8ac0eb32804cf699627a66ec49c1c7",
      "Inputs": [
        {
          "Id": "c2ea17b3fa3d492aba8bbf9b713595e3",
          "Name": "Inputsurfaces",
          "Description": "Inputsurfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7199465a00542de9054e998319a75d7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "_list = IN[0]\r\nrValues = IN[1]\r\niValues = IN[2]\r\nif len(iValues) > 1 and len(rValues) == 1:\r\n\trValues = [rValues[0]] * len(iValues)\r\nif len(iValues) > 0:\r\n\tfor (index, value) in zip(iValues, rValues):\r\n\t\t_list[index] = value\r\nOUT = _list",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "871534ca59084375848f782832c41a14",
      "Inputs": [
        {
          "Id": "cb97142ddba4450d9a86cc4ae6e74372",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f013726a41a4f28919821638f28a968",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20871556b3624d0db714e69dbce95d60",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5818698ebeed4661b2cd62f7c5dd10bf",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "_list = IN[0]\r\nrValues = IN[1]\r\niValues = IN[2]\r\nif len(iValues) > 1 and len(rValues) == 1:\r\n\trValues = [rValues[0]] * len(iValues)\r\nif len(iValues) > 0:\r\n\tfor (index, value) in zip(iValues, rValues):\r\n\t\t_list[index] = value\r\nOUT = _list",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "75f0c6cf21ea442f84f8a563de0fcb4a",
      "Inputs": [
        {
          "Id": "5828249338064b87b0afb5aa9fee7a8e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46f75ba09f374fa7b4594e8caa1a3c39",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5dff3a0899874911bbdf739943a9c3ec",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7290d8f8a271417e8aa2c5f7660d55f1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "teszt;",
      "Id": "11519445649346deacb2ae5b25d6b1cd",
      "Inputs": [
        {
          "Id": "f5e2574efb054e6eab10eb9a61cd5e29",
          "Name": "teszt",
          "Description": "teszt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aad39bd6707f4e01815929ac5946de46",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "linkerlijn;\nrechterlijn;\nonderlijn;\nbovelijn;",
      "Id": "c90bd219361b43c190ead8463039e9e2",
      "Inputs": [
        {
          "Id": "b3f717c45cbf4e24bebbbeb5857b10a9",
          "Name": "linkerlijn",
          "Description": "linkerlijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58f00975b1b64d158529b775ec475d79",
          "Name": "rechterlijn",
          "Description": "rechterlijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f115d2ca0c4642029577fbfe5f9d5b8f",
          "Name": "onderlijn",
          "Description": "onderlijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27c7ffaf0871407b99a56c08eec2511e",
          "Name": "bovelijn",
          "Description": "bovelijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db64ba77f666490094a174c0837b128b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a63773698af94e958785316712bc7e2a",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48767401a57a48efbdf1a295c353e7a0",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c388aff0de9417b9333c9cf4f846431",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "3455ce2b11df4ec39ade80187e90e9f9",
      "Inputs": [
        {
          "Id": "c051e97fbd514d85b4af284784b23a85",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "701f00d58e6c4d4e874cf2ccafd99715",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Reverse",
      "Id": "4b8ce7f92a9041d492f8d9053342c3ab",
      "Inputs": [
        {
          "Id": "2678cde63d584adbab3c9a21db53544d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6939539ba77c41f5b30585c749b85c00",
          "Name": "Curve",
          "Description": "A new Curve with the opposite direction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reverse the direction of the curve\n\nCurve.Reverse ( ): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "5674da4a05524188afad840a01999f67",
      "Inputs": [
        {
          "Id": "3fa89bda35164528afc1197a9012e870",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3483ed6af9ad4356b0e6ee01548e1269",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "eeadf635cc5f438fb3bfd810e5b42718",
      "Inputs": [
        {
          "Id": "60be67539ff64a0e9f698681da541fe1",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b4a3e1513784a0cb285fd1ba46e6cc6",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2eb4bb4a20342d68c8d969e0da66db8",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "54caa1474c214e49b6e2d04fb0550a67",
      "Inputs": [
        {
          "Id": "3df862ece5444e91ab9c5cc3934f547d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79a7ac52c29c4c74be17b9159495f5ad",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "d38fe44e46474baf9d4d0d9f52c558d8",
      "Inputs": [
        {
          "Id": "1f2f27cc898e47c7b616369f359704ce",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5bffdcbb201466fb584e27ea86b022b",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3b1f3a6864b4611b1e91c2c36c58d09",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Reverse",
      "Id": "97972747b9824bebb371069758665569",
      "Inputs": [
        {
          "Id": "f4a635de0f92410f88cb1df9fbe268f4",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fa394e5728d447cbaffe2ef383c9e06",
          "Name": "Curve",
          "Description": "A new Curve with the opposite direction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reverse the direction of the curve\n\nCurve.Reverse ( ): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "f1a2596d87e5475bbd7799788fcad175",
      "Inputs": [
        {
          "Id": "010de1d2db1c455f8fc81f4fc5d64154",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4bc0d8522ff437e991462d9c2a65dfe",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "vector_linksrechts;\nvector_onderboven;",
      "Id": "638dece9926f4cfca2347744259e6ada",
      "Inputs": [
        {
          "Id": "edcf339b38ad4a3eac36add28c2bcf39",
          "Name": "vector_linksrechts",
          "Description": "vector_linksrechts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c9b2a3278de4b68b5195ac4a00d059c",
          "Name": "vector_onderboven",
          "Description": "vector_onderboven",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8092442757ec458c9f36a7b98224a1b8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24eafbf2803c498ea720b902f23c5de5",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "0ef0e0980bbd4243810f14054edea21c",
      "Inputs": [
        {
          "Id": "470f6ef7dfd645a59b2ee26fca679765",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd8a104465744ca39da6830d5ee27183",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "095b6f6349714881be2e25853357064f",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "baf5747ba9784c46b509a159ec597ae4",
      "Inputs": [
        {
          "Id": "a1c17d9ae74e461a847bb5c95406aae2",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84f0960bb7744feb87fb8e6dfa4a2c22",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0434947d2744466da8e7e44c89e1d527",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "cee313634b68497ebb0189b7c167a357",
      "Inputs": [
        {
          "Id": "600b529755b34121bb20be458571795a",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d9c47f9216c467d9aadc3a36ec04d85",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "04dcd6ef891143b3a07f099d52a4e96e",
      "Inputs": [
        {
          "Id": "422c7f7e938d4e34b878ccc110ff72c4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9020b34e960428586ee407189ebf046",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9057faa00d2a499aa3384296970db414",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "2bb028ef679a4f509284a99da0bdf80a",
      "Inputs": [
        {
          "Id": "865800df58254e79b7d82e90f2bb4dbe",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f6c7a8c371f429189922bbc842136a3",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "a6512d78c5ac4fd0ba8fabd2c05bacc3",
      "Inputs": [
        {
          "Id": "a50d652c7ca44ae3aba6f9e48967b586",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a7c826bb2714184977555569a5f8710",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70366d570fcb44e99258ebc584c8ff17",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "81e63c4f53a2409aa6e0d5a7e0bc998f",
      "Inputs": [
        {
          "Id": "5cfea17087384594880af9bae0631a3d",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "388210a2c0744c5693741534810895df",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7239f5ac3a5648b59b989abce06ae870",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "b1581748bf864a83b6bde4aa35704b6f",
      "Inputs": [
        {
          "Id": "1776cd08b3a64496bc1ce8d3e0838b3f",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fd3d3171ed84e3aaae247e63f496efb",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "133d2243b8104659a15225971033a5fb",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "997423cd8ecf4f5cbe26fc7eff1911b7",
      "Inputs": [
        {
          "Id": "fc925cbc73e7438ab8d020a723a769c9",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00eb22aa97d1462daa8f7734bb8030ee",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94134f6b34d94ca4abf8189db293d87f",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "ca236f71238443429c0e5d9cf1190d91",
      "Inputs": [
        {
          "Id": "d86f42d29f2c40eabe47cfeaac27a7be",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a571fa2e8e8b4641af1803c30e1278e1",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb1558df8b0449d0a87c976bf2599c55",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "2e05453666844e1f9b08bb17c547b54b",
      "Inputs": [
        {
          "Id": "7c2e41d6c2e948a08b0c4443d4c66364",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18e4ce60b32c4f77a580e981d2e3a42e",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b6ed183683e4870a747b67a0e45e0ac",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "f2b891bcb4f14628b3939e17b6d96428",
      "Inputs": [
        {
          "Id": "9aef3d94534741e493414605b5cc5647",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "463bf6d151f14ca6adc219fe9b73f68a",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70231f247b3e4651bc5064b754fb7cda",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "bfd949cc40b24a68b768367ea758a814",
      "Inputs": [
        {
          "Id": "e687527675dd4e85b65092e1bb712488",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "217fd1577feb47468dffc49bcdc023cb",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2c9cc6bbe7d45b095cf40beba565cf0",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c4c5752719194275816a1aa780d97285",
      "Inputs": [
        {
          "Id": "9c341e8f9c594c258b80897d9367d893",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97253db59e884b119106bff07009b935",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "6fb3945265d54fa3b4769af412e1eab5",
      "Inputs": [
        {
          "Id": "de5ed8a44e4945ca9cf66d7b731e8d88",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b395aa2754e54b819231b6ae94b3f7eb",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c3d82bf9e1644c39e1da711e99073a7",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "39a34b6cd1c44d27a072130b86939d33",
      "Inputs": [
        {
          "Id": "89e81464c7af4be685fe99df9e6628b1",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "095184d2eed04e528751b870f209b0ba",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "3f5180dbdaf84c92b7e18356209743ef",
      "Inputs": [
        {
          "Id": "c1c3f8b2fd6f43d4961b6be420a66780",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e5d99e7650b4d40a577003c8e227156",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "8cf53a28dd344168b2a232e542978232",
      "Inputs": [
        {
          "Id": "589077647bcf4e1b959d6773c3f29e24",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "109eb6bd70be4efda13aa652ca06d53d",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "8002b55d8da1492bb15d6c741ad4c894",
      "Inputs": [
        {
          "Id": "de7b21e60d7f425b97561f410cb1bf10",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aba8396041ad4e9f922888bb121fc1ef",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "d8541b7c297b4772b71236aa99952c5c",
      "Inputs": [
        {
          "Id": "19d99fbfa98b4023843755af1884c1a2",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bdd4e1ba582485b8eaa753bdf42f43f",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d6e261eccb143a2a0799933d229464a",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-x;",
      "Id": "36a25c9aa04041b78f7e728412b59d90",
      "Inputs": [
        {
          "Id": "04f333e5d00d455a9e01cf83c9b0621d",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90bead36a6de454f9de1ade3aeedca4d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "a453d8e760d046ba88116e376fc7b08f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "be5a9a945dc7411a8b99cdf2116bc488",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77e01485df86442b9b93ecec67f03eaf",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Range, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "dc637b90186f40ff8c59f0220b93ff52",
      "Inputs": [
        {
          "Id": "2724b3e2f13f4848bd81b9f61644ff34",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ad1d6b30f4748d1a86d3afb804fc2f4",
          "Name": "end",
          "Description": "Number or letter to end the sequence at\r\nDefault value: 9",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2af10858c0349518701d2f5b294a957",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "817cfb12b2e24e7d948deb9cace32a4f",
          "Name": "list",
          "Description": "New list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers or letters in the specified range."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "5cd02cec77c54f1b892614954aaf22ee",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f90f694b6d3b41eebbcc78783acfe4b2",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Rotate@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "6e9930c6100f49d09ea4bc122e414a9d",
      "Inputs": [
        {
          "Id": "6900201839044f9a81d785f3b3564338",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c72abcaa5f1f4fc7b49191cc08c18935",
          "Name": "origin",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbc92f307f2b485bbb457392da4480b7",
          "Name": "axis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59bab77bc7f5496bb8f9f375a4672b94",
          "Name": "degrees",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2101b14a0c147f5871e2b20291dfe79",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Rotates an object around an origin and an axis by a specified degree\n\nGeometry.Rotate (origin: Point, axis: Vector, degrees: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "d7ffad46def44c84bc3f0aa218d3d831",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a279814c34d42e3a9c6654cf40326e3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "572e10152a9a4114922653ed6e33290c",
      "Inputs": [
        {
          "Id": "0afb99179bc74921bd37aa7264f28c85",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0da1c3428def41559bd9bb1a24cc3856",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Transform@Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem",
      "Id": "9f9093ee72f541c9bdf0a1fe048c9a9c",
      "Inputs": [
        {
          "Id": "13b1eb7c7454447cadb402b9625e5cab",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6fb31c156fb4a7a9da619a9a5fef102",
          "Name": "fromCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27960e1e15a04c9386d5a13fc91ecc40",
          "Name": "contextCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "701d0e9f03fe4e39be578f414d824d1a",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Transforms this geometry from source CoordinateSystem to a new context CoordinateSystem.\n\nGeometry.Transform (fromCoordinateSystem: CoordinateSystem, contextCoordinateSystem: CoordinateSystem): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a = bb.MinPoint;\nb = bb.MaxPoint;\nr1 = Rectangle.ByCornerPoints(\n  Point.ByCoordinates(a.X, a.Y, z),\n  Point.ByCoordinates(b.X, a.Y, z),\n  Point.ByCoordinates(b.X, b.Y, z),\n  Point.ByCoordinates(a.X, b.Y, z) );",
      "Id": "df6938c7a9f34d11bf624ae1ae4643d6",
      "Inputs": [
        {
          "Id": "70c77e74635e41e18d7f691693c43a4e",
          "Name": "bb",
          "Description": "bb",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b3891f055af4a0c90f4cd32e41059c7",
          "Name": "z",
          "Description": "z",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc75b6504af848769dbfac66c0ec4307",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69dbb26c1271414384341a01a9ccb3c8",
          "Name": "",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b0305f648bf4aa2a4c12ff9f6041545",
          "Name": "",
          "Description": "r1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.CoordinateSystemAtParameter@double",
      "Id": "ce565b56eafb4b728b5f7d9f4ee8f890",
      "Inputs": [
        {
          "Id": "a2fa82a741e14135af61e2c357a2db42",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d029c60eb4b44aeab16defba7cce8614",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2427244cb1714c02a0fb112f96bb64b2",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem at parameter of curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a CoordinateSystem with origin at the point at the given parameter. The XAxis is aligned with the curve normal, the YAxis is aligned with the curve tangent at this point, and the ZAxis is aligned with the up-vector or binormal at this point\n\nCurve.CoordinateSystemAtParameter (param: double = 0): CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "0794300dd65845368bd8af413f34c06b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ab4082ad52344989e95174fe8913397",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry@Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "7c06f928666e4f2d98a782356ba041ff",
      "Inputs": [
        {
          "Id": "506579e8e45d4f6c870808cc9b084d35",
          "Name": "geom",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cff4cef18fe749ecb2cbb2ae4ecefa13",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Create an axis-aligned BoundingBox around input Geometry.\n\nBoundingBox.ByGeometry (geom: Geometry[]): BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Transform@Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem",
      "Id": "ef8452d8fbd34c2db06e6fdd5f354a3e",
      "Inputs": [
        {
          "Id": "b094a7f0c5cf409fa4e69be492fa1a64",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15becd4dffa641b989005c3d513bb225",
          "Name": "fromCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6ad97c7c4184ae194167542bfef542e",
          "Name": "contextCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "477c7c5e5a8b45e8a82984604d9d52ea",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Transforms this geometry from source CoordinateSystem to a new context CoordinateSystem.\n\nGeometry.Transform (fromCoordinateSystem: CoordinateSystem, contextCoordinateSystem: CoordinateSystem): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.Identity",
      "Id": "7e9ff32156554ce3b1d1deb0b8211ad6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a937578e6d02416da96db592c2ce2748",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a CoordinateSystem as the World Coordinate System: origin at 0, 0, 0; x axis at 1, 0, 0; y axis at 0, 1, 0; z axis at 0, 0, 1\n\nCoordinateSystem.Identity ( ): CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "0ca8adda245c4c38ad32466888389b0b",
      "Inputs": [
        {
          "Id": "8157b8a1db3b4a8e98c121569d80ec9f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ebd451aaf524812901e1eaabe0d8836",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "159f2e5dd8354f12b192728ca3a888cf",
      "Inputs": [
        {
          "Id": "bed95c0a2ddc47a6894951eb611dc41a",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a7bcf2b76bf94ae182ce53b8eff2436b",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "389a8d28d9444c3cbb9830afa4e13e77",
      "Inputs": [
        {
          "Id": "22144f740c1e48979378e1e42ce0dc33",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b9833b6261348efb66facfb2169ae96",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "88a4c60f1d174fc3b1969a5b4893f450",
      "Inputs": [
        {
          "Id": "c97be1fb38564080928f14e94bc915e9",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a0321bd40f754140a45315b15a7febec",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d103f8612f264cd7aa85e2569c298add",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f5ee9f00a0ee4e54ab688fb45a557204",
      "Inputs": [
        {
          "Id": "ff47b1ba0e9243988a9d6becc1d2fdfe",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "116454a61f6d4619a7e6886ffc8929db",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a9a63c031f14d4eba7470fd1deb9251",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "2d2c16716d0846a1ac7b466c8ad70e91",
      "Inputs": [
        {
          "Id": "6a551256cf85471ab85a94502dfc2ebf",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b8fef81f408412db3eec3ea8949da45",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c06aba49e8e43d2ba0122835c763f85",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "1bf192f1f5604af0a02e682845039c74",
      "Inputs": [
        {
          "Id": "c6d7328edc4e49e6ad3566a34b059803",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "583f6a581049473485ad308ac78ca312",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a388b82810c244b4bae1386add4195f4",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.Curves",
      "Id": "91b9c450ac5b41f5a08b2341d03e2031",
      "Inputs": [
        {
          "Id": "16a4d9b78d84480eb1050cc27e690c6a",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d63864d856c1483bad23a80fa9d896b2",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns curves of the polycurve\n\nPolyCurve.Curves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "151c5d3e5def41fc86b32f19a91a42ab",
      "Inputs": [
        {
          "Id": "2dd2f6ecc2464d3cab8cf5dd4e60472c",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b137de8d0134769be16b036b08623a2",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "676aaa08e0d34243bc78ec81aaea8886",
      "Inputs": [
        {
          "Id": "5334badff4dd4d52836e1239cd634109",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0d3c3843e4ad49578d146d394c55c338",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b02d06e475c246c5b397914026e6d61d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "cfc315de802442fdbc7d5d11f39be907",
      "Inputs": [
        {
          "Id": "d549215c50ce464d89476e99ea4fca6c",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f90076dc656549a7acb85de434e6e348",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "9aa11dd990934b2cb45640a7c2b701fa",
      "Inputs": [
        {
          "Id": "df11dff68e454be8ab5300fcd721e17f",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "baa4abd7d0ff4ba8a91fb3645232525e",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "4856b6606f3442e8ac66949c1e5aa602",
      "Inputs": [
        {
          "Id": "91e6378d8e9b43118c45dc28d12ab902",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1adc360dfe2459689c762fb75af18fc",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "df8a7a5db16c4310b3769a353956bfd4",
      "Inputs": [
        {
          "Id": "2f9686e21e98432089c655496fe3e2ef",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "953fd0bfbe8c4a5f9d9f16a445a00f96",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "128b62c9a45c40e7b829289881017c8d",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "4abc77d96fb54213b3e22bbd82294b82",
      "Inputs": [
        {
          "Id": "e919600d30cb4aec89cb552e7d60b962",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "069ac559c1394f6a98bea3f875870d98",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca3036aa965a4275b4ab8d3656b2d4dd",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "57de089d46a144439c8e44373526fe74",
      "Inputs": [
        {
          "Id": "1eddaa93e98e4a49af31444b6b8fd2c8",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "772a2bc4ef5d4bf5b12ce8049345aad7",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e3c51c037a34c94990667043e3a3c1f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "567ad64d71a84412ad5e88837e7ec5e8",
      "Inputs": [
        {
          "Id": "18439d39e7ff4f7ebb45187533cae272",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d0c26cb5baf4e3abf8c82f77e922405",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cd86db936834ac0b25afca70bb5a6fe",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.NormalAtParameter@double",
      "Id": "71dcdb1da9194bc48a4f4873674c2672",
      "Inputs": [
        {
          "Id": "24cc66e1a2dc48b58732460b61265a58",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e1e5ff8336148e3ab0d7b4c7ffafb39",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02c2fe32706d47578c87e44523292453",
          "Name": "Vector",
          "Description": "A Vector perpendicular to the curve at param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Vector perpendicular to the curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.NormalAtParameter (param: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "a1daf903ffe04564bb3fa15b54a6a486",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3be1de7cd6d64fe4b5ae746ff730c424",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "0a9e954d7f184559b500458b928c3203",
      "Inputs": [
        {
          "Id": "d06cfd41b48d41f7b750564e13fbaeb4",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8894be0464074014985d4af1d9e49ca2",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.X",
      "Id": "7e11d326db75404ea767eda8157b386f",
      "Inputs": [
        {
          "Id": "cdf48f68d63d401aaaf69bc04a459c6b",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5314fdda16774f6685230f081842022b",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X value of a vector.\n\nVector.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "19fd0496d5d2485ca64d377769c3f4d1",
      "Inputs": [
        {
          "Id": "a4d217169df14faf818e7503eecf532e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e9bc3ec2836e4448af962d31d2a796b5",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e89a163d97648918172706a65d71c6b",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "702b041802954375ba2058a7924f23f3",
      "Inputs": [
        {
          "Id": "66f7e4904799449a84eab94e1a621e34",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52b1e2ec5dfe4ed381f2cf95baea13d7",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b8289b2aac204d74b8947994ccf1f4b9",
      "Inputs": [
        {
          "Id": "dd6de7b1eee24d43a296bd4f979c8713",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "debb8f0616164ca5a6c8bfde091e56b8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33fd45406a5f4877b80fd4ec0d79c555",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "fa5583e2540844cd92a2c4a657ae0ee4",
      "Inputs": [
        {
          "Id": "5afe6224a0a049adbfee605d1d90234c",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "eb945ca252c04c39b00d6a8b26890dda",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6964210503354f52a295463a8759d8db",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0ec649efebfe42d5a6a26073dec50bba",
      "Inputs": [
        {
          "Id": "b19c183d956e4673ad45551900af3886",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee9ccf472900484b9293f41dc38b8cb2",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0fe012dc2de646adaa46305395f4fc57",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "c80384ddd6d74c598ed50edec0501a81",
      "Inputs": [
        {
          "Id": "5c90eab6e0274182b994fbb7ad9c92d3",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8906b7085e2847c2a8ab71ee55bec582",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "9cb052f125924f6db2ce442c7b86ccf9",
      "Inputs": [
        {
          "Id": "dd10f0cb9dd94e07a7fff94c48e3c391",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f89fb1c6de14e54b9f3ba5c020337a5",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "95d85c45ec5a4a7c884a2bd0fba4ab18",
      "Inputs": [
        {
          "Id": "0e22ee93a7eb4f40a4da0793d564e9b9",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a83d6f58dcb4e49b69c8315186868ad",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4989c9c1c5f0490296336d5be94bd008",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "bc78afd781964cbba07155d07a1b7afc",
      "Inputs": [
        {
          "Id": "a7637873fd594d86af0117a1ba365b5b",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d1eb375d88884348addf9713f1794e7c",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9be89c8fad134689bc1bb78146d4b52e",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "77100ddaa470401dbe022599f59e32ad",
      "Inputs": [
        {
          "Id": "f326435b764849ac95af5fdfb6f626be",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4933f630164e4d4aa1b0c002b98f3a40",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7e0fe6f85ef47b7a016ecaf9a553c81",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "18d7c227c61646f28cdb30560e07588a",
      "Inputs": [
        {
          "Id": "6fccc08d383d49c2ab84f20ab52eb622",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "3c666078633347ed8e86e0ce90cd4383",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbca5c098ada453f84ead1374fd8eb6b",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "c5e28bc6821944669c16f3a7d1a0ff07",
      "Inputs": [
        {
          "Id": "2b30003deff045de85ba8776265e47bc",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bebeadc6d6ac45f197e2463c87f016b6",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "3a2b4c97ab584bb69a1bd0ed3e659ec7",
      "Inputs": [
        {
          "Id": "d659206b3f6c4d5e88f233147b70fd83",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4f1fe0f1e7342ab8f0cfc77a4ed1d6a",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "324f64d1cfa6473484726caf21a89f65",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e2026e17cb8844d6be07ab201207462f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.NormalAtParameter@double",
      "Id": "1659cc4fc7f941568e8e45cfb4845fdd",
      "Inputs": [
        {
          "Id": "135764d105104389b31d24900cc62b9a",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2bb626afc3d4ba984bba1d392126eb3",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ddd7cdf6e4c41bf8a3a89434d172269",
          "Name": "Vector",
          "Description": "A Vector perpendicular to the curve at param",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Vector perpendicular to the curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.NormalAtParameter (param: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Y",
      "Id": "22bd822d310a4bc58d17056e7db02382",
      "Inputs": [
        {
          "Id": "b0c8f77f6a034e53a0fce8773c181f10",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81082bf346244d26bee9238b83a92555",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y value of a vector.\n\nVector.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d146605fd8a14b37b68712387a9ddcf1",
      "Inputs": [
        {
          "Id": "38c3db2ff53748e6b2b5f25c470d5bb9",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58b7c424788e45f8b12b7c3393571fb6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad16d37628234465a6b61580106136b5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "15c47579b33f4c098f4a779fbdccc1fd",
      "Inputs": [
        {
          "Id": "44abd9013edd4c15906ba93e5b15a8f6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d846c71d0057436d92a706bfc6ebbd60",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1b64542360941949d512c6d62a4100a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a08a4b801e60463abeba09479e149f71",
      "Inputs": [
        {
          "Id": "4aa44687608a41fab9e10730518f34f3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aaa1d185e0544513b6a42666f3120451",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b001ad68a814f22a1472e767aed3990",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "662b6adb32094af7b4097720bed2b04f",
      "Inputs": [
        {
          "Id": "ec375200d93546c8ae6914861a86addd",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "005b30790c5749988ac33b86d39f2497",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45e6ec8d25c444df8a8492a6c999d7bd",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "0801228401ba450597b82335d8372f7c",
      "Inputs": [
        {
          "Id": "35a748a39297465e800a22554b0de83e",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b0caa6f606e4cd9a45fba857d2ecfb9",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ce9f703096d4b6a8b1ee9d6225a36c7",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "1e04f28bb09f49d19a3b40d849fafe0b",
      "Inputs": [
        {
          "Id": "f1f98d2aeca04e1d908769f3be83a8bc",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72cc2c6e7db049798ff8dd98e8de3dea",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf0af498c7ab46ff8f15a2dfc4cd58f4",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "1c349c708d754eebb837dd2c45724b3c",
      "Inputs": [
        {
          "Id": "66df7524f28f460b8a238dd43b94762f",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ec004d82f5b4dde9eb94ce596b4d6bf",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19ef6c37a5ba47fd839f21f2ca1be3a0",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "709819a5a1194b2abdb19297dcb205d7",
      "Inputs": [
        {
          "Id": "5cf79ee934f94f8a942072c62eff4064",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdff8497ab5d4d92b4bae34d3b28e501",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f31b5b98a3448d2be2a865257730d52",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "curve;",
      "Id": "4f7f5df5d7084874a36548175a1d1c50",
      "Inputs": [
        {
          "Id": "387d3281b38943389162ca5b5097b460",
          "Name": "curve",
          "Description": "curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02486399e81441b3aa21bc9006da3f75",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x/2;",
      "Id": "42f9e7ac747446f299779b9ce7c98e11",
      "Inputs": [
        {
          "Id": "9bdf50511fb34f51b5538b79b0e71718",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac70f953e2a2462fb218e14907d4f4d4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "1262e782b0494b949e2866cdb5cec890",
      "Inputs": [
        {
          "Id": "180e255bdb9941219add919dc23d6653",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1401535c0b1942dab902b21d43368b84",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtSegmentLength@double",
      "Id": "b0a36302d35d4438b137f5f0e698b278",
      "Inputs": [
        {
          "Id": "78816700c4aa48a8b1cd2be86c4ea4fc",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e8aba88212240dead7392f82297f07c",
          "Name": "segmentLength",
          "Description": "The distance along the curve at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c1a158394644b99aa724cf5ae7c4340",
          "Name": "Point",
          "Description": "The point at the given arc length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point at a particular arc length along the curve\n\nCurve.PointAtSegmentLength (segmentLength: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "b31cebb357f44766b3831530f9a6098d",
      "Inputs": [
        {
          "Id": "287ce828b03e4bedbec2e212296e88b6",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f234118ddaf94e6ab4f0b7b22de9e20f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "ba28c49370b7418ba0b1b3578cc5f8dc",
      "Inputs": [
        {
          "Id": "8eaeb3468a45403584df5039e462cc1f",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4aa5ace6d9404dc2943b7b82eafe97ef",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe1516ca730f4fa989b1f93c04e73233",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "004306ae550b4e5c8b0af3f5fbe0ffb5",
      "Inputs": [
        {
          "Id": "ebff87f6289049fda956c1ce44107c5f",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "605335e854b14d3ab0d87af595b89699",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "4c1b6c6a2c454643befef01d9fb71f95",
      "Inputs": [
        {
          "Id": "c201de6195de4b95bc9926f9a1f34024",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "22170de84dda4035bdf36dd5477e71e3",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "784f07c63332424ebaa13e5de60e1948",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f2572a99e9994f5bb4693bd5298618a0",
      "Inputs": [
        {
          "Id": "ee143753c8774f33b4ca9f445713969a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd06d817e6364e00b28fab90bd0b2d33",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4874baf3d184d05a31ca95961da273c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "47335987899d439994421eba7a74c797",
      "Inputs": [
        {
          "Id": "20474ded0a924a16982d77afe5153b61",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "093dbfd91259421ba970643896aa51c2",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "bc4f8fdf91c6435999bbf37bc5ad92ee",
      "Inputs": [
        {
          "Id": "4e49dc219f7c45e88e2d402d72347644",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22f3167e1c2f407ea247e501e1f36835",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "163ac1579172434fb39176663d745cb8",
      "Inputs": [
        {
          "Id": "e6d771fb7f8941dcb932cd5ee46b5278",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af24d4c47f994a8daa06260ad66351fd",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a428ee50194461b95f3162e280a5112",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "96a0807bb6ad46cca2d6386ae498b88f",
      "Inputs": [
        {
          "Id": "7ec9f955f8e04445b73ddfe4d142ea0a",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a8584d33b1841f5ab6c0aa9d4898e2e",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "8e5e8907a4c34c0283b0cb37d3a4f563",
      "Inputs": [
        {
          "Id": "e61c059e65d744eca132d3538347e939",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85d99353232544a1b510be6b4a4e14fd",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c19b4d8af3fe4a0b8ef663f842415b30",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "9e9326de976c4bbc9723d9d7c3221025",
      "Inputs": [
        {
          "Id": "7d09c360c3514363810b31167739541d",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1549f93bdb564bb29c5907013b7be786",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0fec254392ec40ce8953c8400bfbff06",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "a75b1556b73b4a75a5bb57b951e2b125",
      "Inputs": [
        {
          "Id": "65bdc831770e48328ac582aee6e1b737",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b33e6c776bcd4781a161be79eb1e7874",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "2aff4ff0ffff415f976c6906a7d17e45",
      "Inputs": [
        {
          "Id": "754314d741ca4d199f424c8f47a4849b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "cc5625499b00404e9b7feb8a42667995",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f3e1ec4aed14224a0665c06558a9d22",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;\n1;\n3;\n0;",
      "Id": "a42765a8880e470f943f28531d7dbb3b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "532f2b4c3a2b4115ae1d8d33dec1babc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "760896dcc9754ce399fc19424f9d32d3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d43efa64c5c440f7b5cb0744b058628f",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15c2be195cf04ca5ad25b9808854bf1b",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b9bb6bd58c664a5d9ab3d7bd4172c3cc",
      "Inputs": [
        {
          "Id": "bb1f9655feb147aebdff8e1dd8118a42",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f53eae9b46d2422a9e4453e21250c61c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70ef932713034f0ea0d04daa4bc08f70",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "lijnlinks;",
      "Id": "11b38b9c07c742e1992ce053bceabf38",
      "Inputs": [
        {
          "Id": "96e5d89507d64ada9e9242cf8ac096c0",
          "Name": "lijnlinks",
          "Description": "lijnlinks",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2810430aa75e4e93b1ea24da37500462",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "8852f24ccbd3402fad2c81a52e05f2f3",
      "Inputs": [
        {
          "Id": "a19ba6460f19442395fb6615966f3ba4",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc1bc4cb00cb4c98a8b078333b3dc8a4",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1685e88f581f4c079d39755a4bbfabc0",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "1847ebb60d9e43dc8f7f8c9c10926769",
      "Inputs": [
        {
          "Id": "7d043caeb6604151888ab7dae2ea0a38",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a95b8e13857d4e91843ce67010d0c561",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "lijnenboven;",
      "Id": "9cfe01dc8d7745ba832988e15d3d54d3",
      "Inputs": [
        {
          "Id": "0990e1c3e18c42fbb2f5a05a3c57241a",
          "Name": "lijnenboven",
          "Description": "lijnenboven",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8fb3b7c4e1934262b686df7c13eff019",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "aa7de5b717b04acbaf36ff4765025b3e",
      "Inputs": [
        {
          "Id": "aba91ad9af8e4e1aa940a25a3b2045dc",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93cbc5f70f64496bb1912d4ab6bcf640",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e277f48de6064604a067c7327af82613",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "ddaf008676894e4d99bc47b38ea47240",
      "Inputs": [
        {
          "Id": "12e3747aabdd464faf2fbae19eafaf16",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6722a6a101f43e8880a7ca61ddf0f48",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "af633f2a0a23463fb036b9f10f9439fa",
      "Inputs": [
        {
          "Id": "0d25d7559df34524a0f15a3aae53a2b1",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "255a5a84c93d4112bf9eb4228ea9bf85",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8be3d7d8a26b4774ba2f4e35435565a3",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "3423f70998044dd481f0a312c8e2054e",
      "Inputs": [
        {
          "Id": "4272a799df4e43e6a5b8fda338282131",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "020d33d2a6b14195a794d7ecbdd99823",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a25c70a07a364c91bb7d44655f01c025",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "54af2ae98c654fe59b6ce1f0c6619010",
      "Inputs": [
        {
          "Id": "8ac9de55cc994ee99ec8d21ed89ae008",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74629009771446258df508f69e5a491f",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "33fdccd7a14d46e2aae08e9d5cff996c",
      "Inputs": [
        {
          "Id": "de7a8db0bd374c3dac7c7cfbf3249143",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f92552e139034101b6c35ac8ab38611e",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8212d0f5d4594e10a9f82c7bdbc96abb",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "allecellen;",
      "Id": "1e4d5c3f94ff45e0bcf66194ab68db99",
      "Inputs": [
        {
          "Id": "dc9d1be426984f14bffc9a983f9bfdca",
          "Name": "allecellen",
          "Description": "allecellen",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94744a04720b4426a1f02449ff36c872",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "511d35692b0a4e33ad9ecba3bf8b0fbd",
      "Inputs": [
        {
          "Id": "626078dffee0466d8225e667e619fafd",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0676554946f04e5ea17a0de58adcfc02",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "11a278183d884fc8b99b34ebe3f804be",
      "Inputs": [
        {
          "Id": "afe8535fa55d46ee85d8012e02fd588f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1441a5f14e14ee28f0869d444a7eb03",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c621fb56452447aae9770abad7f9c2f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "04dfb0e349df42a898ab687f5963cf30",
      "Inputs": [
        {
          "Id": "86e6467630e14dadb1495db7fc88d589",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7d1a87a67c74440986eb0e1bdd23a474",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d34a9f0b0664f43b597ab75807e95e2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ae3e4541a1e94f1b90167b0c2fbc4914",
      "Inputs": [
        {
          "Id": "627d4821188e428da1b4ed43aaa9f65c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7306ceaad2f4af59b5227c0b8ace89b",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb7620788f6241279dd542a178e39e49",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "8dfe3ad55ab94fbf998d3db6ae0f01ef",
      "Inputs": [
        {
          "Id": "a272fca694454a60851c507ce4c158b9",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56082e0b6c394132856ec4eac17166ba",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80d580c929624ace8fa430c864131439",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0992d23612734c109e932f3c1ee66618",
      "Inputs": [
        {
          "Id": "ba617602395c412e8bbb817de00f15d4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d5df9ca5fbd248faa1ee33d77ece638c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ed7c753e9104f31bfcd636c213efcbc",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "543f200726a64b7da177fc9ff17f8bf4",
      "Inputs": [
        {
          "Id": "ba45abffd58f42c7965b43528b5d2c18",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ae3fc0c494e4a3d9f7ed7be66b0ee91",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "e3e0955dd9ad461fb73b1be133087b07",
      "Inputs": [
        {
          "Id": "d986b8351b4f46e5bc7ed015e5abadd3",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "3683860b53a64ad9a51d188af2967755",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1473c176b34f4cce9ba6d393f465c309",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "5f5cc42869114c648da3d9694e6cd4f2",
      "Inputs": [
        {
          "Id": "e5ba261938bc493b851495cb12988355",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c0f25665991472b820fa9914afd4850",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "113487f0143e4b06b42be7154c36f6aa",
      "Inputs": [
        {
          "Id": "30955e603dcf46ca90218fea4cbdfc92",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1e6100620efe462a97a5195dab37b57f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5bfe23da404a423e821080d435971484",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "30119a5b9eab4028b8bc0cad463a03db",
      "Inputs": [
        {
          "Id": "65300f04a34d4e38a222b443cfee46f2",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1f4587329fb413886c4b2db97780be6",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9693b372a5d343949d5ba189e085f68e",
      "Inputs": [
        {
          "Id": "3cfcc81235b84a1b905050d92a576bcb",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "595bda5640e94309b772fba1f30018bc",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba7e9e687e224dd38b0cf455eb597476",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "0f71ea6bc57d4a5ba18cd56beb756f5b",
      "Inputs": [
        {
          "Id": "b62480e89a6f419d991538d0235aad13",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b811520e59c948469380aeeb7ff7103a",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "79231bc2986a44c390f41dc32045dc99",
      "Inputs": [
        {
          "Id": "d167a98e29e1458cb070056f4dcbe438",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c91dbf615cb463c83e854cead7a3329",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f186282903784d748b72cc4c10b0e658",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "5a242afb1467415d88a161890e2365df",
      "Inputs": [
        {
          "Id": "ee51b0f94d2842bf807282db1b88944c",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98dfb4f63d674804bf796682aec416a0",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e4d83314d3d34dcc9800683e57f84e2c",
      "Inputs": [
        {
          "Id": "a2690bffbb5e4bc39a9e5be148bd4475",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5491fc787b364669a5d92c3c3f60966a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b70b312e6e1d442e93fde5bdc086c6e4",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9607b03e34f642a6b52dc7bff8b72245",
      "Inputs": [
        {
          "Id": "3808b2bea5e54d119c44215e810fadfc",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "01206fb8858548bdadfcdec5e2a0abbb",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78678cc1d9ab4299b0eec0124b748c45",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "cc05cf1a232d45858b7f8a117bea8fd3",
      "Inputs": [
        {
          "Id": "f409f1a4cc8b4273ac91b2a276d5daac",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fa2e61ea09646be9ee4c4d66ee4d946",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eae8bde586754df98c464506910dcffb",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8279b7f3ab394aec9039c93ad56a2fc2",
      "Inputs": [
        {
          "Id": "301f4ce958bc4c0cbfd0b07e0ac0a1bb",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e482526e10324f72962cb6bd02ca36d4",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2471961b812b44e4804dfb2dda06d568",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "cc4ab8e803574d709081b0475fdd2a83",
      "Inputs": [
        {
          "Id": "043e9b2059584f6d9b955c6097e0af19",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "029b28c23f444d9b8139a2306fd015f5",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a8f749a83fc47f88188f99eb747a834",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2aac0fbca23b4e5780749eb8c1968377",
      "Inputs": [
        {
          "Id": "1bacf7b2c1fa41a69047764fe7826190",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "866a3d3d9add48fd844cc91ad53f98ce",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ab9dd24ce904df1874844e69e429b33",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "c292e8183c3e45a687fa6dbb22da08f2",
      "Inputs": [
        {
          "Id": "7d1ecc992419413bbb156067def5721d",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a61740bbc14d4bd5bdd29b88493d4564",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "f9a9039d4f324ac7985a071e2c1da819",
      "Inputs": [
        {
          "Id": "d0f483a432d840658bbf6d1f7536ca9a",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a99c13837a44b8da13bb1151444e95b",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "2cac93bb986a4ab9b7f71da4ca949036",
      "Inputs": [
        {
          "Id": "4937293cdf77409687eeaeb1c725a6fd",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68fd7bb03ca340cf93339db0c53f19ad",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "676fc94471804bdebf79a657f9511366",
      "Inputs": [
        {
          "Id": "6b644409624f48a298d04cad9d113e05",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76f15a18a0604bfa82bf66e2df57b1f6",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04da07d198774c908db147fd7940ee73",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59a7b0d3d1e44318898be71e102d1e4d",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10000;",
      "Id": "a7f3a2121907447981ce314d75c4440a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d71900467f9b48ba9e89a4565354dc71",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "1f574aadde824e028d159d12016829e4",
      "Inputs": [
        {
          "Id": "6b8417f97bda4de6a51589be6762e03c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d03920b5deb47a58cc1b1b25c29d78a",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bb5a1d808074532845db0f0dc9a010c",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47545d4a5bcb4b3297b617ac5612db2d",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8ac5b80639ac458699113b6789c19c48",
      "Inputs": [
        {
          "Id": "7ea46875ee0d4c90aa4caa4d8f228af1",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a1b0da679bc4c008f809b6bfa83c4c7",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81cd2514c786492ba88b193c8c456b66",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "346355ec89894a88aa5559b1a86ad4a3",
      "Inputs": [
        {
          "Id": "49c40fdf387249a1804c441ef7721961",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63d4e2a92ac9446f9fb569d42cca78c6",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13b57970b38c4c488c026726ff0e23ab",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "7aec9a33c9e84066bb802e547d501509",
      "Inputs": [
        {
          "Id": "af67f58c7b434a5fb7a542175a8bbce2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8f33d41fd174382babce15e1ad0c751",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "d3cd509b900c4ad7b81314bd4194fafd",
      "Inputs": [
        {
          "Id": "f36fdd1744e84c988058f0595ae6e88e",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ba9d66a65524c9689673551afd7562e",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfe2054847a1462d8395cb9f29bb8549",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "6c81965592714f6a8bd8c7da88e042ba",
      "Inputs": [
        {
          "Id": "d23a38a80f8f435e8d1221e5d57f5a51",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f56dc990c2346e4b2a224564678b27f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "730e97e243454746bf00da871acdc169",
      "Inputs": [
        {
          "Id": "ca387dd5944b406589a90e54e5ef9788",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1f8a02919a7345619c7662acf6825712",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51c67463dca7419bb680a4bbab1c8751",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "9806f1f8813949758aea6c2e0d7ffbfd",
      "Inputs": [
        {
          "Id": "80ff83d828a24e3eb42a7fa2527743c0",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c746dbf660ef449e9f1bf90f35b26646",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "8f3002e52d404090b385529164d1876b",
      "Inputs": [
        {
          "Id": "57f94c8f560246d18fb41d31f9502fbc",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92a923f7fd4040d39236e0d2f04103f6",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "a2944eea4bcc4e90ba1162179de86d38",
      "Inputs": [
        {
          "Id": "3c8959714f1149f4844659439f9d71f4",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8ef65f5100b4d97b0477761b3adf82f",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5d4d42d812e4450b76f05faa25a4f98",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c81bc2910ee14dc183a93d576a2a6f88",
      "Inputs": [
        {
          "Id": "cfeb494a02d8468ca27c70fd0575dc60",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "278a80ad2b2944aa8ee8995beb46b787",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "9f351cc733aa4f23b4d0c2e33f738c5a",
      "Inputs": [
        {
          "Id": "cab12f7a8ba24297827c575479a5ce47",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05c9744089f64364a1dd5234313efda9",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d55536e797ac4a3688cd96d63a41886e",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "c9b3d425d9ff4d71941a77e65b5da441",
      "Inputs": [
        {
          "Id": "be30654a27e5438eb13346514a298464",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4049d9339cf04d358d414161574c9163",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "e2d1a8451df84a8793a07598fe30b45d",
      "Inputs": [
        {
          "Id": "704940ce7e8a43edae6d51041b2a8470",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85cf68a0342c45c5af41f6caf03c54ab",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1067ad2d8014c1b8f086ba0e105d010",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "6ade09ad61b64f45add6936c896c0745",
      "Inputs": [
        {
          "Id": "4d4cfe08ef5645dd8e3c123d61cc4248",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "fa64e08f14b94c90afcdd5297682a7b0",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bdf8ef4aa394d60bd95cb705fe5e964",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "1b65f1adcfad4912abb9ab6936fc6ae4",
      "Inputs": [
        {
          "Id": "7ee0a3361b77482f85de60aef93323d4",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11dfb1020d83406c86fbd332ffdc2b46",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "768919758e8c4333b082925ace364469",
      "Inputs": [
        {
          "Id": "0a7d65b856ef4dbc818879fd6dae242a",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6a062ed575b54306aaa87fbedbddbf65",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28435dd5b79c4338a5fba3f8780cf189",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "592cff2d825c45318f252f2338c609fd",
      "Inputs": [
        {
          "Id": "27836dcda52c4b56b0aee09c887363a9",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ef981e3ea43442aaec89d6810df088b",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29c287d2d3fc46b5baeaf274feb8b222",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "a88f9ce4e08e4772844061717c5e3ee2",
      "Inputs": [
        {
          "Id": "403b181a701f405696fa9bdb1364ecf5",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df76638881c940c18d22b5e1654633cd",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c998fee05e6497790d1c7a5fb824e98",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "f14c52b9c1df4fe99ceac28519f99c34",
      "Inputs": [
        {
          "Id": "ceb08d40b18c455c872d90046e012768",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a806118fa94943eaa3cbf9d687a0c877",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c1eb530841a4251896798d82630d4fe",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Id": "ed620258bb1a483186d77c0bd272c862",
      "Inputs": [
        {
          "Id": "478b3e05a8bc476f824216f195dd8240",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0cfb695a7154db198195d93a89878c4",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36540a8a323a44708f44cae939379387",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "466e28ff767f478781684d387ccc717f",
      "Inputs": [
        {
          "Id": "98cb4dabde234f42a796f50db4fec057",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f0fc7dd45b54b3195fd4e9c2e26bb7d",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca57bf71d228490a8e6ca68d5acbe224",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Id": "6faba3f145d340cfba8bbf17a88508a9",
      "Inputs": [
        {
          "Id": "770debf96aed4cb8a48dbe86cd0d3436",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27b928beb2e242f5a361f20e91447c1a",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fbd87943d3441ecbac82fd342ffc2ff",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "570b072dfa5d47c984fc0dcf67d32332",
      "Inputs": [
        {
          "Id": "2185339b7c104d768240fab13bd890cf",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b4ac88d836e455096018fe598d7ce25",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f21becea31bb4fe48e15367404ccd84c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "479d967e83804a12b90cefc5754bfd5e",
      "Inputs": [
        {
          "Id": "0c5b0cb3b2374bfe82f56048c234ed6a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0743a87e9c9643f49c61a1f336e63c20",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41b59278780d45bfa5d22fdc25c50910",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "ce57d2d4193147f1b6314ee64dfc3356",
      "Inputs": [
        {
          "Id": "686dc495442c469f8818a8f9fd32f861",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43d785da63034c30ab490d1d07d4a38f",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6181aef165444daba9e9f47b4d34421",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "806e7ef4d48b4c5baabd9c4967a82da3",
      "Inputs": [
        {
          "Id": "468cd146baec46fc9dc9d3a20941e8ee",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b33e6aed7b7492b9b50f7579e165cf3",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9b88ca9198764ab49f6d23fb0e91ec3c",
      "Inputs": [
        {
          "Id": "80cd54324bc04fefa559dc27f25e8343",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "47880ed3c9a74416949276db18ca7e56",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7998dd60ab67406a8edf917fa3fb2671",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "c0e60e0d29f84442a22ebfe3d012b6e2",
      "Inputs": [
        {
          "Id": "6d83daf5d2c04025904ff29230030936",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27953b7019cb4532bb2742e8c24c132d",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf097cc6f79144a3814b3fba304fdf0f",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "ac7623250ad84e61a5380527f6275cc6",
      "Inputs": [
        {
          "Id": "4a7029c418064951b0cc05c4e6e987c5",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f205eed3ef31435c8ab75a8a6d969df6",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12d04283b2814e529c47a98b28f6a896",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "01ac341a919148ee8b75fadc3452fd54",
      "Inputs": [
        {
          "Id": "69c2512153be4d90af9374d6345238a4",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "faac897124aa4ad09f871b7a2a3053f3",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "dd20b7ddd1b24d4aa2c8d32ae8ff2b57",
      "Inputs": [
        {
          "Id": "2ae2daf6b49c4be4875c06889fa3e559",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c390a91ad5d0462b9f28096f4c0ff830",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c233a25475df4f9cbf098c4e199e07dc",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "96283d1d9b7144b98ee6e020f4ad4afa",
      "Inputs": [
        {
          "Id": "5991ac6f91874087a8cbec52e756946c",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94fab97249eb4f31afc9340012d7bd9f",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b24d37c627a4e788638547b384f91a9",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "57dbd372bcca4d8a8ec276742d95b78c",
      "Inputs": [
        {
          "Id": "d1b0a0e6b8ea4a368dcfba3c9b1835c7",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed8f37ddbaff4cdcb04350bb54b11628",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Geometry.Intersection.GeometrySplit@Autodesk.DesignScript.Geometry.Surface,Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "6295cd04273a4568851f135c5a8aaab0",
      "Inputs": [
        {
          "Id": "d7012250aef7469e8ea40b9ac9890fb6",
          "Name": "geometry",
          "Description": "Geometry to Cut\n\nSurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9eb87981b8064cce9c9e2e4c3587d10b",
          "Name": "cutting",
          "Description": "List of Cutting Objects\n\nGeometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "531d6ff155e34c5a809daca22ca9d640",
          "Name": "SplitGeometry",
          "Description": "Split geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Advanced Geometry Splitting\n\nIntersection.GeometrySplit (geometry: Surface, cutting: Geometry[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "946827a38874418185eb3c3503c1a251",
      "Inputs": [
        {
          "Id": "755b97d5778c49ab88bb36a0d9227d29",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "76a5c01ac9dc4f8090365c095acd9ad4",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb86d25d318d4e0e9d57ad52faca46b9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "578c4bc1812140aca02122adfc43e410",
      "Inputs": [
        {
          "Id": "084e7a5b827a4b899585bc6e24f70408",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91ed79e62e0e48f5ad396bb97b9c57e4",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c9e26208af44c7785a51f45ecb4299b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "2b52be6b4dcf4ed99787f221aa87e2e9",
      "Inputs": [
        {
          "Id": "2277b28fb4f24030a3904751bd550896",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04196b6b79c94343a040a98f28648075",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "a26eef1ce2f54e69936507649fd69daa",
      "Inputs": [
        {
          "Id": "7962c7fd2d3b400082e628b0a94b59d3",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e4df61565224980bb14c20634d0a8b2",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "988842b131ae4c538eabd26bfb998297",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "surfaces;",
      "Id": "7766f07b125646979af299758757f63d",
      "Inputs": [
        {
          "Id": "9ca179b78afb48ccbcd16894fc445206",
          "Name": "surfaces",
          "Description": "surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "598eea08cae94ae7958f9a3c85127c4b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "6fa50e4bf47841c08d5b6f381f78008c",
      "Inputs": [
        {
          "Id": "a79ddc19d58b44f19e076a7ddd16a07f",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c9f69c3e6bd4e8cb6bf57acfa8f8244",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28cde05cc0e5474abef0ef9d682184c3",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "21a114b3266344d4b918274c6428fadc",
      "Inputs": [
        {
          "Id": "0b34357e6538402a9872d6949ebdad89",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b76e5143562a4d63a20a47cb596a4a56",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d19855c3cc44b16909639a44fb9ab5c",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0456f3a6c1034a119684371ffce4d311",
      "Inputs": [
        {
          "Id": "c9311ac110f84d6ca3db007e236f2e1f",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc727a22a9cb490a9b09f5bfac8f2f04",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "4ab4db12aca34e5dbea117186a4ef2cb",
      "Inputs": [
        {
          "Id": "37848ae02500415e9ea58c1aeed341ee",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81ad76c02991400fbd198a7ca8fa272b",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "linkerlijn;\nrechterlijn;\nonderlijn;\nbovelijn;",
      "Id": "9c98055fcd0e481ea520ae57b702cf57",
      "Inputs": [
        {
          "Id": "6ea770e7e974432c9155a2d2bddd1e79",
          "Name": "linkerlijn",
          "Description": "linkerlijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f89e88b8a47432e8657a970d3716592",
          "Name": "rechterlijn",
          "Description": "rechterlijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84038c9db9f043329c58453afe2405f8",
          "Name": "onderlijn",
          "Description": "onderlijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9547bf5675844f4cb2963f7c894920ab",
          "Name": "bovelijn",
          "Description": "bovelijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3ac60cd1d1641faa5c126342ebbcefb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d652476c11f4c8e8f271ca523e2a1ef",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "594b8c80129f4d46b994c865423cf2da",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2d710c358e845259c773f7248a04d8b",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "89ddc9dc69ee4cbeb377e6ef0a555b57",
      "Inputs": [
        {
          "Id": "3cc94986df8744929264a46cccffd4d4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8341ff20dcb6455e8f96d99101c61c12",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84e525b760344592a08267d8b12f7fca",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a4f9965e43584075ab535f285b721862",
      "Inputs": [
        {
          "Id": "cb52d082a4a54da196a800c30ec8c96f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7112313c8684c81a21c884364f930f9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c941569fa124068a18bf88d5727f47e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "fc735e487a464219bf70b6096407a503",
      "Inputs": [
        {
          "Id": "5d31319311b645a09fd083925f796b1e",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e45d80abe70c417f82f22c0506b16f34",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "552972b546934e8d91c8f16402b4f895",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb13dbda99bd41adb3c7352adb74dbd3",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "232ded1beacd45f3b1fa1863a12b91a5",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8fb44fc2dd7746b49dced82917199e0b",
      "Inputs": [
        {
          "Id": "edf63c4e908d48138cd50882ba3d0475",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "21cbd1dbe8db47ed9ce261479e692fd9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34100dc4817d4333bb3115855f4891cc",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a7d6a5fc54c94f408956893ddbe84bb2",
      "Inputs": [
        {
          "Id": "e3ce0138ea174e85882ae4a4352d1af0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fdb0cbecaf641e1a58e15ae1ef88f0e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30b1e40639d447a991fecb641c8d01da",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "823dedbdeabf436b8b617105608b470c",
      "Inputs": [
        {
          "Id": "df45f14527734713bd31b6da54c4e9e6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "23c7cceca2b54354a03954d0cd858840",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4acdb6f6cfc47768b5bb77eb2b7fea5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0daec23e7b744649bea94c039ca2853a",
      "Inputs": [
        {
          "Id": "7d0cea1a1eb54381844817e41aa188b0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ed630294915451daa404e41616a0529",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa5ec290d7f34259a6d5823ad8477e90",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3a6fa6622f774487b51d252c9dafa320",
      "Inputs": [
        {
          "Id": "654d60a0e63f41bc9103e58809aed195",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a86bef90227042bfb98aebb19d965b8e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bbf2718938524ff9b1e4c03dd91efc7b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "381da0d1e4654c6eb1b0cb331af24e4f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d544f527bddc4880809a9222da324f3e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c87ac979e65c4f4cbdf270a756e968e5",
      "Inputs": [
        {
          "Id": "9054d199f81c4694ad01d8b3d6a91d29",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fbda3b8950d4ec4a3e3b0c8adc593e5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "7c2e383de5bb422c8cc3946c168700aa",
      "Inputs": [
        {
          "Id": "de03308a1809491d92f5b50eb696d1ca",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eba876246dec47e19cc5d5d47cbda671",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a69afabdf014aa49971922e7e40fa9d",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "_list = IN[0]\r\nrValues = IN[1]\r\niValues = IN[2]\r\nif len(iValues) > 1 and len(rValues) == 1:\r\n\trValues = [rValues[0]] * len(iValues)\r\nif len(iValues) > 0:\r\n\tfor (index, value) in zip(iValues, rValues):\r\n\t\t_list[index] = value\r\nOUT = _list",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d792de49d0624cd1aadfacb1a86db3d9",
      "Inputs": [
        {
          "Id": "b4e33242014e4bfb8fb2d1bfd84e6898",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a4468e0a897403db7adce11260184de",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "471eb5ed526c44dbbc575078b4f02c9d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10245a16dee64dcebbdd8340e7ba2397",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "_list = IN[0]\r\nrValues = IN[1]\r\niValues = IN[2]\r\nif len(iValues) > 1 and len(rValues) == 1:\r\n\trValues = [rValues[0]] * len(iValues)\r\nif len(iValues) > 0:\r\n\tfor (index, value) in zip(iValues, rValues):\r\n\t\t_list[index] = value\r\nOUT = _list",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "4c632c831603491f8643854b12598e86",
      "Inputs": [
        {
          "Id": "c90fdd2969de4332874dd1ad4b350e55",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce689309550d45bdb806aaf1764a7274",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18edcd8872334090a6e89010371f5ecf",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d408437ccfd947bb9ed1b4adeeefd469",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "231c4994d51a4dac9dd474752c282eed",
      "Inputs": [
        {
          "Id": "a456a76c40f9485f829b8447b6f6c836",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcaa2916ae7e45aa9fd1942f51105bd7",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a4c3b54cf1e45aea90fedbb62e216a9",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "646ac919488a4ef3b6521d57f211522f",
      "Inputs": [
        {
          "Id": "344bb41bdbf84991aedd00e04529f7d0",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b3c5d9c65424c668284fa2b2cc2c841",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "293fddf74aa74f529c512b6af28d02f8",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "1101fb9fdaf24c8b99feb385b1401626",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c31ae9e7200b48658a5a84047bef1cf4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "945980a7c82d49949f1113cd9201b4ac",
      "Inputs": [
        {
          "Id": "ba08982e2e1b4a43b1deccc3e28b4fb6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a03c7cc8cf6041118b6fad00e2dc6923",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9bda8a99d8c4857a3e7e00d670f75b0",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "2358c7fc1af048cd908ebfab7ecb05df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b169d85d54e44d01b19fd00264e0fae0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7e51a5a6ade74238aa1888a21df17fec",
      "Inputs": [
        {
          "Id": "808e1883020249c5835c7afa7fe61011",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb281bd1433b4a169ef88094a1e09586",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a476fa49ded4f4a8a769144bb94c4de",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "236da7d52fc54d7c9eeda27a3e2c142b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2489e29a4eb4482292abf813a6a4a1d8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "d875420d2d58414d87d2b8ef65354017",
      "Inputs": [
        {
          "Id": "9b5224ae24be43f983e4adda559a0f34",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a45f8c756de425db59bc0e7bb114e9f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "4e70b83851614b11a9b432aeae526719",
      "Inputs": [
        {
          "Id": "cd8fe688f1e14769a7395098a953ca19",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9355b6e681774b3da79f0b5d5c0bea45",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d96b844b37154098b4e6d699bd2a00c8",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "82319ad83d3c4dd4ae0bb094fe091257",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c490cccb39bc414b9165012878551233",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "b557c77fb6b546c3bf05d9e8bf3ff0e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cc43378ff29d4ffb91b8ff99ed1c4de5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "e02eade58cdf46db9d809ccf83554d8d",
      "Inputs": [
        {
          "Id": "855c6129d86c4d41827b5013163df542",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "164c61e91060475283717b2abb6698b0",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7cee4fcb571840c792b53fbbaeb8368f",
      "Inputs": [
        {
          "Id": "634465d25612441cbde4335984ca2bef",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0b3e197823648608d2870cf101fb327",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f042143af9c4343b5e42717820c5500",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "979bdc316c4c4ed3ac61b74bedd2d90a",
      "Inputs": [
        {
          "Id": "f39d1eab9a9149998970036ee76093c7",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5af047377c2440e28138e3a75b414c5b",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b00ac5f206d44a7b8d9b8c8c8c2cfd69",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "c80a110b94a64c28b82ad21e9d4f3073",
      "Inputs": [
        {
          "Id": "d2a2b6166de64019ba5225f5dd2daae9",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a2d156d35185499b918c994865eab192",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebfe02bf995f491dabd3eb3734b37b85",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "9586089e6f17403e871771cb8b980cf8",
      "Inputs": [
        {
          "Id": "ea8547375feb4ff5a29062409c740f4f",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f103b15b4a53497d9bb542261bb04593",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "96962ad669ea48b0b5cf69737610d104",
      "Inputs": [
        {
          "Id": "5d51a5b7122f4101b322c2a80e88b3db",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5801ca35d9714762ba3408e1dfeaff04",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a09d8e7112949a9839a6aede18924d5",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "8e6276584f5544f796405808e20b3b9d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e6d26ab7d560468e8dbca959c1ba8f2e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "78ad9399044d4dc0a89eb29b17700e36",
      "Inputs": [
        {
          "Id": "90e8fd4655c84928a619b449ab0f5ad8",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9432d8f9cee142ecb980d4a34173c6c6",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "4856bda51cdf4fcbb4c294b8eb747ff5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5c4968cdeffb4db1ae12281fa5aaf3e2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "447d05c00ab948e395b7cf951626fb78",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ee5504001716467f9728244cee98a166",
      "Inputs": [
        {
          "Id": "239dd46aa38646ee8d85cbc35127eb8c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9618b61afcc9437ab0a3ab5a770553c5",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69a2efb685954c57b592014493634764",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e9dc9b5543f3439eaf8883f2ea4478a9",
      "Inputs": [
        {
          "Id": "eba17498c2c4499f9650540fe9b14e45",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd5b520902324c70bbf3a3f8e2eba994",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9a507fda607477c9eb53a6da7ec090e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3b785069fd34440eba82cd80f7a6486a",
      "Inputs": [
        {
          "Id": "031186e734da43b29b24216d10d513b1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ba74567dfb884d40bcd1057ba3d07235",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "833286d548bb4896aee8885bc5ffe34f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "247ebd7fd8354c2aa4040d10a3c2f9aa",
      "Inputs": [
        {
          "Id": "6c8d65c172644bd2a25ca7f6ebf67145",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d44b58efdfa641e493b32dd3b6035f5e",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "2d3033f427b747729e242d44cb8b614b",
      "Inputs": [
        {
          "Id": "8a5e3d46242643b3bd4c182626161b8b",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3f875bda45a4321a02703002fb3b522",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cb5cde819514a429b0d4a943ccc3ffe",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "ede83ee17fe54f8fad8037fed3bfa90e",
      "Inputs": [
        {
          "Id": "8a559164b54b44d0851bc27a6ce2a374",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f276a799da74503aed687af0223a2a7",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b2e92c79b9b44141ab2a3b53f574c11c",
      "Inputs": [
        {
          "Id": "f6db5248003f42449cb2923c378c3bd6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "32c079880059459b970aec05c9d981c2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea03429c7c8f4714a19a4a2ed947c26b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "426d1ed233b94aecb23f55a5a0158759",
      "Inputs": [
        {
          "Id": "e6ce1ed7d87b4983a853d031d6a6b81c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f3673bdd2ae4e6c92c6cc3be7c8a1e1",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a99863191b14692b9c8319c59375eab",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "da6c166538234da89990967cdc3350cd",
      "Inputs": [
        {
          "Id": "bca65e7f2aec4149be23a0d7a33361a7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "137dc4b4b59f41298c7574f3322fe4a9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9043ed9f4fcd49a092b767ff57b3bdde",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "0bb88797223d414eb5ffbc084440219d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e7828aa648da46b58c948bf790c59d25",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "5c01edfbfc704e3f8bcc144fe209d65e",
      "Inputs": [
        {
          "Id": "f6b20b06c65f46b7a61c13ac5e99a226",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "622fbcd8cabc46e8b413fffe58d9d312",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a45aa8ab724940528cd9c3a79a106a80",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78fb37a83dd145e1ac190f9d4bdec18b",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "dfa1f3d1a4d348f09179e2a42856154a",
      "Inputs": [
        {
          "Id": "793a984b6161439aa840c9164c2e7c92",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a8d40d40ffc48c48aa89a1fc3518674",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "394315c2dd7b4525adde59a6e4a783c1",
      "Inputs": [
        {
          "Id": "312bb7afdc11476e94a3c71f5cd1446d",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "67fdb325edcd428f8333f444922fea80",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a7ed017d9ba48938dbb8580e1bb22b9",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"line\";",
      "Id": "9ab6f15e6d77453483e5ad9262003d9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "22b788feeaee4b5ab2258d8523e007b8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "05d97713e1d149a688fd2fcdd1bf017b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d65cca58355473e9990afdb624473d9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "581d282db07c458597a4ee481c895b80",
      "Inputs": [
        {
          "Id": "9e131b58c69e422ea2ff7e29bb465944",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97093d1403284939ad249a4af48ace12",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74a4b7d6c58046289077ee134c130352",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "73eef8ed1378447ca8d26b7bbee6bdca",
      "Inputs": [
        {
          "Id": "f834ebb5e70f43978411f4c4092f534f",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6844e364bed547778ffbbc3489e13f13",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6822a5948013438ea4aac099ab88c85a",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "78d48edc13f24c4aaeb9561c9451033d",
      "Inputs": [
        {
          "Id": "196afe06aa974bd29cd7ed2a8b79c740",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63b102a9299f410c842030adc1b9b605",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f951a4eec1e437dab76b86846a54161",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "vector_linksrechts;\nvector_onderboven;",
      "Id": "4a1cfda38dd34b69be8af718a57c49b8",
      "Inputs": [
        {
          "Id": "dbdbed714caa48b291f525369656a6ca",
          "Name": "vector_linksrechts",
          "Description": "vector_linksrechts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48d46faaf2024f49a6bceb548e9468f1",
          "Name": "vector_onderboven",
          "Description": "vector_onderboven",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8facb6f867ab454dbe7e58738b7a1a81",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4905e8e0ebb34acf97934a94f7a6725b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "e5ac0471ee4845198366065192ed417c",
      "Inputs": [
        {
          "Id": "31095ba383934aeea2f1f80475e6c3c8",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cad1df14281d4f57b5f89ef74ba9efc6",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e065716666794f77a28aab68fb23ae47",
      "Inputs": [
        {
          "Id": "bbba524f1f2748e9bb8ddc6d2b7b9692",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6211899987824fdebc02434109b41788",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24956c71ca4e44f888abc583459dc1ee",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "344b3e5b1bd1483da9a0ac8f6d602e92",
      "Inputs": [
        {
          "Id": "4d71a934ef5f495587f88e242c144f70",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "43c8a684689f4a3c91563331c8414f1c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "012f7f8103cf4f0b92d4b5ade9e14234",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "48843d6bd9d04e8f86432def204f5ae8",
      "Inputs": [
        {
          "Id": "a2009d9ce7544ecfa48459930d851ffc",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af3c40e463fd4ecba6792d8cf30ba8fa",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6a255c6e0294abc8189d560c692dc12",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bdcc9542dd1d497bb97f22c203485d33",
      "Inputs": [
        {
          "Id": "378150a4b5444493939c19fce79398d3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "652e0d30709942b9bf9e31027197c1f7",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "177980f6ab284b6690e7d3393e5fefaa",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3980307ef3a9407f84070e456f63b3eb",
      "Inputs": [
        {
          "Id": "10c23eeff5de431bb72043b5995298a6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8c6446acd103424193495aed84374a94",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3e3192e0a51437db0cabd3ac45d9b03",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "05ff947c5868496fb666c9dbaf61656a",
      "Inputs": [
        {
          "Id": "b9f918c19e5c49f59461e710099aa715",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d35dbcd47add4feea5cbb1d5c893b76b",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02b3b3089bfb4d9a8ebcfdc3eb914570",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10000;",
      "Id": "143d056f62a843a9a23279ed0aa186fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2dcda15ebf9402b8b5851eb4c468db9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "e6eec743ae2d48a2b696354ad374aba8",
      "Inputs": [
        {
          "Id": "cd25ad8155db423890b60bc98146c129",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b69bbe354d01493da1bcfac3807cebc6",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d415a221fb65497182ed8d5acf1edda5",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "598b8bfb3ce740f5a1c1ed75e03f2f44",
      "Inputs": [
        {
          "Id": "d2bec92ff18f4327a01a23c112974ea8",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcb90d7bed9f40308d4cd403fae791af",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "78acf781e7d441a38d6cf29614cf772e",
      "Inputs": [
        {
          "Id": "d6b8efd0081d489488ae60d7d64fa260",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f5249f63867b4e16b06b299dd868c68c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5abc866ac0214d79a343e17b0b022288",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "fdffcfbd68e6453da2f2d81b4080a663",
      "Inputs": [
        {
          "Id": "942f13c8e2d14f5fb0b34195eb941f48",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bb0740e67f24c228c6d1d63c6b72695",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48629ae4bcec405ba99308a6191d7552",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "035d5686fd1d4e9da0761910efe5545d",
      "Inputs": [
        {
          "Id": "1cef1e3dfe1b4cd59da393aaa2a1394f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87c4c27700a441c0b6cd3b4285420f03",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d3b086466eec44979dda7bf4e937ce73",
      "Inputs": [
        {
          "Id": "5462c707d8b34d94865651f47aa8dd55",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f56781cf6a0e4495897e60044e5c55ab",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4402356fdcb54f96bf92f4698cae9f41",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "23b74485d0b745199b8ed1d827aacccd",
      "Inputs": [
        {
          "Id": "2b2fe9801c744dd2819281ec10614664",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0c76f65010e409ea66664a4caab36b7",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "f58ae06d5dda4cc0858836aa1962a385",
      "Inputs": [
        {
          "Id": "a2428da2cc74435688428760e9021864",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "834619a31d65493bbb132f5077052927",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "d68886c2d4d44e2788d38b1eeda53e10",
      "Inputs": [
        {
          "Id": "c5d01b6074f7488d80c0eeb82b307a91",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "daeb9123891e4af08feefbf844d638d8",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d54453ed00c941dcbcf8f3941aa05fef",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5a98856223c04f52865277a227aa6f5b",
      "Inputs": [
        {
          "Id": "0de71ae678c94a2da1eff8689b66f17a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "305a438afa05446f9c250816a2557d96",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52f736ab0d4f43169bfcf785fd31a63d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "37a94ad58322462083bb6f623288850a",
      "Inputs": [
        {
          "Id": "1d839ef6a40f432b8ba70b6ffb3d8c89",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcdc759e4bdf4eda86388413db3ec1be",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfd55fcbc27c4903a3606cadb07e1074",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "a8de750ee99f40a48377dee9b1e65e9b",
      "Inputs": [
        {
          "Id": "3ff581aefbe840ceb8cf95a767d617fa",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e73c187b076647f9bc6f9f5a84481c21",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d5d4e89ba264b6b8eee25d3340a2b85",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "6a46498712f3417a934c518a94da6d2e",
      "Inputs": [
        {
          "Id": "d1cf6e85f1ef4284b0aeaeed1020a411",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87e5ad90db02492fba97da270b02322e",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec4145e322244894b73a6a7aa5953414",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "1785fa4b23cb4c639d0813dc56319f20",
      "Inputs": [
        {
          "Id": "640c771d51b844059d4b31d137b8c464",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e9d5d7ee1a94c6bbc2da65c6de0210b",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abbbee53bbc146aca52b8881c40fbbf4",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "654e67bdd57e41babfcd050c5367f4b9",
      "Inputs": [
        {
          "Id": "2d461ce5751f45b6a716aa031399919c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef6a07e102d4425482089dbda7ca9061",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e121c546e574245b418815a32efcae1",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cb5532d248b4e019d0a3b4680f1dad9",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "f40f9939a9284eb482e9d5e6247fa24e",
      "Inputs": [
        {
          "Id": "52cc21cd67b14c91a69e0631e4f51271",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89114ca7de0d4a98aa54dcc20f8603f6",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb877c64f81d48d882156226322df47a",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "9127aa3f3b814c82afe66ba65b85684b",
      "Inputs": [
        {
          "Id": "30c388216ff0489aa221805ce83b9de1",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3641b5082f649b0b8289964b20c436a",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81169f88c1b640798258d51de07b398a",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "401efb31c2774e32ae1588570a71b3d1",
      "Inputs": [
        {
          "Id": "2139602b9637496d88b5c93608d39292",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45f5f9a1826c4a7da7cfcfe3a5ed9824",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc97a9e946094e40bebde09697435d0a",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92afda4ef98342cf91c043600dd14d86",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "72715426b0f84e54846762e28b83d13a",
      "Inputs": [
        {
          "Id": "85fce47a18cb47b799ff5c12d183bebf",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6eb6589c64ee4b2a8879f628528c2872",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7d2829f30c7427cb2c971941cbe6dc6",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Id": "96704159d6d54f5785751fc5d0fc2195",
      "Inputs": [
        {
          "Id": "1b41020c7d9c4f9cb26f7c58c63d503a",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a4d6c68903f4425bec0025696268d8b",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c37791d897843cdb45cc9f65533cb5e",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1361e92fb339477c84df83d13996e4d5",
      "Inputs": [
        {
          "Id": "87dc2b43453f4f189f19f79ec6bf0018",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62a9e00b530b489392ac0fbdf44760c5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25f4c2124d9148c4b0f21bc2ce6bbbfb",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d9030a764d474e338cd0c6e588071758",
      "Inputs": [
        {
          "Id": "a197a6a7356a4a7cb59c5496d9004c29",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a753bf24414488e8c3412135a20615d",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d191f25ee6d54b5c87f7877c9fb90514",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "01b7c9b261b24aa69b506585469f831e",
      "Inputs": [
        {
          "Id": "4d1e843e2add4f818399c131c2b2a8ab",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf8a6a4890ca43aaa52f8cbd761e6920",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "589a7e0ebbe548558eecd22894e4a4e8",
      "Inputs": [
        {
          "Id": "6598dd0e341146258cfd0401dd2e4bbb",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "94fb9db915fb49699cff6c543493220f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d79a32bd2cc4e819e1eeefe7733d57a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "4a13550fba024ce4895a6a420acf7f6a",
      "Inputs": [
        {
          "Id": "369716d84d784d8bbe9853a3d1a5db80",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "462bd0082cf94ed4a6518fe0bf0a4c15",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcdd3bd33b664f9994814be0f8559d9f",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Id": "7c2d21dbb38f4866a753d9f0a333c79f",
      "Inputs": [
        {
          "Id": "29e4e549da444ad7a10167756d32bc86",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a15e99bc5faa4cbaab87c47072cef706",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a454c39051c47a59447dbae2faf791f",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9a7158ef1fab47faa48df5fb8968331b",
      "Inputs": [
        {
          "Id": "1b97736035994cd8951daf6b9425e0fa",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf725630c97d4083af5f811afb15e9a1",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "feaa4a53328340b0a8738371524e174c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "6adeed88b80648529ac43dd8e02555f2",
      "Inputs": [
        {
          "Id": "81b6b23bfb964217ae00ee9c9d370362",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fca114260aa54b40a23930b3c3840347",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f19afa3cfe6424aa5e3f49356ca68b3",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "72b93f6011e44ec3a665cc2d49090dde",
      "Inputs": [
        {
          "Id": "c8a5eb9ef8704b85897db2d588e85830",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4b27294095e4338ad5bbe03b8f1712f",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a132f8299ee747d7b35370b8b5ecfd78",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "fcc5c251d4d946e2bf3789bc864bdc1b",
      "Inputs": [
        {
          "Id": "2abd1fb5cc834be0872928c617513608",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99f5a7a3bc9e45a081910d618f165424",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3b3cd45b32147698cae9d384367b057",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "18e7524319864d2f95e88836af7942b1",
      "Inputs": [
        {
          "Id": "19505f38d48e44f69270eb9f932a83a2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5a9e43b1720c48eabcb0ccfdf97da45c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff1a05977cc4417b8c2320e311605507",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "c2f243a742734fbb8cc21498bfc0c90d",
      "Inputs": [
        {
          "Id": "20eced836f874c11a7d261f50d750ec5",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2ce694f5aeb4e04a4cafb1efdd89983",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c136dffe0fff420a945d7a195f276cbe",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1c1856c5c4b041d882e4cad725d9a057",
      "Inputs": [
        {
          "Id": "c4a8cf4e8ab04e208e0c90249a534a83",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "abbeeb32be5a4ee2855fbc6f570f23dd",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04e834c59dbf477a847fae507e716429",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "830db1b6f04c4f28a0f9568394467a77",
      "Inputs": [
        {
          "Id": "fd58c4f1b4b0407c9362bf2d99558108",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "676b58a892fb446293516e63af20cd7c",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Geometry.Intersection.GeometrySplit@Autodesk.DesignScript.Geometry.Surface,Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "d00cc8c6eeb243ec8130db08d6baf1ab",
      "Inputs": [
        {
          "Id": "9ff0f2244b7f4343a4dc7f3931919dc8",
          "Name": "geometry",
          "Description": "Geometry to Cut\n\nSurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e97becadca744d4ab2269ee1c33959de",
          "Name": "cutting",
          "Description": "List of Cutting Objects\n\nGeometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8a9efad38544946987038d617d43d71",
          "Name": "SplitGeometry",
          "Description": "Split geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Advanced Geometry Splitting\n\nIntersection.GeometrySplit (geometry: Surface, cutting: Geometry[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7e218ee50a1142438a34a4a1d9df62d0",
      "Inputs": [
        {
          "Id": "9999725f17b04fafad64f7bcd571e478",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "674114bbb37b489cac8b17d284d6d6dc",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afdad843603e4dbdb5e5f2732e7998c1",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "16052f43be6749079a0d4f6286f5e358",
      "Inputs": [
        {
          "Id": "9d49a904585145ed8dc1dd24b85dfe8e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddbdae0b7a41494ca0c9622987fbc07b",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "00148f95a0454db1844c56b1f795a43d",
      "Inputs": [
        {
          "Id": "89722a22b8d14368acacddf53c1ca1fa",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1f0d38ed26d4459a631a6c4b82ea6f5",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8ea0d0be5f6478e9412a73e37be642f",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bae5b1f07a5441f5b1734796435d0885",
      "Inputs": [
        {
          "Id": "58f0cb0514f344ad887b6828382a805e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "fdf805b091e545dd8e63c75230249476",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f09280f6d8b94750b70f272648fdc590",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "surfaces;",
      "Id": "d999e55b81464db0abdacb1909cd7ccc",
      "Inputs": [
        {
          "Id": "8dd23964148b4f8683c36fd243a6a40d",
          "Name": "surfaces",
          "Description": "surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "662c41a16f7340179c6e8d0519512d43",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "d444247bd50e4907b1ecce6f5641e7ef",
      "Inputs": [
        {
          "Id": "134967bc7b454206b5cd3b384ae25e1f",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6efa3d0045d549c8bce15875a5472934",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2dc7536dbb0d4845b7d812d4e91459aa",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "280cf5b5e90c4c759f9aa6f46427b8c8",
      "Inputs": [
        {
          "Id": "a90ff10bb72b47ce97c3244bea5128cb",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ace880b206884ab395731a3a31ff915f",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2905453d386d4cfea929f6e9e3fc607b",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "1e9e6038af5e4704aecfe2267ff783c3",
      "Inputs": [
        {
          "Id": "cb078b85f565455d920f85fdc09a8874",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7620be62e1e948ec90c89c72e36b73a3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "a97fc8c0ea2948c392a3717f2be2c7fd",
      "Inputs": [
        {
          "Id": "0135aaec17234a0ea481549b9dc7e022",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfcc10366d534591bfc7b658dc454396",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ac6113e487394600900740b6bbf5308d",
      "Inputs": [
        {
          "Id": "99f7be3da9554298926b735676942b8d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63dbd55452ad4e1c94555cb518890433",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9681c97d71484285b61397efe0809dc9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8eeb2e44844b40deaf697b428f30b212",
      "Inputs": [
        {
          "Id": "27b768f216544961900117a1ed407838",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0eedb2c136d54a50b3014959c568cbf3",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eecb319ff067447a93688ba8e2faf464",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e42bda631c674129b8b3895e54eb8353",
      "Inputs": [
        {
          "Id": "2d4f94a5673146cca32a2a312c601094",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35f76d1b50ca48f88ee82d33dbdaf536",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20d7037f887142799845a2b3f6b00afc",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "linkerlijn;\nrechterlijn;\nonderlijn;\nbovelijn;",
      "Id": "7fcbf0189c0d4e409bd2d53a84ad529a",
      "Inputs": [
        {
          "Id": "395ecdb4f362431cb8a158a94aefcef6",
          "Name": "linkerlijn",
          "Description": "linkerlijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2a8993f7d4c47aa8110cfc1f9f6a302",
          "Name": "rechterlijn",
          "Description": "rechterlijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4276a1dc5a04e0fb5afb79cb365c8c9",
          "Name": "onderlijn",
          "Description": "onderlijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff145f5b3fc042d5876c1f6c31f930c1",
          "Name": "bovelijn",
          "Description": "bovelijn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b37f37293024c69a5efde4f445d5615",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9919a80a65e4c348d81e189afd93ffb",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39e37e50e0554d8591473e53f1b5ee2d",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "795fbfad141f43d68a455453318d5c08",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f8618bb8b4a9424d9ca3320f8d132f5f",
      "Inputs": [
        {
          "Id": "1a04ab71fe244824808a5c41153e8bc8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96517aea18d94b8eab6a7b3aa9507bc6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7dd91787d51b4aedb6b8d84781f20926",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "73226ef2a0294424bc2fbe1af56c1a78",
      "Inputs": [
        {
          "Id": "8f29f311009a41a9b1d1019ba51f6736",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8945fa740cf94764b3f0c2bef244609c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5b1d704ffe742c288af06c0b59524da",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "17623e88a3c64e26a1ea47a9385de1fc",
      "Inputs": [
        {
          "Id": "b32989bd56474250806a5bb4f464f94d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "cdccec8f690e4751b428353e795a8189",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5da0a3eed31a4d798f1d9c5108f52e2c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "5771d5adfe7241cc919ccc76f531579e",
      "Inputs": [
        {
          "Id": "ec53b3c122b54ea9a06a7260700f1f83",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6021f91644714135815d1a1ba75bb920",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bba363da8a9f458eade1485e62178329",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcd4f936d13c4765be15360dfba605b9",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8c0f979ed17468987bdf66ed57644d8",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "65c3e1e79c4542e6a2df3bf18e20deb6",
      "Inputs": [
        {
          "Id": "f1ed1f20d7214e28a2b7aac3c757e180",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b77ddef0eab46c1a54d5fbf0ac12286",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Scale@double",
      "Id": "bcb4800490b0471c8cfbfa09a292c52a",
      "Inputs": [
        {
          "Id": "64ab31d758f44490a86e74d34099ddd5",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7afa9e1e171409a9345414781029dd2",
          "Name": "amount",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6264d4f71d01418c91eae7e80c26a1ef",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Scale uniformly around the origin\n\nGeometry.Scale (amount: double = 1): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Scale@double",
      "Id": "9b4bdd99202a42c482a3f2d787fc0411",
      "Inputs": [
        {
          "Id": "17d935d10d534eda9c1af03efce64e7e",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90ca6a2bf6f94209a4aa490e8d8d8789",
          "Name": "amount",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89726da574594cbea942c483d1cea4a1",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Scale uniformly around the origin\n\nGeometry.Scale (amount: double = 1): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "f8835841b86c428fb4f44ef4876bad40",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "450b4ad9597d45beb1910e202f4ded0d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "0cc85196291b461cb2c164e1aae8d0f3",
      "Inputs": [
        {
          "Id": "b72b3af6f441470f81e6b92e1582937a",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad017d89d4db4153a29f86b2e62dc88c",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "f670b2b644f94ef19afd196e929d3c23",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1472ec512a104b76b3e55d61836e90a1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "bfce1670e41649038d12ae066506406e",
      "Inputs": [
        {
          "Id": "92b354aaa7f641daaffb3d19a9353b75",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88cd0c68a0a245d2b5b37cb0be188846",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "483f2a2a29464762a05d677d79368354",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "3f21e69c277b4bcd8ac689ce8a78b439",
      "Inputs": [
        {
          "Id": "1452056d2ab84b4d862c4253e1f50d6c",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f084088904d4349a40117668ed3b0e7",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "763c40b58ceb4afc874016e1dfbdddca",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "73c5f0d1f2eb4265b854884e879743cb",
      "Inputs": [
        {
          "Id": "486892c613104399b661ac10a5694361",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9b4382642844d54b9062523e7303988",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "d179f6ce2f6a4b6d87f9acc9d2b29787",
      "Inputs": [
        {
          "Id": "12a86e1226ee48ad87413a87337acb39",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fff0b0981342488599bf60be7737ee41",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "_list = IN[0]\r\nrValues = IN[1]\r\niValues = IN[2]\r\nif len(iValues) > 1 and len(rValues) == 1:\r\n\trValues = [rValues[0]] * len(iValues)\r\nif len(iValues) > 0:\r\n\tfor (index, value) in zip(iValues, rValues):\r\n\t\t_list[index] = value\r\nOUT = _list",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "98ad769095a2437a96da91e618a5535a",
      "Inputs": [
        {
          "Id": "c21d3060c4ec4be596493e855da09573",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d74b8e7767c4ec5ace0121c2988c54e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52926e8f6e9e46e2ba0e1f3cf13a435f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af33dc8e5c0d4c1c8717895c8e36b925",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "b30a10c13a9b420e8cc9501626857953",
      "Inputs": [
        {
          "Id": "c31296750b504fe18d6277cf7547853c",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a659773c8a44f3cb95e4b08dc3da3bd",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "a87ac7e9879c4bae814c7c72c6ac3a43",
      "Inputs": [
        {
          "Id": "e5e989ab78514680855f29ea9abd76ce",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f58912ae22c04ec689dea73bfe941dbf",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb82934f824d4fb6ac9c3877736fa2f6",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "b45a758cd41b4800a5122a6443077ba8",
      "Inputs": [
        {
          "Id": "82b43ba5f5af45dca93b891649b4a320",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "370d250d61a645108eefea3fed51306a",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63b8f566d267421397ebbc7d343f6eef",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "73823241e51345aa8e07f182bc871676",
      "Inputs": [
        {
          "Id": "6b00a0dab68241109ac09c4f2d5ce485",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bd04ce6cc1d464fa32c6c460a4d916c",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3cccb8590964ab0b73220827eb8411e",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenining copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "ecd8010b215344248e02071d6b24fc27",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1a3e60d65fc046d3a038e62bb47664ee",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n2;\n3;",
      "Id": "a08231ecab5e4c90a2545db137f4392d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4eab2de5440645f9a6ea508d1173284c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c85fbbcc4dea4e44982eb41c4c85fd75",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13ae26af523c4426af694c26ca669ed6",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5a55ba7257145d38330a46563ace799",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "decf95c100474e47a4ab3662923a9cdb",
      "Inputs": [
        {
          "Id": "15d8ee9219e047b3a996fc27b0ddb963",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9ad3ab9144af42c48041d8c4ccce38ba",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70c1719162fb41d58ae1e0551a984191",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "761efde2c7834a729d2f193c8b71eabf",
      "Inputs": [
        {
          "Id": "ff1a0b44f1954f55a9333ae86259688b",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64576cacd39643188fd2d534de31648c",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3088c7866fac4e649f7e9c6529487400",
      "Inputs": [
        {
          "Id": "b8c6bf47a13e4ff69cf10dfe8fc8359b",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b36ec39b7d243038ae5eee878686960",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "40e1f84e8df14eb4ab985f246e9520bf",
      "Inputs": [
        {
          "Id": "5fc33aa0a3484474b6500226d96b876b",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "73155ca98a3647f68bf18b30fdd9d388",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b3283ba7cc9441ea1238c37f1795f62",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "ae873fa5488242d0bb53eba53b64f055",
      "Inputs": [
        {
          "Id": "236f7e61bd4d4c7b9de839362aae9ccd",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0fef55151da14cb8bf76b83080129b54",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f4e5a6f0913a491899ce817b344c390e",
      "Inputs": [
        {
          "Id": "37d6221afaad43eeaaa0f782bf9de172",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5277d6278df44ff088c4ba57692ffc84",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "97f8c48621134da7807e0d6d5dcb21ea",
      "Inputs": [
        {
          "Id": "0f987426528143bfaf23327b63c21f8e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "15e9a4289fee4ce59e6d70b1083aaa16",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43a3b16f0ccb4868a504b2a9859eab96",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a3ce1f47f46943e1ae1b31a3c0a3c24e",
      "Inputs": [
        {
          "Id": "9bf2335ece424efea33bc7c3d8ae149d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "430126238f6a40fe83ed7a3a3fce87d2",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d494800e00264699822c4a3b1905510f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f2bb48467c6143ea81dba14b37c90d5f",
      "Inputs": [
        {
          "Id": "f2940215aa714358a5238bf9701b3a3e",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "165560d028fa49f98fbd565672c34f15",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "825571e7466d41df942244665c7e0862",
      "Inputs": [
        {
          "Id": "a3f384e120ea4d588b674954e53bdc03",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a4f46f4a3db45f081039e1479c75946",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "19ff095ce72643f7878c04a2b295967f",
      "Inputs": [
        {
          "Id": "1f8d7d455e534102b97f794ef2cd68c7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9b968982d9bf4920a06af2f6053caa0b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6262152c20f4f8ca0b734fe0ab5ecc1",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "eada62fd253643dea8d15752a1af82d9",
      "Inputs": [
        {
          "Id": "31d21b5b77b749498fcaa38f6a20bd38",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aff869c722704ec9a612588b5d7eeced",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "9b3cf041b1144e8a94c5bf873f9b61de",
      "Inputs": [
        {
          "Id": "3614b6b053bf41a8ad65ea9a3459e355",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2486ffcdf9414cc5bd90fd661fc8cfcf",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a4a7cb30af90491a88d4b0f2b0c753ca",
      "Inputs": [
        {
          "Id": "a686dc3131e84e9da30b8bdf33d3840e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3139768a609748d994d90b74876344ca",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "298123729d0a43d38844abcc6689c946",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5510335e57cf4dc5b37d37c154683b3e",
      "Inputs": [
        {
          "Id": "4d3149db1aa84924a35429bb0e2f2eae",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff793b199a93444ab48df3770e65364e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e14f3d6a710241f1922bbe3778dda1a8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "808a23cf08be4481a90c2dee02448678",
      "Inputs": [
        {
          "Id": "69db2d7eb3db45dcbb27ea1c186915b8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a2fbebe86a046309528c53eafe08665",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "634c01066b2847a3805a4af2b4798fd8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8864259bfd844025b17adcd45ebc768f",
      "Inputs": [
        {
          "Id": "9d8d5e04402f4e04ab6b1f6c36e5f62c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e00e50deeb2f4596aab3953d6c5f5b6e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a9ffee310ca4d38a6f984c860d61d15",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nsys.path.append(r'C:\\Users\\donny\\AppData\\Local\\Programs\\Python\\Python38\\Lib\\site-packages')\r\nimport largestinteriorrectangle as lir\r\nimport numpy as np\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ncoordinates1 = IN[0]\r\n\r\n# Place your code below this line\r\nlisttest1=[]\r\nfor item in coordinates1:\r\n    grid = np.array(item,\r\n                    \"bool\")\r\n    listtest1.append(lir.lir(grid))\r\n    \r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = listtest1",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "251b8dd36b7741e98b99735d48d782d2",
      "Inputs": [
        {
          "Id": "b350807e6c1d42479948e3d8c5da652e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7eba2379130f448cb0109d139260ea68",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a8a4163c6693446bae5b34527362ae5e",
      "Inputs": [
        {
          "Id": "a784ea3cde8846d9925bff5fe215301d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06d0eddd3f0447a581d930b482312d22",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a54404821aa540ea853b9f3aa9ff911d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "993d91e4f4e34c988d91ac9faeb1511d",
      "Inputs": [
        {
          "Id": "3cdce4bc0a4d413a8b547b8c5aadcf87",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78c121a45f6743fc9c13f9c96687174a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c83a793d2424e30a8c073a4f50f4d10",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "043e067ad77543bc91d29141bf2632e7",
      "Inputs": [
        {
          "Id": "41c0b178dfc84e2084473e119d66970d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "876f032b70854c3c91749f5b7f403c49",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "182e36af83f7444f983e761cdafc063d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "0869c7b67a054bf9bb5b32d879f83132",
      "Inputs": [
        {
          "Id": "4f3ac3d3c6524164bbbb9f4e12abcf38",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0358afc69a274663b7996dc734a39a44",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36ee2bf5f53b431ab00f90cdd40b3bf1",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x-1;",
      "Id": "754c07125a2545628aa22c2c81bc9ef7",
      "Inputs": [
        {
          "Id": "e2caa31f292a4a04a90a87f860c844a6",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d170284672ad42f8b16716584034ddc4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "46dce0a9878b45e6890541542add99ab",
      "Inputs": [
        {
          "Id": "6625cea6e7b84f67b1847e3fafa20903",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5ecb146ded846599b80b865db755334",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "287a7a72a9234e109825f5355363fbb3",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x-1;",
      "Id": "9266180b23c34b02bca7031d7f2f755d",
      "Inputs": [
        {
          "Id": "1186cd57a69e455b9d703641f284eefa",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8f604bac72b4dfb94a24ef7403933d9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "afe0e68b592a44389aeb77527228d443",
      "Inputs": [
        {
          "Id": "e0b4d9a639164430a984c0c385826a14",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0c24717b29843d98949af91b6ba8205",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a7dd8ecf53a41a0a7b15166ce5de558",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "cellengeorganiseerd;",
      "Id": "a2b529f653b3423685b2433b6a90bc4e",
      "Inputs": [
        {
          "Id": "74de1253134a4cc5a3b09db1f4e71352",
          "Name": "cellengeorganiseerd",
          "Description": "cellengeorganiseerd",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0424c81cea34b808f17fc827a71d045",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "d7d59fe238474402906dc2448026c70a",
      "Inputs": [
        {
          "Id": "100c918a7c4040479901d6cd21bdd561",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce949cecc08e47ce8c02b5316a866b22",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e24fcfdb45c4490e867c70b47a3407f5",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97db5e9ac7c14adfa7f558747f7a66a2",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad1ce071d3b941ac81949ef124083969",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e87fb001048144449e049f339542fef8",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b30b7d173d8344e5a146a86503f016a5",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Color.ByARGB@int,int,int,int",
      "Id": "1e65fb99aa8d40d8b8970152e81266a1",
      "Inputs": [
        {
          "Id": "497fdb4bde6b4486abc8eeb0904d0274",
          "Name": "alpha",
          "Description": "Alpha value (between 0 and 255 inclusive)\n\nint\nDefault value : 255",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1325b22f5aca453980e5ef19e817d357",
          "Name": "red",
          "Description": "Red value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc63a76a14c04ea0ab493b4ff8758cd3",
          "Name": "green",
          "Description": "Green value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c19fc42b103433987a81cd1f108d8dd",
          "Name": "blue",
          "Description": "Blue value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a98bf56e1b34b9aa10e777fa5d1d652",
          "Name": "color",
          "Description": "Color created from ARGB",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a color by alpha, red, green, and blue components.\n\nColor.ByARGB (alpha: int = 255, red: int = 0, green: int = 0, blue: int = 0): Color"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "78;\n129;\n0;",
      "Id": "3e6a4526298742f08458c06df7993ec2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2973ee6e2990437a8eae6e453d355e0c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bcf782fe3f54d2eb2c7ef0a24eb09c6",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6241191505a4d2786091667b757de69",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "304c38d67d0d42d286389152e01eadca",
      "Inputs": [
        {
          "Id": "689e135d8d594950914d7153e434c8f4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "586a30a1b6164f58b359a8356a19c139",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b36d96d5c704f17a9b249e30f8b2a0c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Transform@Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem",
      "Id": "1b9755a862664e4882a46222a03c1dc2",
      "Inputs": [
        {
          "Id": "f807d9942c46474f92e58c1340bc8f23",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bb8dcc3db0c4ea4bf33a57e6e41402e",
          "Name": "fromCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "843ce45161604220b8411c67c0832b95",
          "Name": "contextCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9bde9e3e0f945c699d230cd856ac06f",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Transforms this geometry from source CoordinateSystem to a new context CoordinateSystem.\n\nGeometry.Transform (fromCoordinateSystem: CoordinateSystem, contextCoordinateSystem: CoordinateSystem): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "641fface36574638ac9bf806b0daa445",
      "Inputs": [
        {
          "Id": "b64fc128932646af841ae3377201c2a4",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed9f2f82dbe447769319739a48c34d07",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1330375e02a4bab8ad8a3cc42bdb1cf",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "fromcoordinatesystem;",
      "Id": "b5fd6f61dbcf4a8ca575f006fcc8ab92",
      "Inputs": [
        {
          "Id": "9897854ddfcf45d39c464639e4de9106",
          "Name": "fromcoordinatesystem",
          "Description": "fromcoordinatesystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "468ed0772c464bbebbdfe8ac3d474c1b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "contextcoordinatesystem;",
      "Id": "d31c577805624a4cb42fa026f9a4b228",
      "Inputs": [
        {
          "Id": "85448df0d4c447acbcbe712e4e54f90f",
          "Name": "contextcoordinatesystem",
          "Description": "contextcoordinatesystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6ff45ad9e4747f1ab1882a0eed6003b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "e22d805c9e494c9a87fc8e890c9cb82d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c6c54b6e1754ca79ad0fee962794f86",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry@Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "d0f955c7ede04cee8a38605013551c9e",
      "Inputs": [
        {
          "Id": "cc1d328daba9453eb53cf9d7c987fadc",
          "Name": "geom",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "795acb9d4d5a421988961942c91814e7",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Create an axis-aligned BoundingBox around input Geometry.\n\nBoundingBox.ByGeometry (geom: Geometry[]): BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a = bb.MinPoint;\nb = bb.MaxPoint;\nr1 = Rectangle.ByCornerPoints(\n  Point.ByCoordinates(a.X, a.Y, z),\n  Point.ByCoordinates(b.X, a.Y, z),\n  Point.ByCoordinates(b.X, b.Y, z),\n  Point.ByCoordinates(a.X, b.Y, z) );",
      "Id": "94175b5a01d84ee3b71a2df0b0259672",
      "Inputs": [
        {
          "Id": "4eb2962864374e5abe7a8aa6ceb1d98f",
          "Name": "bb",
          "Description": "bb",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c926b6ac54a5431098f6a09044bed509",
          "Name": "z",
          "Description": "z",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76ecf8f3522a4b67a440e38cb936f67e",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3012aa62bce43e0a92a52ea96d02b27",
          "Name": "",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af2c63f3315046979acee5f6c3b471c6",
          "Name": "",
          "Description": "r1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Transform@Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.CoordinateSystem",
      "Id": "4964372c9b1f4ca0a6a7a060ca5322dd",
      "Inputs": [
        {
          "Id": "4363ca7bf9804bcc84706758c69f26d6",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab3d37323d174026af0569dc018069e1",
          "Name": "fromCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "250cacf018cc43c7977afaa5c6646e1f",
          "Name": "contextCoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b2e5430e16c48e1b1523bb3808a5083",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Transforms this geometry from source CoordinateSystem to a new context CoordinateSystem.\n\nGeometry.Transform (fromCoordinateSystem: CoordinateSystem, contextCoordinateSystem: CoordinateSystem): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "870ee68f7db64b70a0214273b4011bb7",
      "Inputs": [
        {
          "Id": "f2702ddeff4a4f2891b9b62956fd48ff",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d13b2d684118430f893ac0b912331547",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1300d1a335b546228f155f9065a293b2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "641f42a98a5744e2992acbdbee5bfc3f",
      "Inputs": [
        {
          "Id": "d7e38a9cf92a45e1ae5a6161a9156ad3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c438da71ee3c45db935a91b468781c9d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a8b913baec841378130bd7bf8b2d89e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "49ffbb415d4d4ffbb374ff2fe6b5fc67",
      "Inputs": [
        {
          "Id": "3dfa1351d663499083315660376b50b6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "484775ad2f9c46af9de60d2e281e3f84",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3704e2da904a4daaaee2437649c907c1",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "d383a69d09c04a16acb39318b3380ec8",
      "Inputs": [
        {
          "Id": "34be73f13b954a97b66905af9312a975",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "828d03793a264d3c8f6ee97caaffbbdc",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57f088c23e884501a822e2a3d7a3dab7",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "6e45d8d0942c49848cfde262c3052fad",
      "Inputs": [
        {
          "Id": "f10847ae093847bdaf54feacd1895f72",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ab85b45008147c094af81667c684fc7",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "11478e4165974215a3dc0cd877d0f378",
      "Inputs": [
        {
          "Id": "92ca999e3a074d9fab79c22f1f07f1ab",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c2d6a07d8fd43058b0f4eb614efaa32",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "6941bad8a98547439124466cc921a26a",
      "Inputs": [
        {
          "Id": "e5e8a68a1fa54919b9ba79ee045f9f05",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efc6a3c482f741c1b3487cb08ccef3f1",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "652cb955175a493fb8aa4e14666c6893",
      "Inputs": [
        {
          "Id": "c5ff19d8d84c4f7d986b34d58d296ce3",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4b257c22bbf40ea987e95ab96899ee0",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "ad67cbcabd73497cb020be107a0d6905",
      "Inputs": [
        {
          "Id": "8f5c2f3f3ff14c5686a6482cf42d849f",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0116460b186543d087e5b7180fb03088",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cb258edb8e14773b7a443e7d6c12020",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "02790ef505a34c2084b6eebf7711cd55",
      "Inputs": [
        {
          "Id": "ec46e27e6c96434abddb1d71ccfb15ff",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed2b71990b0b43a3a6f46a2c52d860ae",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38a6f94867e84b16a4efb542f5bc8643",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Geometry.Intersection.GeometrySplit@Autodesk.DesignScript.Geometry.Surface,Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "84d7baf790ab43829c03e8b4211c6dd2",
      "Inputs": [
        {
          "Id": "78b7178e3cc448cb973492110f706506",
          "Name": "geometry",
          "Description": "Geometry to Cut\n\nSurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eceab72c145046fa825f94cf43e187bf",
          "Name": "cutting",
          "Description": "List of Cutting Objects\n\nGeometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8ada8e6ee234f838a9be69f501d8561",
          "Name": "SplitGeometry",
          "Description": "Split geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Advanced Geometry Splitting\n\nIntersection.GeometrySplit (geometry: Surface, cutting: Geometry[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f210dbc8760744529448f56bf360d822",
      "Inputs": [
        {
          "Id": "2f34010bdf804fdbb5cbd8642a8e11f1",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56c21e3b08ff4dd4a4a33e46bedbb636",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b12d029adb94ddb844f155d5c6bae7a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "ae8b40b2aada493683fbf2625ada5e28",
      "Inputs": [
        {
          "Id": "add203bfea10480284c1a6df25175d14",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ded6f243799f4793807869e1c3bd8747",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e386d5e920a14aa28d4a0be6b4a0bf8a",
      "Inputs": [
        {
          "Id": "a9f8f0109b3647b2ba0a8464ac4f1f23",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ebb436a10fa47a1b62ccb8be0f882a2",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71a64191c0714589aa7a390f745295ed",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "allerechthoeken;",
      "Id": "2862d95a63e0456a8d5fc0ab8a6e5e22",
      "Inputs": [
        {
          "Id": "a5cdf7217cfd436b9f11893246c86f86",
          "Name": "allerechthoeken",
          "Description": "allerechthoeken",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fca4e485f799429089f3ef39cf252136",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "surfaces;",
      "Id": "b6329f7c46ea4ecdad82b4f855abf3bc",
      "Inputs": [
        {
          "Id": "135f348967f147378c586ef4196f80a5",
          "Name": "surfaces",
          "Description": "surfaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23a6fdb4d9414110994d373f382b3601",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "1376c79f7aa54d339b940dc5b9642120",
      "Inputs": [
        {
          "Id": "a4646bc29f4a4b66bb97e6fcf004b19f",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5e0c2e3b9064ab2a62004a27f977571",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "90;",
      "Id": "4bf21c0125a9472bb00b07099f864ecd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "728a17651df24f64a8f0115cf55549ec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "6fbfaccf46e848b988c293e7436f7521",
      "Inputs": [
        {
          "Id": "79ef50f254284629bc19edc25679cee9",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd7ffb83e9124822a0e11189a352429f",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "dc910d58dbf24211baae9d99fb6928a5",
      "Inputs": [
        {
          "Id": "59984e7c944543b6b2a4946c5209e0b3",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cc457b344434c32a67eb843c5511809",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "6899887b9be94f52bce5119da9307d39",
      "Inputs": [
        {
          "Id": "952bd053bc924b238e5b542624a03022",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c005b0a469f9492db976eed4cca1adca",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d619d7fc8a948a7b1d0a655eefd957f",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "a7199b4447c040e3bf8e66567f17d9b3",
      "Inputs": [
        {
          "Id": "43b6ad55cb834656adfcf477b57547df",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a58802f2b5a04745a32c15f420181692",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "610893218aad4cd49e5b04c66456e88c",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "a056a5ed233c497ea4c9528901756d3d",
      "Inputs": [
        {
          "Id": "4fe65e7bd95e47409d0fec0139175912",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "866e7adb7d1f4502955fbaa47c2b7e61",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The direction of the Curve\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "680b0d82dded44daaa351feb4b86d3ce",
      "Inputs": [
        {
          "Id": "5ec262f56332470da63da75e756f44b5",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b300cf9d00d34d579d422ba44596e39c",
          "Name": "otherVector",
          "Description": "Other vector\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2352fa325c640c5972a0474bca0737c",
          "Name": "rotationAxis",
          "Description": "Axis of rotation\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c189e59b9ebe45f8b6142df766feacc7",
          "Name": "double",
          "Description": "Returns Angle between the supplied vectors in degrees from 0 to 360",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the angle between the two vectors in degrees from 0 to 360. It uses axis of rotation to determine the direction of the angle.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "_list = IN[0]\r\nrValues = IN[1]\r\niValues = IN[2]\r\nif len(iValues) > 1 and len(rValues) == 1:\r\n\trValues = [rValues[0]] * len(iValues)\r\nif len(iValues) > 0:\r\n\tfor (index, value) in zip(iValues, rValues):\r\n\t\t_list[index] = value\r\nOUT = _list",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "bcfd1ff1ecfc4af897aebbd62de1179f",
      "Inputs": [
        {
          "Id": "2eae3773b875421b9986f7f44d6d8b20",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "046d9a25f09340bc99594f8b959f3ae6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e5f244aa307427daae09e33b4149253",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46b5784938d245ecacf180317aa68a87",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllTrue@var[]..[]",
      "Id": "487be2cbb67243e591847a31807fb89c",
      "Inputs": [
        {
          "Id": "1c2b921e4e754f45948c5f194375f333",
          "Name": "list",
          "Description": "List to be checked on whether all items are true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fdc0481dc384621a7372700e220eef9",
          "Name": "bool",
          "Description": "True if all items from list are true, false if one or more items is not true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a true value.\n\nList.AllTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a96ce8febd9e4c3d89ee5e898f268ae0",
      "Inputs": [
        {
          "Id": "a2631d7142714c738c0bedf14248febd",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e096078a4d9c4b409f89151da544d7a2",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0495fd10dba4b3fa140bbec5df7c0a8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a9f7121d78304bcfb25d5b56c3bbf0f7",
      "Inputs": [
        {
          "Id": "cb90d2f248e44118af40bee6ef217917",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29bc89411bda4c038ffcf1725d5d11ac",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87f7d988307d4c808dd32d9914d3c16b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "360-x;",
      "Id": "edb92f3a00214743bffba9ef040210d5",
      "Inputs": [
        {
          "Id": "04de52b52caa4ce8b7c4e73fa8415631",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38c9a9fc833944349c4691eee37b9fc7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b3fb7736cf6f4b32858ddabca2b4b044",
      "Inputs": [
        {
          "Id": "44ceaad2e1014b099259640043f3dc7c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18204fd41c1f418c89eaa7773da4fe3b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88abb48a7a3244b088296b0949fabe75",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "225d6c7ec240406ebc602e0d63407bdb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "449294cebed440a2ad40e3cec864c0b8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "10730c7dcf684c83bd63f8a918d15c9d",
      "Inputs": [
        {
          "Id": "e3b6654a16b642388d3f1a2eff27d6e3",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77b126a6d86d4b99b47f598fef69fc6d",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "c69002ddad7c4e6587427e5460ee5390",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f35fc916e1f94cbea4b5103f68610e06",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "85b3e470c3d84769893440a8cd3f5ff0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "94e4b7e5138c48f28fe002cf3ecf7106",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "84a681ceba594ff196d734349495680a",
      "Inputs": [
        {
          "Id": "596ad0f40d924fa3adabeb79cec9e6b9",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "003b4933a0cc4eae9239a5ab1f7be9f7",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06bdc5b586bc42dbad470506c0cba154",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "b7a97c512c5a47b9a2537bafcabe94f7",
      "Inputs": [
        {
          "Id": "c3bd15d34127402b8618989bfee7a8fc",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79dd7c64a07a4677a1fccb77a37acd1e",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afdfdc1e2a1941519a81c7da83cf192e",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "4996c980405c446bbaf1fe55c9c199ce",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ba896eb11c18487abbf31a9756654900",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "84f850b810ca4e79816c18f09046a358",
      "Inputs": [
        {
          "Id": "ddac53dc1a3a47ec98b111f120eb9cf9",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34e1f6a4dbf84adeaaf5c35e9b828584",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7300d73253604540b89bf96fd65408b1",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "a1c6d3553990432a827beea1d0794888",
      "Inputs": [
        {
          "Id": "f951d42bc9204b8a93f1b449643ded1e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad922c47db2a44d084c1cad61c410655",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f22fe24b57ce45338ec6fd0ea3d277f2",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "521772b9e97c4d4fbe89b63136b1213c",
      "Inputs": [
        {
          "Id": "0bff0e8d19a0427097a761c3ecf85b40",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b37ebdcc516446fa9ad688ab55260430",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "802568218cc340d39f7a1c3991f374ea",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "180;",
      "Id": "e7965ded87314edf95bb601837e975bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ffe2179006847c890d9b8ebacd26f32",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "5f3f2de9229f4e2986ff9c1904d186cf",
      "Inputs": [
        {
          "Id": "3ae25db1cbd54c049d33a15824c747f0",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ef7da40e00248f5ba0427ca7a909a55",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "58ec23850033487ea57d99a08635522c",
      "Inputs": [
        {
          "Id": "08281798014540dda0f1bc913edaaf69",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4963d0661aa644c4aa622de63d64b80d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f062a07cc8d94922b43cbb529842227c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "a639cac5e3b84135a18c47df4bbb4ea2",
      "Inputs": [
        {
          "Id": "f9c44d8d11534a5bbaec9a4dce4b0c70",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b0938cfabbb4651ac1ed712266cbe84",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "c93edfb078f74ff38d522954945a707d",
      "Inputs": [
        {
          "Id": "430a847c914c48febc7964bb98e795b1",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0adc44e5b9fb4202a15890d7be703f1f",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8028181b3bb54625bdbc8b3dd79e2774",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9389babdcdf74f28b6fbfe4ab2dc1648",
      "Inputs": [
        {
          "Id": "84e1566c9dba47e9b463d5a6273df85a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48bd887701974f9fb22ea769d356f0c1",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3de1444dd48d42f097a1f323f1f727a8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "a0b9865789d6459887dc3af4e6183f71",
      "Inputs": [
        {
          "Id": "f8756dc9f70f409c8064f633070c59a2",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4494295a841746a9bce5609d55643e1c",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "49ca0d50a2a440fea9ac826e6c28aa6f",
      "Inputs": [
        {
          "Id": "c720d5e4216f472face5c73376c613b1",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ad83c7c09ea46498c076cee6549dbcf",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "e725381d5ac24d18a0834bd12cb92fd3",
      "Inputs": [
        {
          "Id": "28e827dd5a14425895665cb8f0397c46",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "682b0a2b31e74de49d9949cb95ca856e",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "962cc0fd139f4608a7d33236b5b61e31",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "c2360a9dda88426caff7f2712176fbf1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cd8dbf9773c14f698de2ef5bbfa7a550",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "53f7676e83bf4f79976875014b8fda54",
      "Inputs": [
        {
          "Id": "a6916d1ffc334e8db40dc72b5a739367",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d54e386ce06f40308dd18c689b2962b6",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a1e4121fc33476295ca12e8472f7cf1",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "5865aff975d84393b0d98d90003a6e36",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d2d153c25174af1a322d8389b166be5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "049cb0ad0c134bfc8182600156fa6f60",
      "Inputs": [
        {
          "Id": "cb0629ee32644c3796218531ca0baaf9",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c6a13720acf488185f8fba8ea5f5ef6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa8f4708c67e4659bb86c9fcf9f9b821",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "2f3707f0319541a3aa689993b1017faf",
      "Inputs": [
        {
          "Id": "53ea9abcf5e5476ca40570f92b08ad15",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2a22d4bdaed4200b88647152fc5680c",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "355d1e1346c944a3a6f2e8ac672c206d",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "00c2aa152649471986362404e096c928",
      "Inputs": [
        {
          "Id": "1406475f92f44a56b1cce129dbf545b9",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28fb7151a3b8495abeb63b114f34347f",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "8551a08ede8b46109b1d27f819c8db96",
      "Inputs": [
        {
          "Id": "57815465600b4919aad7a4ef88f84e4a",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efe5b945eb7443b8a6600ef3870fced6",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "cfef5828738a46ca9ff53e1b4204401d",
      "Inputs": [
        {
          "Id": "1695b65135fc4404916775319b38456f",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3485348bc3b48b0bf086ddcfd07b8fa",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "aa053067525642439692ec086eb42c4f",
      "Inputs": [
        {
          "Id": "34bc641a7c0f4408b5d01584009970ab",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "552819921ae44104b4e17eda3ef72192",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "bf026a85daa74b108c67650b164877a2",
      "Inputs": [
        {
          "Id": "d7982f4ae8a741e79ca58c34f791bbca",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d42b49fa8414696952d6c16f71228c9",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "3200946e67b74628a4633e981d285daf",
      "Inputs": [
        {
          "Id": "0a5da4c8927142cbba58ae9a8d4cb2cb",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93256b0bb8584053a2d09b2799ea5f96",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6cc3da9b57d74088b7910a4f1b2552c3",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "1b4c23dafaae4a2da98fbe4cf225867a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ff7086ee6d104f71bc9c596bdce9f5c6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "oppervlakten;",
      "Id": "e2755ef17f7940fd9735bcda93e1534f",
      "Inputs": [
        {
          "Id": "7438a3f577d642859fef6fcb4662958e",
          "Name": "oppervlakten",
          "Description": "oppervlakten",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fe07e056d204127bbfe2c61710d29b3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "56ca8e957f364280802ca1fd13803a1c",
      "Inputs": [
        {
          "Id": "5de5f587f1c04bcfb1086eb755907ccd",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acf0d2e8542447b587138bd02f0936be",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68b14abd6ded4b21a706219b9aae5054",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "f584733b8a184db1b83a59c9fc74ca6c",
      "Inputs": [
        {
          "Id": "2504b6ec485541c6be34ddc8f0f4e6e8",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54d6b211887642cd80052f3efeb1d092",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9cac637432c4f51b8fda00efce86712",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Id": "1d36a38d786842b790dd224cfe559079",
      "Inputs": [
        {
          "Id": "c7a591e601a54dd0874a89074bb5ad94",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32af7dee9f9640cfbfc69074eb432058",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c41c4d6ce884107b05336e821fd3c80",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "a975403396d541699d66c49a2db5c1ed",
      "Inputs": [
        {
          "Id": "176c39be2e6c4e13b9e67ac59cccca3a",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7c4c62c809647678816f2b72d0a99f7",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8916046e0ca461188c427c25089b522",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Id": "e39a9d3b5b654374be47c86845c7c323",
      "Inputs": [
        {
          "Id": "3f709ca8ae9c471fa3bfafad5f1836f7",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "972efd2a4dbd4efd96d1f61756f83e0c",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d30abdd7e944b30b8805e64b1cb8844",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "c5bc65f693124246867f712ffe85f64a",
      "Inputs": [
        {
          "Id": "a3ae6dd6f9f04a93a8a6661c5bdefcd0",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b897cd19cc94b0a9c70c00af07eef67",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0bc7a78e898443d88b0cf711325aa8bd",
      "Inputs": [
        {
          "Id": "cc526c8c49b14af68d25dd28f3d1f83d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1c21c4e7a2b45c4b3d3147749fb54c2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b67fe318481e455e9f1c08986e98e47a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "906b1747dc9e4f73abc8d368b463298b",
      "Inputs": [
        {
          "Id": "112265bbde1d44a3976ceb469ffce671",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff39436ad8454bed9bb4fa533d07d4a8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0cd47205d7e4e27a16360e646488176",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "d2671cc337f14baba1e30938824f3c74",
      "Inputs": [
        {
          "Id": "cd37631f21174ec1b3e8ada6a3d54d03",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8aaf6ea14ee4edfa00938e8c562cf3c",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "e771692bc62e4320b047bc99a9d2d07b",
      "Inputs": [
        {
          "Id": "cd7d0c8565d1441d8e1cf93e14b97643",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e4b9894773044db8661f53f97cf1410",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b933859834fb41bd9ce853a399281970",
      "Inputs": [
        {
          "Id": "cdd1c61d80b74521b1833e0cd38a690c",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cb2d406110e4030b630bfbb4de1a9cd",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ad0f4931b5da426f939811cc0036e169",
      "Inputs": [
        {
          "Id": "7a8581b1253148cf8fc6b4a08500c59c",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "700de6d2067a46e281241d99b4d15ce2",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "3d01c43b6a894e55a643695e1a3ec472",
      "Inputs": [
        {
          "Id": "5355da0ebe8e4406a5ab94fc8eb1d69d",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50e69f78d5de4317824b0067a9ef6495",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "812984b5aa8c49bcaa218e797d3e1a62",
      "Inputs": [
        {
          "Id": "014f7e6cf26a4ff7823c52230bbdcd1b",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f22d1d4e42dd4581b179fc133f7dcdd0",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0b76416f90c04c3487e2b6f1b7f588dd",
      "Inputs": [
        {
          "Id": "796e005c84f3457695d6a55b6acf5c9b",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a29d6dc22a54d72ae86ff7ff266e72e",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "378ba2ffaf7b4c48ade5a7368cbd326f",
      "Inputs": [
        {
          "Id": "875d768bf8064dd8804716e13f1dc696",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7280f10b7eac41ec9513b6c8eebf50a2",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "82e9b08a6026460e9b75f50920523f60",
      "Inputs": [
        {
          "Id": "c55848fa7d834809b172a25a0f21e2e2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7eaa3a10990f4203aa4bf666dd98b35e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5353c9cd503b4ef69bb203c920a9a21b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e8bb3a166a1d473ab783b220357fb24a",
      "Inputs": [
        {
          "Id": "de4f30b2a6ba4abe99510929111ff68c",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40789cf2e3c7499caf5501a60bbc92b4",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "84dc811288904859b124cf57d47026bc",
      "Inputs": [
        {
          "Id": "fb1ed400d6dc47cf9b0c86a5e71d7366",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "229ea1d1cfbc4587a0a29d6ebf9cdeb4",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bad93817507d4c3fbb8aee667cb8e69a",
      "Inputs": [
        {
          "Id": "584547d9897244bebe23691ee3e8a3e4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb561858a2e745bdbebb73de5547c3a5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "765dbe3020f34919b5c03d98822e2245",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c53474c86a4e4c058991917b35e81894",
      "Inputs": [
        {
          "Id": "59b0061b8d1744a2b365144a7c1d8cc1",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "261001913b274c00bbd416dc8a6a9df8",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "30f62fc88306488bbaaaeebe2d602456",
      "Inputs": [
        {
          "Id": "ae91da6d34e6487eb41da7e1f13c7171",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8dfa9549a6446f1bcd3863dd7d7619c",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "63e3c99445004293b9fae8175f78da59",
      "Inputs": [
        {
          "Id": "2d6d483b891e4478979ac062fb4644ca",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "832323bf09814592b4e82123dfa8e1b4",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9439eb0e925a493b9673515b2a861e20",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "3b61d640094b4e9a93a4c2cdb3c6cbed",
      "Inputs": [
        {
          "Id": "ffad9757ccd7406b9ba8cc13796d655b",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0e64da3c1e04b6eb814764de6b6cf68",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "68fc97d9f0944e8cab1f76ac65a0c0a2",
      "Inputs": [
        {
          "Id": "7630336a975e44d1a31e89f09f6c74a9",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67bd5a1389a54e3f8d45c6c84ce54f03",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e07d39875ab4754b86999407615213e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ade213c6f09d4f6f885d2bca19f4f4d6",
      "Inputs": [
        {
          "Id": "0ef62fd76f7443fd99c205d22f5fac98",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a45a91c455694337833bee2070a2ca42",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "1d282dc8f9a84d6ead6ebfeedf89c8de",
      "Inputs": [
        {
          "Id": "6157debdae5049d1a66f55e4c2665bce",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f8c5a5ee33d45929306c8fef3dadd0f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7d28cd90087a4160ba5a22dad815efa2",
      "Inputs": [
        {
          "Id": "89dc327cb5eb40aaa12964df32ae954d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0b10624820f44ed91153f6e2f9bd2c2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c280797099d44abac0802a47165e9a8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "363405c413e14ca38b21fdedb37616d5",
      "Inputs": [
        {
          "Id": "ab2245f012cb4368b8c05193fbc85e6c",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5015b473abbb4ea7b995f93bd3a8ab5c",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "76eefcc36bce4fb9bf6b535ca62939cc",
      "Inputs": [
        {
          "Id": "e86fd711dddb4d8e9a1d71814420cd3f",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b579061730349b1a4d9127dee4f53ce",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ffcd54014f9143c2a61241764445d7ac",
      "Inputs": [
        {
          "Id": "caefc937283047368981bb7eec3ff6e9",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "417a55f3e76842269211c8cd06f9ce92",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fab8804e87b84374b5f1a170a89a077e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "844e76c43f3e49ec9735193a91fdd086",
      "Inputs": [
        {
          "Id": "4a498713fd674d2e993e14a0000a50fe",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04e3b868d36a41c2a19bbad64b29a787",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "b7222456bf0c49c2a11ddb3984c91247",
      "Inputs": [
        {
          "Id": "9e5453e0fc2943cab6884e1a14b36364",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7ba21d921a34048b8610370993fa514",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3a0d36d84f784aab877be74e658c4d4d",
      "Inputs": [
        {
          "Id": "4873c7c231894dc387025e782200d126",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02d23ce030434bd0b7565947d67eefcb",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "681fdb517eb34b26983f5bc7240cad0a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "9458800e80a74ca0abb3334621d90299",
      "Inputs": [
        {
          "Id": "b8f1a8cac3d540f6b3b111de82b7329a",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d58eb085e5545aeaa1b3d577284323c",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "GenerativeDesign.Remember, GenerativeDesign.Dynamo.Nodes",
      "Cache": "[\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 358174.16805751115,\r\n    \"Y\": -28828.034049298247\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 195507.26868376273,\r\n    \"Y\": -63403.950877705633\r\n  }\r\n},\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 372635.69364388124,\r\n    \"Y\": 177981.41692427656\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 358174.16805751115,\r\n    \"Y\": -28828.03404929824\r\n  }\r\n},\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 341486.68057530379,\r\n    \"Y\": 399618.1613945844\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 372635.69364388124,\r\n    \"Y\": 177981.41692427543\r\n  }\r\n},\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 141737.90273768408,\r\n    \"Y\": 399618.16139458516\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 341486.68057530379,\r\n    \"Y\": 399618.1613945844\r\n  }\r\n},\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 101787.22640588472,\r\n    \"Y\": 194089.74903109763\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 141737.90273768408,\r\n    \"Y\": 399618.16139458504\r\n  }\r\n},\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 195507.26868376267,\r\n    \"Y\": -63403.950877705625\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 101787.22640588472,\r\n    \"Y\": 194089.7490310978\r\n  }\r\n}\r\n  ],\r\n  [],\r\n  [],\r\n  [],\r\n  [],\r\n  [],\r\n  []\r\n]",
      "NodeType": "ExtensionNode",
      "Id": "b3dd47a6cadf4e2ea8a7b0a510f71874",
      "Inputs": [
        {
          "Id": "38ab2e4b0ff84c5a962024cb10d47bf3",
          "Name": ">",
          "Description": "Data to sample and store in the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2af38399494a4a9c81a053bf245650b7",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Store data passing through this node to the Dynamo file. Return the stored data if the input is null."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "3506b703d51c451897bacab0a3074c80",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dda33d35f95244c9ba7c761a655a4fb2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "GenerativeDesign.Remember, GenerativeDesign.Dynamo.Nodes",
      "Cache": "[\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 108761.80393824643,\r\n    \"Y\": 113451.73214529922\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 144539.26164131344,\r\n    \"Y\": 134107.85698108535\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 110887.80533425319,\r\n    \"Y\": 350609.13283037033\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 153286.40979036907,\r\n    \"Y\": 339248.46100614738\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 342195.17512965912,\r\n    \"Y\": -64962.698558680917\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 332779.56673674763,\r\n    \"Y\": -11564.129859321523\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 383378.21326287952,\r\n    \"Y\": 351462.973733036\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 324894.06659215246,\r\n    \"Y\": 341150.64073127613\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 398114.8161365065,\r\n    \"Y\": 101507.5172995943\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 352649.49676443229,\r\n    \"Y\": 139657.45001605913\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 389765.42367465969,\r\n    \"Y\": 32723.833695552003\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 342378.7481060595,\r\n    \"Y\": 45421.055146154249\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 143205.59396785317,\r\n    \"Y\": 10134.273917454431\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 197427.92166179186,\r\n    \"Y\": 10134.273917454253\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 97615.241913297665,\r\n    \"Y\": 301075.25179668487\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 143205.59396785402,\r\n    \"Y\": 288859.35378101567\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 215341.54843046615,\r\n    \"Y\": 458708.27169776306\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 215341.54843046595,\r\n    \"Y\": 373501.75675014511\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 292802.0165646642,\r\n    \"Y\": 458708.27169776277\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 307826.2240820679,\r\n    \"Y\": 373501.75675014482\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 88259.394528643534,\r\n    \"Y\": 266158.75400929537\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 128654.80602317447,\r\n    \"Y\": 247322.06427507303\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 178046.709200828,\r\n    \"Y\": 458708.27169776306\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 178046.70920082778,\r\n    \"Y\": 373501.75675014511\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 387318.78616051091,\r\n    \"Y\": 295663.50596845557\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 342764.18656167487,\r\n    \"Y\": 269939.89589643176\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 396094.81789105106,\r\n    \"Y\": 245892.15676665437\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 335792.32867806341,\r\n    \"Y\": 235259.20091452345\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 396094.8178910503,\r\n    \"Y\": -399.94279048528523\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 350594.58707337733,\r\n    \"Y\": -399.94279048513977\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 296424.973387351,\r\n    \"Y\": -73033.220038319341\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 287009.36499443959,\r\n    \"Y\": -19634.651338959968\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 248739.3461891342,\r\n    \"Y\": -96637.823536329422\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 248739.34618913426,\r\n    \"Y\": -46371.983608713337\r\n  }\r\n}\r\n  ],\r\n  [\r\n    {\r\n  \"ConcreteType\": \"PrimitiveGeometry.Geo.Line, PrimitiveGeometry\",\r\n  \"StartPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 123213.87405164735,\r\n    \"Y\": 50389.583386404644\r\n  },\r\n  \"EndPoint\": {\r\n    \"ConcreteType\": \"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\r\n    \"X\": 156642.20163974687,\r\n    \"Y\": 83817.910974504135\r\n  }\r\n}\r\n  ]\r\n]",
      "NodeType": "ExtensionNode",
      "Id": "7284e476f0304950b971d8c127beff6b",
      "Inputs": [
        {
          "Id": "9cf762c3119d4e2b9dce2a933b92f3b5",
          "Name": ">",
          "Description": "Data to sample and store in the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83cf1e6c4dfb4a06a784b67ceabf324d",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Store data passing through this node to the Dynamo file. Return the stored data if the input is null."
    }
  ],
  "Connectors": [
    {
      "Start": "85bc84ed8b25409c917c8fdae3c247c4",
      "End": "95d5e955f0dd430496dfb6d07075a055",
      "Id": "904d334df4464581b1d1602f941d3ce4",
      "IsHidden": "False"
    },
    {
      "Start": "85bc84ed8b25409c917c8fdae3c247c4",
      "End": "ca839e9a2d974c3f9598ecf4254ded71",
      "Id": "e522e3a35f7f4e18a6e5888ac2d6b7a0",
      "IsHidden": "False"
    },
    {
      "Start": "b173a7c5de0e461293fbb6727dc4673d",
      "End": "38ab2e4b0ff84c5a962024cb10d47bf3",
      "Id": "2fe4e92f8e2e4095bb1bd007cfcb5608",
      "IsHidden": "False"
    },
    {
      "Start": "be914a5a7483412c91bf91523f663fe3",
      "End": "e0928d3873914c3f96032c74473154ed",
      "Id": "3c200366dbdc40198f9d8c69d7d77387",
      "IsHidden": "False"
    },
    {
      "Start": "409ff4d108b7401f997c955122418562",
      "End": "6a758da51c164bf18d9a281313f680e0",
      "Id": "f9b19c1cbb1043cf80843247fe7291bd",
      "IsHidden": "False"
    },
    {
      "Start": "8bb86f1892594da5a1604b15a2da017f",
      "End": "181a3e32acc5418182caa11dcf9c493c",
      "Id": "5de0d3216a6d409dac713243b65313e9",
      "IsHidden": "False"
    },
    {
      "Start": "188f8bd48e2c403bb9f93af9bce1c230",
      "End": "fd083403943846f88719a3c07ea187c4",
      "Id": "b2af9a5385e94758a1e29fe6e3761e9e",
      "IsHidden": "False"
    },
    {
      "Start": "188f8bd48e2c403bb9f93af9bce1c230",
      "End": "a9b42676a8e342768fa580b9a88c1076",
      "Id": "a4e4c98389c24c3883da8967061d60da",
      "IsHidden": "False"
    },
    {
      "Start": "44c2cb59ab2148cc963f96888a180e0b",
      "End": "b6014ac26ebf4f9eb29105550e4a89a3",
      "Id": "d1ccbef6215c48e29cf70e6d5c1b33bd",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "027c4a466fa84774b0e0e0422738f1ed",
      "Id": "d5977b8788db4204a29416054494a639",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "20030da5f05d4a11a9af085f8133ce0c",
      "Id": "dbb33ff35b19487389db5e9810ea6728",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "7a7e013d4d304a6d8c169f26e7d243cd",
      "Id": "1c663363863f4275a377a1b5cc51ad5d",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "b2973476be5a47ae8ecfd631e630f6f6",
      "Id": "09f1db1bc3ae4274a277b5a79b2c817f",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "15c7b63c6d8c439c91837930e138a1d3",
      "Id": "ddbf2de9cdb94d9d8d92f4e8f1b6e9b6",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "189c2ab2ebe34ec687d6e288f8a822c3",
      "Id": "45756d196e1f446daf025d86028cc77e",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "d808ec4e3c9f4ddf8489d2f12ae993ef",
      "Id": "6a9339b3200d4f1da4af67877115a563",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "004021ef92744f1f92dd289a5d177396",
      "Id": "4aa26577159e41a08e913df0ce3a1378",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "3393d45eace647e6ad27ef031851fc4a",
      "Id": "605c4433f5064b2da681e72123bedb29",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "a6bc685f842141dfbf599bf16b360964",
      "Id": "375b762471344b808bbd1a3203a9fbba",
      "IsHidden": "False"
    },
    {
      "Start": "9b5b4b92f803413a84abc21d0bb466c4",
      "End": "24936060d57f49ef92539aa4e18f0e22",
      "Id": "2c7ce283cfd247adb6eb4cec47c28d85",
      "IsHidden": "False"
    },
    {
      "Start": "6ac5857247024b55bc152b2fbe3fcd88",
      "End": "6aba6b282333476184372d98c37832e9",
      "Id": "f444e9305eae48afa61960bc40a2fd05",
      "IsHidden": "False"
    },
    {
      "Start": "1c92ece7c0c24630a34629d3ae97d518",
      "End": "17611d2d14fa44c691f987dc4d8968d4",
      "Id": "f9d68f014f984415b7b0f6043a0da140",
      "IsHidden": "False"
    },
    {
      "Start": "5a7989fcbf8c4038ab07a86416508517",
      "End": "9cf762c3119d4e2b9dce2a933b92f3b5",
      "Id": "a21103ac4b36476284cbedc259a01731",
      "IsHidden": "False"
    },
    {
      "Start": "7ef8bc069e9b4d91baa4d87f21fc76f6",
      "End": "79ed8e3e47e24ef19458ebcfd59a93a4",
      "Id": "2a4c910f94154b64bdc6ca4380efba15",
      "IsHidden": "False"
    },
    {
      "Start": "96237214bc814b2891305ed34689d82c",
      "End": "e2b1a682fb2846ba97722ec79f90bb8d",
      "Id": "cea38f39270d4a64be04bfd15d9b1331",
      "IsHidden": "False"
    },
    {
      "Start": "17baeefe45e14708b1098294b21f3a9d",
      "End": "45f98f79277d4870b5f86af3d71ac4ec",
      "Id": "5f78f034d5644a8a92b07226746e7708",
      "IsHidden": "False"
    },
    {
      "Start": "9700774d6d784c6f93d0945e2fbeb2ce",
      "End": "964c455c4964425a874809fb132cff89",
      "Id": "0f298a7494294743ba0fd227b41c33dc",
      "IsHidden": "False"
    },
    {
      "Start": "27254886212b47209e7bc73272a4ce6b",
      "End": "c19f53e8a7ae4c9da7c46a3a924acecb",
      "Id": "65543d5ff36e407e9d57b7e8fc6fa2a3",
      "IsHidden": "False"
    },
    {
      "Start": "27254886212b47209e7bc73272a4ce6b",
      "End": "2dc20422f18848daa460e0865bae1f7b",
      "Id": "a784218f5ac2417cbe1b5a646bfd1908",
      "IsHidden": "False"
    },
    {
      "Start": "27254886212b47209e7bc73272a4ce6b",
      "End": "37766c0da5224452b25f46ed5b4eddeb",
      "Id": "76cf071ff9f34baaa14c6c770f29fddf",
      "IsHidden": "False"
    },
    {
      "Start": "5fb263b9fcf041ebb69098af1c670870",
      "End": "a74d3afafffd475bacfab352962c9755",
      "Id": "be9f8449dc144fe3b53862987fb42521",
      "IsHidden": "False"
    },
    {
      "Start": "5fb263b9fcf041ebb69098af1c670870",
      "End": "ba2c06eee6054cc4af37b8f0db325e08",
      "Id": "5961f9dff1394bf49b22c433fcc4068b",
      "IsHidden": "False"
    },
    {
      "Start": "7cc39dcd8a0848a59f6f4040419cf8c8",
      "End": "2882615642b64f37be304d1051aa2bbc",
      "Id": "f940bc4bc05c4d0fa752ba768fc4fa99",
      "IsHidden": "False"
    },
    {
      "Start": "4e20b17d3fbc44c78a59f36169f11128",
      "End": "3d91b0e5ee5e4363a1e97de04cb23934",
      "Id": "657fcd780fc84b219f6dd0cf6d120eaf",
      "IsHidden": "False"
    },
    {
      "Start": "e6612c524637457dbb86089373fc3805",
      "End": "0de71b2a3f9c4614a3da26a2389982cd",
      "Id": "ed2813ec43ff420194820d9c1dbbd322",
      "IsHidden": "False"
    },
    {
      "Start": "76c713dc568441d88aefdbeddcbd2e45",
      "End": "1401476ad6554e9eb42e338be051bad6",
      "Id": "f04f0738b52f4fc680204caf24a8252a",
      "IsHidden": "False"
    },
    {
      "Start": "8b6f5236b216446388b33fb9df583df1",
      "End": "355ef20054524eb78987212f1aa6a75c",
      "Id": "96a56609eecb42428072c58a01c5bd4b",
      "IsHidden": "False"
    },
    {
      "Start": "d667f211e12a4aae88a013247c509b0a",
      "End": "3bec41ae86284977830ec55eb1cf1cf4",
      "Id": "ffa22a104a3542e89985bc9670834940",
      "IsHidden": "False"
    },
    {
      "Start": "1708f6496dac44dba5e2c88004725463",
      "End": "903d2be61218467a9231170429a0ee1a",
      "Id": "79a0eb202a5246f1bf352e64d4a374e7",
      "IsHidden": "False"
    },
    {
      "Start": "1708f6496dac44dba5e2c88004725463",
      "End": "c71877f6a4264b7dbed31d85c9fcbc18",
      "Id": "3098b47d9f724f4b828f359568e71457",
      "IsHidden": "False"
    },
    {
      "Start": "e809f993f52e41f08fd0b132e2ef50e6",
      "End": "f2529aeea6fa4b77a068eac830949718",
      "Id": "782394650d3b4cf6a5d1600c4c8089a8",
      "IsHidden": "False"
    },
    {
      "Start": "3debcf92f34344318c1352981e9a313a",
      "End": "f7f5d8a77f7f4a7fb3f7cf7710592549",
      "Id": "5f19ca994a754d5f805a5bed81631bbb",
      "IsHidden": "False"
    },
    {
      "Start": "ff6a02201a624649b059cbb540332a33",
      "End": "e20385b475834b14b7a21e794d7feae3",
      "Id": "a9a99bcc561e4d5fb9efc4f1769eb541",
      "IsHidden": "False"
    },
    {
      "Start": "ff6a02201a624649b059cbb540332a33",
      "End": "e5a0626a08d741d2aa77c09fa99da8fe",
      "Id": "f6cf93b079754d5ba23259871a73ff86",
      "IsHidden": "False"
    },
    {
      "Start": "915f420c6c474b2cb6a26eea555b3aed",
      "End": "01ca60c5f6674576b5d7748f731a8b8e",
      "Id": "29d3427aedf84682a308fca2e48c6539",
      "IsHidden": "False"
    },
    {
      "Start": "915f420c6c474b2cb6a26eea555b3aed",
      "End": "f7c58df1e1ca417abfaca3979bba5b5f",
      "Id": "93c2443d12c14c7d8963efb618bcd685",
      "IsHidden": "False"
    },
    {
      "Start": "915f420c6c474b2cb6a26eea555b3aed",
      "End": "1524cd53113d4ed7b2698d7ef2ab1fa1",
      "Id": "d27811e22a3c4901a90a68c138e3c601",
      "IsHidden": "False"
    },
    {
      "Start": "df5fa793abbc40fd8e973113bf822c62",
      "End": "c3190aa8d5aa48178243d3288e8d1971",
      "Id": "4491480796194127a85378753e0d0af7",
      "IsHidden": "False"
    },
    {
      "Start": "828ab42fc18545cd907eb78b93579050",
      "End": "89034d38eb0b4ea595aa76a5da34f22c",
      "Id": "9cf97bc069b34e43bdc4f584793c9274",
      "IsHidden": "False"
    },
    {
      "Start": "b941ce892dc8471cb643018777e1c591",
      "End": "4446f2ae47ac419a94bbfad0a69287dd",
      "Id": "583baa999cc04f95bb04ca098914d80c",
      "IsHidden": "False"
    },
    {
      "Start": "b941ce892dc8471cb643018777e1c591",
      "End": "a25c841e7b2d4442a764f29599a94f59",
      "Id": "4994a0f7324b4198805648a29dbcea20",
      "IsHidden": "False"
    },
    {
      "Start": "56653b32aad140569d0a1c109a26d849",
      "End": "4c0e00a0a2aa497f9b2bdc970facc532",
      "Id": "f3035471c0df44d4adafa8969e29cb65",
      "IsHidden": "False"
    },
    {
      "Start": "3da6a23f1ff441aa93819ba84b95ed6c",
      "End": "b8a016c200224471b8e4e5485b0ac0ad",
      "Id": "58a3158cd2484dbbb172dd0c26ff4544",
      "IsHidden": "False"
    },
    {
      "Start": "3da6a23f1ff441aa93819ba84b95ed6c",
      "End": "d00c8b6e0fd741b89293ad14c73af5bb",
      "Id": "6984434f1da44ad5a9c1079e4a841ea2",
      "IsHidden": "False"
    },
    {
      "Start": "3ca36ee5e2de4397b8c9b1c3944e3695",
      "End": "58e7c2d3f7644c3389502fa4d50ba14c",
      "Id": "52ae015fdaa14b5c8dfe44092ba03abd",
      "IsHidden": "False"
    },
    {
      "Start": "3ca36ee5e2de4397b8c9b1c3944e3695",
      "End": "a33295c3cf2a494dad0ce615131e4b52",
      "Id": "9215f27c8de44c6682c05e8b48239b64",
      "IsHidden": "False"
    },
    {
      "Start": "5e17b8e5a3bf484c9641d9da7140780b",
      "End": "c8b7ab10bbd14638aac890858b09995f",
      "Id": "f3826d9b565149fba94acffd2ddb0bbc",
      "IsHidden": "False"
    },
    {
      "Start": "770ef0aa7e02493880529a3bee87beed",
      "End": "6d769b9666c640959b93cd7c9f07cdfa",
      "Id": "4432fb71694c40929c297d3410135b70",
      "IsHidden": "False"
    },
    {
      "Start": "70af3da058ee48efb488fc5882bb1ea8",
      "End": "e578ba42145e4058aa9a0659e4400654",
      "Id": "26a6d427f7ce419fbc90c9056850b8af",
      "IsHidden": "False"
    },
    {
      "Start": "49cd695167a14a2081e994e319e61643",
      "End": "999fb8af3ed14479afe0d29ec1e2f589",
      "Id": "7d5f5850a1f24b9fa02e84a138bfa1ac",
      "IsHidden": "False"
    },
    {
      "Start": "692049fd76c9488aaa5a8140cbfe888e",
      "End": "5b55355cb62f49babb42f0fd8b5dc628",
      "Id": "27c55223c51a403ca31978a3b516d435",
      "IsHidden": "False"
    },
    {
      "Start": "3d01dd4fcd9c42a98b1a16c1659859cc",
      "End": "e7b548886d61417da7551290a8be9411",
      "Id": "eb8d2358ef6746388d644fc6226bc17d",
      "IsHidden": "False"
    },
    {
      "Start": "9426d0c66b314c00926ab3e9462f5842",
      "End": "dc0d1edb2fd646e18a3e882442a8ad7e",
      "Id": "e5479ea9c6134a9cb5d86cee329e66aa",
      "IsHidden": "False"
    },
    {
      "Start": "7157152039d0421bbbe6bd678ccc9e69",
      "End": "33cf0914a69742068c5995594712a594",
      "Id": "338bfd57c7594ee5b88f20923c8aee60",
      "IsHidden": "False"
    },
    {
      "Start": "54ea807b553f4f2da49c7b0110f0c40d",
      "End": "41fd7ade7d7c47728c7ddfb523906b92",
      "Id": "b9bdaebf1b254e1695a3b4dc7f5260ac",
      "IsHidden": "False"
    },
    {
      "Start": "8ccec4a375bf4d5c9b0fd02696d86904",
      "End": "c60bbbb5fd5940f1924c4112216639d6",
      "Id": "2e5d578d435f4b0b85480ee269a2e8c7",
      "IsHidden": "False"
    },
    {
      "Start": "8ccec4a375bf4d5c9b0fd02696d86904",
      "End": "52b2869782ca4a309ec7177ef22f03d7",
      "Id": "ab7ddb4bdc2645f397665268ad799123",
      "IsHidden": "False"
    },
    {
      "Start": "41d6c6091eb043b1b06e1639351618af",
      "End": "69825cee2e2b49ba99af4642e85177f2",
      "Id": "beb734390ed444369022f8cfb1df3929",
      "IsHidden": "False"
    },
    {
      "Start": "5ab08011496f4091a18e0d30bf97fc42",
      "End": "225328089f384595a42dbe6aae990d4f",
      "Id": "429eb76f7a6b46dd8508a43476ba7965",
      "IsHidden": "False"
    },
    {
      "Start": "a7a312da060f4031946bd09f270a3dc5",
      "End": "99c1cd9f4b854f5394a0eca78c051043",
      "Id": "2dc658a539e643fd9399864ee2b7ed27",
      "IsHidden": "False"
    },
    {
      "Start": "c14a042cbd2f499e8dd73fe3cd566a5a",
      "End": "b3316bc03da849be94bee99c3357964c",
      "Id": "904d24a0e909432ab8cbc7e2c52915f8",
      "IsHidden": "False"
    },
    {
      "Start": "c14a042cbd2f499e8dd73fe3cd566a5a",
      "End": "b316264930044c099d0402e09339a119",
      "Id": "87dd180fb94b4df89bc2a56740fa1dcb",
      "IsHidden": "False"
    },
    {
      "Start": "c14a042cbd2f499e8dd73fe3cd566a5a",
      "End": "c9533bdcd09b40788aebee35521a2695",
      "Id": "9151d3d6cba44a8786625be8ae77dab2",
      "IsHidden": "False"
    },
    {
      "Start": "c14a042cbd2f499e8dd73fe3cd566a5a",
      "End": "1666ff29b60d4c1ebcac9ab0396b347e",
      "Id": "494b926715354347b8cc50b18effcb34",
      "IsHidden": "False"
    },
    {
      "Start": "df1534d160fe4fcebeac7b46b42c6cb8",
      "End": "dcef418c78fc4e49afcaaf82e4ef7a13",
      "Id": "dff0b7aeefdf4b3bb49078c8204d3fc6",
      "IsHidden": "False"
    },
    {
      "Start": "1de8c4e7fde34ca68d65dd471d82a099",
      "End": "2401e48fba394776845d847cd76c6bde",
      "Id": "cb94edc9b5fe46228a0076a4bf49b16c",
      "IsHidden": "False"
    },
    {
      "Start": "c5f78355f8f04e5e81a2ec580512fa04",
      "End": "3e2f7471f4a84571b1b3619e22f19b06",
      "Id": "6abb15f1d4704cd3b5c071fe244d5410",
      "IsHidden": "False"
    },
    {
      "Start": "360f7c788d0d4549b0e58280e9285211",
      "End": "021577eb3a64448d8908e49e7453eb32",
      "Id": "6ee63295cb0542f5a4b0afbf09916500",
      "IsHidden": "False"
    },
    {
      "Start": "360f7c788d0d4549b0e58280e9285211",
      "End": "81161837480f4f2081fb53083516c465",
      "Id": "c072e8d41b134d8992a1be4803009687",
      "IsHidden": "False"
    },
    {
      "Start": "6a1fd5f9e04c419484e64312a1442d0f",
      "End": "ca2ba5975ce542c0bfc4540db12cad3e",
      "Id": "839a5ba4e8f948a78f9aa8de2a9b09b1",
      "IsHidden": "False"
    },
    {
      "Start": "6a1fd5f9e04c419484e64312a1442d0f",
      "End": "98f8db643f9b4d52a34d409e39447c8c",
      "Id": "39c60f383c814fd1ab9f6cafc89eb175",
      "IsHidden": "False"
    },
    {
      "Start": "229906236b9d45789c7a802e5572f255",
      "End": "48e0607e3fd441ea8e9aa208dd9a2e4e",
      "Id": "58b33aeaed9a4d3ea7634ba937a2f744",
      "IsHidden": "False"
    },
    {
      "Start": "f6836ca016674916a7e63a8e63e277b5",
      "End": "c730de13949148c1af5ae1a367948128",
      "Id": "7e45fac61565400bbaa2234862aa0c98",
      "IsHidden": "False"
    },
    {
      "Start": "da5e6f55b8254f84bf35e707ead6ded6",
      "End": "6988d37585c740aea29e9e0a60985409",
      "Id": "8e5b4c3b347741acb01783996edb86d9",
      "IsHidden": "False"
    },
    {
      "Start": "6ce4d4892cee47a18af946e39c9542b5",
      "End": "2d3710a9d7bc43ecb0b79b4fbb186742",
      "Id": "d778753786a847e2924051ec2ee7b00b",
      "IsHidden": "False"
    },
    {
      "Start": "6ce4d4892cee47a18af946e39c9542b5",
      "End": "2de019e59b01407691a505671c6da4aa",
      "Id": "2562fa3ce1724153b4a2d97423330d8f",
      "IsHidden": "False"
    },
    {
      "Start": "6ce4d4892cee47a18af946e39c9542b5",
      "End": "7e2eef2eb0b343e4a3f5b847a04194e6",
      "Id": "2151dcdae04f4f5da797afc8190ef234",
      "IsHidden": "False"
    },
    {
      "Start": "6ce4d4892cee47a18af946e39c9542b5",
      "End": "e4422847847447b79e61b9cfd1a44857",
      "Id": "d4e4e713cf1544f2b618ca5b38c8ea72",
      "IsHidden": "False"
    },
    {
      "Start": "6ce4d4892cee47a18af946e39c9542b5",
      "End": "9b59679ede8a45b3bb2c4a0d566b4bfe",
      "Id": "bccb86e51ac548d2aebfc5fb8e895c3e",
      "IsHidden": "False"
    },
    {
      "Start": "6ce4d4892cee47a18af946e39c9542b5",
      "End": "e3a378de416e4c6995cb311054002cfc",
      "Id": "bbb0d6477dc440e9a36d7157a5cc7749",
      "IsHidden": "False"
    },
    {
      "Start": "6ce4d4892cee47a18af946e39c9542b5",
      "End": "584547d9897244bebe23691ee3e8a3e4",
      "Id": "3ef76254d414431388677e497fb7220a",
      "IsHidden": "False"
    },
    {
      "Start": "a804b110ce044696aaf167d8cbf616d5",
      "End": "b59cebdee4444bba9f925277bdc53585",
      "Id": "41d71d991b97442ba60d1d1b08c4c7a4",
      "IsHidden": "False"
    },
    {
      "Start": "e9fb531dbdd54768b71d05f2077c3f6e",
      "End": "7c1fd1b37f99457faba4157dcc28586b",
      "Id": "3d93a653bf524c4ba13df0fe954d690d",
      "IsHidden": "False"
    },
    {
      "Start": "7b30ee03c826451389e4fc15118c5be5",
      "End": "a8f64cc2213a4b169675c70eac751bd1",
      "Id": "761b12c2b79c41c5916c5558cfd59512",
      "IsHidden": "False"
    },
    {
      "Start": "4a8dc33e6eaa45c79bc0d997564cea3e",
      "End": "eda0f281c1ff4ce8bc7ef77faf85084b",
      "Id": "f332bc78311b4065940b90a7f896307f",
      "IsHidden": "False"
    },
    {
      "Start": "8a3afbef8a9b400ea5ba2a3dc17ad4b6",
      "End": "033efc2fa09d40849b9ba7ac72f5614a",
      "Id": "c0fe4a2bc7e449ff8760fa961335d804",
      "IsHidden": "False"
    },
    {
      "Start": "bc8a9f21a7b544ada2b05d906936343d",
      "End": "e2fa13cbe60d4eff918b5474946a8154",
      "Id": "a95dabe0e2834820841f399abe3265a8",
      "IsHidden": "False"
    },
    {
      "Start": "7117250bc9ec4058a16922e42b7dcbfe",
      "End": "75c3c298d3ab432cb6555ce571c19887",
      "Id": "d2e248c05bf74beb816a3de64869e5ab",
      "IsHidden": "False"
    },
    {
      "Start": "01c247087c2e4ed5b21106c1d8984eb9",
      "End": "ca7d449bc93645e397665b37e550bee9",
      "Id": "bb9504e0211b43f784658482faf76210",
      "IsHidden": "False"
    },
    {
      "Start": "56339ad413c241afb300ecde65c96911",
      "End": "33e8c8ca3dd44969a49ab98e0197ffdc",
      "Id": "67f806035c2a4a8caf64cdd31c99dd78",
      "IsHidden": "False"
    },
    {
      "Start": "d0f5df2888ae42e3abd3e00f98f574ce",
      "End": "71488e70f8e648999eb2398a9a2077d2",
      "Id": "c0a2c802d0034f309139e73f86e5f808",
      "IsHidden": "False"
    },
    {
      "Start": "7b929116dd58407f8d3a4e74b448115b",
      "End": "f71e0200aea849dcadc8f7ad352f6583",
      "Id": "2b381bc2c4a346fb9cbfb1222e016101",
      "IsHidden": "False"
    },
    {
      "Start": "7b929116dd58407f8d3a4e74b448115b",
      "End": "c527361e8cc546e2882d99b4a7b5c227",
      "Id": "b5f58d1476eb4c2ebf79510a9ad52f76",
      "IsHidden": "False"
    },
    {
      "Start": "3aa0cf36e24c4e65a377045fc9a40326",
      "End": "cdf2c7d4d1eb4ce5808bd8fa6662d4ee",
      "Id": "34e3c52592d04b5daea09185eaed9767",
      "IsHidden": "False"
    },
    {
      "Start": "71b7715097e147c4bb6afe97ec1300b8",
      "End": "2ef21ddc937d421ca99788f093500d0c",
      "Id": "126f07b5172c4dad8b7ec150b0be80c6",
      "IsHidden": "False"
    },
    {
      "Start": "2f450f39ddd44bd099e0225f2d2fbbc1",
      "End": "3ae9856a44954cdf9630e8497a1333bc",
      "Id": "77411e7b42644ba8b28920a197f4be1c",
      "IsHidden": "False"
    },
    {
      "Start": "2f450f39ddd44bd099e0225f2d2fbbc1",
      "End": "7cb2309877ca4768b1f73b357f397e3f",
      "Id": "5919b8b5b2b344029b1615686ffeb348",
      "IsHidden": "False"
    },
    {
      "Start": "2f450f39ddd44bd099e0225f2d2fbbc1",
      "End": "19246fb0bb904848abd76063654ed87b",
      "Id": "58ee27d8967b4be383e24d64fd4d97d8",
      "IsHidden": "False"
    },
    {
      "Start": "b416dd74c8f945499f9af93484b00156",
      "End": "a12a2cd786cc47d0b0cec8d9e38286a8",
      "Id": "17ad5afcba3049c89e7ffc38121d2650",
      "IsHidden": "False"
    },
    {
      "Start": "b416dd74c8f945499f9af93484b00156",
      "End": "71bac5dc131a42ecacb4aa14fb1f9960",
      "Id": "ba08999521c248ed891f6137a0836584",
      "IsHidden": "False"
    },
    {
      "Start": "12987339c635429eb4a27cb5bc1d6217",
      "End": "2435cdd7389c4dfb98f3b5f206fb64a5",
      "Id": "dc83d473614140a8837b94be0099749f",
      "IsHidden": "False"
    },
    {
      "Start": "c1ea0a5565d04721906741b7dce0e65f",
      "End": "f1bc26f1efcf447a91b83027c39009f0",
      "Id": "dc171c657c9e4630b7557b6b89861f3c",
      "IsHidden": "False"
    },
    {
      "Start": "76e876a3388b4c72a40841afcf707d93",
      "End": "59261c39ec654ecb88faeafc756e8b28",
      "Id": "2695396ba54449cea1420586995b5bfe",
      "IsHidden": "False"
    },
    {
      "Start": "76e876a3388b4c72a40841afcf707d93",
      "End": "514955ba08124833a8a75f619c640bf0",
      "Id": "bc11c354574c41f1b02ad70973795d11",
      "IsHidden": "False"
    },
    {
      "Start": "7bdf12cfd34448df9d7ec73e8650b721",
      "End": "4f3b1550057149c79538d13119498b1c",
      "Id": "8d453c9e79284667837595df1a3c0c25",
      "IsHidden": "False"
    },
    {
      "Start": "6fd5d0b46fba44a091a921d13c4babb2",
      "End": "b5373e75630048f187691139c8b7444d",
      "Id": "ecd6738d7d3145a1b6ece555587a35cb",
      "IsHidden": "False"
    },
    {
      "Start": "5d9e2430c09a4f91b928ef0e2a6afc4e",
      "End": "d8e6fa618ac141018f1f697016d23618",
      "Id": "2a24be778a0b414aad30732e0c1076b2",
      "IsHidden": "False"
    },
    {
      "Start": "df0aefde6a684382a9be30413868563d",
      "End": "5b5dd0f8122745d9bfad5e9a134eeb5e",
      "Id": "269b2fa880444c3fa515f5b4dd0b9d22",
      "IsHidden": "False"
    },
    {
      "Start": "df0aefde6a684382a9be30413868563d",
      "End": "7f49ac94b9d24c88a8ba97c5313ecffe",
      "Id": "47b27376831248fb9673b397b25d6f04",
      "IsHidden": "False"
    },
    {
      "Start": "df0aefde6a684382a9be30413868563d",
      "End": "1cefa01fa7c447d2a82519d8e93e828a",
      "Id": "50790e0eed5c41de9e0bdd740cfa52f2",
      "IsHidden": "False"
    },
    {
      "Start": "df0aefde6a684382a9be30413868563d",
      "End": "b33ac5d3a63e4c91a5291175ab07c16c",
      "Id": "8f0c610fec7944dda955b7736f81957f",
      "IsHidden": "False"
    },
    {
      "Start": "47c47d6844dd47c69ed376401d5a789f",
      "End": "868f4d4d531b4e3cb08deffd21b8f3f8",
      "Id": "489f46cb4f68413d98b3b3c60b17aa31",
      "IsHidden": "False"
    },
    {
      "Start": "0ae7e3169bb6498a90cab72c305ec1a7",
      "End": "9f87574800974c4fb3122e1b8554eb4c",
      "Id": "64f2bfdd31af440c8cee70a36a033f40",
      "IsHidden": "False"
    },
    {
      "Start": "0ae7e3169bb6498a90cab72c305ec1a7",
      "End": "7451e0219ce3403086c7bb5f23dbf53f",
      "Id": "b3bdbcf76ed24fa3b804afcb0e740828",
      "IsHidden": "False"
    },
    {
      "Start": "0ae7e3169bb6498a90cab72c305ec1a7",
      "End": "60c5882062b143858a6419c258f0462b",
      "Id": "a35d5204b6d24057a19aa47b97ad50ac",
      "IsHidden": "False"
    },
    {
      "Start": "ab506df54fff41de90fb776d61196a28",
      "End": "ef8ba13044b0469ba9545dc623a7b21c",
      "Id": "51dbfea612114207a16b8daeb258675e",
      "IsHidden": "False"
    },
    {
      "Start": "317a6404f9e849bb89d5549723a00613",
      "End": "e7ebc609044a4c7cb7dcec8fa18cab08",
      "Id": "09f5071bc6154dc0bc3049d581e78ff8",
      "IsHidden": "False"
    },
    {
      "Start": "7017526752ef44719249e45a5dc37244",
      "End": "932aa4c984e84f9387ab8ffcb1920217",
      "Id": "a0fe316bedd9437b8c965a38a963c6a1",
      "IsHidden": "False"
    },
    {
      "Start": "1862a64d839740e185d3968b0dcdaca2",
      "End": "0727e9574c724c4c9f7c30362036df31",
      "Id": "9aebc9e5e3104f5f826121db6c984f09",
      "IsHidden": "False"
    },
    {
      "Start": "1862a64d839740e185d3968b0dcdaca2",
      "End": "1223e170aa9244d7bd0158ec21c95b30",
      "Id": "1249fa28f4bf4f159ae5f00089c2e977",
      "IsHidden": "False"
    },
    {
      "Start": "63f720b7c0de414f9b25a424ef08819e",
      "End": "50b99a02e8ff471b9f6a6fe0401d827a",
      "Id": "0c0391c00b804c758d9c0d48d3375c91",
      "IsHidden": "False"
    },
    {
      "Start": "63f720b7c0de414f9b25a424ef08819e",
      "End": "561d8204ea4a405184a25f28ff156cda",
      "Id": "3d7e174864c04d34b72c59be8baed1b8",
      "IsHidden": "False"
    },
    {
      "Start": "63f720b7c0de414f9b25a424ef08819e",
      "End": "964652c854d64d0caf93b59757d1b70b",
      "Id": "cdd16cc5bc0b4d9490be7a4db19fc4e5",
      "IsHidden": "False"
    },
    {
      "Start": "4fc2fbb8aacc43168b051fd0fc5db396",
      "End": "cbec2c3dae6f4dda8ea46ed4cdf9711d",
      "Id": "8bb4c35a612c4df89d516baf4d35bac1",
      "IsHidden": "False"
    },
    {
      "Start": "94df5b457cc5400f8858e0020a9179ca",
      "End": "a9a58086a2494c6f911393a01086081e",
      "Id": "565253877a194fbf8c1c10ec9cafa3a6",
      "IsHidden": "False"
    },
    {
      "Start": "7e67e185f60148fab8a95881ca624da9",
      "End": "49503ac0acd842c3a8d443a1940c37bb",
      "Id": "b619e7d99522450b9c219cfb80cda612",
      "IsHidden": "False"
    },
    {
      "Start": "241e8b8322b34704a8a31945908590d2",
      "End": "d3dcc412276c4bebbfa379aebb044e72",
      "Id": "956b0ff253fd469587345405866d7df9",
      "IsHidden": "False"
    },
    {
      "Start": "fce032e6a9d9415eac98e2c9ef85044f",
      "End": "662e1fdcc7bc4f92817215fe2d220d75",
      "Id": "e1897904cad647bbab4ba12d48e7034d",
      "IsHidden": "False"
    },
    {
      "Start": "04a71045cfa14f6080ce867da17b69c5",
      "End": "1227c5160e154cf889ae9f1047693e4f",
      "Id": "0ec695d41b2c4800b2a5ef6fe21fffbf",
      "IsHidden": "False"
    },
    {
      "Start": "fd6a91fe7b3845ee87a72ca389ebc113",
      "End": "9b62b2ccfa274267aacac17598808178",
      "Id": "cd0d643727544eb290bf343f473566c1",
      "IsHidden": "False"
    },
    {
      "Start": "fd6a91fe7b3845ee87a72ca389ebc113",
      "End": "f9226c0768c043058ab117701c56c35a",
      "Id": "122717d9f845402ca90e8eed54ddbbe9",
      "IsHidden": "False"
    },
    {
      "Start": "d3abec68409d491dbfb1e7e9d1bd0ed2",
      "End": "4dd1f8325b3c484ea936022735fbd96c",
      "Id": "dec6d5eebc5641ee936273ee87600bcb",
      "IsHidden": "False"
    },
    {
      "Start": "d3abec68409d491dbfb1e7e9d1bd0ed2",
      "End": "47dc8915dc674bbba66dcab427396831",
      "Id": "49e36462b69546a2ae91e660fcf49ea6",
      "IsHidden": "False"
    },
    {
      "Start": "434ad1b555e243dda06a9ce4865708df",
      "End": "419d6af86ae745f5a6667700a9d31f9e",
      "Id": "ae4af623e4f842bebc6821a74395dbc7",
      "IsHidden": "False"
    },
    {
      "Start": "514a4f5bff9c46f9bc8cd6a490f27c1d",
      "End": "cffd2ec2372d43079d60d3750ddf9930",
      "Id": "98edf8baae404b9cb6b6cf6b43f1340c",
      "IsHidden": "False"
    },
    {
      "Start": "ca571b7ad49b473ab3888e218097aa0f",
      "End": "3b7627a58cd34fae8e4791e3dc13e106",
      "Id": "efc6d9d538704376b6b20f567a4beb33",
      "IsHidden": "False"
    },
    {
      "Start": "643a3ee090fe4217ac6e6db14f6694cd",
      "End": "ebb528e4df3d41ea8317a18d0b2ea908",
      "Id": "0f728784151543f6bc53638c82a6b978",
      "IsHidden": "False"
    },
    {
      "Start": "643a3ee090fe4217ac6e6db14f6694cd",
      "End": "0b94174e3929449796657ed54041b77b",
      "Id": "70b15327bff94489b547770df5278e79",
      "IsHidden": "False"
    },
    {
      "Start": "5d89d6e3bca24c56a9d8de9693c56106",
      "End": "a7fcc95e04c94e779c106907542230ec",
      "Id": "491120ef121c4cf69f64dfc9fa646464",
      "IsHidden": "False"
    },
    {
      "Start": "adc02d761e1748a8b9621b4424d82883",
      "End": "1a2ebe0d6eec43d6b7f9bea18a57af75",
      "Id": "8fd9766b047a4878b64afbd36e29144b",
      "IsHidden": "False"
    },
    {
      "Start": "a2c44cb8e59742c7b6e5dacf0b745114",
      "End": "f4cc158f88eb479699a35c60aa3242b8",
      "Id": "8546e0cef82f43e5a2fd01ecf2766ee6",
      "IsHidden": "False"
    },
    {
      "Start": "a2c44cb8e59742c7b6e5dacf0b745114",
      "End": "fb1425d4a93e43739e850f0dc8dc9180",
      "Id": "e91fd8d9f5d14d348ef078dc348371ab",
      "IsHidden": "False"
    },
    {
      "Start": "ee65f40db9b143bcbd1316defd978f7d",
      "End": "ca7e9a3336f14769b529a7ff3d1308cb",
      "Id": "3e46edf7455f410dbb79fb81289e8355",
      "IsHidden": "False"
    },
    {
      "Start": "ee65f40db9b143bcbd1316defd978f7d",
      "End": "f0ecf21b21814ff495f84fb27100db58",
      "Id": "049e63fcffb9438c8394a376e58a4fc7",
      "IsHidden": "False"
    },
    {
      "Start": "955501f4a6734a1cb68bf6e9990ac320",
      "End": "c1f13e3c4506453daefb37054d64c4e3",
      "Id": "8168823ab2d446b0bbe9343ccdcb275c",
      "IsHidden": "False"
    },
    {
      "Start": "171c6679a8844f3b829730b83c93ef95",
      "End": "5a7f0b76db9b44808e66f8f224f419d7",
      "Id": "af7198a00b3f4046bdcf4ac026644648",
      "IsHidden": "False"
    },
    {
      "Start": "abac09f401284d9882aae286415c5b08",
      "End": "9b5fbafcc9cd459aa4b67fb7198b563f",
      "Id": "54f9d4907f2240e8b1177846ee81906c",
      "IsHidden": "False"
    },
    {
      "Start": "abac09f401284d9882aae286415c5b08",
      "End": "81923982f80b4af689a1aadd95b2c4c1",
      "Id": "9de5f83068134203aabfc3965c119e38",
      "IsHidden": "False"
    },
    {
      "Start": "45197d4986934237998e6f99bd2c7f04",
      "End": "9094e69fe0c843c7834f5a00543dcbe2",
      "Id": "1a96ae16cf7e4daabf577856cd0f4ba5",
      "IsHidden": "False"
    },
    {
      "Start": "a21d69e45f774ef78ceb117b0424b3bf",
      "End": "4c31a44ac8874e0dab4c1e9d89f82600",
      "Id": "6d890bb83ff84f22bfe7bab882960064",
      "IsHidden": "False"
    },
    {
      "Start": "549f5746c70d4729856244b335a15178",
      "End": "a7a665b61c49452ebd2cdd173d43d248",
      "Id": "44c92acf957746a3aecf87d097372264",
      "IsHidden": "False"
    },
    {
      "Start": "664919b168084b65b79d1f62cd5ccc4b",
      "End": "a2e0484bb1414d86ab0e163fe727ed23",
      "Id": "2112cb67b1ce451f81a1d6211c8131f1",
      "IsHidden": "False"
    },
    {
      "Start": "b81d0d8a55804f088de88098b4a747e0",
      "End": "5ef5777fb51a4010be25cb3d10907100",
      "Id": "14e98881994c4d528b7455b20ae1855a",
      "IsHidden": "False"
    },
    {
      "Start": "f48e92b1fba840eabbddd0a328edb1dd",
      "End": "55c71658bd8d41a491be72800cda1742",
      "Id": "0effd8cfaeb8496385e80249b4ba47d8",
      "IsHidden": "False"
    },
    {
      "Start": "67afedface7a42bfa5ab1eacd07c6989",
      "End": "2ec9a1db1f9e4d4796593d2da4b47e03",
      "Id": "c6d6c52d717a450980bae5545060f96b",
      "IsHidden": "False"
    },
    {
      "Start": "7ee0f159874d4093a67c3fd835e7a1c5",
      "End": "2ed190dc297b4266876bd855bccc42df",
      "Id": "c0a9a285ba824ac3bfb1b69487f654db",
      "IsHidden": "False"
    },
    {
      "Start": "7ee0f159874d4093a67c3fd835e7a1c5",
      "End": "3cc9d488d13943eda613c637a200634d",
      "Id": "5efeb6b958d24a64b1dfa634edb857d6",
      "IsHidden": "False"
    },
    {
      "Start": "715bf92362994818a34a90a9022674e6",
      "End": "e59d3fa09836470badbd945346f73113",
      "Id": "a4cd43b3bb504e5780e30ddda7b66af2",
      "IsHidden": "False"
    },
    {
      "Start": "3f2f845783c04aa097197d34aee032ee",
      "End": "fed156308ce841c1826cba67cb3a0dae",
      "Id": "ee6df0ae71534bcbb68a9372e12d955b",
      "IsHidden": "False"
    },
    {
      "Start": "3f2f845783c04aa097197d34aee032ee",
      "End": "4d813170165e46d4adfb5d2621ac9f57",
      "Id": "8d012963b652420b966c758d6556810d",
      "IsHidden": "False"
    },
    {
      "Start": "04c215ec9cd84693947bc1de05b2b375",
      "End": "8b256980b3bf4a098dfea2caa6d96e2b",
      "Id": "ed1bbcac192b44ebad4ee83d1499d791",
      "IsHidden": "False"
    },
    {
      "Start": "70721c5d856a4cdf8050e406fd818faf",
      "End": "9024dea492da4351b28da0ac0585c827",
      "Id": "27f7e6533cb34a38a1622ffdd96253e0",
      "IsHidden": "False"
    },
    {
      "Start": "bc790588a1d34d66a6d3e92c2c42ad66",
      "End": "77636a11af9c425cad11f1dad9d16534",
      "Id": "7d9b088777db4463bd612243f696c074",
      "IsHidden": "False"
    },
    {
      "Start": "bc790588a1d34d66a6d3e92c2c42ad66",
      "End": "292e7751268b4ef38ae474d52bc0da3f",
      "Id": "1fb2c6e68d9f4817804679054a4bd123",
      "IsHidden": "False"
    },
    {
      "Start": "33f09b27279947b6b8745f2b6d7ec488",
      "End": "e947bea886844e7ba90e3d6ef46e9c52",
      "Id": "ab5448013b6c439d80265af9b03723f3",
      "IsHidden": "False"
    },
    {
      "Start": "280d2766c4bc421c878346481729cbfd",
      "End": "cdb5a475ee3d4146a24cafda12fd6b4f",
      "Id": "0fc1c6d7a93048e99789561692aa06a3",
      "IsHidden": "False"
    },
    {
      "Start": "280d2766c4bc421c878346481729cbfd",
      "End": "278c0e61ab914aa0a9bfde03544cfe15",
      "Id": "013f235e1378439688e65040c8e14dda",
      "IsHidden": "False"
    },
    {
      "Start": "212116bc070841a589a64caddcb9feed",
      "End": "5f6276a9058e4cc3868991362ac437fd",
      "Id": "88e103d0759546b6b29adcaa9a6e257e",
      "IsHidden": "False"
    },
    {
      "Start": "00e80a0e0f8746f5961178fbe36b4b4f",
      "End": "243aad659b374e8ca5ccca5039c86b6c",
      "Id": "7b747e8be9e244da87a1a440d412208f",
      "IsHidden": "False"
    },
    {
      "Start": "00e80a0e0f8746f5961178fbe36b4b4f",
      "End": "31c486a45d224eec8ebbb306a73cb77b",
      "Id": "fb51bab6ab6f4eb7a787a4ccc4d12284",
      "IsHidden": "False"
    },
    {
      "Start": "0dbb3757b6dc47ea8177ca335a5c4541",
      "End": "c46ad18b92654fe09201352e7dacd144",
      "Id": "80905d3fca3c498d852c8158500704b6",
      "IsHidden": "False"
    },
    {
      "Start": "0dbb3757b6dc47ea8177ca335a5c4541",
      "End": "7b0c2fc69588465bbbcdbb170a4c7826",
      "Id": "afe3612d36144d588c12dc30d19ba277",
      "IsHidden": "False"
    },
    {
      "Start": "5ead4ef422ff4f699a048303500b8b02",
      "End": "6fa13a1ae7a1484fa1446cf27b76e10a",
      "Id": "c3d152b90ac14528b5cfe72fa2ac9513",
      "IsHidden": "False"
    },
    {
      "Start": "5ead4ef422ff4f699a048303500b8b02",
      "End": "9527741d51ae42259dc9db35661c8165",
      "Id": "eb8df2d1d9cd495da955c412f8ac25c7",
      "IsHidden": "False"
    },
    {
      "Start": "5ead4ef422ff4f699a048303500b8b02",
      "End": "21f6d6fd2b8f425ab14765e84169ca97",
      "Id": "f9c9a86c0aa64f63a5506ee1fafe40c5",
      "IsHidden": "False"
    },
    {
      "Start": "5ead4ef422ff4f699a048303500b8b02",
      "End": "d446345a74db43099ff84c75aff0c5c8",
      "Id": "c2b73afdf47d4b89a35295c8f1189b07",
      "IsHidden": "False"
    },
    {
      "Start": "5ead4ef422ff4f699a048303500b8b02",
      "End": "43e8f1e2047e41f5882e0e658fa99d63",
      "Id": "401e830f369a41449dc28c5d4fb681dd",
      "IsHidden": "False"
    },
    {
      "Start": "6a5abb2352f24fc4b2912135084a169b",
      "End": "ab1a6aabef454c6c8d3ba39f97d0b3bd",
      "Id": "3044dfcf10c54e5ead28bfa443d72088",
      "IsHidden": "False"
    },
    {
      "Start": "6a5abb2352f24fc4b2912135084a169b",
      "End": "61aca5c93c6643f78de26af34316158c",
      "Id": "8641f8029e6943808718b472774338c9",
      "IsHidden": "False"
    },
    {
      "Start": "6a5abb2352f24fc4b2912135084a169b",
      "End": "b8a1ce44e65a4efd8b5230b0c98f7cda",
      "Id": "bb1aef744aeb4e219ec48e38e5d51fff",
      "IsHidden": "False"
    },
    {
      "Start": "f2d7d715c4944abba6187f84dee8bfba",
      "End": "a7695162012846139e135831244aa9bd",
      "Id": "eb40c6724c0345b193c6cd63d75c0256",
      "IsHidden": "False"
    },
    {
      "Start": "556d38ec3c6f4bea9bc420a0562fec2b",
      "End": "667a8e9429194423a1c372df2ee85655",
      "Id": "a6812823f4ab4f6b8b9f94400347302a",
      "IsHidden": "False"
    },
    {
      "Start": "4953b720672c46e7912020d1463907c0",
      "End": "7474e825abf24f5287b1051bf2c0463c",
      "Id": "3260650318564447960c136518502502",
      "IsHidden": "False"
    },
    {
      "Start": "ea05349dfcdd414dbda10eab7962c711",
      "End": "6edf1c6cd8704babbe2a3306811206ed",
      "Id": "6ec471268bbb4510bf8e546bd54af7bd",
      "IsHidden": "False"
    },
    {
      "Start": "a52094c5f9fd4ab28dcc009aab20285f",
      "End": "d9b24184382f4d64b4972336f4db234a",
      "Id": "5c60f3aebe384d68b1794132d514873e",
      "IsHidden": "False"
    },
    {
      "Start": "5850c2921c524a92a591d409dfccf1c6",
      "End": "f81f5cd6e82146afb348f71deeaf2156",
      "Id": "8a4ecb1bdb59456ebf7b68a33795d419",
      "IsHidden": "False"
    },
    {
      "Start": "30a25e01e5094b0a9c9c375fc756d2c3",
      "End": "2d9563fc96124cf98851621708e1cc70",
      "Id": "1170ef569f6e4551a05f3150a654e2e9",
      "IsHidden": "False"
    },
    {
      "Start": "0d4f73310b73427ca5dc0e67d8ba7b54",
      "End": "c760232b0c4e4644af285dbd4cfdfd07",
      "Id": "91eb99af79c94f968c2e890cee502cca",
      "IsHidden": "False"
    },
    {
      "Start": "4b62232e7ee04ab1b60b8d14a331888f",
      "End": "8c7cb98d91fe49fb9dafa7d0ee0ff93c",
      "Id": "1ab0aae5daa64a348c28b52c0493ce57",
      "IsHidden": "False"
    },
    {
      "Start": "8715aab782c9448886f5cc023762b68e",
      "End": "84d1aa08c4f54d029e3ce46fa374d91f",
      "Id": "b24e4488789f4f28aae9db9a10aac883",
      "IsHidden": "False"
    },
    {
      "Start": "72620c26c8c04c799edf9ed1e12bb5a2",
      "End": "29d15b06433b4640a4dd5349f43f27fd",
      "Id": "d8aff3ecba2740a5bc82695f3a3b0d57",
      "IsHidden": "False"
    },
    {
      "Start": "72620c26c8c04c799edf9ed1e12bb5a2",
      "End": "4b044e5e81d14212b4872343eaf7f4fc",
      "Id": "5638d2476f21400c804aad9f84f688b4",
      "IsHidden": "False"
    },
    {
      "Start": "b134eab3d7694dee851f2d6693bb166d",
      "End": "659e146e12f3426a971ad2ff939e2a1e",
      "Id": "30a0798b8b0345eda84feb6ab20d37a3",
      "IsHidden": "False"
    },
    {
      "Start": "b134eab3d7694dee851f2d6693bb166d",
      "End": "43ed56c88076460ea933d1443b034483",
      "Id": "5838884be63949f78bd8e24526877359",
      "IsHidden": "False"
    },
    {
      "Start": "2e95133bb1344387ba35d20ba74c15f4",
      "End": "5cd05ef6b50b46a6881176cf54e709d2",
      "Id": "0920c194f3504e62a70eecb7fdf38ce4",
      "IsHidden": "False"
    },
    {
      "Start": "fbd413f8d9cb4a77883428cd687a0805",
      "End": "04794455828a418d961874ceabb95f7c",
      "Id": "f623c27797434ed3be40fe54c1e11e18",
      "IsHidden": "False"
    },
    {
      "Start": "fbd413f8d9cb4a77883428cd687a0805",
      "End": "15d304f820464a5c949c0ed48af1de23",
      "Id": "80d2be9ff88e4de7afd4d1b719a41d8b",
      "IsHidden": "False"
    },
    {
      "Start": "78986c920aec456b889d3e959349de8e",
      "End": "b0ab79242ed04a7a8cc18a28ded4c47d",
      "Id": "0b9ab7421a054c5bbc19d081f0814f6a",
      "IsHidden": "False"
    },
    {
      "Start": "1890491b598b4e5c8d18a56df5e8e2ef",
      "End": "148e819ea7834ff3a614a665f5748d34",
      "Id": "d20cb914d6d94dbdb9a5844449929c46",
      "IsHidden": "False"
    },
    {
      "Start": "80f68e95d51a4bcaac6ec3a8a4f7e269",
      "End": "46a1aea9b2fa4945928174f09c30a539",
      "Id": "a8205f2e63a94d2aa09f85026ad4c487",
      "IsHidden": "False"
    },
    {
      "Start": "cb5ac9095ec54700b3670fa9c76d9325",
      "End": "b25d12fa553e4a078d93e80c0e911166",
      "Id": "609034e6272d4574911e75db1792dade",
      "IsHidden": "False"
    },
    {
      "Start": "b2ebd10d12684b5680d57b005a52291e",
      "End": "437cffd7bed64c489ba52fb8b564cfe2",
      "Id": "acf9a24bd52441bb8265e027e05ea524",
      "IsHidden": "False"
    },
    {
      "Start": "13ac091912a54f8f98f21dbb26363aeb",
      "End": "7477451816af40cbb92b077bb1591c20",
      "Id": "b183a786635e4ceb96c575cb24b9a2ff",
      "IsHidden": "False"
    },
    {
      "Start": "13ac091912a54f8f98f21dbb26363aeb",
      "End": "459e052ddaaf4c318d069b39b7d7933b",
      "Id": "d9d5f87160524ee6b2c770bb7c66f080",
      "IsHidden": "False"
    },
    {
      "Start": "115016ad3dd5421cbc56ddfc4e6f4cca",
      "End": "0cd92e59745e4ff1ac9d02525834b2ca",
      "Id": "09f8c2f851484b5f885be486523c1f56",
      "IsHidden": "False"
    },
    {
      "Start": "487b5bff74014c69a0ad8dd47dd5d71e",
      "End": "99071d6d57cc4a6abb8aec9cc9b80049",
      "Id": "11117c98e9ff4d5697c14fbd42b33ac3",
      "IsHidden": "False"
    },
    {
      "Start": "487b5bff74014c69a0ad8dd47dd5d71e",
      "End": "bdec22a6ab34469c94e4c43007050e02",
      "Id": "2f5c154e35bc4af3ab39235d2e77528e",
      "IsHidden": "False"
    },
    {
      "Start": "487b5bff74014c69a0ad8dd47dd5d71e",
      "End": "cf429622e3f849728073e1336a231a9e",
      "Id": "357934feacdc4b6fb67013361105bd9d",
      "IsHidden": "False"
    },
    {
      "Start": "8628ed8226294fa4ad64d0154e44bde6",
      "End": "6e40fb1a04504bfa851edaa7496d9727",
      "Id": "1e329698fca741c885905392e0c08273",
      "IsHidden": "False"
    },
    {
      "Start": "3fe3709dfdb0480e9c340667d2190351",
      "End": "40734d0dc93a413fb1acad069643de83",
      "Id": "89da48131aef4f348b18d02b4293a791",
      "IsHidden": "False"
    },
    {
      "Start": "3fe3709dfdb0480e9c340667d2190351",
      "End": "454af104f0834b8a84d552682d0da28d",
      "Id": "fa44f3f39c6c465e8c807d952b307cdd",
      "IsHidden": "False"
    },
    {
      "Start": "8d24d19ed1324d20bbde7d01a3836d66",
      "End": "a865801f90624426bb90bf4eb6b280f8",
      "Id": "f707834b93334bfda902a96d6236f9da",
      "IsHidden": "False"
    },
    {
      "Start": "8d24d19ed1324d20bbde7d01a3836d66",
      "End": "7a6430c538ff4e3095ed3331d434a04e",
      "Id": "e48888d70ff8409d8792cbf15a999bfa",
      "IsHidden": "False"
    },
    {
      "Start": "18b81fbcafa7475abc1abf8f5b732400",
      "End": "0a8845837d9747e1b6b4296681c73e9f",
      "Id": "60b8cd69f13d4a988a6a213f431c3770",
      "IsHidden": "False"
    },
    {
      "Start": "6a7b7467edd94846bb3b387d712ed19a",
      "End": "892bb485e91e43bbb7cf4afacce1c257",
      "Id": "1c11c13fce5d4f2792b36f4e66d79739",
      "IsHidden": "False"
    },
    {
      "Start": "592589d7e92e4d639a532f6353306c17",
      "End": "8d0f7da39f84486d9bba841a7d1b05c2",
      "Id": "a4e26947807a4b099c9e283860485772",
      "IsHidden": "False"
    },
    {
      "Start": "6e564c590c674017820664600f64d043",
      "End": "eb5e22b710f74f94b2bd5aedec102f89",
      "Id": "5332f6f9e290427fa051149467c4bfd3",
      "IsHidden": "False"
    },
    {
      "Start": "49e7cc576cb246c2b21752410cc0b57f",
      "End": "c41170c132404a9993efa6da97ad8e0d",
      "Id": "75e03293f3134a0bb7d1c531da2a3f27",
      "IsHidden": "False"
    },
    {
      "Start": "536ad58f7251428aab5649a19d005faa",
      "End": "7d0cb2f5de2a4507a1a37ca8b4cd7b94",
      "Id": "68ede20f764241f297a1c6a60b3536d6",
      "IsHidden": "False"
    },
    {
      "Start": "536ad58f7251428aab5649a19d005faa",
      "End": "823f497e9a544361a403ee51f250230f",
      "Id": "4bb0f9da72fb45fba908f616a1a58ddb",
      "IsHidden": "False"
    },
    {
      "Start": "6ca424ea1964410a8574abec947ab8e2",
      "End": "e9819b83a6f04532adc2481d936edb32",
      "Id": "5a28030a36a14aaabeae460c7f242e2b",
      "IsHidden": "False"
    },
    {
      "Start": "fd0dcb70a32c41f0bb1fb05f8b4cef18",
      "End": "32ae0b75143b4b6dba595f46b508d9b2",
      "Id": "478743a2361b4e9f94e8ebbd2b2a4d4d",
      "IsHidden": "False"
    },
    {
      "Start": "3d29b7c2adec48eca9c224ff851e12f9",
      "End": "6633f3a0908943789296b459c7a9842b",
      "Id": "d7b7afff66e5483bb8a8c992e9dd1e34",
      "IsHidden": "False"
    },
    {
      "Start": "3d29b7c2adec48eca9c224ff851e12f9",
      "End": "574312331d3141f791465487e42f48c7",
      "Id": "f055f25ed62b46ba9695e3156c8ce5ce",
      "IsHidden": "False"
    },
    {
      "Start": "74bfda6c766d4ff792a45349bd15fecf",
      "End": "c23e2234a32c4b6eb88f979c91efd23a",
      "Id": "1818aa8abe3d4ae2b1017b0e7e3c86a8",
      "IsHidden": "False"
    },
    {
      "Start": "a5f3ad6a32e14b7d8cd3cb3fe2f4cd90",
      "End": "b98b5edf93c443b6a4031ffbdfe1f0f4",
      "Id": "50025a9ab2f54d5296057294294f4b1a",
      "IsHidden": "False"
    },
    {
      "Start": "813017b5b13a4aaeb88e9f3d3d204c94",
      "End": "78a1235f553f4c82887c389e7ad2dc3b",
      "Id": "3d218ac024014944ab65ee741d8262fd",
      "IsHidden": "False"
    },
    {
      "Start": "9c974bfa20204355a34da50796a419d9",
      "End": "291f4636695343029129ce9e74311dc9",
      "Id": "280847c35c8e4e6193fe4dd658c7b59a",
      "IsHidden": "False"
    },
    {
      "Start": "99dc5a70f453427289b15d0bae77d6ed",
      "End": "4e10f954e4734fc18f850a4a49b3eb90",
      "Id": "7717dcf6f1c6483ea34fed16d4e05d7e",
      "IsHidden": "False"
    },
    {
      "Start": "4b40414290df44aa8351b055a8ed96df",
      "End": "a71c1544f84049e58cf93ed2f453342f",
      "Id": "f86bf3d65bb940a6853d3d64327dda0e",
      "IsHidden": "False"
    },
    {
      "Start": "a8f3d4164f244da59a35c31779485f1a",
      "End": "ed912581cb8f4cfca53f64f325ccbb42",
      "Id": "da9944d866044754a0996215b97adaa4",
      "IsHidden": "False"
    },
    {
      "Start": "a8f3d4164f244da59a35c31779485f1a",
      "End": "4e353071efe740d8a853f4a6cfe5767f",
      "Id": "394c08b0c34d4e5bb8e10bc6aedf7c4b",
      "IsHidden": "False"
    },
    {
      "Start": "19e291d807c84a8185ef7055c6a44509",
      "End": "6a6c1ddfba0b4151a8772c34ef3400e9",
      "Id": "f0affc91871042389e1d1f59f974b18e",
      "IsHidden": "False"
    },
    {
      "Start": "5e91820027894f60b005467af8e57590",
      "End": "af3b5e538b9442518c6afa293a0e3530",
      "Id": "0b9d1d564b2d4040bbede92e6e2bcc9a",
      "IsHidden": "False"
    },
    {
      "Start": "5e91820027894f60b005467af8e57590",
      "End": "9ff0294cdb6d444894f093fd3921cd1b",
      "Id": "96e5e1ec32f1470da545e5f2c6736877",
      "IsHidden": "False"
    },
    {
      "Start": "4ba8d790b24b47f59acc352e2f06efc4",
      "End": "107ddbf8affe4fca9cadeea2aa692b27",
      "Id": "fb6f50339a19411398dec4fad163f5e7",
      "IsHidden": "False"
    },
    {
      "Start": "8e0321944f6446329caf2bae6d837307",
      "End": "3addf11c284f4eb4ab390be506b17eee",
      "Id": "b0ad6563c12546b3ae7d8a8e5fa83a11",
      "IsHidden": "False"
    },
    {
      "Start": "8e0321944f6446329caf2bae6d837307",
      "End": "319c97eafef24c52b5680e611592688e",
      "Id": "20901b9ce040435c8f2b4bef2c5d1231",
      "IsHidden": "False"
    },
    {
      "Start": "8e0321944f6446329caf2bae6d837307",
      "End": "d98270944062496bb28bc18e3778d19b",
      "Id": "281f862c6e0446b4939ac7c8afed3343",
      "IsHidden": "False"
    },
    {
      "Start": "8e0321944f6446329caf2bae6d837307",
      "End": "64d33c74339f494bae46bae0fa01769f",
      "Id": "d09618ccd7e745a9b1e5a1fa7e2d2340",
      "IsHidden": "False"
    },
    {
      "Start": "8e0321944f6446329caf2bae6d837307",
      "End": "58cd1ee739794b1ca60b7d45d23be70b",
      "Id": "b1114fabe7b8414f947d9aab4f049200",
      "IsHidden": "False"
    },
    {
      "Start": "35253e8b53314cf38d83090076cebc24",
      "End": "564dad56563846d09a4c88c419a3f9ec",
      "Id": "29473b336fd9495d92bb7718e3e46e1b",
      "IsHidden": "False"
    },
    {
      "Start": "35253e8b53314cf38d83090076cebc24",
      "End": "9eb80a91c29d4d71a274232597851374",
      "Id": "ad07dce70ed64f72b9b705f51a2453d9",
      "IsHidden": "False"
    },
    {
      "Start": "35253e8b53314cf38d83090076cebc24",
      "End": "92e720d3c0604be19c8f28072d0d6ff6",
      "Id": "dd7a6a84776248a3b40a9bc9d0691c85",
      "IsHidden": "False"
    },
    {
      "Start": "ca1f2a617d9e4ec7a5be32a183b4c102",
      "End": "6b76d3aa8a9a41828e5a889e2703f1b2",
      "Id": "ffd1bcda58224981b40183385a0a6a80",
      "IsHidden": "False"
    },
    {
      "Start": "b9b18e24a6f1466ba0f6bbee9ff5cb37",
      "End": "d548c220375f4e098637ddfb7e54d100",
      "Id": "90578cc42ec64d9c97e17ab96fc114a3",
      "IsHidden": "False"
    },
    {
      "Start": "5e3bd9bbfc4d482487180b7f0d8641bf",
      "End": "140ae4f6b42a44f9ad5fedb35b7838c1",
      "Id": "a753ab61721e4b3fb3bf2334f41cf206",
      "IsHidden": "False"
    },
    {
      "Start": "50fa5f0167974c299005c6dd417adf1a",
      "End": "e631f82f7b2749288edb218c9a0808d3",
      "Id": "7a68f816029f42c69277f4308c01848b",
      "IsHidden": "False"
    },
    {
      "Start": "04651c1498944b47b54ac01886b5e068",
      "End": "b605e022012843a8ada916e0f6bd46a5",
      "Id": "158630015f46410bb3c414345714a4f0",
      "IsHidden": "False"
    },
    {
      "Start": "04651c1498944b47b54ac01886b5e068",
      "End": "8a11ab5746e4468b98ca9f44ae1850e8",
      "Id": "10e245fb6fa747cdb1e043da21c51f9a",
      "IsHidden": "False"
    },
    {
      "Start": "04651c1498944b47b54ac01886b5e068",
      "End": "13310d263e77433f9046e41823eab6b4",
      "Id": "65d40ecea7894be0a7ec792450422e16",
      "IsHidden": "False"
    },
    {
      "Start": "d86451a59f6745aca94e91d44de9299a",
      "End": "6a297e4ae5924fd18f50fef5c30a79c1",
      "Id": "02c5d026c24246ab9bec3fa3f28b5881",
      "IsHidden": "False"
    },
    {
      "Start": "e2f2ceb2d52f406fbb04b55eafa2c3d9",
      "End": "dc8bff5c68bd48bcb03906faa39b477e",
      "Id": "42fb1e5c96cc45b589042cac99823c07",
      "IsHidden": "False"
    },
    {
      "Start": "b50a1d900f904977a57e4d5d1868f292",
      "End": "f6407a189cad4d038889c18522428108",
      "Id": "8c33188b34bc4d298a68d5ff00eb7aa6",
      "IsHidden": "False"
    },
    {
      "Start": "91d575cb522048e4860b61874f642a11",
      "End": "abc8438d9b124752903462bd3df05f7b",
      "Id": "1653db29c1f14b9e84d2d2e74f5f4b67",
      "IsHidden": "False"
    },
    {
      "Start": "e25fa38c3f9148fa9a3cd6eca34d98f4",
      "End": "39da34182cf64119a6705b1bdacaa06c",
      "Id": "30ac2b9e18154568951da664a11686c2",
      "IsHidden": "False"
    },
    {
      "Start": "43982a94968c45f9aaa63a855b423a30",
      "End": "024d5e6b79cd4a48ab797c1ba99c8741",
      "Id": "a283fd73e05443ab88eeb0f13ffd4a75",
      "IsHidden": "False"
    },
    {
      "Start": "9dafb722d587450d975fcdb034f7e864",
      "End": "d7871eb6e34447f5a8e81f8be9f019fb",
      "Id": "88a82a0ec9b342fcb09a547c8646cda4",
      "IsHidden": "False"
    },
    {
      "Start": "67046305ddaf427db6bd2a6ff3c86cb4",
      "End": "1c790c36804d465fa34ff1e5bfc14838",
      "Id": "a4d465d127df463c8c77d48311d88780",
      "IsHidden": "False"
    },
    {
      "Start": "67046305ddaf427db6bd2a6ff3c86cb4",
      "End": "bcc63026521f4de38e7ba785a471d6c4",
      "Id": "0795abbab99f4255a91a4779a7928827",
      "IsHidden": "False"
    },
    {
      "Start": "c310ddeca3494abf9aaac49c30216c65",
      "End": "f6f11e68ffb6473e9a1b858ff8848882",
      "Id": "de4e330f07664e62854210be1310a1df",
      "IsHidden": "False"
    },
    {
      "Start": "c310ddeca3494abf9aaac49c30216c65",
      "End": "7af0d9d10706472e862a3f74e6b976c2",
      "Id": "9901a3d7c7134a08a9f0f9200b0877f1",
      "IsHidden": "False"
    },
    {
      "Start": "47d494eeffa74b14b0ba7c72cde03725",
      "End": "e1fabcfa079d4cd99b1440a0cfdcc563",
      "Id": "f0fe6620e938498992e8dc86997625b7",
      "IsHidden": "False"
    },
    {
      "Start": "69e5099316904d1ca8ee3c77bf3f00dd",
      "End": "0f955159aa004989a9f9a672e74f347c",
      "Id": "c0f47cce396345beab0f6cb11bc7873b",
      "IsHidden": "False"
    },
    {
      "Start": "d65b0677e9e1499ca1b767ea80e28629",
      "End": "489c557d5ff543bab9b96addced1ecd4",
      "Id": "bbaeebd318a74e15a57956f7158c3d1c",
      "IsHidden": "False"
    },
    {
      "Start": "3988b9c95982410384a424ebae39ae07",
      "End": "ac0a4a93b76e43fca75c96a150c304e6",
      "Id": "8bd72965092542da893899d4c3ea26a6",
      "IsHidden": "False"
    },
    {
      "Start": "3988b9c95982410384a424ebae39ae07",
      "End": "f11417890a54426292d5b1cf003812c5",
      "Id": "8b83a8b8ea8a427db8e1715cd2265e20",
      "IsHidden": "False"
    },
    {
      "Start": "0988c23ff7874e38be1dddfcc9731938",
      "End": "08543e40d9a84c1dac2aec6dbb9c0ac4",
      "Id": "380eef12a34344bfb27b1ab88d79a130",
      "IsHidden": "False"
    },
    {
      "Start": "0988c23ff7874e38be1dddfcc9731938",
      "End": "c52e67c1ba784470b4450e87ff81e362",
      "Id": "b1aa0cf868004bb680ce5668ff4a00fe",
      "IsHidden": "False"
    },
    {
      "Start": "da8a32b683ec46d4b108349900f4aa4e",
      "End": "9b332d10edee43a3a12b54b151bc8d76",
      "Id": "c8f82abe833d4917946e02da63e12f64",
      "IsHidden": "False"
    },
    {
      "Start": "da8a32b683ec46d4b108349900f4aa4e",
      "End": "397deefcb6914fd1bbacf585ca3abe35",
      "Id": "8613833b3c5d4f0f9e42913e44c3c390",
      "IsHidden": "False"
    },
    {
      "Start": "43b44f2a86444f67ad9ce01f58c61a7e",
      "End": "dd891343bfed49c7b89685ae57d67a68",
      "Id": "d54a78de80da487ab6359ef5390a7771",
      "IsHidden": "False"
    },
    {
      "Start": "e255d34db0534ae6b919a8258f03eabd",
      "End": "039351f2dba04ef59523603db531e45f",
      "Id": "c8871686f28340f0948b1b7b64633173",
      "IsHidden": "False"
    },
    {
      "Start": "9682a4bb381f4c4caa6f9c37fc886782",
      "End": "44844c9ad21a4485a1f80b116f60deac",
      "Id": "4324451c7e9e442682c8e4eb9e7b9531",
      "IsHidden": "False"
    },
    {
      "Start": "615b9ec66c9f480a9fe893745b5c6e2b",
      "End": "f8824f7f8ba3487d86801264aab7d635",
      "Id": "723908baf90043aa837df9887f5cad9b",
      "IsHidden": "False"
    },
    {
      "Start": "d605d1865ffa49438d1b152af58e4ba0",
      "End": "47dc61cba0fe454b969f218bf6317bb1",
      "Id": "5f39ce8057724b0badabef925dce6290",
      "IsHidden": "False"
    },
    {
      "Start": "3e73e9fec1d74d2faf73a42ad0f6d4ce",
      "End": "14a4474952fb424c9097a6bc3158e754",
      "Id": "8b6514790bbb40149d92c9e6ce6b1da0",
      "IsHidden": "False"
    },
    {
      "Start": "3e73e9fec1d74d2faf73a42ad0f6d4ce",
      "End": "42273166f42b4f00952af6da92a995f6",
      "Id": "c3b14a6d72f84bac854c4a31ce37b547",
      "IsHidden": "False"
    },
    {
      "Start": "fb0db98ec9a541108da204f90d4b637d",
      "End": "e1e1a190de9c4c5b96e4909f34b2483f",
      "Id": "9c340577ba6d4f9ba247edd43fe37739",
      "IsHidden": "False"
    },
    {
      "Start": "b3ca77bcd7b74e8c81c63d999f4e3788",
      "End": "374d9c1efedf4078aab2b7c13e408e66",
      "Id": "093f4705fbc9447890d0008c503188a0",
      "IsHidden": "False"
    },
    {
      "Start": "b3ca77bcd7b74e8c81c63d999f4e3788",
      "End": "257c4a12d332439f9a5c6ad20279cb7b",
      "Id": "df4012659a5143219b9866f7646bef1f",
      "IsHidden": "False"
    },
    {
      "Start": "a74e44e1b6f046f695b26928f33aed19",
      "End": "50928249f3ee43279ac1396bdff42300",
      "Id": "af8dc8079d9342d4a030ad95becc19f3",
      "IsHidden": "False"
    },
    {
      "Start": "f1ddc18cc1004b7cb1d969cdc3d176af",
      "End": "c4f2a05bc5d44a8493d312f1bafae6a2",
      "Id": "5183d2654df142429ddb304247f761a4",
      "IsHidden": "False"
    },
    {
      "Start": "f1ddc18cc1004b7cb1d969cdc3d176af",
      "End": "e6c6f13b45164e3b804b35e188447259",
      "Id": "feb28a9327e74036a52ac3351165284e",
      "IsHidden": "False"
    },
    {
      "Start": "a970691c2e664810808fc8d52446e7e9",
      "End": "64d88dfcd4964d11ab1936b4412c6b56",
      "Id": "e58a88dd293342019ec496f4bdd0e36e",
      "IsHidden": "False"
    },
    {
      "Start": "36db23d5250844cb9f54df7702030142",
      "End": "2abd521b7b5e4f7eacada27dccbfde10",
      "Id": "276d8a9909c44d5e83aa73296ab57312",
      "IsHidden": "False"
    },
    {
      "Start": "9b87c02c791343d3a4e0cd7f1c72eb71",
      "End": "792d92f521d4404390a62c35b5a74507",
      "Id": "d8f1093f98674aaa81e48c3f3b647774",
      "IsHidden": "False"
    },
    {
      "Start": "9b87c02c791343d3a4e0cd7f1c72eb71",
      "End": "6e357de5e6d24434b8046ddb1cac7669",
      "Id": "d2ce4c433550447db578159bcea35574",
      "IsHidden": "False"
    },
    {
      "Start": "a233c4b10290488c8a09d66cec72b3a4",
      "End": "d4258511b807480d9f9e26a8b0ecd46b",
      "Id": "83b9bb2423724fea8130a533054b5a61",
      "IsHidden": "False"
    },
    {
      "Start": "1ef1e7d39e704bf28f03ad388adba2aa",
      "End": "ef73169cec314fb3b993953c8fbb85e2",
      "Id": "561ac48f8364486fa2bb8b37c30ef072",
      "IsHidden": "False"
    },
    {
      "Start": "daeccd231332439ea0dfd9170d917960",
      "End": "78eacf8af3344533927fb06b3f80ab76",
      "Id": "f9fdbeb3410e49b7a17a79738f388927",
      "IsHidden": "False"
    },
    {
      "Start": "bf3988330f6142908e666c5622135c86",
      "End": "32fb9bc86aae44198442e1e9f6ee3495",
      "Id": "c82a14f3a64b4cc4b340e62e6491597c",
      "IsHidden": "False"
    },
    {
      "Start": "0b41392a59584efc9e51cdda2f0ccb82",
      "End": "dff3e88ca3b943c08b80ba486029c567",
      "Id": "a5ecd46284954832bb4bc274679c8721",
      "IsHidden": "False"
    },
    {
      "Start": "adc30b0503bc47eb8c6612e2f4b2c4ca",
      "End": "e030cf05bb6d4f7785814266e3e13903",
      "Id": "226470a6208f47b4a61ccddd4283fec3",
      "IsHidden": "False"
    },
    {
      "Start": "81726b58fcce4db781131bfd8acd1536",
      "End": "b1b75435fced40da9f6a23415180ebad",
      "Id": "aad013fdbd43411a897fe7d34175dcc4",
      "IsHidden": "False"
    },
    {
      "Start": "81726b58fcce4db781131bfd8acd1536",
      "End": "aafe6ccb1f1242639e97f7c4154f08f4",
      "Id": "7b4a187f788e481c8f26d243e9451277",
      "IsHidden": "False"
    },
    {
      "Start": "7bc78dc643604276b0c4a2a80452bdd8",
      "End": "26cb3df033634a7ea2fa26fc96b10f80",
      "Id": "227f5367c48d462fb20c22beb9d86f2e",
      "IsHidden": "False"
    },
    {
      "Start": "7bc78dc643604276b0c4a2a80452bdd8",
      "End": "bce7eb30e51648e791024619964c2344",
      "Id": "63bfa83c89a9423db1f39d207d717063",
      "IsHidden": "False"
    },
    {
      "Start": "919426da47084ab6970ba8041964f2b9",
      "End": "efc0cc6fbaee48d28d61aa0de667619b",
      "Id": "fe237a30880c4cd1a66f9aca82dc0331",
      "IsHidden": "False"
    },
    {
      "Start": "8dccd6ad10a14387a1ad95377a42cd7c",
      "End": "91597f63d01c46688450c7ca910b4824",
      "Id": "c0dcf42b0b144c369a9fb0c64c37cbbb",
      "IsHidden": "False"
    },
    {
      "Start": "397635bcc8034481bfa128413f0ded87",
      "End": "84ea4dfe48034bdcb186fa2c27d66f2b",
      "Id": "7477791ca02840918c5cea1176d88cf6",
      "IsHidden": "False"
    },
    {
      "Start": "2cd6eb28965e439f88f4b40ee8179df9",
      "End": "db1afcdd186b423081b0f311ac8c5ee0",
      "Id": "b56198531cf54a56829a0c470b3c92c1",
      "IsHidden": "False"
    },
    {
      "Start": "b2656595043f43ec898a7d4fb43e7ea9",
      "End": "df41e524864f4176ac6f7f1ce2d4eab1",
      "Id": "3981560e5c9b40eea65a00b682e7c469",
      "IsHidden": "False"
    },
    {
      "Start": "a6d073f1ac7a462aafc6fccb9e6e5426",
      "End": "a05d5277200f4999b1b66cbb5f73d186",
      "Id": "386f28ad23884805bc3c6bed39501a5b",
      "IsHidden": "False"
    },
    {
      "Start": "a6d073f1ac7a462aafc6fccb9e6e5426",
      "End": "b2f30b07100346f2a80d6707d1be5a39",
      "Id": "95dbf9b3cee84fc28df47110549ea4da",
      "IsHidden": "False"
    },
    {
      "Start": "d0a131dacd894574b1ba2205acc6f4d9",
      "End": "0e250ed381e04e81a5c55833f8f9029b",
      "Id": "de3e792691d348ff9d6056cf3e4341a8",
      "IsHidden": "False"
    },
    {
      "Start": "029163cedeb741819f5dd8a52dee5174",
      "End": "1ae2a29cb5a64a0c8a8aa235435a7c41",
      "Id": "79064e7e2ad8459f9da5d5a6eac4e916",
      "IsHidden": "False"
    },
    {
      "Start": "029163cedeb741819f5dd8a52dee5174",
      "End": "c83f2797d4ac43ce92a5d6ce2b470e67",
      "Id": "771b107638a04f48afecd6ea5d6ac16d",
      "IsHidden": "False"
    },
    {
      "Start": "8ef757c248f44484a75b13c2c0440eef",
      "End": "bb855652e6854840882fbc7e14fbbe6a",
      "Id": "d649c41570544ad7918a123fa386a189",
      "IsHidden": "False"
    },
    {
      "Start": "8ef757c248f44484a75b13c2c0440eef",
      "End": "d562350bd05c4c78ac5f22641d6d5293",
      "Id": "3dff05c407ba4b4bafc3eac3a603ae9b",
      "IsHidden": "False"
    },
    {
      "Start": "d5dcdbcb2b5c4b0887cd6e2437bc62bb",
      "End": "c6efb969fc8d49bfb3faa1fb3bbb57c2",
      "Id": "0e550e248332447db7563222b24bdda5",
      "IsHidden": "False"
    },
    {
      "Start": "589be5806ff141e0b2b7fe3bb88f9369",
      "End": "0ebfaedd771f490cbcd5041bffaf8a96",
      "Id": "9fe12b276dca4ab1a281422e5e36147d",
      "IsHidden": "False"
    },
    {
      "Start": "d5eeb76a8ff54b06a8f7407449e8318d",
      "End": "1bfe977687194201b2c1efafea39cc7a",
      "Id": "416d35b21dae480ba3f04acf3620dbd5",
      "IsHidden": "False"
    },
    {
      "Start": "4c5767b70d44424486ff5d083a7069d6",
      "End": "70ec9456aaba48f3a22e44c9f7b91c28",
      "Id": "1900a92605004d748194bc1e36425b0d",
      "IsHidden": "False"
    },
    {
      "Start": "c73db73fe2c5426096332426617f5827",
      "End": "a4f17cff5c0a4603bd1127494a90b15d",
      "Id": "d986d0130f7e41c5aea2848ce2e95a56",
      "IsHidden": "False"
    },
    {
      "Start": "5c384bfef3354ac18d6be6a601cf8e20",
      "End": "dcdd71fedf974879b5daf908174af524",
      "Id": "b95784fdb167484a886d103cdcc707aa",
      "IsHidden": "False"
    },
    {
      "Start": "5c384bfef3354ac18d6be6a601cf8e20",
      "End": "e581e5360c64490597cbcffd3c43bd9a",
      "Id": "1da9caf99504406b855493eddbabd2f4",
      "IsHidden": "False"
    },
    {
      "Start": "2e74e3944be140ff83f0275251f3a4d4",
      "End": "d088822a37f740a289f00a37a0aa94b1",
      "Id": "5180129b20424f0bab2403cfc318c58d",
      "IsHidden": "False"
    },
    {
      "Start": "54df184eea1f4042859151b43ac5337a",
      "End": "f3d16ecc71be4a7db1743f19796eb5ae",
      "Id": "da557af810394421b87d1b5fa2d78009",
      "IsHidden": "False"
    },
    {
      "Start": "54df184eea1f4042859151b43ac5337a",
      "End": "22d0428103b44a49af49210446f68689",
      "Id": "057a1e0ef5aa47b4a8478cc6060ffc5f",
      "IsHidden": "False"
    },
    {
      "Start": "b5bcc5df22cd409786f2ae2dd4b52f6c",
      "End": "482c9fdb1e104847b678e73ef072376d",
      "Id": "249273953c49473d85503dfef23118ad",
      "IsHidden": "False"
    },
    {
      "Start": "b5bcc5df22cd409786f2ae2dd4b52f6c",
      "End": "c8fa84d610c34831b0b13ea855f4ffe4",
      "Id": "2f5f12bcfe784630807de1f267c0c73e",
      "IsHidden": "False"
    },
    {
      "Start": "b8e4d44bf5644610a0cebdf359989079",
      "End": "707e589c42804a8aa614b31e22c5a680",
      "Id": "e85a11918c8742449cb07a0a374dc934",
      "IsHidden": "False"
    },
    {
      "Start": "6329b8250ea54724b84f6fc26ae19235",
      "End": "247c8546f8dd4e3f83cd3642d301d0ba",
      "Id": "e29f9c3c097f4023a7666a10de571847",
      "IsHidden": "False"
    },
    {
      "Start": "7cbf345c707d42c5ab6c651957d3c21b",
      "End": "0344655e1d6841ec919aa397d7dd1f3c",
      "Id": "0d1b0fe7683e465a94863e9d882de0f7",
      "IsHidden": "False"
    },
    {
      "Start": "a36b1d46785747058d43f1af3bbdf64d",
      "End": "92f43a2ae0254753ad8b14c6a667e5e2",
      "Id": "38017c86ee014e3ab9b710990a9fed43",
      "IsHidden": "False"
    },
    {
      "Start": "a36b1d46785747058d43f1af3bbdf64d",
      "End": "090be410d45148c8996a6ddff2572617",
      "Id": "fe63a512070a4cf7b1d1016c53d9b7d4",
      "IsHidden": "False"
    },
    {
      "Start": "a36b1d46785747058d43f1af3bbdf64d",
      "End": "82ddb7b1697c450eaffe4b55a6acd678",
      "Id": "6c76e2471629473f8d66967f6bac5648",
      "IsHidden": "False"
    },
    {
      "Start": "ff80c25be46046f8a2d3c114f9a07dc5",
      "End": "661b7707cfb04cfb8959b5ace599e209",
      "Id": "ca486918660546cdaf72929ca1c7925e",
      "IsHidden": "False"
    },
    {
      "Start": "ff80c25be46046f8a2d3c114f9a07dc5",
      "End": "dcbabca96df54f9fb0fa96311d2fa3bc",
      "Id": "8257bd19bac3408287c0b20e8f445215",
      "IsHidden": "False"
    },
    {
      "Start": "58734e99c19a43b1882e4d162f77a1fe",
      "End": "a29548b514fb4870ab618634b27d2e98",
      "Id": "791a7b22acc84e18aa82225dabe69a24",
      "IsHidden": "False"
    },
    {
      "Start": "6edc571298c24189b0f2ce8e5a414958",
      "End": "d29684f84f0b43fbb0a012395c286131",
      "Id": "6d45b418ce584b179d789c84f62b99ae",
      "IsHidden": "False"
    },
    {
      "Start": "b9c335fc033245648c1d2fd8dc5d7408",
      "End": "60408c76ff63456292edde34639fec16",
      "Id": "c811c860b0c54f08abc2426df3cda49e",
      "IsHidden": "False"
    },
    {
      "Start": "23ee575a08354f9ca3b800fdbf5cb474",
      "End": "48e005b0fc2147c190f30f4f3119e49f",
      "Id": "2bcf99d6668b4c95968d5fdb35166d97",
      "IsHidden": "False"
    },
    {
      "Start": "377297ff969a499e8e2421966663a5b1",
      "End": "44e9c63ad2b04f178c4687f2a25cb42e",
      "Id": "dd11f586c12d49608a396bd877e4f189",
      "IsHidden": "False"
    },
    {
      "Start": "1be956c6e9b14484817b166de2fda2c4",
      "End": "e045c5f11f394c35a2e7b275273619da",
      "Id": "147217c7298e4c60883a8be871e334bc",
      "IsHidden": "False"
    },
    {
      "Start": "57b8417473324c739971a58b1c7dca7b",
      "End": "7b4abc3916e34a56863fd1f2874b05b9",
      "Id": "0d6ef4a4da3b443c8451f7add7c0e3e1",
      "IsHidden": "False"
    },
    {
      "Start": "936685b241f74a1eba518a5b2a92710c",
      "End": "ce0f1277a3984a4795f2cd9d1bb55c86",
      "Id": "69677199dcf8454bacebe10fcf213aa8",
      "IsHidden": "False"
    },
    {
      "Start": "adc9faed72974814a13df7ab683dec57",
      "End": "bba038bf5ed34e7b921a52bb237b1d92",
      "Id": "cfb104b85b3b454db268c3ed6db6312f",
      "IsHidden": "False"
    },
    {
      "Start": "adc9faed72974814a13df7ab683dec57",
      "End": "ee039e4c599c475099f3a31919cf7294",
      "Id": "f97166d8a8b040fc9803b09c4e747afc",
      "IsHidden": "False"
    },
    {
      "Start": "4e0e87fe6f9d4a4b947271f28bd9e83d",
      "End": "d6380415148346bea12a132079587c02",
      "Id": "9febdf27191847f795166a2ea2a64fa5",
      "IsHidden": "False"
    },
    {
      "Start": "b2555059d6354f67891c92f9f4a61fc8",
      "End": "2c35c88a86c24abf86fbd7e6b7425e98",
      "Id": "efad79eb3172476c9af1e88f12fe6e18",
      "IsHidden": "False"
    },
    {
      "Start": "e987bcea3cfd469c8710b86a75c1b00e",
      "End": "04820e1f7d5b4424a19eda753016c97d",
      "Id": "ec9a6f4e3db844c1813f971dba894836",
      "IsHidden": "False"
    },
    {
      "Start": "1c934c12685f4854b01f438de9f3c2b3",
      "End": "5d97d7b75af84dada16aec64c224b425",
      "Id": "8cc71bfac988461da98b330744676bae",
      "IsHidden": "False"
    },
    {
      "Start": "1c934c12685f4854b01f438de9f3c2b3",
      "End": "6c7201722c3649c3b6636d07edeba302",
      "Id": "81ee510f0ee84200925a52e0ae75604b",
      "IsHidden": "False"
    },
    {
      "Start": "17f0c2729d0c4935a92fb14191f115ab",
      "End": "ff949fa563474cc692c9f296eb98b8fb",
      "Id": "0917fdb2c48b4676844feaabb49e65e9",
      "IsHidden": "False"
    },
    {
      "Start": "0eb0f3aea82942d4a4ac692c4bfff2eb",
      "End": "6db778ed01cf4a438780ead735f12c35",
      "Id": "5e3622cc305e4ecaa4d39fe6a2abdbc0",
      "IsHidden": "False"
    },
    {
      "Start": "0eb0f3aea82942d4a4ac692c4bfff2eb",
      "End": "ff2621ddd32b4f999a33b20dbc1a4c9d",
      "Id": "e9c458b389594d96883e76198acf6ea1",
      "IsHidden": "False"
    },
    {
      "Start": "a9ac11fa96e940e6855fabfc6e4d10d9",
      "End": "9bef7da984ee4e1a9f7744124eca478a",
      "Id": "b092dd79a0fb42a18efee0b600816711",
      "IsHidden": "False"
    },
    {
      "Start": "59dfd02c02474c6786586bd301c555c4",
      "End": "d8afd0c26cf7423bbbd8e8f9c55928bf",
      "Id": "2d25c920bc9f4aa5905f29d39cb98059",
      "IsHidden": "False"
    },
    {
      "Start": "59dfd02c02474c6786586bd301c555c4",
      "End": "148b3ed13b6048519343a55bfdc84e87",
      "Id": "c0ac1ef6bfbb400d9ab835111952b879",
      "IsHidden": "False"
    },
    {
      "Start": "59dfd02c02474c6786586bd301c555c4",
      "End": "e76dd91f6efa4210ae0537426647e385",
      "Id": "9304918a9874424985c244767a4f186d",
      "IsHidden": "False"
    },
    {
      "Start": "6b057010ad9241f09a9e6eacbebe9ebd",
      "End": "bc1ab387f47d46bb87d3007e5a9460ac",
      "Id": "1971c6af129a4ee6bfa5954ea9f7b787",
      "IsHidden": "False"
    },
    {
      "Start": "26ed29b313ff481bb6c5629d9eb790fe",
      "End": "6f9083e23b8b4bd29a68258e2b0e29be",
      "Id": "aaf3058417b0469fabedf43d10daac91",
      "IsHidden": "False"
    },
    {
      "Start": "d1e4cbce30134b90962a3711a3b9cf81",
      "End": "9c63fefd109a4ac1999e1ac5b79ac36d",
      "Id": "e93b02207a624a6e9cda03c574dc6e07",
      "IsHidden": "False"
    },
    {
      "Start": "513763aa0b444cd58b92ff5bf6037fff",
      "End": "58b46e83b52f4b5ebd3176ea76e7fc6a",
      "Id": "0bcc5add27ca4a0ebcd2099b94d8832d",
      "IsHidden": "False"
    },
    {
      "Start": "513763aa0b444cd58b92ff5bf6037fff",
      "End": "5e0a695c3bfc4b58bbf43bd9d4e4476b",
      "Id": "9756fa1b5d1141328382856a6d102efc",
      "IsHidden": "False"
    },
    {
      "Start": "6c512c62b1ba49c1b9a71949bc56cfaf",
      "End": "9385e9e1e2744d99bda6dc892e9addda",
      "Id": "4750095a7e8145b39b1c08bcd70edf6a",
      "IsHidden": "False"
    },
    {
      "Start": "6a84bf159f7f47be8d3c2a173ba6d24b",
      "End": "9a3ff16365884e3899257955ceea67ec",
      "Id": "754e774c849b4306a578aefc346176f0",
      "IsHidden": "False"
    },
    {
      "Start": "adc8395123b5427497a302a0d76779d7",
      "End": "828b4cd570da43e980feb70270e9ef99",
      "Id": "96b8de315b6f4b14af220c81492ca654",
      "IsHidden": "False"
    },
    {
      "Start": "c6946d28cc0c4fc88303491afa764eb7",
      "End": "0c387109f91c43c49c4d13f0c0e57c4d",
      "Id": "835f95e034e149dab600e61dade94425",
      "IsHidden": "False"
    },
    {
      "Start": "8b402dcf0cc644279b62ead54dfc6963",
      "End": "655fcd87cc73429ba4d4e4a48b32099f",
      "Id": "6a2552b68fa4465ba10451fb4cbb8e65",
      "IsHidden": "False"
    },
    {
      "Start": "8b402dcf0cc644279b62ead54dfc6963",
      "End": "e20460053d564f6fb99b3263e3689fdf",
      "Id": "369a91e728e640db83a7555f41448dce",
      "IsHidden": "False"
    },
    {
      "Start": "f92e50d4048b4785806bf85820220656",
      "End": "8fbec471d32946e7ae0133ea04543db9",
      "Id": "ff6f8ba6381d46ac9819ba6a37b73304",
      "IsHidden": "False"
    },
    {
      "Start": "96a3358c99404c9f95ce1acb9f53d6ee",
      "End": "f6a44c196d6043d5830a34591e385862",
      "Id": "c46aeb9758ab47919b1253fa9c751461",
      "IsHidden": "False"
    },
    {
      "Start": "779d41ee03fb441aace6dfc41fa92a80",
      "End": "1f99daf1f4d74ecc9d2d2e0e7e724e10",
      "Id": "3589fdb7b8fe4974bee5bc405215f1f0",
      "IsHidden": "False"
    },
    {
      "Start": "779d41ee03fb441aace6dfc41fa92a80",
      "End": "8ef75debad0041809271447fd137e50e",
      "Id": "50ff2809651341aab7e44f463a1581d6",
      "IsHidden": "False"
    },
    {
      "Start": "77815a83d34741879fc946607c56c8e3",
      "End": "4dbc72278dea47f8b764003e13561e74",
      "Id": "93cf802d4b504e348a8d761ee9333f26",
      "IsHidden": "False"
    },
    {
      "Start": "77815a83d34741879fc946607c56c8e3",
      "End": "3d80cbedef3c4c2fb4bafedf0127bc9c",
      "Id": "e410a52c4bb846d6a488d34c8a204e19",
      "IsHidden": "False"
    },
    {
      "Start": "c77b7818963f4008ba204aa00e7c45b8",
      "End": "42359a9ade6d4943a0589767db387f06",
      "Id": "a427785267914fe2bbf68a3cc7af64ea",
      "IsHidden": "False"
    },
    {
      "Start": "661a52f5e8e3484e9245b64487d13f04",
      "End": "0cffbf5a86e74084904780ea785e936d",
      "Id": "c258e1b4595a494288404c8465adc1e8",
      "IsHidden": "False"
    },
    {
      "Start": "144c78019d3c4516865957c809471a6b",
      "End": "9bcab62cedd045fa91627848aeb00330",
      "Id": "6397aec20d994e70a74232d9ac77d2e0",
      "IsHidden": "False"
    },
    {
      "Start": "235f417970b24c6aa008f41361fcf07a",
      "End": "8d0f8cea53c349f2ab1378a2e4a7e310",
      "Id": "fe2083fa53174703a635b35852783d46",
      "IsHidden": "False"
    },
    {
      "Start": "6dd1c1b3437c4397aa9b5736397dbff6",
      "End": "579488d7f29943618256368c0f785053",
      "Id": "ad5408b142554c7a8fe16d8930b82ff2",
      "IsHidden": "False"
    },
    {
      "Start": "6dd1c1b3437c4397aa9b5736397dbff6",
      "End": "8992494391e74a7c8d4cf7b9c4250bca",
      "Id": "1a456f032e904502ab4beb5b0afbc137",
      "IsHidden": "False"
    },
    {
      "Start": "cd1d246ae0334d87a76396285aca1d93",
      "End": "fb7c0fa107b24643bb2109051a108f30",
      "Id": "2a0a750557ef45b0b65b67327c234c8d",
      "IsHidden": "False"
    },
    {
      "Start": "bc12cc31bdf443f58fb56431dd5700e5",
      "End": "f933a612c8474c3c8c062de99f7803f8",
      "Id": "ed6bf52853e3489dbc8fe9254e1deba9",
      "IsHidden": "False"
    },
    {
      "Start": "bc12cc31bdf443f58fb56431dd5700e5",
      "End": "cd68da1c46164dfca42b5ce487dc6f66",
      "Id": "586b51e85af941ec93e0a4f1bb92ee07",
      "IsHidden": "False"
    },
    {
      "Start": "8915c12891dc41aba4905554941ff2ab",
      "End": "5e656fb245aa44328bd22219d1e63a1e",
      "Id": "20436c1541464891834e6ccf6d8b0a27",
      "IsHidden": "False"
    },
    {
      "Start": "567f69642c564cab825893536460a8b4",
      "End": "0f8df20624dc4cbabe0cd8683e7394c7",
      "Id": "95aef58a0c57412c961fdd63aa495905",
      "IsHidden": "False"
    },
    {
      "Start": "567f69642c564cab825893536460a8b4",
      "End": "33479b204237410d849221ea9bb16453",
      "Id": "e209dfd68d8e40a0afbb4e8c0961e14b",
      "IsHidden": "False"
    },
    {
      "Start": "1a35161e032845a1b5250ce587004e9d",
      "End": "03b19f26f1364a5fa1d8cc753fda9a41",
      "Id": "9fe0e1d854684db396a87f23006bd400",
      "IsHidden": "False"
    },
    {
      "Start": "e2c37a1e2e0b4520847651ad6e8dc2f5",
      "End": "901a4e5feed1478da9e5295b91ceeb1d",
      "Id": "36b502dad0224a6e99085a798d1a1402",
      "IsHidden": "False"
    },
    {
      "Start": "64c23292576445e5b8413125f518b5c0",
      "End": "560c4f87b503493cbef697c372d0aee4",
      "Id": "7c55a7a857d843a5a75f0390d6e9ad12",
      "IsHidden": "False"
    },
    {
      "Start": "bfb1c552aca1401fb4f2efea2d9b0480",
      "End": "775012e335aa4fd0a7a7be96a4b969de",
      "Id": "e7bbceff2a1b4c9dbda7b176ac61d9ca",
      "IsHidden": "False"
    },
    {
      "Start": "60dcef25fc5046e898a6f3da7f6ed8ea",
      "End": "5e66571119964e03a3ce0f30558176c3",
      "Id": "566e45e37742418781de26c164259112",
      "IsHidden": "False"
    },
    {
      "Start": "ced5443d96a546d1bc452f26e9d9c4cb",
      "End": "c5f9ba2be835461899a51adb2c0ce7d3",
      "Id": "b66c654e708c4584a144ffd072e0ab22",
      "IsHidden": "False"
    },
    {
      "Start": "ced5443d96a546d1bc452f26e9d9c4cb",
      "End": "7077b156755644778042b53eeb5b9f39",
      "Id": "e5adfcd579cc4948b262edc9072f224e",
      "IsHidden": "False"
    },
    {
      "Start": "4606d2b626c94dbf9093a591b979474e",
      "End": "dbcd6dda041c4ea48c67ccb22a068e72",
      "Id": "911199cc67de41faa722f9747e248327",
      "IsHidden": "False"
    },
    {
      "Start": "c5f08f90a3d94b50bc684bb4d0be8a25",
      "End": "5cb5e09edcc04a1bab88f2c6f5d63b0c",
      "Id": "92dece06fb064184a9420b7b435ef8c7",
      "IsHidden": "False"
    },
    {
      "Start": "c5f08f90a3d94b50bc684bb4d0be8a25",
      "End": "060601228cd24c77bd6a4ffd116ebd22",
      "Id": "fb3a3439c9bd4c2f9d4bb93bcdd3e481",
      "IsHidden": "False"
    },
    {
      "Start": "226a0f6965224e5eb61834746cc8b30a",
      "End": "1fcc95c4b1e847dcbff0467a0a96f90b",
      "Id": "b0b88f6ff3dd4333a578755bab3c566f",
      "IsHidden": "False"
    },
    {
      "Start": "226a0f6965224e5eb61834746cc8b30a",
      "End": "93e34e143d3f4b1294401e9a5a569ee1",
      "Id": "d38f6f21c3bc4d1381486eeb07f74da4",
      "IsHidden": "False"
    },
    {
      "Start": "b0950685d05a42c1b670ea2cefabf9bb",
      "End": "e4004253bd284a93a6a55992ac268878",
      "Id": "046143f121ba46368e9f4471c9b50b3f",
      "IsHidden": "False"
    },
    {
      "Start": "0567d17f2fc34dc6bc28736a4f4a12c1",
      "End": "13fa2d1fd6644cb2b5dbe5edf9596339",
      "Id": "8d475186a99c49378cc1d8864c38852f",
      "IsHidden": "False"
    },
    {
      "Start": "0567d17f2fc34dc6bc28736a4f4a12c1",
      "End": "3519d8c77c334d7fb98bba7c5620813d",
      "Id": "b29629338a0040e8be64d2234c6a51ec",
      "IsHidden": "False"
    },
    {
      "Start": "d441cb96c4154c838b2a9d31ecbfb2b3",
      "End": "efb7e7e22fe642eb847448f5da81971b",
      "Id": "eed617c29ad04d24aaefab5dd708a26d",
      "IsHidden": "False"
    },
    {
      "Start": "3b91602cb4b446c693da85d0af1c5665",
      "End": "2b826d89bb174cd6a6823c0ef59b0d71",
      "Id": "027bb51995b844a59cfd739085c06f93",
      "IsHidden": "False"
    },
    {
      "Start": "3b91602cb4b446c693da85d0af1c5665",
      "End": "a3f795a86143488e868cfbd680484ab3",
      "Id": "e201f4b335934d7ebe27ff4acc98c585",
      "IsHidden": "False"
    },
    {
      "Start": "3b91602cb4b446c693da85d0af1c5665",
      "End": "086ec48c86424054870828e9bdc0b6f1",
      "Id": "5fa71d4e005146ab995470644c13f3ac",
      "IsHidden": "False"
    },
    {
      "Start": "3b91602cb4b446c693da85d0af1c5665",
      "End": "921046dd2c8f42578e9105bbd78a5c08",
      "Id": "2a5fd9389e8b4c6ea91f5e621697efa8",
      "IsHidden": "False"
    },
    {
      "Start": "3b91602cb4b446c693da85d0af1c5665",
      "End": "02a7bed637844f898812ca7c810e6787",
      "Id": "f74bd5716a984d7c91aa8adbfef46263",
      "IsHidden": "False"
    },
    {
      "Start": "99058861ddf74b759b67a67e9c23de75",
      "End": "f269ce3806f04718879bacf8d7e47c33",
      "Id": "5f2fe59fe5bc4b6b9580688ba9695f95",
      "IsHidden": "False"
    },
    {
      "Start": "99058861ddf74b759b67a67e9c23de75",
      "End": "11db57ead7de4a249a45c0c7f06717f9",
      "Id": "aa0876164ada4c2abf96ee310765ed44",
      "IsHidden": "False"
    },
    {
      "Start": "99058861ddf74b759b67a67e9c23de75",
      "End": "eff581c7067e420c96fec635329cfeb9",
      "Id": "39ab108aa8d4461a8c53189647aa15b8",
      "IsHidden": "False"
    },
    {
      "Start": "a828fd1eed714435bda1c1379f5079da",
      "End": "cafbc98c95ca4932ae77355a535e918b",
      "Id": "b213a6999ab54547bfb8cad508868f47",
      "IsHidden": "False"
    },
    {
      "Start": "b01536229ca748a1a6530c5e3468852a",
      "End": "4f2270ebd8d44a4887b75eb907c4bcc4",
      "Id": "8ed4e9a5ff1345259a273ee8a575ca99",
      "IsHidden": "False"
    },
    {
      "Start": "5173e24fe6514e63834b35c14d80ac22",
      "End": "854ac4696ffe41ba9507e6c60fa10b65",
      "Id": "07ab256c8eca49c584ea3f75a7b9907f",
      "IsHidden": "False"
    },
    {
      "Start": "d59efda9779e481dbeed9187f54c3e2b",
      "End": "b810dda6450948e3876b942e45df42be",
      "Id": "a6bfdb841c9a4dce83423c04a936bc7b",
      "IsHidden": "False"
    },
    {
      "Start": "a53b93022af84643a8f832566102dbe2",
      "End": "0e3776ba706b43908dcf00b105054a6c",
      "Id": "c6019cbb17c1456bbd3725e94719d890",
      "IsHidden": "False"
    },
    {
      "Start": "a53b93022af84643a8f832566102dbe2",
      "End": "d671f1ce0bc3498589320c90a0a1b1b6",
      "Id": "8b3d31be73bc45e385a382ecaf2c84ff",
      "IsHidden": "False"
    },
    {
      "Start": "a53b93022af84643a8f832566102dbe2",
      "End": "86eacda82185495c94bb7fe63c844a62",
      "Id": "e2d1c2e5f0dd435b9f303bd838df9a75",
      "IsHidden": "False"
    },
    {
      "Start": "c382c49acd2b45e19807762874b7e9d6",
      "End": "c201357aacc140d18a36df461e0dc6a7",
      "Id": "b16541b259964f0d9e75200c3e600e11",
      "IsHidden": "False"
    },
    {
      "Start": "9f152c7b81eb43d692ccaa2ae974eae8",
      "End": "79490eb1c9d64360a0cd209dd7317a68",
      "Id": "259a8c87de2d4e979bb5190cfc5004eb",
      "IsHidden": "False"
    },
    {
      "Start": "eb2ff674f6d747a7ad95327518d8477a",
      "End": "b739ac094f5344939ae090890c2b1862",
      "Id": "d164c520947e4f2da1adf388d38cf32c",
      "IsHidden": "False"
    },
    {
      "Start": "d09bd6b16d624abba7f2b192ead412a6",
      "End": "937bb9b669c34956b75d9827f5a6a498",
      "Id": "34e208c0b3ea4031b2fdf985dbb627aa",
      "IsHidden": "False"
    },
    {
      "Start": "af426eff0808417bacba9280f44b895c",
      "End": "a110e5973c7849299d65f7e3d6008e2d",
      "Id": "b18cd98f77ed40849103988ae98fe34e",
      "IsHidden": "False"
    },
    {
      "Start": "6d8263db715e46c3b8805e8190807d7e",
      "End": "a81cb6017c1748dc841c2cef629fd539",
      "Id": "7a23bf0c51574ab995f366f0670bd598",
      "IsHidden": "False"
    },
    {
      "Start": "76cf5d7557bc4586996e7a3fd4344546",
      "End": "2e8a4916f50a4fe19494df5c8cea8f09",
      "Id": "fa198a30d1e448af823417eccd641da0",
      "IsHidden": "False"
    },
    {
      "Start": "d99794ae82d0409a95ae426beac1349d",
      "End": "a2b37e7bfd684c9c9db21836ae48292f",
      "Id": "2ba08e8c3b8e44f2adc1df71b9d114b9",
      "IsHidden": "False"
    },
    {
      "Start": "d99794ae82d0409a95ae426beac1349d",
      "End": "5c000c6d0300406e83cbfad3b5568a40",
      "Id": "7f20c198812f46399a2a63274d1f2f23",
      "IsHidden": "False"
    },
    {
      "Start": "2fa51643b2ba41658c680a210b0f15c3",
      "End": "7268d24336604096b074dde29417f7a2",
      "Id": "5087eac13a114a87aa798f7285780a57",
      "IsHidden": "False"
    },
    {
      "Start": "2fa51643b2ba41658c680a210b0f15c3",
      "End": "19ef7f7edf3548ad8014a9aed73951e6",
      "Id": "cf32eedf7941467b9517d83d68da98d4",
      "IsHidden": "False"
    },
    {
      "Start": "f4b0e883b14c486a9d58c67e1b4bce64",
      "End": "9345b8ad21a8415d9d363d5863059d4b",
      "Id": "de305a27859e46d2bad856d468447291",
      "IsHidden": "False"
    },
    {
      "Start": "f4b0e883b14c486a9d58c67e1b4bce64",
      "End": "9e85fdbb265a440693808eed59147406",
      "Id": "16c841d938ae4191af59ac0087e9bf01",
      "IsHidden": "False"
    },
    {
      "Start": "e913572ae4334828b395edd7116c8862",
      "End": "f69f29d3694442a7a9d751640d22764e",
      "Id": "48696add0e7c4cb989bb1df935e1e6e9",
      "IsHidden": "False"
    },
    {
      "Start": "e913572ae4334828b395edd7116c8862",
      "End": "b0d6aceae2f646cda6720f137696cbd2",
      "Id": "0f2536996dd5401bba3f5cee7cf46ccc",
      "IsHidden": "False"
    },
    {
      "Start": "cb386e806e7c4e2dbb78dd6101469a83",
      "End": "8a032b2455d6402ab4a925d31500d85d",
      "Id": "73a1d5a07b6f4a2bb1e5481811fa7fad",
      "IsHidden": "False"
    },
    {
      "Start": "8c76a830cc784672bbccd636dad0a405",
      "End": "f2580830c49b4679bbd32b43da3725ae",
      "Id": "2feccaf7a1174fff95fa278269f72156",
      "IsHidden": "False"
    },
    {
      "Start": "4cb697a72be3422f9fb65c46de556a42",
      "End": "c83085f101a24b3babb081f24a734022",
      "Id": "fe08782b8dfd40e3aa84a083e087d03f",
      "IsHidden": "False"
    },
    {
      "Start": "bbffdc3ec4ff4cb2aab3be53518b6d3e",
      "End": "da8844793f64461a967cf526e4980641",
      "Id": "eeedfb960061416ab999b9bf2d754c52",
      "IsHidden": "False"
    },
    {
      "Start": "bbffdc3ec4ff4cb2aab3be53518b6d3e",
      "End": "ce67c4c8e8a34a26ab4ff181950fd2ed",
      "Id": "5b519a081788456d92fa76fb314867ad",
      "IsHidden": "False"
    },
    {
      "Start": "bbffdc3ec4ff4cb2aab3be53518b6d3e",
      "End": "d249a5b9e35b40fda119fb33f4274794",
      "Id": "c54f6f589bb044f68438df6267f3af73",
      "IsHidden": "False"
    },
    {
      "Start": "c3390d4da5684c54b923ad8e125f6d38",
      "End": "bae4517cb3ef4705b30e82fc6e2885cb",
      "Id": "f61208f7c46045118e63694d9903accb",
      "IsHidden": "False"
    },
    {
      "Start": "c3390d4da5684c54b923ad8e125f6d38",
      "End": "913ae7f615c8480c9db2f7ae2723e59f",
      "Id": "d806dfaa41ca4f1186c789b0bb4190a4",
      "IsHidden": "False"
    },
    {
      "Start": "c3390d4da5684c54b923ad8e125f6d38",
      "End": "84b921d4cc6e4e5dbbf0edaae0b7237d",
      "Id": "3994da3b63a64f0cba82dc4c3fb0f6ce",
      "IsHidden": "False"
    },
    {
      "Start": "c3390d4da5684c54b923ad8e125f6d38",
      "End": "3dd5f2f7baeb439c8c7316c177cb1be2",
      "Id": "3ff842fd6b0e44d091d4f4681e6dd850",
      "IsHidden": "False"
    },
    {
      "Start": "09bfa40543b64e9a8aa547b4abc086ad",
      "End": "cdce254ecba948128041fb9e9994aaeb",
      "Id": "e0978caedcf64655b738ba2e282ea78c",
      "IsHidden": "False"
    },
    {
      "Start": "53af77bb4416475b8e7dc26da5cbd8fe",
      "End": "d6c236583a4e4c1086780231ee9b55b2",
      "Id": "72b1c9c991e14529b0db25b54c07b35f",
      "IsHidden": "False"
    },
    {
      "Start": "79e98956cb37433b8833536534e671d6",
      "End": "20410a23769f4227a100965e56cc9ebf",
      "Id": "5e625ce4aade4f3fbb05019420207dab",
      "IsHidden": "False"
    },
    {
      "Start": "b1f236da097746688e1fe92fd34c8c18",
      "End": "872d34d938404f7e9642ecdff1dd6c55",
      "Id": "15e8659b531c4f2a87a888fd5835131e",
      "IsHidden": "False"
    },
    {
      "Start": "b4a0edcd70a641128ddfa2c6d040099d",
      "End": "e388cc3ccc284dc78a626a14832c38ab",
      "Id": "25a322a9abed46c9846c6bf33b32c760",
      "IsHidden": "False"
    },
    {
      "Start": "cc61a6f5ca0c4fd596502f2e82531f7e",
      "End": "4b99756e220f4d949681c88e2a5ad9f0",
      "Id": "d57c85ade6cc4002993e248e62ae42bb",
      "IsHidden": "False"
    },
    {
      "Start": "61ef919b1bc24dd8819d2e91090608b8",
      "End": "7f5a598383d249c59291ce1d9a97f0c2",
      "Id": "2ce98ae8e8bf449191907f1110a8d77a",
      "IsHidden": "False"
    },
    {
      "Start": "6b68c3dfa1204cbcbfbdef41eecd7de8",
      "End": "88e4748b0e094180bb17e39df6888e7e",
      "Id": "76aeff46473945faaddfd18d201bfb26",
      "IsHidden": "False"
    },
    {
      "Start": "0d762c3853474d3d9fa1eda09d90c52c",
      "End": "8a641df263274ea8963883e8574c8360",
      "Id": "33d6ea93a32541018840436e11796442",
      "IsHidden": "False"
    },
    {
      "Start": "0d762c3853474d3d9fa1eda09d90c52c",
      "End": "93715c7f19704303b3d3de29dc0fc4ef",
      "Id": "f2314a3496414f2f82c5ee29dc14c19f",
      "IsHidden": "False"
    },
    {
      "Start": "a935c397af684a70b93e2552f9fa8a6f",
      "End": "1212cda7858a41328d9fb9fed805c3f0",
      "Id": "f0a018e3903f43a6a16401c4c3d1e46a",
      "IsHidden": "False"
    },
    {
      "Start": "8dd01a50902f4eafada3d8049a9057f8",
      "End": "e0c99d457a2b4a858e60522f7fd7ee3c",
      "Id": "e5331485a05d47a994e3a0e12165a429",
      "IsHidden": "False"
    },
    {
      "Start": "a5852d0fada44e7ea8ba742b4c18354b",
      "End": "d230144f07d94493b190bc2b75dbf2ff",
      "Id": "05c6560a88694abf9b675ba2c9a491cb",
      "IsHidden": "False"
    },
    {
      "Start": "e59fc87724824b5cb2ee4901e39ec625",
      "End": "1993382dcaaf465a99fcf016720a1772",
      "Id": "ab3384ef8f3d48c19fe215ce34430bea",
      "IsHidden": "False"
    },
    {
      "Start": "6c1302d7eb2f4d53ae862682d3de3c3e",
      "End": "bd9d1e4cc90a4f1db652abbb5ff79f95",
      "Id": "ae090416166149f5a66acd6814f9c400",
      "IsHidden": "False"
    },
    {
      "Start": "6c1302d7eb2f4d53ae862682d3de3c3e",
      "End": "caf8897295a84639a88a8a7db281bb72",
      "Id": "dfea911e85ee49cfb049c3ac45869370",
      "IsHidden": "False"
    },
    {
      "Start": "e9f7bf4210a048358d6ee82457aa0872",
      "End": "04ec19f15e0147a2b66240681cce1248",
      "Id": "c062cb4c281c4fc2829c21e243c070b1",
      "IsHidden": "False"
    },
    {
      "Start": "c0be7ecf27c14887b3b5ad48003fe882",
      "End": "26734c4fc79745378bca2380d002af66",
      "Id": "66d346f198b6470da7865a3cc1decb58",
      "IsHidden": "False"
    },
    {
      "Start": "c0be7ecf27c14887b3b5ad48003fe882",
      "End": "f32a79e837b5485caafa99b0b8b2ebe6",
      "Id": "e80178790c284367a260cca5936c9bcd",
      "IsHidden": "False"
    },
    {
      "Start": "ce3d72260e2b4b6b80f5d608e35f920f",
      "End": "ecdacedaf6e84c6792a47c6078a6225f",
      "Id": "ba22532836554532a67e24f03c01a1af",
      "IsHidden": "False"
    },
    {
      "Start": "5973e1bc470b4c239ead8dbf75f348f8",
      "End": "4e7dabedfe7644a398db6b78f66455ec",
      "Id": "45413d0a177845f5bf6d9ad21af0437f",
      "IsHidden": "False"
    },
    {
      "Start": "5973e1bc470b4c239ead8dbf75f348f8",
      "End": "62e6a166145a44f3869b37d67c2d22c9",
      "Id": "7c4d69a4159e49a5a4fe622e57757b85",
      "IsHidden": "False"
    },
    {
      "Start": "62f9099e1753409cbed476f518bb44a6",
      "End": "6a2e19637e47481bb620cce5c70014c3",
      "Id": "03317e239bd44abc98b9d57ff6e3ad9a",
      "IsHidden": "False"
    },
    {
      "Start": "859bd985af694d1db52c7f3315662e2c",
      "End": "56d28b95ea994868bab6b7454fff50d7",
      "Id": "e222623fc30f4d1abfee8cd9a29d100c",
      "IsHidden": "False"
    },
    {
      "Start": "5c36c24cda304c4bacb17d73bba8247f",
      "End": "c346c9856a574264a5fb567e5eb862e0",
      "Id": "13e5ccfb43f442188533d32d4a4fa29b",
      "IsHidden": "False"
    },
    {
      "Start": "0120cf53e7e8454190b31ee205a1f08d",
      "End": "0cd55d2796f1490fb1ca035cfbc5410e",
      "Id": "4a1e266c04744772a0f2f15d8fda5c5e",
      "IsHidden": "False"
    },
    {
      "Start": "0b9b8b4999ed4f8d9cb1765e0ec28fc0",
      "End": "f237265e384942ddb48eac79bc08a718",
      "Id": "5ec3ff2d58db4485a56141c4c6bfcadb",
      "IsHidden": "False"
    },
    {
      "Start": "b1be5b7640524758a4ec21d586f575a6",
      "End": "35b07861ee92494c9fcbf07debe19666",
      "Id": "4bbfd407ec414f46a507fc04ead89020",
      "IsHidden": "False"
    },
    {
      "Start": "b1be5b7640524758a4ec21d586f575a6",
      "End": "17e8fb62449d4b2699c0578654e815bc",
      "Id": "914b3e8ce67e41fcb969911240c28aa9",
      "IsHidden": "False"
    },
    {
      "Start": "a40556f0c8554ec0a732da5b873d31c6",
      "End": "03a7d0b91cb24450861d1ad092a18bd2",
      "Id": "8343ad08486e4f9d85e9db6b1bffcb6e",
      "IsHidden": "False"
    },
    {
      "Start": "af70ed2772b045eead8ec40b4ca47122",
      "End": "c2b8724a8c6749bd9917493a5c94f785",
      "Id": "fc9eb46281e14ae8b8c04a71db23bcbf",
      "IsHidden": "False"
    },
    {
      "Start": "af70ed2772b045eead8ec40b4ca47122",
      "End": "a7bf7848d7914881976a8f73d940249a",
      "Id": "cc71d2c498f64a9799bf9e882b818fbf",
      "IsHidden": "False"
    },
    {
      "Start": "e32498ba9fe94ad7a082b7f34feb5390",
      "End": "4b5db2ae510c42a5bd30e43c9cf009f0",
      "Id": "b6d29d6366864b39a2688e39553e51ad",
      "IsHidden": "False"
    },
    {
      "Start": "e32498ba9fe94ad7a082b7f34feb5390",
      "End": "d3c3a55401924833a8df75e8439ffc0c",
      "Id": "037cd6f92f8146e59b5b604a50859ded",
      "IsHidden": "False"
    },
    {
      "Start": "e32890db99934fba9a54a4d40d98da11",
      "End": "070e5efee685454491cf5db647fef21c",
      "Id": "acfab10c068f49b59b07e6540dfc8f2c",
      "IsHidden": "False"
    },
    {
      "Start": "e32890db99934fba9a54a4d40d98da11",
      "End": "0194eb8ad06e42ce8d3c90e59e3fdb51",
      "Id": "8dd15625571f4980bec6675e6eab1ef5",
      "IsHidden": "False"
    },
    {
      "Start": "e32890db99934fba9a54a4d40d98da11",
      "End": "521b8352764a4a26803b53363b92eb72",
      "Id": "0785f51c810342daa0d220854ef18919",
      "IsHidden": "False"
    },
    {
      "Start": "3db385e61aea448ca70087c0a4dadb25",
      "End": "e8e0f379d45c412eabe7169ee5342bb9",
      "Id": "833db0b5b3d8443ca4cabc8f0b5ad290",
      "IsHidden": "False"
    },
    {
      "Start": "9caccb00f4ed45798f07aed3d4b60a56",
      "End": "65fa2dadaeb7430fb709a0258dcfc215",
      "Id": "8f89ca6001a84c018f3cc0720818d306",
      "IsHidden": "False"
    },
    {
      "Start": "4ba3773cbe424f798c3003a9d2f913a1",
      "End": "a20eacea96c84f7d96f2809f9b75dc1a",
      "Id": "90a042951f9c41139c5a8d41acc4b443",
      "IsHidden": "False"
    },
    {
      "Start": "7317508004e74db68ad6c445a8e1628c",
      "End": "b8387023cef74437ba0fe4cb9f4b4922",
      "Id": "e520f1cd6208484ea7c5d4fa78602122",
      "IsHidden": "False"
    },
    {
      "Start": "39cb654027ab456ba51b55f4bccc672f",
      "End": "c5f7c0ef5b9f43e680558960f896d270",
      "Id": "88def3378c8241ea8278d40121b33fdb",
      "IsHidden": "False"
    },
    {
      "Start": "0cb301919b3a4405b71e27d2976643db",
      "End": "194c68716e71472abaa353ed97c501a7",
      "Id": "b95768b470a74260a074a607499da36b",
      "IsHidden": "False"
    },
    {
      "Start": "c9058a308ffd4126a9e304c03906bc1f",
      "End": "80dffb4f813c402fb6c98ec194862d59",
      "Id": "3e6f82b987eb4b7192a69c52d9e1ee09",
      "IsHidden": "False"
    },
    {
      "Start": "319f01a9e14c4170afefe6810b71d9a3",
      "End": "80d6c836250a4c9185d4d1e766103075",
      "Id": "bf762a8746d44aca9ebb9c153bb5bec4",
      "IsHidden": "False"
    },
    {
      "Start": "66eefa303e3e40c4b0c08524177d6238",
      "End": "a38d3869afc843ddb630d31dc133c137",
      "Id": "5bade43772fe47b9bc0d446799d2d38f",
      "IsHidden": "False"
    },
    {
      "Start": "f003870b20c447e189b837e5f4bf83af",
      "End": "62f8e4e919bc46e8873dff5bec64919d",
      "Id": "425ff7cb22c44c02ab7ea306d6849a34",
      "IsHidden": "False"
    },
    {
      "Start": "7b27efcc28004998afeda231f3216f57",
      "End": "24c04c3254c7446891545e5a9a161555",
      "Id": "6003676ad85141dcb120e4b7c1c89011",
      "IsHidden": "False"
    },
    {
      "Start": "7b27efcc28004998afeda231f3216f57",
      "End": "47c5ead6d5304e26b64d69ac35c1cb3f",
      "Id": "a498a823ca084956ae6754e54ee7076e",
      "IsHidden": "False"
    },
    {
      "Start": "5cf87fd0c0414ceabc2d644be35032b1",
      "End": "371c90084bb84c2aa1754cba18db5051",
      "Id": "093fa53e2d5b4d2da6d101eabd94fe29",
      "IsHidden": "False"
    },
    {
      "Start": "5cf87fd0c0414ceabc2d644be35032b1",
      "End": "6a74adb7bbe0452caa252b44a2d670ac",
      "Id": "716ade18a8274b59af9ccd476b2ed249",
      "IsHidden": "False"
    },
    {
      "Start": "20a3e33e2515404195c8acbc30f1c255",
      "End": "e7a821c05c3249b5821bac055e21f7e9",
      "Id": "92516e993fe9450c9770e24f699fc03e",
      "IsHidden": "False"
    },
    {
      "Start": "20a3e33e2515404195c8acbc30f1c255",
      "End": "72988714fa234e8a90a88cfd01be54a9",
      "Id": "3d1289756668420b810d9a28a9c3ef11",
      "IsHidden": "False"
    },
    {
      "Start": "a8203156a0ca434a8a67f8c0887f765c",
      "End": "816c8c17555047bdb67dbe57dad480ef",
      "Id": "fe3dc9f141f24683942aabb8382f475e",
      "IsHidden": "False"
    },
    {
      "Start": "a8203156a0ca434a8a67f8c0887f765c",
      "End": "6854d9869c744a7faef42b3f2f45a691",
      "Id": "e74cd231190347d89c186978256fdf17",
      "IsHidden": "False"
    },
    {
      "Start": "4c633f78905c4bce9795d319c4f81fbf",
      "End": "7aee1f2fcc714b34b348d2bfa0442cc7",
      "Id": "a2dbc3b7a42145019f0cddfa1de4cfdd",
      "IsHidden": "False"
    },
    {
      "Start": "e7415c39a39144e7aa3f7c0485dcd2b8",
      "End": "1f644e991eb547afa14f3d8cb05ac91e",
      "Id": "5a964c88431e46e18d0f6644ff5998df",
      "IsHidden": "False"
    },
    {
      "Start": "c56571440c9c4de2a422702a9f275c9c",
      "End": "6a2ebfc003fe46ccb11f554d374707c0",
      "Id": "fd48a0f6a4284ca0a31ae442c107a59a",
      "IsHidden": "False"
    },
    {
      "Start": "bef16ce0738346258525759e478fcf8e",
      "End": "a0e90aed7ca9479caca3e861a29517ff",
      "Id": "abde05ea4def4c27b8e4211b19c7fa9b",
      "IsHidden": "False"
    },
    {
      "Start": "bef16ce0738346258525759e478fcf8e",
      "End": "a2f880a3a36347779a5eda96cc76a87f",
      "Id": "81d8f06c602346b58a4ecf64948e1b23",
      "IsHidden": "False"
    },
    {
      "Start": "b83f6f64d18f4b5e9471fa1ae5536111",
      "End": "3ff0cf64123f4f948884bf64934c5477",
      "Id": "ba2573bd3ffe494b9de68d423aebab51",
      "IsHidden": "False"
    },
    {
      "Start": "e3ad8a8209284fd7ba24bd26311adad3",
      "End": "f162cf10373549fdb05cffda16a12818",
      "Id": "e0c2a637f2ef46e2a7514f55a0eaf671",
      "IsHidden": "False"
    },
    {
      "Start": "21f686b1024d40a6861cc11718a5d86a",
      "End": "b1f57d4b8293443681e83ec594143a08",
      "Id": "f499080e23e84edea10ed4792a8ba27f",
      "IsHidden": "False"
    },
    {
      "Start": "c23d6fc201114df0ac2107ccc56c97d6",
      "End": "4602b179b4394b4d98a987c170791daa",
      "Id": "876511c2fdb14cb8995588cd1eb33a6d",
      "IsHidden": "False"
    },
    {
      "Start": "c23d6fc201114df0ac2107ccc56c97d6",
      "End": "de41fa8ed8c949638fa420510add49f2",
      "Id": "6acf13d5254f4bf48e660fb90ee5fb2c",
      "IsHidden": "False"
    },
    {
      "Start": "0bb9b26ccc79454cb7dcc0a3131adedc",
      "End": "b07eb58452c34647bd208884ccaf15bf",
      "Id": "951420383abb461d9f529b9525a9bea4",
      "IsHidden": "False"
    },
    {
      "Start": "0bb9b26ccc79454cb7dcc0a3131adedc",
      "End": "b5006c24e78a4355832be0ae762a1957",
      "Id": "0a0b7e6706074ac9bdbf7221f150b6af",
      "IsHidden": "False"
    },
    {
      "Start": "0bb9b26ccc79454cb7dcc0a3131adedc",
      "End": "03d55fa50ffe4824a855c4d077373b9f",
      "Id": "656febcd6dad4425b8e2e63dea27617c",
      "IsHidden": "False"
    },
    {
      "Start": "f0997925e86042deac28897e418c290a",
      "End": "750af4c894c943578d3a135ec81146a4",
      "Id": "67402fd96e174c368ef103a3673e6f07",
      "IsHidden": "False"
    },
    {
      "Start": "8c7a6d5a01374bf297036a2fdf7e6045",
      "End": "15ab7cc042554e3da8642cd57bab4fa1",
      "Id": "4b153afdcac24b43b17aabcebd672a69",
      "IsHidden": "False"
    },
    {
      "Start": "603aa40a04064188a82ca56d709627b6",
      "End": "98eaa994c8e34a98b2d999db61510a5b",
      "Id": "c5f8421aad4a43108a16eae97b638a3c",
      "IsHidden": "False"
    },
    {
      "Start": "603aa40a04064188a82ca56d709627b6",
      "End": "5d9f4ee56b714703b4e8845daf1c3011",
      "Id": "501a6d5905c5444b8491c8e16e2c677b",
      "IsHidden": "False"
    },
    {
      "Start": "4bf54f460ef54823a4ebd8fa17c2e0ab",
      "End": "ee8ef053f187449797ab0e619e8d6eab",
      "Id": "002b09fc6e4c4ab6a67986eaa235a6ce",
      "IsHidden": "False"
    },
    {
      "Start": "b85f458911804d2a8f9909172eb2c5ac",
      "End": "5432942c391545338cb50597df4df5b7",
      "Id": "66deb14063db49b88cb8b5701d34b002",
      "IsHidden": "False"
    },
    {
      "Start": "b85f458911804d2a8f9909172eb2c5ac",
      "End": "d2941a088527491c845a263f50d1d6b6",
      "Id": "73d680a3d1a340baa93248d4d67503d7",
      "IsHidden": "False"
    },
    {
      "Start": "b85f458911804d2a8f9909172eb2c5ac",
      "End": "ce60da1954ad4d9087a83b9949c99221",
      "Id": "0abb42749f8841c3bdb5eaf94691523d",
      "IsHidden": "False"
    },
    {
      "Start": "b85f458911804d2a8f9909172eb2c5ac",
      "End": "536ca92b315744caa4378a9603f2d15d",
      "Id": "84a7236ca6d549a38d8126074b6caea7",
      "IsHidden": "False"
    },
    {
      "Start": "86ef8c7b5df94aadb6e902be7970b040",
      "End": "b607a3cf744b4e5fbd51efdf5540ee40",
      "Id": "17f21ce57ba84be995c9bfc5b2bf87fa",
      "IsHidden": "False"
    },
    {
      "Start": "86ef8c7b5df94aadb6e902be7970b040",
      "End": "db3c123825cf46c6b650688781b9b311",
      "Id": "43fce156c8f74ea0b5a74015df118f1f",
      "IsHidden": "False"
    },
    {
      "Start": "86ef8c7b5df94aadb6e902be7970b040",
      "End": "b5eab6b05dcd4c78b912857ed52015e3",
      "Id": "2bb68ac2725d4f02acc194ea67e9ca92",
      "IsHidden": "False"
    },
    {
      "Start": "86ef8c7b5df94aadb6e902be7970b040",
      "End": "b568d869bd884e169bef8a5510c9cf18",
      "Id": "f1ff9c10f22c45ae821e1f3ea7ed0f43",
      "IsHidden": "False"
    },
    {
      "Start": "86ef8c7b5df94aadb6e902be7970b040",
      "End": "50b80e8ddc3f4b24933c0690a79dafa8",
      "Id": "3f60af4b74424eb5908d30f062cb8480",
      "IsHidden": "False"
    },
    {
      "Start": "ec3c2c4d8d2a4f3196bbdc402e8f7d9c",
      "End": "5af5653c08ad4d61b34ba4c216843eee",
      "Id": "83879f59d80e4ac4ae32494b4096e7e5",
      "IsHidden": "False"
    },
    {
      "Start": "ff3bdd8186404c759c248f6e850ecd5b",
      "End": "b913e16177464ba1b3acbaf614ea8b44",
      "Id": "5d42024dc1fe4b31bc7013f99a664478",
      "IsHidden": "False"
    },
    {
      "Start": "1470b5fac137443aad0a14005ebd81e5",
      "End": "82913323ef3f454faf41264c7038d434",
      "Id": "1e3bd95c1b884c3e83e1e84d0b1ac188",
      "IsHidden": "False"
    },
    {
      "Start": "807a47ee8c7742ac93c2f8b6b4a2e7e0",
      "End": "106e0a56efac44b0bbc938911e445325",
      "Id": "4d4ce3e1e01d48d194de931004220ed4",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "2c877d9b91614bc5987ce072ca087ea8",
      "Id": "257744fec32548eda50a1fb2c3a77c7c",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "2bec2fcf74f84e42afa5ee70a8608e8f",
      "Id": "d4e7a3e014064842ad97ff26f31f4761",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "d59beb8a3b484263bbd52c4758921622",
      "Id": "f460d37e22e34d9d886d64b4a1ef96e7",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "4e6e90e4af014d5fbc215ef9359a142d",
      "Id": "62ffb8336c9e4bdd8c1642f681728611",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "f3dea113b3a645f093b4f0892e51041a",
      "Id": "d5ec435b348d4bbebbf189174e636408",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "07e60102783a48128f600033def04845",
      "Id": "c37be9ca9e3f45c7a766a488b02e2af9",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "89e2f1da1b914685bad67c9527855bc2",
      "Id": "cf66034843604cf79e89d3c7c5cde55d",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "296f5083549949e68ed9fc52e96264e2",
      "Id": "023c710be2d2464e97cf92f1f88aedaa",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "354b4109255b49e89db4dcbba29df09b",
      "Id": "00e4d895da56411f8e5f0e29607b2342",
      "IsHidden": "False"
    },
    {
      "Start": "4376c1e60b0d43998380890b8c9d8a2f",
      "End": "c817f6f7899d4ff298c2c7831e28edc3",
      "Id": "48ed3703bb154cfabd5b0a4ddb61a270",
      "IsHidden": "False"
    },
    {
      "Start": "36b83bd4e28746c6a2adb3d69fec1173",
      "End": "652dae675571426f88e625d46142a582",
      "Id": "8c5e6f389de74a7cba89d0fd98e80ef7",
      "IsHidden": "False"
    },
    {
      "Start": "36b83bd4e28746c6a2adb3d69fec1173",
      "End": "4d68c3293b474f659caac34c6ec508f5",
      "Id": "ee350323f05f4ab2ac563437b5086ddc",
      "IsHidden": "False"
    },
    {
      "Start": "36b83bd4e28746c6a2adb3d69fec1173",
      "End": "9d80496a30ef498db3f743c3ead13dca",
      "Id": "16a21302183e4ca58d463451d6c6f153",
      "IsHidden": "False"
    },
    {
      "Start": "36b83bd4e28746c6a2adb3d69fec1173",
      "End": "6770dcd894df46e4b0b76abf66c73281",
      "Id": "2e2f51e36d8d435fa1417b49e80384a0",
      "IsHidden": "False"
    },
    {
      "Start": "36b83bd4e28746c6a2adb3d69fec1173",
      "End": "101b81ce6db847a3a2c796695382519c",
      "Id": "70daedb242214afca49e0ad5551f5453",
      "IsHidden": "False"
    },
    {
      "Start": "0ac758763a6240cb81c8fae46c2965b2",
      "End": "ec29192e55e341249dc09826b921d514",
      "Id": "1e65050010c343b386fd5879b4b2a620",
      "IsHidden": "False"
    },
    {
      "Start": "18fe3dc6a1a649aaa4ab9878bb3f6a1e",
      "End": "5ec1c2b7a77e46f49f947aae608777d9",
      "Id": "ad38a03a3c56434bbcb5ab47f7a5a885",
      "IsHidden": "False"
    },
    {
      "Start": "18fe3dc6a1a649aaa4ab9878bb3f6a1e",
      "End": "6a9aefd2a7c748c4a635af94312afe21",
      "Id": "d9c930bb4a3a4483aa50abd86a003488",
      "IsHidden": "False"
    },
    {
      "Start": "18fe3dc6a1a649aaa4ab9878bb3f6a1e",
      "End": "e266c45fbdef414e983e26786c40ecdd",
      "Id": "aa2cc5eef4334544b9b1cc9091b83f42",
      "IsHidden": "False"
    },
    {
      "Start": "18fe3dc6a1a649aaa4ab9878bb3f6a1e",
      "End": "8d11f5cb2ed5421cac35d55ff70cce33",
      "Id": "6b2fdc282039466d9b7f2c393d0f670e",
      "IsHidden": "False"
    },
    {
      "Start": "18fe3dc6a1a649aaa4ab9878bb3f6a1e",
      "End": "236dbaa6f6a344a29c79e3569745b305",
      "Id": "204c79f7d53d480abbf5f2431106fed0",
      "IsHidden": "False"
    },
    {
      "Start": "23664cfcdeb7465291c8edca71bb45b1",
      "End": "86f3193c7e4647b3a1b2ab6400c17657",
      "Id": "82df3d0b69bb46c0b517bddef451bae0",
      "IsHidden": "False"
    },
    {
      "Start": "23664cfcdeb7465291c8edca71bb45b1",
      "End": "4b6155d8b4a340c08d66d6b8ca48a19a",
      "Id": "e7d26e8142b54b359343e7ff2f8080e7",
      "IsHidden": "False"
    },
    {
      "Start": "23664cfcdeb7465291c8edca71bb45b1",
      "End": "51d3d040418141c08c241a433dc19c62",
      "Id": "fcca09f3a73a47b68f2b1d0f2327c4cb",
      "IsHidden": "False"
    },
    {
      "Start": "23664cfcdeb7465291c8edca71bb45b1",
      "End": "eedebee87ed5480bb992c7f526411f0e",
      "Id": "defcd4353fcd4fb09f24b588d368b8b2",
      "IsHidden": "False"
    },
    {
      "Start": "23664cfcdeb7465291c8edca71bb45b1",
      "End": "0f9152cf41df4716894c4bf21c4b16cc",
      "Id": "16fe99b906ea40cabd59a777af94204f",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "4b0d38dbb638481eb5559526ac976fba",
      "Id": "7dc8f6a06918497cae3a55f727c68c86",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "80052f1ffdf34180bbd00054b0bbb03e",
      "Id": "b33cb4cb41854c0faf4b4f4636616e36",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "9a31e40ec7f14113896480f6e6bb0a57",
      "Id": "9b5adf876c2c4547a27a4dca96080bdb",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "871270e5be6c4a5fb1fc560536734ae4",
      "Id": "c7c142ab5c164c6fba1ff891fb477a99",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "790735458c3048a1960048d1f4de8083",
      "Id": "dd1dfa76a2ab4e3d81a7263933e54121",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "281af220c4e7460c990ad420b1bb32bb",
      "Id": "c1cf710265934f94ab23a9fafbd8730f",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "b1c4536cf989445db296439c0e5d2f4f",
      "Id": "9f71b05c942f421eb627b680d7f8e744",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "234f2644df864b989ff8360d3b910b5e",
      "Id": "352a75475091471e87f8723ad5df9d6e",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "53271795edff4c889ffc882cd94211c9",
      "Id": "b1a898de53d24c4f930570b13e1e533b",
      "IsHidden": "False"
    },
    {
      "Start": "f9c9c530453a4b2480014ed82a8fad87",
      "End": "70b0eac4f9d74cdea515e7d7635a2fd5",
      "Id": "f5ad451b1f02472990b985dac828d9d9",
      "IsHidden": "False"
    },
    {
      "Start": "fc35d03659af417db21182a3b14d557d",
      "End": "c014ba6c10b047399989fa050c9d4594",
      "Id": "634aef2391b14ffdb6997bc47b2353e7",
      "IsHidden": "False"
    },
    {
      "Start": "de319545fc2047ec97e0ccc5dfe19b86",
      "End": "5a1e3bb110a24ff1bb8dea50d81c11af",
      "Id": "300ae0d37f57418a89f1838de649455a",
      "IsHidden": "False"
    },
    {
      "Start": "264b2aa2261a4eea80fd1b4ccdbbcf09",
      "End": "78bd743272c14fd2aa30b40396f3b47d",
      "Id": "130bd042d70d472790df001bd88184ad",
      "IsHidden": "False"
    },
    {
      "Start": "c752d073272047cfa954000e188949a4",
      "End": "39a577f15a7b445e82674de7fe32183e",
      "Id": "eb877b885db84097b871b290fe50d0cf",
      "IsHidden": "False"
    },
    {
      "Start": "d81da3791ab344739dd3c5e821e206e7",
      "End": "3140e03ec3364b5bbd05a1e339baa1e4",
      "Id": "ca42ca2efecc409cbcab0938009e3c9b",
      "IsHidden": "False"
    },
    {
      "Start": "b17b6559883d47d99559fdfe15cafe63",
      "End": "81eae7dc3c0944fb990e98b44efc0d53",
      "Id": "1e23b8152ed5452eb4894d5c97a40fbc",
      "IsHidden": "False"
    },
    {
      "Start": "5cfb70470973487f88df3b021849f755",
      "End": "43e59a61e49a409291a9f4df68e275be",
      "Id": "c4f0213d5dc24ed785ef17c6df91efac",
      "IsHidden": "False"
    },
    {
      "Start": "4a00e7d2981545a0b50ac732e9cee7e7",
      "End": "69d7c5ed559d492987f42bf13df6e26b",
      "Id": "332b5a1645a0433daefac9b487395d48",
      "IsHidden": "False"
    },
    {
      "Start": "718e15370c53450fbfaac73f2baa3dc1",
      "End": "76f87ae67a26410680041fc6e8a8e820",
      "Id": "4e6c66f2b86e4e3d9d4f70edc7a657d2",
      "IsHidden": "False"
    },
    {
      "Start": "0500085b25f4426ea5262d44dc08fa4c",
      "End": "80d60a54474842e9a51f86b43a857a21",
      "Id": "62a35af5d3ab4669b78602ea32be3a97",
      "IsHidden": "False"
    },
    {
      "Start": "780cab6e80f14e739e2a5cb23ccca2cf",
      "End": "152b9e015c2c4946a9a5cfebce7c6ab7",
      "Id": "7c4192e49cba43c28215eff9c643ab62",
      "IsHidden": "False"
    },
    {
      "Start": "8c282fa07fad4cd7abf10ca5524911fa",
      "End": "0dba5ff335434b63add89980d10fc5b5",
      "Id": "aad5361bf600441c98cef64745cdf1a3",
      "IsHidden": "False"
    },
    {
      "Start": "86c4f0507a084279ada83c27b37ae432",
      "End": "406d30f1d03c4f2f9523ac76b127083f",
      "Id": "69e9c9952d6f457690f11a24ca8882c6",
      "IsHidden": "False"
    },
    {
      "Start": "46ddda4bbce745b7a45a5297151d7d02",
      "End": "10393bd98ddb44de88c9672dcacf9f69",
      "Id": "bb8b9889b213450484407cf953a86ead",
      "IsHidden": "False"
    },
    {
      "Start": "1dbc8315e92144bd92eaaf9216f140c6",
      "End": "594c34e736f34adfaad83613aeec397e",
      "Id": "19470b28a95e40cc8785082100a6667b",
      "IsHidden": "False"
    },
    {
      "Start": "6353c4030d124892bb96d45ec4a27fdb",
      "End": "e290add2311846e2a76bba71397444f8",
      "Id": "877b626020004f649dd4d6b66b01da14",
      "IsHidden": "False"
    },
    {
      "Start": "ab6e3c21086f485e94e57fb36ef64a13",
      "End": "29762353e70643e8888cbef2caf2a9dc",
      "Id": "8e15c4c2118548aa8d6d557f85bc91e5",
      "IsHidden": "False"
    },
    {
      "Start": "c64b322cfd5b4850b53d75c788b581aa",
      "End": "28c9b45708464dbdbdf338f2f925da7c",
      "Id": "609c49d89caf4402ab2d1de904b910d9",
      "IsHidden": "False"
    },
    {
      "Start": "4fff926799b2402aa6f0fcbc8bd25931",
      "End": "e6c0cb18104641a89e2d11a3249beaea",
      "Id": "e75c8793d49f427f9c2ca7c6b3ef6541",
      "IsHidden": "False"
    },
    {
      "Start": "33096961f21346f9b412a2c7b39be607",
      "End": "0612106d260845008b8f4a36765365b8",
      "Id": "f0f33979990842bea8ebcea90ed9860a",
      "IsHidden": "False"
    },
    {
      "Start": "726152d1d41643c1932c1be6b8d9ef50",
      "End": "5d7a383da9a74929bd8d91f258cdabd6",
      "Id": "4f7ba2c2e2964b338fc5446c71331d8a",
      "IsHidden": "False"
    },
    {
      "Start": "0c6bcad3d3e04f4f8bea572f13708e82",
      "End": "ac43ce19ff4249218a47e6e6823e22a1",
      "Id": "73cd325f404e41f6ad4298185212034a",
      "IsHidden": "False"
    },
    {
      "Start": "64965573d46247ee99067a51e15bcb79",
      "End": "57f996602a4f42c48af5d8dccf995d23",
      "Id": "a8bf1f107230453ab29cfe0e9070179c",
      "IsHidden": "False"
    },
    {
      "Start": "396e9c4cc58a429684ab32551eaf2119",
      "End": "416fe94e89b04413b380561c24e825c8",
      "Id": "6247890e1d504137b9aceb332b300f0f",
      "IsHidden": "False"
    },
    {
      "Start": "05396562b7ec421c80e6d7dd2d9a2d79",
      "End": "ff6133a1456b4b6b88409600eddf1fab",
      "Id": "16516fc5b1894746b8375ca56a979a41",
      "IsHidden": "False"
    },
    {
      "Start": "b3482192fe3d4431b516feb9461f824e",
      "End": "5003abc7ecd546c096be0a0aa88443b2",
      "Id": "867da96f47a049baa19bd7ea887bd6d6",
      "IsHidden": "False"
    },
    {
      "Start": "cd0d87c381d94b66b13c81b492e0b413",
      "End": "aa43d129c2a54d5fa3fb14efa812cfdf",
      "Id": "3fed523da6154ff7b3cde61ea9457cda",
      "IsHidden": "False"
    },
    {
      "Start": "ccf6e66e1f1c45d3b4455f3d5b852048",
      "End": "10f2693854d04ddc8741e946b59828b0",
      "Id": "909f622465b347f587452649882f588f",
      "IsHidden": "False"
    },
    {
      "Start": "498e46f13e9d4ddabe71147095f134f1",
      "End": "b1f16a57e2d14b5890d22cf3966876ac",
      "Id": "929557529bac412cb5aa37e37d7d2d3b",
      "IsHidden": "False"
    },
    {
      "Start": "2a5584ed5ae94f6580b71f9eb80c6678",
      "End": "96a4f5883c4344d9a7199f9b9cfdd0eb",
      "Id": "a1eec4b4ae074264b3e7ba2578fe3257",
      "IsHidden": "False"
    },
    {
      "Start": "2a5584ed5ae94f6580b71f9eb80c6678",
      "End": "2fbd920cc3e643738cea90d6c700afc5",
      "Id": "b3a13a9b4b7e4e2096e15c4d5c8e8cb5",
      "IsHidden": "False"
    },
    {
      "Start": "2a5584ed5ae94f6580b71f9eb80c6678",
      "End": "49420fd4a2754316bd1d135aea395bf7",
      "Id": "f7781e2312bc4d58965dcfdc2c96550b",
      "IsHidden": "False"
    },
    {
      "Start": "2a5584ed5ae94f6580b71f9eb80c6678",
      "End": "963c9a353eb34b7d9450c3989e3288af",
      "Id": "75bdaaf12ee44958b4ab3c88cb82b1ef",
      "IsHidden": "False"
    },
    {
      "Start": "2a5584ed5ae94f6580b71f9eb80c6678",
      "End": "507bddaab2ac4a06929ecf8a23f609f4",
      "Id": "84c37a7a354a4bf79129d12932985ca3",
      "IsHidden": "False"
    },
    {
      "Start": "2a5584ed5ae94f6580b71f9eb80c6678",
      "End": "a3e9f8a610e54fcaa271443770820ff6",
      "Id": "201d786c6c92414eaa6fc9ad8da50b38",
      "IsHidden": "False"
    },
    {
      "Start": "dec1744107bc49c991498fc415c6c1b6",
      "End": "b51b83efb5d6462f962137234de46684",
      "Id": "2442fc41b84e4a948b734a5a624fc253",
      "IsHidden": "False"
    },
    {
      "Start": "87480e94e3a34b8a9628dcd65a4abc11",
      "End": "702834f19a084ef484a1a4ac7b90cf5c",
      "Id": "651eb3e0f63b44e49f173556e288c556",
      "IsHidden": "False"
    },
    {
      "Start": "87480e94e3a34b8a9628dcd65a4abc11",
      "End": "7d82cde16de74a669190f0fb508147df",
      "Id": "1a9050ffd6a14bce999cd00b5617f269",
      "IsHidden": "False"
    },
    {
      "Start": "d3b173345a86462d893272ec8c0fbea1",
      "End": "02b50663466d43dd90ae3671d2600d73",
      "Id": "c08b0f1b827544b9a5e773f142070ce4",
      "IsHidden": "False"
    },
    {
      "Start": "65d2b7245f364e3fac5f8f4175c93610",
      "End": "1e14330242a8457e9b577a0b503f41cc",
      "Id": "a5d3ffbd05ca4f54bbb45115f9cf6e7d",
      "IsHidden": "False"
    },
    {
      "Start": "0bd657c036b948849a3a190a34a90480",
      "End": "0e1bc13a61384939966ffc04075b050c",
      "Id": "0efa6d316dde422ebd541d13cea9b756",
      "IsHidden": "False"
    },
    {
      "Start": "85c9a71163a746848f6f48cbcc6e8ffd",
      "End": "a53722ec3f3648caae95ed6fb7de2114",
      "Id": "ebd409242a9f4105adcdb89494a62715",
      "IsHidden": "False"
    },
    {
      "Start": "4dfe4fcfb6424b949c1b11ea52bd5bb4",
      "End": "003d0870ab4e4a36b0fa3832f2158f13",
      "Id": "dd48e24ab52a4b18a89385bd16b277ae",
      "IsHidden": "False"
    },
    {
      "Start": "3011e3eae00441a892cbed4a2cd97b1c",
      "End": "994430c6668147cc9861ab485548b91b",
      "Id": "28e762853f5748e1ac84dd91717e9938",
      "IsHidden": "False"
    },
    {
      "Start": "86285316a64642449545b715b80e2d02",
      "End": "5c3ff5cf12214d70b43cf6484eabefaf",
      "Id": "3ba2738545d2453cbfa3496c10983315",
      "IsHidden": "False"
    },
    {
      "Start": "f2fa8abce30b42fb983596e8b956ce04",
      "End": "9d50126dfb564dacbac04ba3f4da6baf",
      "Id": "e4eed0eb6c294728845ed740007e7027",
      "IsHidden": "False"
    },
    {
      "Start": "0ffe04667db041c198e2d326abf2661c",
      "End": "3e0c38a3cb7e42188208be3bd16da369",
      "Id": "fa6fdf9ff8d042e1bebfd4536079236e",
      "IsHidden": "False"
    },
    {
      "Start": "f5d7df8ddab74fdb99b66ec417ee9e05",
      "End": "8b816881127a4a3bbc73ea165c6cd61a",
      "Id": "ab3d336983cd403c8be095c03f0045a2",
      "IsHidden": "False"
    },
    {
      "Start": "5d5b9e177c044b7da9136e508a36bad9",
      "End": "cb8f194cf9854948a536fde278148b41",
      "Id": "046c0f40d6d449929ba501950a74f093",
      "IsHidden": "False"
    },
    {
      "Start": "9ef79a81a71649b7ba13e99e4970fe1f",
      "End": "b5b52c07b608401bafb5849d33171f41",
      "Id": "4fe2db5640e6407caf6a8f8c39c53fbd",
      "IsHidden": "False"
    },
    {
      "Start": "69e167d50da74350a8b0b9804c78fdf2",
      "End": "18bb038bd30445a1bb50f331828c77b9",
      "Id": "3b5ddffea1214aaaa2b417e9660a413d",
      "IsHidden": "False"
    },
    {
      "Start": "65d43b0d9114473cb94a2385ece95bdd",
      "End": "ce5ab43ffd2d439e8bc6b045e0f2b9fa",
      "Id": "cf313a29d1934489bb3a14c99ed616cb",
      "IsHidden": "False"
    },
    {
      "Start": "86647f8a1ee546d49eb398b22a3bb0b5",
      "End": "f495bac52e0c42d19db1a7440f1b688e",
      "Id": "ee564ebcec3a431ba21cf57e7c1f5af3",
      "IsHidden": "False"
    },
    {
      "Start": "89ea8533f85c419e9797c65366e1e36e",
      "End": "9b2d3896610e419baae7bcf85bc0e2b8",
      "Id": "f749ed32f93f47efacc035d370652f75",
      "IsHidden": "False"
    },
    {
      "Start": "89ea8533f85c419e9797c65366e1e36e",
      "End": "2af57392859d46b3bd7f247c7eaf7e84",
      "Id": "eb502a1a2b8240c18a9bc37dfdeb05c9",
      "IsHidden": "False"
    },
    {
      "Start": "96136a7cbb1d45bc84c7b7f79f461e03",
      "End": "6be2a6813e3347cbbfefa9e77479a3c2",
      "Id": "c47176e2e896481bb7ec1c2c8b0a74bf",
      "IsHidden": "False"
    },
    {
      "Start": "52a27cebeb70470c8dac7e46ad2e509b",
      "End": "e015b06afa1f40489ab87c9f898a207d",
      "Id": "016aa20f0b73432c950e5eb9588bc74b",
      "IsHidden": "False"
    },
    {
      "Start": "ebfaf648485042ee89907be6500eeea9",
      "End": "d55f7f491ea84729b0d087e9c76c8676",
      "Id": "2dd7a1d9fba2413589a0f106243ae451",
      "IsHidden": "False"
    },
    {
      "Start": "1286c1cea9934eb181ab4e7bc30af577",
      "End": "836b50ac9ce046c1b94863e8ebcb4c0d",
      "Id": "6e3163ad4b834499851d08cf342ccfcc",
      "IsHidden": "False"
    },
    {
      "Start": "868c3ea9b12c442fbad5c6785a9c3aa5",
      "End": "56621ba3c8914023965cfc29eecb1aa0",
      "Id": "987b86fccffc4083a9b49a03b2c0822a",
      "IsHidden": "False"
    },
    {
      "Start": "c5e8f80e7c1341f6a892c31af72751dc",
      "End": "b154c9e41a4241d8ada63d2ef2c43641",
      "Id": "7d6ffab9f4214fbf8a5e423473721b30",
      "IsHidden": "False"
    },
    {
      "Start": "ea72564163ca4898969c5ae9503a0c7f",
      "End": "dbbd1f57d1da4eb19374a8b5b8930bcb",
      "Id": "be7d4d33139846a0856ac24e9be93d95",
      "IsHidden": "False"
    },
    {
      "Start": "ea72564163ca4898969c5ae9503a0c7f",
      "End": "b8f47eb3c3b2400ea0e0e405eadb86e0",
      "Id": "39f2ed49d92d4064a745b37b418a1d39",
      "IsHidden": "False"
    },
    {
      "Start": "5b67153160ed4903b99d009cd4191f59",
      "End": "c3289ca9f67442668125b0842591d615",
      "Id": "3f875cfe930a4c599151551ed8bac656",
      "IsHidden": "False"
    },
    {
      "Start": "3742fc138c1746e19923e7981d0b0ce1",
      "End": "ebf3842881df4b50adce410ddce7d046",
      "Id": "44b21926f6b6482596abcb18ca1af587",
      "IsHidden": "False"
    },
    {
      "Start": "02a414142f9945799ee2b4fd8930a9a8",
      "End": "834ce85c5fb0490ca8af4ea23007190d",
      "Id": "420453d73f9549e49b97972df23b9d0a",
      "IsHidden": "False"
    },
    {
      "Start": "02a414142f9945799ee2b4fd8930a9a8",
      "End": "dce5566d07ca4632bef5ae6ea991af51",
      "Id": "d6db230107794d3190104d37e26e9157",
      "IsHidden": "False"
    },
    {
      "Start": "3b997d9d8d744effa4af9621b304eaef",
      "End": "ce4a9837b25d47bb9bdc77eb387b3d6b",
      "Id": "727bded4086e43a98755fddca58bef3e",
      "IsHidden": "False"
    },
    {
      "Start": "9bbd0e20682448eabe8ba5fa796860d8",
      "End": "d7b8a35692364e4f955030e49f65b121",
      "Id": "83d102c1599d4e8eb53239fa0c3a66a1",
      "IsHidden": "False"
    },
    {
      "Start": "75c509b617b7431396ccbd09f1b09af6",
      "End": "e9d19f6ac9fd434cb13820e6abedca0b",
      "Id": "213f2b6a66484485809157fa870951c8",
      "IsHidden": "False"
    },
    {
      "Start": "ee4fdaa9e41b46808fa6b09ec3fe1ab2",
      "End": "be427c4a23c54c6ebf7dec31ee0af8d4",
      "Id": "f8d012b8a4f74e2ab8178c1acf283f9f",
      "IsHidden": "False"
    },
    {
      "Start": "f1827e3651cb4259acb381baa157729e",
      "End": "937092de08284f26ba7a3675b4830c83",
      "Id": "b654da87f84c4d59900eb973d928328b",
      "IsHidden": "False"
    },
    {
      "Start": "43f27cd037d542ac8d9518c2fc0913b6",
      "End": "07848c6d9d2c407b97d4079a715ee627",
      "Id": "3bc35bf16e9c428bbf0c20cb44a52c4b",
      "IsHidden": "False"
    },
    {
      "Start": "3dcb7fc213b9464eb3b8826f49323a43",
      "End": "14f5b66b932944a684e209afe10eace7",
      "Id": "3f627e146f05424ca52de74e07d256b9",
      "IsHidden": "False"
    },
    {
      "Start": "3dcb7fc213b9464eb3b8826f49323a43",
      "End": "e109cfd480804433969021c871c3f68a",
      "Id": "ac559698acb043b8a9e67dffd9f8561c",
      "IsHidden": "False"
    },
    {
      "Start": "fba346b01da04023a0c2579c59883f9e",
      "End": "5a01144a9559433c9046071aa9419049",
      "Id": "3b7bb92995054a068ca5ee873710c746",
      "IsHidden": "False"
    },
    {
      "Start": "fba346b01da04023a0c2579c59883f9e",
      "End": "52ed0d74ead54a988e5d8a23a3dd6b43",
      "Id": "5ab5889cc7b84edbb51046f7c18ce3ca",
      "IsHidden": "False"
    },
    {
      "Start": "fba346b01da04023a0c2579c59883f9e",
      "End": "501ed8099cc44d6bb1a2dfa1977ba9fb",
      "Id": "86c1437e821148209577affb9ed98517",
      "IsHidden": "False"
    },
    {
      "Start": "fba346b01da04023a0c2579c59883f9e",
      "End": "0056b663a4314630a19b598604b9e88d",
      "Id": "81e270d3072148b8839716f4eb6c68b2",
      "IsHidden": "False"
    },
    {
      "Start": "fba346b01da04023a0c2579c59883f9e",
      "End": "2d6d483b891e4478979ac062fb4644ca",
      "Id": "2868ff83e9684d678078600de54cb66c",
      "IsHidden": "False"
    },
    {
      "Start": "74ab777df93d4fd8906c4b6ddcc544d2",
      "End": "ac4c1d92c1e14790915d943f37dd9646",
      "Id": "551a6f5ce7cf40ec9d45b884d5c4acdb",
      "IsHidden": "False"
    },
    {
      "Start": "48ff6f7d333843c68d9fe40792501f19",
      "End": "dadd06075b1849c8b2b1976cd3d3fa86",
      "Id": "add72f662d4641a087b8433d981bf8d5",
      "IsHidden": "False"
    },
    {
      "Start": "9323d3c759714c5cb07bc2e6de5d7bb6",
      "End": "2fcc2ad2afba48a8b6024c1a64203a9c",
      "Id": "8028d05d56ca4a4987488dd779cb47fb",
      "IsHidden": "False"
    },
    {
      "Start": "31971ccd13984a28bba43628002e38c0",
      "End": "a4c89ed573f84679aab6c73f0f9df3d3",
      "Id": "da5da9924f834f9c915d38aaa2611130",
      "IsHidden": "False"
    },
    {
      "Start": "8e939b5397d440c3a8d0068a44e8fb97",
      "End": "b7e1d14f816644bc9136766722d3a904",
      "Id": "9c4eb59a30d0421785a7dbaa8c7ef445",
      "IsHidden": "False"
    },
    {
      "Start": "8e939b5397d440c3a8d0068a44e8fb97",
      "End": "9b4967286b054f388d7f1265844d01f6",
      "Id": "c33d81b0a8634dc5963a53215162e40e",
      "IsHidden": "False"
    },
    {
      "Start": "8e939b5397d440c3a8d0068a44e8fb97",
      "End": "2abcc284b7a1473d849083cc836c8966",
      "Id": "81aa11244e9d4dfcb35ae58147ca0140",
      "IsHidden": "False"
    },
    {
      "Start": "fd4fba456c48463f8aa4134ebe0df884",
      "End": "eb313297e1e549ba9e5b1779b7f9436b",
      "Id": "729bb980b2424028ae8d4cb431cae509",
      "IsHidden": "False"
    },
    {
      "Start": "fd4fba456c48463f8aa4134ebe0df884",
      "End": "5113a6aa79b746dbb32b3452e0f523a7",
      "Id": "5d661b0774e444fe9bf3c4aff3929ecc",
      "IsHidden": "False"
    },
    {
      "Start": "fd4fba456c48463f8aa4134ebe0df884",
      "End": "ef917eaf941944dd93fa448169eb813a",
      "Id": "1f15b5c5b8964cf48cb593935219ebd1",
      "IsHidden": "False"
    },
    {
      "Start": "fd4fba456c48463f8aa4134ebe0df884",
      "End": "804b0ae52f314e76a9cb62aeb5425913",
      "Id": "d935942772a14f8882083d1df607d072",
      "IsHidden": "False"
    },
    {
      "Start": "fd4fba456c48463f8aa4134ebe0df884",
      "End": "75661be2ef6f4ccbb0f01056fddfdc4d",
      "Id": "140f9518a9844b1bb8e9b667ab38e393",
      "IsHidden": "False"
    },
    {
      "Start": "12c862c774394fefb70e875e58ae22ef",
      "End": "d1a5340b696a4b1da8db79fea235c498",
      "Id": "ae9c294861464caca272514b428f5287",
      "IsHidden": "False"
    },
    {
      "Start": "6750ceb0295a4f7298d562e9992a840b",
      "End": "28ec4afc5368481d8649cc580e089650",
      "Id": "344feb86f126408fa11d7aeec56bdded",
      "IsHidden": "False"
    },
    {
      "Start": "6750ceb0295a4f7298d562e9992a840b",
      "End": "db2801d14b034e6a963b4c5ac4783e21",
      "Id": "95da5d93af9745a296a929f0050ce108",
      "IsHidden": "False"
    },
    {
      "Start": "01b388c37b394272be4abb69ae8205d2",
      "End": "33095b83ff154f4f85372ead9828bfb7",
      "Id": "c715fea7620743c397977afea3ad906e",
      "IsHidden": "False"
    },
    {
      "Start": "8054ce1163a54a07b079cc4c15a73f3e",
      "End": "25e94ccc3d37464c9f2fb068afb002dc",
      "Id": "9857126105374fba99aa48c20d49fddc",
      "IsHidden": "False"
    },
    {
      "Start": "eae67324adf34d919bb301a92077178d",
      "End": "a6bed46f68e74a81ab6c67658587aae6",
      "Id": "bc966c90b2474b2995c64a52b3ea2a08",
      "IsHidden": "False"
    },
    {
      "Start": "1e56064b82aa4151a3713b60a36f6db8",
      "End": "66ad3af766e84fbe9187ecbf721a7f68",
      "Id": "170a582a75254190871251c5926e0d88",
      "IsHidden": "False"
    },
    {
      "Start": "8f20647351da4717a9775910c73eaf56",
      "End": "d4a3cb5518b4473c9d2f3fdb0973ae16",
      "Id": "c3e8016a876242298e9a5b75e2296b2d",
      "IsHidden": "False"
    },
    {
      "Start": "8f20647351da4717a9775910c73eaf56",
      "End": "ef521ea85f7b4dec95302b0eee357926",
      "Id": "ffc970ed98e24533ac8ceb09069ff926",
      "IsHidden": "False"
    },
    {
      "Start": "0f0dbd9c57f84dfdbe240a8c0d8417ae",
      "End": "fbf8dd3ff0464ed7b60643eac672191e",
      "Id": "21cc8ca2c75146c4af0886c7724e6deb",
      "IsHidden": "False"
    },
    {
      "Start": "45372566ebcc47169613fe4d8e5f3288",
      "End": "99fd96c24a4a464b8b20ad5dda8a5b4f",
      "Id": "bbaa6de1eb004155ad125e13eb3f0515",
      "IsHidden": "False"
    },
    {
      "Start": "45372566ebcc47169613fe4d8e5f3288",
      "End": "81eb60cdd24c482ba05848bc3d2cd506",
      "Id": "0c7982873c924a2da88e4bfe04f4fc58",
      "IsHidden": "False"
    },
    {
      "Start": "ea55402a2321496794b1a3bfb95fa0cc",
      "End": "c3121dac146d4bd6b8dd930f81c0e921",
      "Id": "8d584188eaf24af0939d53e17224e097",
      "IsHidden": "False"
    },
    {
      "Start": "32dbec24652146318f4f74eba5beb027",
      "End": "bce64a765092471e979b71a4c09511b1",
      "Id": "851334a84b1a4859880741940fb542e5",
      "IsHidden": "False"
    },
    {
      "Start": "32dbec24652146318f4f74eba5beb027",
      "End": "8cd715a3b1d746449f89a126b75c0c32",
      "Id": "75a07568fc8b4044b2fd2be25414d04d",
      "IsHidden": "False"
    },
    {
      "Start": "0122aa40c55941768c2235c49803b806",
      "End": "84069ceb0feb42c6a2dc346f9ca918ce",
      "Id": "dd9377dff8a848968db49fb26191f3d2",
      "IsHidden": "False"
    },
    {
      "Start": "b93a55d2346545d684dac5dfa5aea7b0",
      "End": "896186dff4224d07aa2f9654fe42a1d7",
      "Id": "73a42bf4ee324b0b9ae76b443b822929",
      "IsHidden": "False"
    },
    {
      "Start": "57e6f7923bf74d1d9af20eb8d9c700f7",
      "End": "5baadf873076442380abd5b30e8582de",
      "Id": "d50f2d2d1b1f48e9874539df7064ed1b",
      "IsHidden": "False"
    },
    {
      "Start": "85a1833e4291422eb3fdb40432c38c31",
      "End": "092663761bc34e47aab26f95906c2aa0",
      "Id": "6775c7b35286493e9b31550c0e96d0c2",
      "IsHidden": "False"
    },
    {
      "Start": "04af3f76efac4f229e2edf1858f5aa88",
      "End": "4971e84b90e64724aefacb6889e92de7",
      "Id": "c5f75bab301c4701944f8fd820d1d5cb",
      "IsHidden": "False"
    },
    {
      "Start": "97b82805c78742ce802b482d79eeb733",
      "End": "265a85a5b53c44bdbf62a5a3a65212a1",
      "Id": "0e7e36db866843738817440a49b92c84",
      "IsHidden": "False"
    },
    {
      "Start": "cba84c17834444f2a6c649edb35235cd",
      "End": "43d6482cfc124f09acb0e68c31402edf",
      "Id": "ec7b867fbe954a2ba3754b21482eb3e8",
      "IsHidden": "False"
    },
    {
      "Start": "cba84c17834444f2a6c649edb35235cd",
      "End": "ec538b29f3c54e0b86dc06958ffb1040",
      "Id": "fc8591f7df0c4f9da8c35e5f497983fc",
      "IsHidden": "False"
    },
    {
      "Start": "62debdc0487145f39b4cbe9a7f23ac83",
      "End": "c00905bb4dce418b843995d8a03e6f77",
      "Id": "2cfc7cb931d94a9b8372c166dfe8f6bb",
      "IsHidden": "False"
    },
    {
      "Start": "bdaea91d0aa84cf5b37e568e8782e80e",
      "End": "eb639968114c410585638fccab31b08e",
      "Id": "b3f9a23a6a994a2cab301064367fbf1a",
      "IsHidden": "False"
    },
    {
      "Start": "bdaea91d0aa84cf5b37e568e8782e80e",
      "End": "849370f61c1d48e682ae3585df08ab89",
      "Id": "e6b0319e3c434f809b3830cc03afa37b",
      "IsHidden": "False"
    },
    {
      "Start": "0eb186b8e51b46ecadb2538fa223805c",
      "End": "43ad859294bd4932bfd939cce27ca892",
      "Id": "1243a2f9371749ea940f75e87d395c6c",
      "IsHidden": "False"
    },
    {
      "Start": "6fafd00ff77548c186c3d4b41e2a1bff",
      "End": "92d04faa164e44ed85144c1ed321f551",
      "Id": "53f2bdd9d26f48d38647c7748cbd62ac",
      "IsHidden": "False"
    },
    {
      "Start": "6fafd00ff77548c186c3d4b41e2a1bff",
      "End": "36474c6d07474b71a0eec83aff1e50c4",
      "Id": "b3af28c1a74d465c86d75249c90b5522",
      "IsHidden": "False"
    },
    {
      "Start": "bfd70767fd6a43f8bb8f53ed0e718089",
      "End": "fa680ce2feac4e7e98b161f48e55158f",
      "Id": "df0cb13ec68746f489e3f3ab02020df2",
      "IsHidden": "False"
    },
    {
      "Start": "31fac64b47234779a2903eb95e4eb3e3",
      "End": "e36da73c63b0477aa2f9f303c116ece7",
      "Id": "748bf2413199469db991967e4488b01b",
      "IsHidden": "False"
    },
    {
      "Start": "7d29417eb65d48a999d80314515e1531",
      "End": "abd5a7a99c604beab81a7c9551eae717",
      "Id": "da35918e20e74b71aafe38dd1c8a4d9d",
      "IsHidden": "False"
    },
    {
      "Start": "5b50fab19cea4da5acb466b0afeda047",
      "End": "27c199a22aa3410bbcc42f370b563f9d",
      "Id": "ceea8df718e44fd581eda89a721a2cb0",
      "IsHidden": "False"
    },
    {
      "Start": "5b50fab19cea4da5acb466b0afeda047",
      "End": "9b69fcf76b0340239826d59411558eec",
      "Id": "98d29da1132e45d0951854f61680984c",
      "IsHidden": "False"
    },
    {
      "Start": "2ee8dd77697d4b65904409f2dc284c5f",
      "End": "e42ea4dda9ce421699f0eb6e5d464be7",
      "Id": "3298b5c3f317486bbc890f12a4582f92",
      "IsHidden": "False"
    },
    {
      "Start": "2ee8dd77697d4b65904409f2dc284c5f",
      "End": "da2c07a9fb0d4109b324d7c1063dcf13",
      "Id": "258516ee0b3c4b9f964072df2b293e77",
      "IsHidden": "False"
    },
    {
      "Start": "80456f5802be4c8caa806690d562ad87",
      "End": "b0bcb012aa184701948d57f9f92edcd1",
      "Id": "9f3e0cb3bf704f89a06027a84ac9f306",
      "IsHidden": "False"
    },
    {
      "Start": "5e668bc7c23540d8b33e80fb8983f0d7",
      "End": "57bd86b242b64856ba25c41828c730e0",
      "Id": "8aa7b83081224dc5be5d5a7f472a8b1e",
      "IsHidden": "False"
    },
    {
      "Start": "35739b12c64c402d80968cfe9e69d77c",
      "End": "96bdd7da21b94266baafa5794f31357d",
      "Id": "13cb43ab7c634918a7586020524b6c34",
      "IsHidden": "False"
    },
    {
      "Start": "cc17baedbe49497eaf8f06a9ffa760de",
      "End": "cd6c019114484ef39488096316cebbbb",
      "Id": "2422660b758e4e6190f740e037aec146",
      "IsHidden": "False"
    },
    {
      "Start": "e8a2b4be6d8f4f438a1529a89a4154ec",
      "End": "376de797dc674332a4bf795a43d87d30",
      "Id": "8d3db4c121aa4c5d8ff772c9b4708260",
      "IsHidden": "False"
    },
    {
      "Start": "da76bb6ed6b245a7b12f0782a81f66d3",
      "End": "252d023b600e441ab047a981b0107882",
      "Id": "169dde367dac47eaa78283849844aeb2",
      "IsHidden": "False"
    },
    {
      "Start": "b3cff3bc578c4affba12d89964697fd7",
      "End": "4626235bf1a548d2823cc2721ba77cf4",
      "Id": "d7d23deb00a748de80f4c19091836ef2",
      "IsHidden": "False"
    },
    {
      "Start": "f04f852f73ee468eab67f63021426252",
      "End": "1c4764769fcb411d91e8ebc3568fe2a1",
      "Id": "034e1fce6196487388905362750580a7",
      "IsHidden": "False"
    },
    {
      "Start": "f04f852f73ee468eab67f63021426252",
      "End": "d04dc67790fd4a96a0701efaef0e1db3",
      "Id": "2e1e2cc5effc401a8736ef8c0303cc51",
      "IsHidden": "False"
    },
    {
      "Start": "f04f852f73ee468eab67f63021426252",
      "End": "c55848fa7d834809b172a25a0f21e2e2",
      "Id": "30385e30b9d34c55bc4acd5ba7d3aa4d",
      "IsHidden": "False"
    },
    {
      "Start": "6ff7444cc5424979903a24207fa0e9ad",
      "End": "c1dc51cc09f04539a51934adceb89be3",
      "Id": "4c21f21936fb455fbdfce06220ee7830",
      "IsHidden": "False"
    },
    {
      "Start": "af5f1a8a8d0143f2b74dad2f05d71216",
      "End": "af09c9480c564713aa8c742b36c9dcfa",
      "Id": "9c8eb5075fc04e1bae613e91267e5e6e",
      "IsHidden": "False"
    },
    {
      "Start": "71dbaf70a6cc4bab9fab503c28d05887",
      "End": "22844be2b2c540c897cf852bdc407036",
      "Id": "b4a8777c7f464abb9f6872ccf8188c96",
      "IsHidden": "False"
    },
    {
      "Start": "8f566c3c0319412e8f436aaa23d90f5b",
      "End": "627882250c5a45b98098cd6d66d2c7ff",
      "Id": "3e5458e1313d461cb10e3aad84611af6",
      "IsHidden": "False"
    },
    {
      "Start": "e07ca8b9d69b4dcb9e853909cb653ca0",
      "End": "5935650314c74082b66dc99ad28971b2",
      "Id": "618c0f60c97e438e80fea9d141dfd59c",
      "IsHidden": "False"
    },
    {
      "Start": "e07ca8b9d69b4dcb9e853909cb653ca0",
      "End": "11fe5919fe784de4b1debd84893a03ed",
      "Id": "1f0cc4c06a0e441da50fc3d4a3ecbcc5",
      "IsHidden": "False"
    },
    {
      "Start": "e07ca8b9d69b4dcb9e853909cb653ca0",
      "End": "67e98208552f45eeb3d77955211ce4d7",
      "Id": "f5be7da5f9a5443f8ed3f6cd5540e054",
      "IsHidden": "False"
    },
    {
      "Start": "88e0eed7cc1a474a92ac645760e07242",
      "End": "c21b490bf3bb464b9161b7acbbb441a5",
      "Id": "fcd00ac0cb804295b29da5f7f5100dcf",
      "IsHidden": "False"
    },
    {
      "Start": "408cb8a9347f47dc9a7642616efa0e53",
      "End": "cfb6877fe58f43ef8efdcd5b68681982",
      "Id": "07e8145b310747f88f066fa6184ab480",
      "IsHidden": "False"
    },
    {
      "Start": "408cb8a9347f47dc9a7642616efa0e53",
      "End": "a5bd1a42aa2c46998aaa6c3971f330af",
      "Id": "9d46710cf715451da282b5f6e185e7c9",
      "IsHidden": "False"
    },
    {
      "Start": "e08a9a84a8e842929fb84aedf5f6c07b",
      "End": "9381aab6a9cf45ea8ac480b7dad6fe7f",
      "Id": "baa8d921366e413ab27eb5f52dafc82b",
      "IsHidden": "False"
    },
    {
      "Start": "e08a9a84a8e842929fb84aedf5f6c07b",
      "End": "1cd4e87a091043c48d2995f1d3091857",
      "Id": "24f8e6c487bf4d2bac197e5514b08d02",
      "IsHidden": "False"
    },
    {
      "Start": "e4c36a2f07714fa4859ce5d998f21ae5",
      "End": "eda54833cdc34cdf83a0dc7a68d1f152",
      "Id": "23c1329fa3564a9fbdb4bb3ebdaa5ea9",
      "IsHidden": "False"
    },
    {
      "Start": "6e6bb321582d4c7ea41e3017f04fd1a8",
      "End": "4ad52ce645b44c64ba3878b4a737e77e",
      "Id": "eb06759758e3468e9ff72ecacf36b143",
      "IsHidden": "False"
    },
    {
      "Start": "73d4eb01ebbd46aa9ae0d4b80fdad873",
      "End": "18c8b13cdef94ae689044e3f2ef4effb",
      "Id": "b6093ae0b0794d87a78a756302f340fe",
      "IsHidden": "False"
    },
    {
      "Start": "2117fad1745c478e9d888eb99f5a7232",
      "End": "5864e989516644c998d5a5e33adcdadd",
      "Id": "ab23b2cfe19a490ab538d6c3ee973483",
      "IsHidden": "False"
    },
    {
      "Start": "2117fad1745c478e9d888eb99f5a7232",
      "End": "a69b06e6b5114550bec61907f9da8dac",
      "Id": "8a1dba0a374248209f9b6f24b8008847",
      "IsHidden": "False"
    },
    {
      "Start": "85df3c8804824f2b9f1a2073a99460c3",
      "End": "ce52edbb8afe4662bb29aa25276cdd1f",
      "Id": "ac797a83f1f34dd09bc70f8069afdbf0",
      "IsHidden": "False"
    },
    {
      "Start": "85df3c8804824f2b9f1a2073a99460c3",
      "End": "c50d4355e5d44587b5fd89d6c46ce85f",
      "Id": "7320d5914ac142c1a10c33cbff2dabaf",
      "IsHidden": "False"
    },
    {
      "Start": "85df3c8804824f2b9f1a2073a99460c3",
      "End": "47a392881f174471ae29759552c24070",
      "Id": "4d42fe20b9be4925b14440761caf9054",
      "IsHidden": "False"
    },
    {
      "Start": "85df3c8804824f2b9f1a2073a99460c3",
      "End": "a220cb38e3384b42a0887e182513802b",
      "Id": "c53247220d0c414db6abbf1204342f60",
      "IsHidden": "False"
    },
    {
      "Start": "85df3c8804824f2b9f1a2073a99460c3",
      "End": "73d891e2ecdc4551b26d30768ce6090f",
      "Id": "5eb56e0019d244a385f28ceca03190aa",
      "IsHidden": "False"
    },
    {
      "Start": "6818c1eaecfc4fdab68a7bb8b0474c01",
      "End": "6a8a8799828840a884850e64f60510ff",
      "Id": "aa7f50172c284e9e8bd63db5ff19379b",
      "IsHidden": "False"
    },
    {
      "Start": "6818c1eaecfc4fdab68a7bb8b0474c01",
      "End": "f4a6e3a231b441de849eb511f9c1f694",
      "Id": "79ba0495dabb47b082d73fb3579fb3c1",
      "IsHidden": "False"
    },
    {
      "Start": "01174f296a85453cad5ec5d555ec9d26",
      "End": "f090f0a582974f88ae5b2962fdae3fff",
      "Id": "c30a1fbc381e4ff599f0ceb75fd6d356",
      "IsHidden": "False"
    },
    {
      "Start": "e28a5c19734248959e226d202b86201b",
      "End": "c248036a88d14b70ae6049d826a88f56",
      "Id": "edb7456cb99d4611abb42f3ce3d97c1c",
      "IsHidden": "False"
    },
    {
      "Start": "7c13163dc2344ea3ba927da5d034b3a2",
      "End": "27a209f0f3904a428531abcf4153b172",
      "Id": "2fe70661ad794e9f9b45af5574ec8e8a",
      "IsHidden": "False"
    },
    {
      "Start": "7c13163dc2344ea3ba927da5d034b3a2",
      "End": "e44e079cb02f4faf88a4159ddc0fc713",
      "Id": "15b717ce4c0549e3b9b0ac912f6019d2",
      "IsHidden": "False"
    },
    {
      "Start": "fd164bd0085d4113872d3543634d127b",
      "End": "04aa7d2a81fc4cf0ac0a7ac399c582b9",
      "Id": "d60400c655af423d86250d3e6d8032ba",
      "IsHidden": "False"
    },
    {
      "Start": "fd164bd0085d4113872d3543634d127b",
      "End": "bcb8ef88f4a748ef9455d7e293b84e1d",
      "Id": "8c69998fed124aeb93e523e1a510342f",
      "IsHidden": "False"
    },
    {
      "Start": "147d7023a89f472cae0f2b1154c34c62",
      "End": "65be2d9f16f4481f867cc27ed324fd58",
      "Id": "fc8718d80859497883c0b5a65dc2b93e",
      "IsHidden": "False"
    },
    {
      "Start": "956b2dad7ea64e55827450e6c8cc709c",
      "End": "07935ff8b3cc45b9ad40435a53ec65d1",
      "Id": "da0c1b874d054a44a0696952639b15e2",
      "IsHidden": "False"
    },
    {
      "Start": "956b2dad7ea64e55827450e6c8cc709c",
      "End": "cd3f27a159a542eeb4c0b7fe76cc530e",
      "Id": "f93420a48df0416bb32b18db8f8aae67",
      "IsHidden": "False"
    },
    {
      "Start": "956b2dad7ea64e55827450e6c8cc709c",
      "End": "a61265a6704546ef9b8f5a3a4fbf83ef",
      "Id": "4ad17effb1c9437d8d574e757970d412",
      "IsHidden": "False"
    },
    {
      "Start": "956b2dad7ea64e55827450e6c8cc709c",
      "End": "c72b2f85be454bfe88850431938d84a1",
      "Id": "925010a4593c4809b58c40fa0d90ad3d",
      "IsHidden": "False"
    },
    {
      "Start": "d0b6ef1dd8da404dbeb49b43ca837cf2",
      "End": "1f9e218d361c4355b9f5008ea72b52ae",
      "Id": "a7a8f86a9266435c88d687e56764fb7b",
      "IsHidden": "False"
    },
    {
      "Start": "d0b6ef1dd8da404dbeb49b43ca837cf2",
      "End": "697aa73b60914a6aa50dae1a93cd9b28",
      "Id": "e6112fda67fa44eeb2be1588f12a8047",
      "IsHidden": "False"
    },
    {
      "Start": "f32c1a055fdd4e53ae033cf8bacd6d9f",
      "End": "6bccab7365744ab18a83fb82ae785d11",
      "Id": "41166a197bf4425b89f6bb9265a5a1dd",
      "IsHidden": "False"
    },
    {
      "Start": "41c787f53a47491d8478a5f451d62d59",
      "End": "99ef72f2f1024d65a1bb7512c8fdceb0",
      "Id": "693d6dc03fbd456d80b45e3c71628755",
      "IsHidden": "False"
    },
    {
      "Start": "102b23e3936a4b61be111bec317308d5",
      "End": "5fe6f9e6b6c74338a53600ac8fe23d51",
      "Id": "f6b1b7093d194b42a505fdc7603f596b",
      "IsHidden": "False"
    },
    {
      "Start": "102b23e3936a4b61be111bec317308d5",
      "End": "16c4ed2ce5e24ff4869736dd4d0e746b",
      "Id": "319ed5f175e84ff2a4c6cfd02bd20dfd",
      "IsHidden": "False"
    },
    {
      "Start": "005675ca4396465ca7a765073e251271",
      "End": "901cf8b1103e4e56963da4a58a923196",
      "Id": "49856ad86ad744a3be3f60822dc7c99e",
      "IsHidden": "False"
    },
    {
      "Start": "5a0b81326dab4591818825e10667de70",
      "End": "6ae5a9985491415ca3e6025daec60fe5",
      "Id": "80f9a3b6028e4f0f998e42789e8fea76",
      "IsHidden": "False"
    },
    {
      "Start": "07f36674d0a44ac0bc85ae4122ff2f1d",
      "End": "4facaa6a46cd47518724c920eae72fe2",
      "Id": "332a85f325af41a383aabde6232d5a24",
      "IsHidden": "False"
    },
    {
      "Start": "07f36674d0a44ac0bc85ae4122ff2f1d",
      "End": "2887955b58544b7ea91234309407c96f",
      "Id": "19831287109048d59d7ce2a8dc67922a",
      "IsHidden": "False"
    },
    {
      "Start": "05731593c6a043eaabd007f8439ad683",
      "End": "1c9b37daf7fa468e8bc51e71a16baa2a",
      "Id": "c904b3a212154a05be305e630881b5bd",
      "IsHidden": "False"
    },
    {
      "Start": "1d31c688cebc40448619151b60282fce",
      "End": "62e9b614c99c48118f734c7282085b95",
      "Id": "be464997c0f44ba7a7bc96ea74f0dd8a",
      "IsHidden": "False"
    },
    {
      "Start": "d272cb54aef34a1da6ab307dd3acec26",
      "End": "64ad368d7f0e4c73b7d414ac04ef7779",
      "Id": "4f651281323640c5b8c50f174f811e0f",
      "IsHidden": "False"
    },
    {
      "Start": "aee325dd773f476ea73ebbe6958c4014",
      "End": "a2f36759cbc84b02b2dd16cdaf47f111",
      "Id": "d44fd6d319d5477eabd8e30e3d845940",
      "IsHidden": "False"
    },
    {
      "Start": "aee325dd773f476ea73ebbe6958c4014",
      "End": "336ef5add4cd4b9da6fb0237c26394a6",
      "Id": "55933bb2c7154d81beeb75fdf04c359c",
      "IsHidden": "False"
    },
    {
      "Start": "2b8ed64fe2bd4dc294cff17bdcb76d06",
      "End": "ba07ac3b5f1249f188b4d3bed428b2ae",
      "Id": "1e0bfcd2a65e4ff68f97bd62ec3a1220",
      "IsHidden": "False"
    },
    {
      "Start": "2b8ed64fe2bd4dc294cff17bdcb76d06",
      "End": "7fd8e61f486c4309a25c5939bc9d9601",
      "Id": "048b27716e9c4661b518666268120742",
      "IsHidden": "False"
    },
    {
      "Start": "977c1dfe4a744d209445095f5f6c9bec",
      "End": "60f7eaa69bfc42bd84052026af130f1d",
      "Id": "512ec54e10864c94b3a33f38d43ecad8",
      "IsHidden": "False"
    },
    {
      "Start": "e7d19dcbb743471183b88060b711446c",
      "End": "463880dd89544b86b553ac56d8705dd6",
      "Id": "f2ae31b6adf745fdb1422821d6f1cbc7",
      "IsHidden": "False"
    },
    {
      "Start": "4f8f9daa0d7346168a012432828b556b",
      "End": "3fd10e3bfe794ed5bdcbc9c038835a78",
      "Id": "3361948da38b499ab92e15126496479d",
      "IsHidden": "False"
    },
    {
      "Start": "7fca23f0322f4117a63f0d87e6329bfd",
      "End": "edfa00f05fb948fda2f70d6b555cc4a1",
      "Id": "4d8f7b83ed39431abd630a65c6a0d061",
      "IsHidden": "False"
    },
    {
      "Start": "7fca23f0322f4117a63f0d87e6329bfd",
      "End": "bd8d7e82b7684919a2c7fa5009686e07",
      "Id": "7792ef50d5584c3bae76fbd4c4782250",
      "IsHidden": "False"
    },
    {
      "Start": "37f306a24f2a48b280da8d1826525654",
      "End": "42d3affe70e34d7ab177e54d577d6580",
      "Id": "d65f80d8da284460990fc3391cc9c1d5",
      "IsHidden": "False"
    },
    {
      "Start": "4384595e4ee94e478005359b1bf066db",
      "End": "f901567ccb5f40348a96736863a9bec3",
      "Id": "8f41bdef1c6443029ba9a5fc53e5d23f",
      "IsHidden": "False"
    },
    {
      "Start": "71627643c7e04bdc9bdeaf4d70553db7",
      "End": "ca77b9c122894b57a0e585b8e245b8de",
      "Id": "5dfa13c83e554660b03eea6b0b088471",
      "IsHidden": "False"
    },
    {
      "Start": "7d8a282c17604f95966a8bcd69be754d",
      "End": "f851ccf25c504cc2a37d41660c1bb06d",
      "Id": "fb56a06de788454b8662404c866adbaa",
      "IsHidden": "False"
    },
    {
      "Start": "91d2f7fcfe5a44029e925f85618c5bd1",
      "End": "031d6656d19a49668386f309bdae1319",
      "Id": "383706667797402d8a1ff3ceb1a86d6d",
      "IsHidden": "False"
    },
    {
      "Start": "a5a94cb685fa4ca093a33541700ddc55",
      "End": "aee0497c66de4b4f8dd589d1c05ed97b",
      "Id": "925484b6215b422e8edd7754cf85ca47",
      "IsHidden": "False"
    },
    {
      "Start": "01b99ac030e1411fa0a4a8298fe2d54f",
      "End": "8e828630eb344734907a0f285f37768f",
      "Id": "a58640076dce414c8001704b0d039cc4",
      "IsHidden": "False"
    },
    {
      "Start": "b5b484102a5043b49a10672fd7d52ea3",
      "End": "86850fe2b85f43f6a9d550c6b72ccc13",
      "Id": "d9799978710f4e2d83db3cc165f5023f",
      "IsHidden": "False"
    },
    {
      "Start": "7548b49ce61043da86d134201f8a695d",
      "End": "1665dc7acbe94123a7d841845e0fe305",
      "Id": "12cc6fc208ee4238878942aca316788e",
      "IsHidden": "False"
    },
    {
      "Start": "927c110a2b5d469799ff9e4b56bef4d3",
      "End": "5c23eeb0dfa54aafb79a1eb134fbd40b",
      "Id": "bf61297a50b14af7ba899f76f7012e54",
      "IsHidden": "False"
    },
    {
      "Start": "927c110a2b5d469799ff9e4b56bef4d3",
      "End": "aa7ca6e89e014326bcdb00c1abde57f9",
      "Id": "877b5bfc0a24458581b42ae30e5dcb59",
      "IsHidden": "False"
    },
    {
      "Start": "927c110a2b5d469799ff9e4b56bef4d3",
      "End": "ac7e9ea5cff0462c9f809faaf358b567",
      "Id": "011557fe0c0f40f2b8138dd8fb1f674c",
      "IsHidden": "False"
    },
    {
      "Start": "5d94939b48d5410f880685d1ab166e96",
      "End": "033023a3651a460b87b34483b5edd54a",
      "Id": "61fba7c795d04a7c97face6f4b994e45",
      "IsHidden": "False"
    },
    {
      "Start": "5d94939b48d5410f880685d1ab166e96",
      "End": "250034a88b5d4567906b621c8ae807aa",
      "Id": "86e2bd4db01b4d0ab902fe0d8e06e3cf",
      "IsHidden": "False"
    },
    {
      "Start": "ced02525486041e1965ca39b9109cffa",
      "End": "99004c3f8ef54e55b45e5651fffbd182",
      "Id": "c81a05399aab4262a97724f7f0398fed",
      "IsHidden": "False"
    },
    {
      "Start": "6b8fd9ba911a4fa1867c1634d133a77e",
      "End": "81ab501b41854571b06b8baf11fe8cea",
      "Id": "f0446b86acd64cc191d58dc65f81bdb0",
      "IsHidden": "False"
    },
    {
      "Start": "202105932d1c4c2f99b5717cc373e5bf",
      "End": "0ff0e4bbb577442baf03466fd50967cf",
      "Id": "bfa33e07d3124c25a91b4597f346da28",
      "IsHidden": "False"
    },
    {
      "Start": "48c176327dbf4d99ab0ddd84fdd25eaa",
      "End": "20a6c888ae2d40d780b08e664ca047e0",
      "Id": "5bc61ab330564d55893f23f08fc20109",
      "IsHidden": "False"
    },
    {
      "Start": "48c176327dbf4d99ab0ddd84fdd25eaa",
      "End": "e2c7eb2e5a85442e8b4c87186bb44c3d",
      "Id": "5b67492f8bab42078cbdf9cd1e9352da",
      "IsHidden": "False"
    },
    {
      "Start": "2bb59cd55518402a8ebdaed41810074d",
      "End": "7f224148e9174c3aac16fce71461f1d3",
      "Id": "9973c3ef32c64862800e8111aa4e3443",
      "IsHidden": "False"
    },
    {
      "Start": "2bb59cd55518402a8ebdaed41810074d",
      "End": "ade86154b4b340888f9b878ba8098518",
      "Id": "791bc2ccb5094f2d9bc321e5f6396b3b",
      "IsHidden": "False"
    },
    {
      "Start": "2bb59cd55518402a8ebdaed41810074d",
      "End": "15b1bc884f6444a591a7734320348caa",
      "Id": "441c8614c8534249888addf8b345b17f",
      "IsHidden": "False"
    },
    {
      "Start": "76e648e039224215b5aba852c5fc379e",
      "End": "6693799aa6d8473795307ced7b55296a",
      "Id": "424026e98e9d4f678306a841a1cb7e43",
      "IsHidden": "False"
    },
    {
      "Start": "af1cf8d1f7fa47d993764eb24d3d2b27",
      "End": "7f706104b10d424e92e290746064a297",
      "Id": "3d3e1ad9c6974503aee9e2b95f1fe2e8",
      "IsHidden": "False"
    },
    {
      "Start": "52b8f2c9ec0e49c38b7a7d7fec297fdb",
      "End": "1bbfa50e94b142eebea0af8ce321c94e",
      "Id": "294986e769ae4b04a6bab7f9c40a310c",
      "IsHidden": "False"
    },
    {
      "Start": "4ccf992d2c1949b58c1f09178b4f5837",
      "End": "ba6cc7b820464424b3d715070afa6b4e",
      "Id": "1d8fec6c6a4341c6a1c14866a7fc4699",
      "IsHidden": "False"
    },
    {
      "Start": "71e7a33d7c3b45e697be1113591241ce",
      "End": "5c0bc7b557ac4edba8ff81979ff72f69",
      "Id": "bb33ca3dc7b04caaaaf1d58672c9d774",
      "IsHidden": "False"
    },
    {
      "Start": "71e7a33d7c3b45e697be1113591241ce",
      "End": "bfe59acecd394b398f35cc6030ef1737",
      "Id": "f5ccebc92080460c887606b098d2ad31",
      "IsHidden": "False"
    },
    {
      "Start": "4d80a96eb0d94a99b53e6faa77f9b277",
      "End": "a96c5208a48f49569f1e0c3103a8327d",
      "Id": "23c63737aa614195a4a826e27afbef62",
      "IsHidden": "False"
    },
    {
      "Start": "a6a2dc368c4646eca922ea03b8283437",
      "End": "a4dfe93225cd4b0bb5205978a39eca36",
      "Id": "a474f9ec68924b33829e91a2f5469875",
      "IsHidden": "False"
    },
    {
      "Start": "25e12d45de89401f98aa73b0146c87e9",
      "End": "960e9f59011d48e39c280597d1956a9d",
      "Id": "73c34c88b53e4c8baad4a170abff9fc3",
      "IsHidden": "False"
    },
    {
      "Start": "9d932286b35a435da88d7ee3b097b3ed",
      "End": "35ff25b35d4e41b0b3dd3ad3e649d934",
      "Id": "0993b97c5c6a462e956fee0fceccce7a",
      "IsHidden": "False"
    },
    {
      "Start": "9d932286b35a435da88d7ee3b097b3ed",
      "End": "9d39f2c788114aeeb0e34946ca45f078",
      "Id": "494026255508434ca3e6a229d8438853",
      "IsHidden": "False"
    },
    {
      "Start": "ac3b39c150c44204be12b98bd930a53a",
      "End": "a13f0565bec0429eb9590bc0e94df0be",
      "Id": "967dcddf52af401db221c02caa82b33c",
      "IsHidden": "False"
    },
    {
      "Start": "ac3b39c150c44204be12b98bd930a53a",
      "End": "a00dc614772d4d41a8df23cf5f3ba167",
      "Id": "7b4dd9e79fb94fd290dae96f5ff82018",
      "IsHidden": "False"
    },
    {
      "Start": "a49018e640ac4555beda545f503e5fa0",
      "End": "8102eebe700241e89247f9c9ad4d5918",
      "Id": "7dea55c054a94316996d1851b9572c3e",
      "IsHidden": "False"
    },
    {
      "Start": "34309be38460404c8e72d27c90f4ef34",
      "End": "5b6b4d936f8a48c987c1c26fd8a3bea6",
      "Id": "0ea1f350314a46888defa88cf3fc7af6",
      "IsHidden": "False"
    },
    {
      "Start": "3a872e232d114afe96d0714df9c6ef46",
      "End": "a2bd2ee644594e2b82f0f67fdd17214c",
      "Id": "1a7b5bedf33a4cd9be80478264a7e31c",
      "IsHidden": "False"
    },
    {
      "Start": "6b1d7c93993e467e9a2c08dcb3f3042e",
      "End": "b66439416fd54dcc92708390cb125138",
      "Id": "4b0ec219a0614d67a1828d74a670301c",
      "IsHidden": "False"
    },
    {
      "Start": "1a2b8f54481f4ff290fde9120633345c",
      "End": "84635c4073794f70bba9eed2c827c532",
      "Id": "97b525aab8274551bb1e9a6692986a64",
      "IsHidden": "False"
    },
    {
      "Start": "a28498673e454961b520f7be43ad9359",
      "End": "b3c7a788a1b34466946a4c206b2b67e6",
      "Id": "7aab54df228a4deaa49c1e814da589f9",
      "IsHidden": "False"
    },
    {
      "Start": "a28498673e454961b520f7be43ad9359",
      "End": "4b8f730115394ce0b87a144e6b3669ae",
      "Id": "812d8e08d9d84d8982527e4936ee5909",
      "IsHidden": "False"
    },
    {
      "Start": "a28498673e454961b520f7be43ad9359",
      "End": "67d4b27a6abd4b5c8f11ad9e2a2ae020",
      "Id": "666b0a6410da4659b4711c12282f5425",
      "IsHidden": "False"
    },
    {
      "Start": "87bec41d7f82445680a7ec0977107473",
      "End": "b74f38a25cae4fd693d5f4290c988ba3",
      "Id": "3b8f1d4272464402b5640a9b62dc6f88",
      "IsHidden": "False"
    },
    {
      "Start": "87bec41d7f82445680a7ec0977107473",
      "End": "eeae44d299b54219836253fc2a6398c6",
      "Id": "487c2cbb73804cca8d6f1e11c36951e4",
      "IsHidden": "False"
    },
    {
      "Start": "667c479988b344f2817a00fef1f78039",
      "End": "fe2aba8b3e1c4fe2a0132988f90018d3",
      "Id": "664fb8f6fe3f4eb5a958225f0f8c0ec0",
      "IsHidden": "False"
    },
    {
      "Start": "7a0ad4ffba8a42c1a57039e7e32261b1",
      "End": "dfb1746ff79c455e8cdfff1ae05d5634",
      "Id": "f122ffeeba4d4c95b8abf8dbf200b74e",
      "IsHidden": "False"
    },
    {
      "Start": "164b17c8e87240baa37db194d44a4ad3",
      "End": "063de4a001964bb4918601e5ebd0b8e4",
      "Id": "6a992aed993d413b8efa2a8501f54dd9",
      "IsHidden": "False"
    },
    {
      "Start": "bfd821f326ca4175abbe8dd06df7f8fc",
      "End": "05066d1236334c1c8a26b39c5e86d108",
      "Id": "97f94117615543f688efa3b5740aa9e0",
      "IsHidden": "False"
    },
    {
      "Start": "0ca572b5b503465d882e66d33ed495f2",
      "End": "0212262f7b7d4d388a4f6ca74f237a53",
      "Id": "386be2f7dc9f45269a1e8799700928ab",
      "IsHidden": "False"
    },
    {
      "Start": "7e8041bb9eb448d8b97b07a172c46c91",
      "End": "d72fef078cf64d12aefa2203aa8588c1",
      "Id": "ca2133a0c0274aad916e8b1e6696f3e9",
      "IsHidden": "False"
    },
    {
      "Start": "618ce7d7aff34239bd6c8d17565f8c40",
      "End": "62f4f948a66543a280b0d3ff826f41f3",
      "Id": "5eff206f831d4c04a38a671f203ffce2",
      "IsHidden": "False"
    },
    {
      "Start": "8e7a7ffc8d8f4b4c8f0cd9d6f36c6b3e",
      "End": "6352648891fd4f3c9e089f256e730620",
      "Id": "b87c608c8c3b411fbacd33fe04e762a8",
      "IsHidden": "False"
    },
    {
      "Start": "8e7a7ffc8d8f4b4c8f0cd9d6f36c6b3e",
      "End": "1e550038594140dcaba6eaeaeb0d1c81",
      "Id": "23406e24308844c1af8e9e386b6bbe58",
      "IsHidden": "False"
    },
    {
      "Start": "0f136daa4d104791aadc48caa9950fa6",
      "End": "fdd6200c5d214ebc85364eddf1e4464b",
      "Id": "01524801b60a4079a646ed297bf86572",
      "IsHidden": "False"
    },
    {
      "Start": "0f136daa4d104791aadc48caa9950fa6",
      "End": "af3c3745d9b94deda27fac9bc0986ac5",
      "Id": "0953c337f0bc4e18a708f1a388084f97",
      "IsHidden": "False"
    },
    {
      "Start": "fffe324926e3416d8ae221cb392bfe63",
      "End": "1eb4ee450e784e759e5f15f32fdb63f3",
      "Id": "71326807c4b742cb967bb550ad9a1340",
      "IsHidden": "False"
    },
    {
      "Start": "f9a5cffea6674767a72dd2ed5103a79b",
      "End": "0649e2ea09c04091b15617071e316453",
      "Id": "1c42ef80278a4c24bd153f20d5daf1b4",
      "IsHidden": "False"
    },
    {
      "Start": "2f4ba555ef1740b193c7e453542b4c66",
      "End": "63b9fa04d93743c29747c58ea48dbea3",
      "Id": "8f52c6c3a70247b7884de2a65dc24d4f",
      "IsHidden": "False"
    },
    {
      "Start": "510ef62758cd4471889d3d50bbdd0b38",
      "End": "bcf5a291fc7c4a07ae6b4e18b6496076",
      "Id": "b14b5d47478d440fb0d4714cba896bc3",
      "IsHidden": "False"
    },
    {
      "Start": "5d8d0b4b3a374e19a86ba2376bd9a6b9",
      "End": "6698b194671f468fab1bc49ebbc60a29",
      "Id": "dc425368167d4f019b09639b89913bc8",
      "IsHidden": "False"
    },
    {
      "Start": "ebac504e826741c1b0b806677dfc9a65",
      "End": "27f1369dd76641b9ac1b285a3c584b5f",
      "Id": "2eac39934b3144c199f46e86d0854d5b",
      "IsHidden": "False"
    },
    {
      "Start": "ebac504e826741c1b0b806677dfc9a65",
      "End": "27d889ee5d0b48e4bb452ca792a4b680",
      "Id": "841a55cf66c1436692b6e791c9fd4d97",
      "IsHidden": "False"
    },
    {
      "Start": "85483ae4cb664a5f91966ec6e68eef06",
      "End": "4162b4d15a3c4855b9014408a370c235",
      "Id": "ef20e1262a1f4b709c61363eeba528ad",
      "IsHidden": "False"
    },
    {
      "Start": "021c41e803244c03b1d1e167e6e455a8",
      "End": "962e290661c740c9b37c6be0981fd610",
      "Id": "38bcd10079694daba8718c26cd7de19b",
      "IsHidden": "False"
    },
    {
      "Start": "64b32bd7c52c4665995f9a6741974dd7",
      "End": "c58895cbe74d41f3958c000c91c353a5",
      "Id": "746d3dabfd754b12bc6f03c234dc7142",
      "IsHidden": "False"
    },
    {
      "Start": "caf0c076199d43e5a35b3e9aa6825182",
      "End": "78f110e1b54948d1b813ac8e78a960e7",
      "Id": "6fba51ff74c74854a12b38a62f8ea032",
      "IsHidden": "False"
    },
    {
      "Start": "5303e61ca2314c94b85f974fd4a7f2ea",
      "End": "f726552c4aff48249aaab5d181886017",
      "Id": "7a6330f9aa1641ca9f4492c7e29e4d32",
      "IsHidden": "False"
    },
    {
      "Start": "289be12116ba4962ae99a7dc641bde02",
      "End": "4b6f4fae2af04c0f9c1d9701acc4049b",
      "Id": "92daaafff2894bb3bb930dc2f20ae2dd",
      "IsHidden": "False"
    },
    {
      "Start": "289be12116ba4962ae99a7dc641bde02",
      "End": "081172e8e1f44da29b6347c94e4bd7f7",
      "Id": "ff360925b4334ae1a4593a5e7ddf4757",
      "IsHidden": "False"
    },
    {
      "Start": "289be12116ba4962ae99a7dc641bde02",
      "End": "2787a0fb3c6046e1b8af2c04bf7ee7a4",
      "Id": "8a0d5cc36ee54199b51810bb0a84c305",
      "IsHidden": "False"
    },
    {
      "Start": "289be12116ba4962ae99a7dc641bde02",
      "End": "294e0a80694647d784762ad2831d05d9",
      "Id": "f35ee7bf897f4081b40d27624871872a",
      "IsHidden": "False"
    },
    {
      "Start": "289be12116ba4962ae99a7dc641bde02",
      "End": "7abd0f1d445045b1b362197a31bcdd2b",
      "Id": "99fa6883ff754201b4b00b5e5d753e52",
      "IsHidden": "False"
    },
    {
      "Start": "bab4fe071318439f81c252fb188e3b52",
      "End": "0bcbb1e6c05a4bea936da2f5a755f63e",
      "Id": "c4bfd8699a664e1795f327f71abc364b",
      "IsHidden": "False"
    },
    {
      "Start": "bab4fe071318439f81c252fb188e3b52",
      "End": "dbc8ae0f6f2546668cb21ff4c41dcba5",
      "Id": "3012d0adf27f4992b9006c164d127b71",
      "IsHidden": "False"
    },
    {
      "Start": "bab4fe071318439f81c252fb188e3b52",
      "End": "4711ef2586d24bc2aaf552e8e77c3ffc",
      "Id": "d7bf27b544c842f485ae3da717f23483",
      "IsHidden": "False"
    },
    {
      "Start": "4580b81d02a149d680bd30d369216dac",
      "End": "f94fbef5cb9b4de6a85c0b15787a9e69",
      "Id": "b7717b823aa4496782cbb7edc4661744",
      "IsHidden": "False"
    },
    {
      "Start": "4580b81d02a149d680bd30d369216dac",
      "End": "511e401262de41f9bf4db2df263e16ed",
      "Id": "ddb6095a16754131ae40911f49a8d58b",
      "IsHidden": "False"
    },
    {
      "Start": "cd7d90c5fdfc45f38aaf4a316ded7672",
      "End": "58437e18f45a4410a580739cdaa74024",
      "Id": "d1a32012a42e4d59b31c8f529b31bf2d",
      "IsHidden": "False"
    },
    {
      "Start": "036fb7076ea14b6dbef5b305a375add0",
      "End": "41c5a2d301ac48958245475b639dcf34",
      "Id": "2d43963eff934c6092a73b83266d3bb5",
      "IsHidden": "False"
    },
    {
      "Start": "5d52a705c0ee454082c47cc5d6469ee0",
      "End": "407da49c7aae47d393ac8b2762b3817b",
      "Id": "d7af733ec0994b70a7b7dd4ea9642bd8",
      "IsHidden": "False"
    },
    {
      "Start": "921c65d7b53742719b54b2cef3bdd71d",
      "End": "1106cfb309ee48ae918659e012d2f420",
      "Id": "4c3acb3bc149469a83c068f61392a913",
      "IsHidden": "False"
    },
    {
      "Start": "5140e0e67434451a92ef548e1d62c3e8",
      "End": "53ec32880a93462d8a720aed6d9ed870",
      "Id": "eeaba19206d448d792b88ce25d3be48f",
      "IsHidden": "False"
    },
    {
      "Start": "5140e0e67434451a92ef548e1d62c3e8",
      "End": "0cfda30d264b4c51b44dd6cc3cdee25e",
      "Id": "d7d54a4a92464c56afed3d2d4346ba90",
      "IsHidden": "False"
    },
    {
      "Start": "5140e0e67434451a92ef548e1d62c3e8",
      "End": "82fddfc5c5a34536a5930e2916cd99a4",
      "Id": "b970737d22f44c238df04b31e1ee09d7",
      "IsHidden": "False"
    },
    {
      "Start": "627de1150da44837abfd7e23868c0df5",
      "End": "d87f88dcd827421cabdef907b83c1719",
      "Id": "f728a5cc10b742f9bdade6ccf914be26",
      "IsHidden": "False"
    },
    {
      "Start": "7710eb5b63bd407c8c9cead89eb59149",
      "End": "b07b258d06a64899a7b699f52fbd3fb9",
      "Id": "435b89ac416342bba80688fba84d8184",
      "IsHidden": "False"
    },
    {
      "Start": "7915e3ccc0634ac0bce0ecd241a8f4c0",
      "End": "df9e55780c8144d691db1ed584b64999",
      "Id": "95345f1221fc4ce194d6af72e8f394a9",
      "IsHidden": "False"
    },
    {
      "Start": "7915e3ccc0634ac0bce0ecd241a8f4c0",
      "End": "e9159a6e617e4c9fb6032ecaf0b2fc92",
      "Id": "71ca86b3f9454481a3fb05b8ad6a4d58",
      "IsHidden": "False"
    },
    {
      "Start": "94b516affede4d27b22909f8208068f0",
      "End": "cc063a32a7f24aa0a470c1220f883d05",
      "Id": "2161b7e364474a50bbc0dd2d53b200af",
      "IsHidden": "False"
    },
    {
      "Start": "3c921f85ca434b4ba32d98a57a6857fd",
      "End": "11aeefc39f744d53a8f04b85a63eee53",
      "Id": "cd927023d6e04f28b3b011ff0d26685d",
      "IsHidden": "False"
    },
    {
      "Start": "f49603620bda4aeebc7f243fa14616c8",
      "End": "52c0519f378144a4a7b2e2200c571516",
      "Id": "f27a4e077335454f8e8951ab9fcdf2ef",
      "IsHidden": "False"
    },
    {
      "Start": "a57d01036fbd4c7fa35d212fce167fa4",
      "End": "6fa74ce854484edeb08a65b9c8a599c3",
      "Id": "a23910f2b72c4027b0ed148dc5f11bed",
      "IsHidden": "False"
    },
    {
      "Start": "a57d01036fbd4c7fa35d212fce167fa4",
      "End": "014b304982cb4ec1b41f723eb263e81c",
      "Id": "edb8c8a032b04d6eb1c3a6302ed357ae",
      "IsHidden": "False"
    },
    {
      "Start": "bec6bd450a96478aaad47f87fd9ba47d",
      "End": "12166afeb6ee401fa1345342d8dfdbc4",
      "Id": "da0d19653fc54b2c9037f01ffd1ff42b",
      "IsHidden": "False"
    },
    {
      "Start": "89e963d08d094f86929e6baccde9b6fd",
      "End": "5d6590a545ef4740a04c363833d0f3a7",
      "Id": "aaad1572188240419bb890b9e981b2ff",
      "IsHidden": "False"
    },
    {
      "Start": "4edb7b1bfd0d4867a72ecb2a1795f334",
      "End": "8d1b0dfb1d12425494860439b7cbc294",
      "Id": "8587f971f1314483ba10278ce0d41375",
      "IsHidden": "False"
    },
    {
      "Start": "4edb7b1bfd0d4867a72ecb2a1795f334",
      "End": "17aca41ac23f49cda337d1f39aa04865",
      "Id": "5dedb8324dba4cdeac92874766c55f2c",
      "IsHidden": "False"
    },
    {
      "Start": "4edb7b1bfd0d4867a72ecb2a1795f334",
      "End": "65f44362ff834cd1b0e78b32be7bd834",
      "Id": "603f9a3b6dc94b438d5e70b09b887015",
      "IsHidden": "False"
    },
    {
      "Start": "4edb7b1bfd0d4867a72ecb2a1795f334",
      "End": "51bc0b086f7d4cb084e2718b9d62d267",
      "Id": "473cde7625354b91a6ba49331073b2de",
      "IsHidden": "False"
    },
    {
      "Start": "4edb7b1bfd0d4867a72ecb2a1795f334",
      "End": "00d24b31d77e486eb49b6ce7197c966c",
      "Id": "3622676d2d0b4900a6bfa565b9abfefc",
      "IsHidden": "False"
    },
    {
      "Start": "ef603aa9d12e49a9a4f5c05002f5ac84",
      "End": "7dc5026a03e142f1959aff1ca3b3eb9e",
      "Id": "bc93626ee32045f98d255dd37d3370e6",
      "IsHidden": "False"
    },
    {
      "Start": "ddd24c30575d433e9efb8bc16799a4b2",
      "End": "24ded1d46c6b44c99f84eef9552edaa2",
      "Id": "366ec5ba4bb042fb9d2360aa1cd6dd34",
      "IsHidden": "False"
    },
    {
      "Start": "4d923483e5fc48db86ce7429fd9919e4",
      "End": "76672bd9d2f840a18012b7af92923fc1",
      "Id": "941e2aa82adf473e825693d0959b33a5",
      "IsHidden": "False"
    },
    {
      "Start": "4d923483e5fc48db86ce7429fd9919e4",
      "End": "229631b559094370a30f95efad846615",
      "Id": "dedec60f5d2840e4b0fe2ff824222cc4",
      "IsHidden": "False"
    },
    {
      "Start": "800ef22c2e084885ab4da98d3003ee0d",
      "End": "2b10b42273284d7f8d5b6a2672fb5650",
      "Id": "4e92035548de43699bcc41a54bff2fb6",
      "IsHidden": "False"
    },
    {
      "Start": "97837cdacf33421796de732165476ab5",
      "End": "44dd5a91bba44e729d7fc5d13aba47a7",
      "Id": "1f9581d091d740a980c361b671f85d38",
      "IsHidden": "False"
    },
    {
      "Start": "97837cdacf33421796de732165476ab5",
      "End": "3dc16afd6f5f4b5db68cb48a1803df54",
      "Id": "5460612d31a644f5999cb3a1c0ec6221",
      "IsHidden": "False"
    },
    {
      "Start": "fa687f2d0e8747c8bf599efa1618135d",
      "End": "d5b7e6c2130e43429cd2d7bdaf44b5db",
      "Id": "086a8a51c0ef4cd7b8f6ba5c8e7342e4",
      "IsHidden": "False"
    },
    {
      "Start": "fa687f2d0e8747c8bf599efa1618135d",
      "End": "6701cf60ae1547638e17ed2d52ffb89f",
      "Id": "0d097d5096df4c6facac96b5b5ac4e76",
      "IsHidden": "False"
    },
    {
      "Start": "a1cd87e7d4ab40b287b4dcc8e7e5eaaa",
      "End": "e4727b4e83e7427f9689f232f2147f2e",
      "Id": "d8763806c4c14ced9f0bd26f0eb1cf08",
      "IsHidden": "False"
    },
    {
      "Start": "08a0f25275274b2eb661d8bee48b471a",
      "End": "e69a34e3d6d8429caaeab128c06f6566",
      "Id": "0954e0536a544622beac8a9a131b645d",
      "IsHidden": "False"
    },
    {
      "Start": "55a032a277564a25aa33b771b3107a8e",
      "End": "1cba3c60d6e34f868372857fdf52e501",
      "Id": "414b4934d12e4387a503fe36bb013667",
      "IsHidden": "False"
    },
    {
      "Start": "b46ff5ed40434e7686df7c7d07028f68",
      "End": "84b43ffe392046bfae030c7a35e4d023",
      "Id": "1967bbe13b514a94952eadf0ae4d25a0",
      "IsHidden": "False"
    },
    {
      "Start": "a994e8f4cc4b4446ab1d060c9f5aeff1",
      "End": "941a0fa4a74b4dad8f0bc0354728da1b",
      "Id": "a24d9095b9a24c8fadfc2ea2b102ad8a",
      "IsHidden": "False"
    },
    {
      "Start": "a994e8f4cc4b4446ab1d060c9f5aeff1",
      "End": "985851ace5ea414fa37d00968699b2b2",
      "Id": "e891e58ea1084f1ebb44ede0ef632ae8",
      "IsHidden": "False"
    },
    {
      "Start": "a994e8f4cc4b4446ab1d060c9f5aeff1",
      "End": "1386f5bb497941c6aabded9a7d08b9d2",
      "Id": "e727f1406cf14a6f8a0b17b34ef32e16",
      "IsHidden": "False"
    },
    {
      "Start": "387de4c05ad34077ab89c2ea9cb55cc5",
      "End": "771c4f4599d7433f9cf7067605ddceda",
      "Id": "ea4b7f76703d446589bcdea3d615a5f1",
      "IsHidden": "False"
    },
    {
      "Start": "b0a3e64a307948c392264e5943fe966e",
      "End": "adf32d2dbb0c4ebda885195016fe714d",
      "Id": "47ad0778954d438daa9614040e8475d0",
      "IsHidden": "False"
    },
    {
      "Start": "24ebcd296fc34a7cad98e269586e400c",
      "End": "7b2d16a910744ac2958dbdccca43c552",
      "Id": "defded0334b648eba353001a4c02aba8",
      "IsHidden": "False"
    },
    {
      "Start": "9dc4596d986940a8a159fb2f6e6b3846",
      "End": "9222c99659aa4672bff09f769113e276",
      "Id": "183bf0efbf41420a874ef7895d1ee7b9",
      "IsHidden": "False"
    },
    {
      "Start": "a82de877c6cd4b49b858e86779dec7ac",
      "End": "0848ae1f97a444429f52f77a9e0e5500",
      "Id": "e35cc159ea55490ca2b780f8ada7fa37",
      "IsHidden": "False"
    },
    {
      "Start": "a82de877c6cd4b49b858e86779dec7ac",
      "End": "5c79e09018a74e21a8f7a9ded51a0f2b",
      "Id": "711c8a8c8cca40f782f2840e75bed9ac",
      "IsHidden": "False"
    },
    {
      "Start": "a82de877c6cd4b49b858e86779dec7ac",
      "End": "ac9485df9959491a8a986f55624c322f",
      "Id": "410d67e4be104391b74cc0c913ae9658",
      "IsHidden": "False"
    },
    {
      "Start": "a82de877c6cd4b49b858e86779dec7ac",
      "End": "f8c5a6380f2245cc8ac2f9e574d24bfd",
      "Id": "5053c6f174144868b56f00c61b638a1c",
      "IsHidden": "False"
    },
    {
      "Start": "a82de877c6cd4b49b858e86779dec7ac",
      "End": "ab382678e3a946fd9ff917024c56d96c",
      "Id": "3993d759049c400d9432082b41bc4463",
      "IsHidden": "False"
    },
    {
      "Start": "a82de877c6cd4b49b858e86779dec7ac",
      "End": "b0ec4f1d1dc240aeb5e156d3d91530ff",
      "Id": "41cf1819e06c4aa3ab2e3cff6d9bcd42",
      "IsHidden": "False"
    },
    {
      "Start": "a8da550fdd0045d6ab2f3e440fe15e4a",
      "End": "c30dd43348fd49aab562513efa7ec0f1",
      "Id": "213cbc8acb004699879ac16b6fd54737",
      "IsHidden": "False"
    },
    {
      "Start": "5466c30ed2a04623a2357c0328f0b882",
      "End": "58aa4064996f422687371bc12b5df71c",
      "Id": "b27e50f766b842e0acd242ece5a26608",
      "IsHidden": "False"
    },
    {
      "Start": "e44d96d8986148deaa0959765db77aa8",
      "End": "0a7f8a4f27dd44d9968608f49ea41ceb",
      "Id": "1df8be8309824ea0ad6d522829dee524",
      "IsHidden": "False"
    },
    {
      "Start": "e44d96d8986148deaa0959765db77aa8",
      "End": "81793120f12c4e8b83021aed100c48ec",
      "Id": "801f81ca701949608e0a352697baad9a",
      "IsHidden": "False"
    },
    {
      "Start": "6071ff4743ba4cf8ab475ca561f23c2a",
      "End": "874ba67ba1744f19b85451d9b5eae8a9",
      "Id": "f1dd75eb30ea4aac888c9a733325a07e",
      "IsHidden": "False"
    },
    {
      "Start": "65b208c4f50f4f0d86b0281fe1021741",
      "End": "01960553868a4ffba4d66fa1b0a797d1",
      "Id": "643f9f0d60dc415190d17989afd2ab21",
      "IsHidden": "False"
    },
    {
      "Start": "07e1ddfd82c643b2856220d5ebd4c82c",
      "End": "5459130e00684feb8077d4c903a0fd5d",
      "Id": "f6c8d8c5f6664dc1875ba2d7f74a137d",
      "IsHidden": "False"
    },
    {
      "Start": "0892af5a1d1247c4ae83841a8c4bc457",
      "End": "0c884613c2114ac8b96eae8bdc6ba322",
      "Id": "57b7929a0e3c45d2b00d8f615e0ce607",
      "IsHidden": "False"
    },
    {
      "Start": "9971576bcaa9421b973dae52e744a850",
      "End": "a846312aaf7f42f58a8e7846f7539f0d",
      "Id": "dcf9e7d1fd1049bf9d4591940439affd",
      "IsHidden": "False"
    },
    {
      "Start": "98ae53fb15244fa5a3846441dca7fad2",
      "End": "76262f38619f468ca10cacb5302cc470",
      "Id": "0b1824cc89c94d7496b83757e9764c90",
      "IsHidden": "False"
    },
    {
      "Start": "065319ab64ff439fb58424436500fc8e",
      "End": "5b1ee25ee8874055ad309e2e5a3e8826",
      "Id": "83196481a80b455e90014cf72527336f",
      "IsHidden": "False"
    },
    {
      "Start": "eba67a7574374c56a7741e2f75242bd1",
      "End": "732319441aba44ada6cffd8529a63e72",
      "Id": "008029aa0c4e4f0a99323507d9093417",
      "IsHidden": "False"
    },
    {
      "Start": "0ad516983acd465fb82f53297fbbafca",
      "End": "ed978d47898e4b079d697c0b9b04da3a",
      "Id": "78e747e3a935447e8db27993d6418982",
      "IsHidden": "False"
    },
    {
      "Start": "8bbedd767e264cb39c79f7b08d4ce536",
      "End": "9a0c222e6ff94b1c8e1d132dac33caf7",
      "Id": "e43f2dfeb3514b0eb5e572da2e98f4c4",
      "IsHidden": "False"
    },
    {
      "Start": "fa095ade272d4a0ca7b3d1e9e5946092",
      "End": "dd7aa04a98844463961f67399504b02e",
      "Id": "ec4d2447e9d047debe88f77c9190a535",
      "IsHidden": "False"
    },
    {
      "Start": "ff5715c516604403bf46eb97faf045e8",
      "End": "d1bc1faef893453cb9f142b7dde015e9",
      "Id": "6f136327604049c58c701e4f3478a198",
      "IsHidden": "False"
    },
    {
      "Start": "e6dcbce3515e4e09bcc4bd7542fe241d",
      "End": "0816186c007a4e0e9dda1ae9759758ea",
      "Id": "c0cdd4e702424ead8a4e673cff8769f2",
      "IsHidden": "False"
    },
    {
      "Start": "e6dcbce3515e4e09bcc4bd7542fe241d",
      "End": "fb3ff07810e0495db975133aaa816055",
      "Id": "98fe376e17164e8fa555fbcea97158bb",
      "IsHidden": "False"
    },
    {
      "Start": "ee49546fc293493980fd4139b43af76f",
      "End": "a598c6f77a1a41dcb8c7e017cf3c9d90",
      "Id": "332671f35d254cce84cd69eacef72bed",
      "IsHidden": "False"
    },
    {
      "Start": "1e2b97136ade4605ba639eaba5566303",
      "End": "84436973a3b047178850bcee886504cc",
      "Id": "98f00f5d52ab4ece9383d0bd846d3785",
      "IsHidden": "False"
    },
    {
      "Start": "03672f864d204057810afb6e0ea29d6d",
      "End": "3d25af50db3945d0859677bd9cc5129b",
      "Id": "1844cce7e7444ef895a9938487fa8513",
      "IsHidden": "False"
    },
    {
      "Start": "737ca8b807e64d24ac6664d3b1ac7591",
      "End": "dca88209b1ea42c8ba4b85d3acb3ed4d",
      "Id": "38579e6cb65e4ee695c2185545a63c86",
      "IsHidden": "False"
    },
    {
      "Start": "fd79dd00b8934d39a04f75ad000e8d53",
      "End": "627c255823674a51aba10b8f4fefb8f8",
      "Id": "97b6798993354f1c94d97e421d4a7766",
      "IsHidden": "False"
    },
    {
      "Start": "d3af3b73c5e24436bb938950c3493f4f",
      "End": "64d4c58fe4f24fc6b826782055a75cbe",
      "Id": "ae9968f96c0e448f8106b2b22395c703",
      "IsHidden": "False"
    },
    {
      "Start": "26aa99c30f0b4b62a8838c05d0e31bb2",
      "End": "1cc066d565d9429291aa9dabd4cb2cc7",
      "Id": "78085ea231e64089927905f751e2e20f",
      "IsHidden": "False"
    },
    {
      "Start": "86c36eec69bb411a9e3555eedd1d3979",
      "End": "0de6a7ef864e4196b95fd641a83ad716",
      "Id": "d8814651810a4b659a60c14a734d1650",
      "IsHidden": "False"
    },
    {
      "Start": "86c36eec69bb411a9e3555eedd1d3979",
      "End": "b8f81404341448d6aeb7e86aa0573725",
      "Id": "2dcb282bf4774aa78f73d57545a211bc",
      "IsHidden": "False"
    },
    {
      "Start": "5c2ac49bbc0c4a5995bcde04f058e8da",
      "End": "af8c96567d8d4be3b583fc005ff9ec0c",
      "Id": "6cc1354fd00c42e49166ad2cce2f4343",
      "IsHidden": "False"
    },
    {
      "Start": "5c2ac49bbc0c4a5995bcde04f058e8da",
      "End": "e90aea63901b46609f591b50b60ce79f",
      "Id": "22bf7415fded41e2b28cb80f88792457",
      "IsHidden": "False"
    },
    {
      "Start": "dea88a6ba9b84a8cb259605a70e2ccce",
      "End": "503779e4cda04276a82d069788eb2a32",
      "Id": "9fd59da591c84073b4c8f26a4603edc1",
      "IsHidden": "False"
    },
    {
      "Start": "dea88a6ba9b84a8cb259605a70e2ccce",
      "End": "40807b3b7b8e4fa5b00dcd0f321105af",
      "Id": "f7a991b772b04b0ea41e5e5c2fc5a63e",
      "IsHidden": "False"
    },
    {
      "Start": "2682d6c88edb4709af034c912224899d",
      "End": "0db15ce224e84fe0969eb20a2c3e29b4",
      "Id": "8b2ebad442ed41548e62158db8f2c6ce",
      "IsHidden": "False"
    },
    {
      "Start": "485aaedf30a645938b9a3d3293ab51fa",
      "End": "52d686ff90d0425691fb0100daac81c3",
      "Id": "8e3bb6f9e4bb4d33bf348367ce990815",
      "IsHidden": "False"
    },
    {
      "Start": "b6452e12ac3f436290d5a15f3d029c3d",
      "End": "e7ac7f2da86c4d18869d1ffd2e27e01f",
      "Id": "201c2be08f76425ab7de415360e83544",
      "IsHidden": "False"
    },
    {
      "Start": "7c76d0b28d324c69bd1c910b95e5e4fd",
      "End": "9406224fbaf34613964b28c4f7bbe4bf",
      "Id": "9ff738fc1c8943228f6efc6d4418cfc4",
      "IsHidden": "False"
    },
    {
      "Start": "b93e57530e004f69aafdde1a15af542f",
      "End": "5d9b72cd43e04d66b8a90d0fa9f2ff26",
      "Id": "1d9edd0ad10b4915b665c9d08585be50",
      "IsHidden": "False"
    },
    {
      "Start": "0c231e0940f84bc987409cc621849e59",
      "End": "ca3221ad42e548498cac00b063babd0c",
      "Id": "ec507d6586dd43108d2be4e12e5d8968",
      "IsHidden": "False"
    },
    {
      "Start": "8a4214a8b4e4497caad3abecc1b3508f",
      "End": "f1f3dca2ca0649f0a0dbe439454e444c",
      "Id": "8c208e201f5c4c549f8efc7da9b6813d",
      "IsHidden": "False"
    },
    {
      "Start": "6d55c462913f405987811a516e261907",
      "End": "da365392cdea46e59bbecd23ceeafbbe",
      "Id": "48f3f52fd7c24f42931734f66061c60f",
      "IsHidden": "False"
    },
    {
      "Start": "6d55c462913f405987811a516e261907",
      "End": "8e13f779cb834a5788827b2651619a5b",
      "Id": "54434aa088434f0eb4360e28065cbd10",
      "IsHidden": "False"
    },
    {
      "Start": "58ef879bfb3a4842a905af334433ccd3",
      "End": "3de1eedf553d417ca9ad9929ccf35529",
      "Id": "fc5d71480bf7485b8e67221b4ed9b8aa",
      "IsHidden": "False"
    },
    {
      "Start": "58ef879bfb3a4842a905af334433ccd3",
      "End": "b450ea8f594b43f794c6de42fb8114c8",
      "Id": "f4215524fd374f07a096f67f765f0c15",
      "IsHidden": "False"
    },
    {
      "Start": "eb870772e3894b14966897e90ac29f25",
      "End": "9e9f7c567d3442a2aeb75912ed31d403",
      "Id": "d33d413ee1b342a7bb215f0733581ffa",
      "IsHidden": "False"
    },
    {
      "Start": "5020d4c6b3844a9aaa93d4822948ed25",
      "End": "db071994743d4a7f81e5518d6107fd67",
      "Id": "42b5b959a4504c618efc2b6548d71aa9",
      "IsHidden": "False"
    },
    {
      "Start": "5020d4c6b3844a9aaa93d4822948ed25",
      "End": "2327ab68737d47e79195b73a9f1b3128",
      "Id": "0666a99cb4994cc48f7ae862286c0a23",
      "IsHidden": "False"
    },
    {
      "Start": "11b858c1e048461aa1138a6bc3eaa846",
      "End": "8967b8423f374b5780ce2f0c839a75df",
      "Id": "a9f1b5e7193d4ca68e544df69a064a90",
      "IsHidden": "False"
    },
    {
      "Start": "d497d1d0477b4c3a8a1f76457f7293a4",
      "End": "088f8bf709e84c409122bb410796542d",
      "Id": "5a6e464ba1564c69a20cf6c72e7d174e",
      "IsHidden": "False"
    },
    {
      "Start": "46863ea114b94df5ad46e580289c21f1",
      "End": "3e01fabd439e41a0b9b02d727a700199",
      "Id": "d1edb33434994e9ba10318b78f6f8852",
      "IsHidden": "False"
    },
    {
      "Start": "46863ea114b94df5ad46e580289c21f1",
      "End": "7630336a975e44d1a31e89f09f6c74a9",
      "Id": "d8893aeb84474813968759f4187ecc45",
      "IsHidden": "False"
    },
    {
      "Start": "d9d38028e184426f81c1f5b887f3347c",
      "End": "14872fcba013448eb03b7595fae85052",
      "Id": "d82868fbb03e4a7d89db6fdabc4c3362",
      "IsHidden": "False"
    },
    {
      "Start": "d9d38028e184426f81c1f5b887f3347c",
      "End": "104db4af8b054d869649f275fcf8f8a1",
      "Id": "d4e932f30cba42e99461e608a1c0aac5",
      "IsHidden": "False"
    },
    {
      "Start": "d9d38028e184426f81c1f5b887f3347c",
      "End": "d936c7e5019e43a58ec0952dd9c7590f",
      "Id": "988b0aad698a428a96241cec535cf833",
      "IsHidden": "False"
    },
    {
      "Start": "49ea3d420b4f4e9689a9abea13f0716d",
      "End": "93c2fd8e90204919ae260067a798b450",
      "Id": "d859408c1d2f4abd98c0290f4e902d31",
      "IsHidden": "False"
    },
    {
      "Start": "49ea3d420b4f4e9689a9abea13f0716d",
      "End": "30e08c04fff341a4bac967b3a39c5fd7",
      "Id": "ce0576472032409abe64762c2a28cb32",
      "IsHidden": "False"
    },
    {
      "Start": "49ea3d420b4f4e9689a9abea13f0716d",
      "End": "2bbdf709498449d1b7f31d60d108d1ce",
      "Id": "af66c16ce0574917adc2277802514a67",
      "IsHidden": "False"
    },
    {
      "Start": "49ea3d420b4f4e9689a9abea13f0716d",
      "End": "5b5d7555bbb04dbcaa800eaf48a26a9b",
      "Id": "346a88cab3714f3bb928dd9f9e23856b",
      "IsHidden": "False"
    },
    {
      "Start": "ea58df8271a9438089fb70d6852ac0e4",
      "End": "29e3ca34e9984d73b2c60d96a0af565a",
      "Id": "9d50aa356018456c890d17a5d25021da",
      "IsHidden": "False"
    },
    {
      "Start": "624b46c87bac4fcdb14b052c246aecb0",
      "End": "e429b37f05d44b6cafb5c11afcfc739b",
      "Id": "4893e655f08942dc9dd23faa3ca387a1",
      "IsHidden": "False"
    },
    {
      "Start": "d9edda9d422b435c83ff4822b06964bc",
      "End": "58d903308e644bf5a04c3e645743c830",
      "Id": "3f2dcb52a971451f9f1f3926847fba30",
      "IsHidden": "False"
    },
    {
      "Start": "d9edda9d422b435c83ff4822b06964bc",
      "End": "99f3e8e708734c03b9bd41d96ca59961",
      "Id": "0dcbe67e5edd412790f1752b298d4062",
      "IsHidden": "False"
    },
    {
      "Start": "d9edda9d422b435c83ff4822b06964bc",
      "End": "64a8ff450c3448acbc5d67082af94c6c",
      "Id": "a574459d490643ed88061570ae39dc3e",
      "IsHidden": "False"
    },
    {
      "Start": "d9edda9d422b435c83ff4822b06964bc",
      "End": "f6cf1c7983124327a78f40c45f0db795",
      "Id": "4182444bebbf47b38b495be812431111",
      "IsHidden": "False"
    },
    {
      "Start": "b353945bf4b5480e8a4aa19075fb3df3",
      "End": "2139764a3655425399e44decc2256826",
      "Id": "2464f3f6f9044170ac8e8509f6af8f2e",
      "IsHidden": "False"
    },
    {
      "Start": "17944557ff23498e94e41679dd72845e",
      "End": "bb24b779bb8648a7917542237e746104",
      "Id": "bbe7bf7612fc4ab18a50f1c13cf39697",
      "IsHidden": "False"
    },
    {
      "Start": "fd759bf218d54e299adc714857752480",
      "End": "e7c7cb07c8ea4a37a1a5885cd2392b9d",
      "Id": "ad9c528d86f74c08ad6c4dc134a94c7d",
      "IsHidden": "False"
    },
    {
      "Start": "0accf46cc41247dc8269ea7be5f14cca",
      "End": "f0e759529d3347949918076bd8b71f3e",
      "Id": "e5b94494bfbc49f1ba721b2094bb6fb5",
      "IsHidden": "False"
    },
    {
      "Start": "349626ee33b84230824cfc0a9316fc07",
      "End": "28793cc739b54962ba5471be921bfbd8",
      "Id": "d1fe570ae3e74e468244ab9508fba556",
      "IsHidden": "False"
    },
    {
      "Start": "349626ee33b84230824cfc0a9316fc07",
      "End": "56c07740ccba449c9310ad8cf02ebba3",
      "Id": "b6f5d6fa2b9d4396a22fdd3b827a00d2",
      "IsHidden": "False"
    },
    {
      "Start": "91641504b512463eb62970d298380485",
      "End": "af3abcae780b40a495c1e73e619f71a3",
      "Id": "67510a3ec7f140e4ae550b711969ccce",
      "IsHidden": "False"
    },
    {
      "Start": "51e2ccf3b3394469809ef1ac20a41a98",
      "End": "67477012720246a1a56d6c6d51ac73fb",
      "Id": "426d6b0d8f164e0c875e9741a7962a90",
      "IsHidden": "False"
    },
    {
      "Start": "17192281599e4f0b86921d2d509d3e19",
      "End": "d96684e30d1d4c3b86a9d64a8e1ceecb",
      "Id": "a73a8f3624fc4307b05be7aa2ae38bba",
      "IsHidden": "False"
    },
    {
      "Start": "e1f1b96afbd74b169dae0a9879d04e27",
      "End": "fe5c2e3bbcb24d459d045c5b065a3d32",
      "Id": "4b85b801cdb64824aa15d0c46b1cb319",
      "IsHidden": "False"
    },
    {
      "Start": "5d04a7669dc347e2ae3c280a80669b69",
      "End": "1680ef79c9534216ab18e031d8a7c4de",
      "Id": "d8a38a32f5fb4d2b9d2ff48f26aec0a5",
      "IsHidden": "False"
    },
    {
      "Start": "5d04a7669dc347e2ae3c280a80669b69",
      "End": "8b068931d8684d7db1871ca534c9cecc",
      "Id": "e1c2b64dc48243a6b19f7be311217929",
      "IsHidden": "False"
    },
    {
      "Start": "c3a7e9cc6cdf4bfeb7dca35672935aca",
      "End": "3c34dbf305f94823b0c46e30f8f48158",
      "Id": "11380c409d544c249492ceeac5c3c7c4",
      "IsHidden": "False"
    },
    {
      "Start": "c3a7e9cc6cdf4bfeb7dca35672935aca",
      "End": "5298a4f95ce64d44ad0921eaf3bc5007",
      "Id": "36a84c1acd424fd791d22bc3ead6bd87",
      "IsHidden": "False"
    },
    {
      "Start": "c3a7e9cc6cdf4bfeb7dca35672935aca",
      "End": "d598d2c10a97434bbedff0b88821ef76",
      "Id": "c5dd184893a24ed7b0fd7752c959e372",
      "IsHidden": "False"
    },
    {
      "Start": "3d28c86569a8408ca59165f9364998fe",
      "End": "f21b0f7367fd49f391f4882a713bee80",
      "Id": "b0f33eec37694bbcb1d242b1c0c52637",
      "IsHidden": "False"
    },
    {
      "Start": "35cae6d423b94809baa267b9b2df9cf1",
      "End": "118299c6138545ec92e725cf50176c99",
      "Id": "2d669d9f4dae4dc19b78fa4170539349",
      "IsHidden": "False"
    },
    {
      "Start": "d07260b069a54bcfb602c3ca758ea790",
      "End": "ab1b0ad56ead4b56bed8ed32f35d4bd5",
      "Id": "bee0c447b5ee44a795b2f93c6a40ed8d",
      "IsHidden": "False"
    },
    {
      "Start": "52cc49bb6ec64a298d51506eb7bccc42",
      "End": "54d833aeab574fdc8cb537a2b00d3ef4",
      "Id": "e59e2c06441f4df69b95afb8c3212f20",
      "IsHidden": "False"
    },
    {
      "Start": "66a4c0f1103d44e5bc4ad37691a5fc6f",
      "End": "78068ffc9cdf4b2aa87c1628246ce408",
      "Id": "df26a70a800341b8a8114df75f76630a",
      "IsHidden": "False"
    },
    {
      "Start": "c80dc5a7d32649f6887c1a389c21afc8",
      "End": "4e54ffea9f77447e9b9a28f2b55c7d4a",
      "Id": "aacc52ebe6754ddc8c7fee3bd78d3d45",
      "IsHidden": "False"
    },
    {
      "Start": "bafcb5c2343740ffa362b340a2cc77e9",
      "End": "590427307bc14a7ba6966f8fea246440",
      "Id": "77e7a39e2ded4704b736e2167e0807dc",
      "IsHidden": "False"
    },
    {
      "Start": "55b8194b57f4481f8165e265f8e78259",
      "End": "a994792c9ad8402db4243e1c79934cc7",
      "Id": "6d4452bb9f0a4c1a8b5f3b801a972e5a",
      "IsHidden": "False"
    },
    {
      "Start": "55b8194b57f4481f8165e265f8e78259",
      "End": "751071b4876b4391b971c366a80aa8de",
      "Id": "3dd4df1638fa47fb9abb87beda3b9c50",
      "IsHidden": "False"
    },
    {
      "Start": "55b8194b57f4481f8165e265f8e78259",
      "End": "cdf69d60987b4cdfa9dabbecf202faae",
      "Id": "e7e01a27961648918374c63096e89448",
      "IsHidden": "False"
    },
    {
      "Start": "006f283d0f9e4b998c148f43080966f9",
      "End": "4d3247198f4e4471983b3a4dbebeb7b6",
      "Id": "f949f2c2a6794d0d98de7df39d2f25f2",
      "IsHidden": "False"
    },
    {
      "Start": "cc96cd3d845245c498deea1a337a5055",
      "End": "c135bdcdedd7464a91eb88ff816cfed7",
      "Id": "366dc2b08a764d6aa50f2a20fbe03d93",
      "IsHidden": "False"
    },
    {
      "Start": "cc96cd3d845245c498deea1a337a5055",
      "End": "6e5c683e6c0e446a8b653d62456c5079",
      "Id": "8221cdf5ca124af8987555d1eccbc3a2",
      "IsHidden": "False"
    },
    {
      "Start": "d3aa21cb856240aa946b139e4d276e84",
      "End": "9aafed09cad543e68f77af04c834476a",
      "Id": "6afb849102624df293f3f6505d598f68",
      "IsHidden": "False"
    },
    {
      "Start": "b20987669f174f0d8aa202b74c12dae0",
      "End": "5e0aa3c279cd44328c2b47cfd429af71",
      "Id": "40e780c745df4e7882c08c7867851e89",
      "IsHidden": "False"
    },
    {
      "Start": "cb9b43e604334f509a0508424374c0b1",
      "End": "7127f6f524d8426282f447267696c893",
      "Id": "735eb60235de4bc9a34eefd3ddcb0577",
      "IsHidden": "False"
    },
    {
      "Start": "cb9b43e604334f509a0508424374c0b1",
      "End": "5a17f53e95664e54b95b66ced7ba8543",
      "Id": "0a32014aa19a4cfea7c33eb04ca4e3f4",
      "IsHidden": "False"
    },
    {
      "Start": "cb9b43e604334f509a0508424374c0b1",
      "End": "afa8b50a1ba74254aec7fa03658a7927",
      "Id": "a939c133b71348e0b629ee653baa9718",
      "IsHidden": "False"
    },
    {
      "Start": "cb9b43e604334f509a0508424374c0b1",
      "End": "83ae2bab2c2e4f26994d614ec0fb5d00",
      "Id": "1d0ef617061f473f8d6949f4a626b445",
      "IsHidden": "False"
    },
    {
      "Start": "83f30994a1a5436bafaf422a7d68d1d8",
      "End": "b5561381264d4cb7bbb3f4d8e0c13269",
      "Id": "07c0edf0d39c4d63b7186c150e9e1cb0",
      "IsHidden": "False"
    },
    {
      "Start": "dc33e71166cb481fbe49875215bcc245",
      "End": "6c381a209666456daedcde4dfa736ab2",
      "Id": "5f38193afec2447ebbf7d25ba606a249",
      "IsHidden": "False"
    },
    {
      "Start": "af2db22e12434ceda9be325878d2e3f4",
      "End": "7af6c4ad4f064acf884fe1efcdb89731",
      "Id": "c8390a14e72e4d508b324eb55a4f26df",
      "IsHidden": "False"
    },
    {
      "Start": "73b8b7a1abf14e0282122f18760e75ab",
      "End": "06c84b9a6e45415abbc844494af67fd5",
      "Id": "ee49eeae3a1f4cddb0ac11260052927d",
      "IsHidden": "False"
    },
    {
      "Start": "b314c6fd05a046dc8ce85d00597c1088",
      "End": "0b55ba0b2d514dbe849a51776b0a7f4b",
      "Id": "4fe690fbdd65410b8f712cc0d79b298e",
      "IsHidden": "False"
    },
    {
      "Start": "b314c6fd05a046dc8ce85d00597c1088",
      "End": "dfea22e1ae6e4566838600a83b0bca24",
      "Id": "5c2e279498e442729d8546f82faa9d4d",
      "IsHidden": "False"
    },
    {
      "Start": "6476744e70e449dba78613ee9fffb1fa",
      "End": "16a1f60431cc45afacabb7dcef9cd071",
      "Id": "d2509f3cb9574a6aa04e76c1f0f36724",
      "IsHidden": "False"
    },
    {
      "Start": "ea7ee8e9b26a457dbd3c9bb83a9f3769",
      "End": "c9a3f6f6ba414cc1b83c53cc46db04ea",
      "Id": "7499063376e34c4a88679e9fe50209ba",
      "IsHidden": "False"
    },
    {
      "Start": "3d2652b55db44621b5536bfce593e883",
      "End": "67ce356727c34367816b720a095b3ddc",
      "Id": "e8abaeaf8e354b55a1bb651ad46153d7",
      "IsHidden": "False"
    },
    {
      "Start": "65d6c2c618c345798ddc6f285e4941a7",
      "End": "40fa4ceb3eec46f381f1d3ba179c767e",
      "Id": "3b8053d6d6844b56b1c62842c89be3d3",
      "IsHidden": "False"
    },
    {
      "Start": "0483b72a346c433b9b56818487b93e91",
      "End": "64e8ee07a3694c7192077ffbbcc66199",
      "Id": "86b037f70e784a08b419cd53e061efbd",
      "IsHidden": "False"
    },
    {
      "Start": "2de6a818e7b6435bb379dc054e24fe7c",
      "End": "cbf63f1600ce44438d18a2c07859a29f",
      "Id": "bd9a8e490fa247b49f9a80a4d9c2186f",
      "IsHidden": "False"
    },
    {
      "Start": "c2a573ada98b4787abb77ee2b91b2b62",
      "End": "d109b443fd044e2ca2f92dc929ca9458",
      "Id": "1c5946f304e848b4a505ea48a17c6172",
      "IsHidden": "False"
    },
    {
      "Start": "894f30352750462c8484a32aa545d101",
      "End": "0d5e9443e0004e45b9bc1bcf52696c8e",
      "Id": "dd36c3d05e054d8a97128184a4017386",
      "IsHidden": "False"
    },
    {
      "Start": "d03c2d764aee42d4a0f2af2922031014",
      "End": "60516006ea0a43dcb19f53a96373b3e3",
      "Id": "8f2bd30dce4c44d99457eb663cb5217a",
      "IsHidden": "False"
    },
    {
      "Start": "273adb4496ab496fb88f6829d21663d5",
      "End": "3567971808e8474fa4eb757482eefacc",
      "Id": "2b2c9a6269794f7ea5aa999fe31f1a82",
      "IsHidden": "False"
    },
    {
      "Start": "273adb4496ab496fb88f6829d21663d5",
      "End": "a249ca3663fa4359bbcf7ce3d470c243",
      "Id": "9b75d73589b0419fbb9013c99d7aee0b",
      "IsHidden": "False"
    },
    {
      "Start": "273adb4496ab496fb88f6829d21663d5",
      "End": "fed041a0d0124426a52799b400500e13",
      "Id": "3f3d0b8e700144e899cf2f1eb3cf64bf",
      "IsHidden": "False"
    },
    {
      "Start": "f7687a1cdedc4a76968d51f49988b1a4",
      "End": "8ae0860b8eaa488a9c935c41a883f0e0",
      "Id": "cb2ce01ed07948eeb3d1ee3c7bcae291",
      "IsHidden": "False"
    },
    {
      "Start": "a6b4118ae17045f69a5646b4df8548e3",
      "End": "26a36c8b80b24937b87071d9277189b9",
      "Id": "c6b1dcd428c74cde9680b3e1a5fba1a9",
      "IsHidden": "False"
    },
    {
      "Start": "a6b4118ae17045f69a5646b4df8548e3",
      "End": "e44e3a83e2424b20b16bfb8fc3822a29",
      "Id": "344cd8efa2584b69963a33d296761bf8",
      "IsHidden": "False"
    },
    {
      "Start": "a6b4118ae17045f69a5646b4df8548e3",
      "End": "32fe8469a9b84fc288be6a5e70f8fa78",
      "Id": "c14e3e980db944b59bd25ba25e85a164",
      "IsHidden": "False"
    },
    {
      "Start": "1c6ba31656d64286bd7acafb3afa52c2",
      "End": "bb90e639228340ae9fe5dd37f09d6610",
      "Id": "fd9fbf46a1934ecaa5e4ec4b5b082e84",
      "IsHidden": "False"
    },
    {
      "Start": "1c6ba31656d64286bd7acafb3afa52c2",
      "End": "357b1ebf48704030bf0e8906d87a802d",
      "Id": "e98bb857212747b4b40c2025c4b4f99e",
      "IsHidden": "False"
    },
    {
      "Start": "20150d29ec2b4d9ca9c05e1bf2c5acda",
      "End": "422efa4deb424f0ba5e799373cfbe02c",
      "Id": "f98eaa6dc4fe41be979ffe8065444736",
      "IsHidden": "False"
    },
    {
      "Start": "ba1ecc58a2e445da894110e0e644bf09",
      "End": "0168d36c448a4dcf844eb6cdc6958fb0",
      "Id": "9a46662fb0014ae39bbf74692980e0b0",
      "IsHidden": "False"
    },
    {
      "Start": "79f3d5af629a430fa8be1d502f88ee7e",
      "End": "e7327d7d60e94442bf39d3cb6472598c",
      "Id": "5ef3bdde7a2f4ff2b3725eea7670741a",
      "IsHidden": "False"
    },
    {
      "Start": "7638ff54609d4cb7abec2d4fd7fc644b",
      "End": "9ebc1701a48e422795cdc83222dbc2b1",
      "Id": "75306a796c1f4eb89ebf5b63a8271427",
      "IsHidden": "False"
    },
    {
      "Start": "7638ff54609d4cb7abec2d4fd7fc644b",
      "End": "110c9d9bb90742cc87c790dbdbb31925",
      "Id": "522992fa159c4974bc6b7a8d7ddb7a8a",
      "IsHidden": "False"
    },
    {
      "Start": "7638ff54609d4cb7abec2d4fd7fc644b",
      "End": "85f121516a2c44b4b81e9bec2d9e63dc",
      "Id": "9a841a5a46e64b46aac41bfdeb9ac548",
      "IsHidden": "False"
    },
    {
      "Start": "b3cf1cc76a5e45ae93a17e791ac90c27",
      "End": "3dc2ee7006574e2ebb682cc13b7f1067",
      "Id": "403e5c0e58e041898b51b7f5b21acb7e",
      "IsHidden": "False"
    },
    {
      "Start": "4625f0a9c7f54059b1c42e156b9cf455",
      "End": "69f71727dacd4cc7a3c1e824a4b2a0e4",
      "Id": "8e6ddef3327e44de86272b478044b0a9",
      "IsHidden": "False"
    },
    {
      "Start": "4b62726f862e4585b9f2491736d77e23",
      "End": "395cbf53913e4c8abdb57edb5d15732b",
      "Id": "a4edbac0c73b48dfb7f1619518f557ec",
      "IsHidden": "False"
    },
    {
      "Start": "4b62726f862e4585b9f2491736d77e23",
      "End": "ad42518bfb5046a394f680796a00c691",
      "Id": "5c8030de62244f0abb89e523c00661c2",
      "IsHidden": "False"
    },
    {
      "Start": "6af61736742747619dded735f3486133",
      "End": "5611c4958f0346188247faab840e4758",
      "Id": "982881fe7e43426c888a31d247d3518b",
      "IsHidden": "False"
    },
    {
      "Start": "7a3cbb24641f4099b5c10bb5cdb1e23b",
      "End": "34e7339847cb41a1be5ccdf1efe68e40",
      "Id": "286614f129c349999d1713f2a07b40cf",
      "IsHidden": "False"
    },
    {
      "Start": "d46058b280114d8aa31d7a6a42294b7c",
      "End": "2e265444d1ab4aa080600f2c6d5f915f",
      "Id": "090b566a4fc1490598f0ac43ca24185c",
      "IsHidden": "False"
    },
    {
      "Start": "683c4bd4a03e4230a1ab3b4e618842ea",
      "End": "562b3d8cc35d4d08b1cfa493fadec904",
      "Id": "a5f8ae33dd0040d0bc89555e31fe4663",
      "IsHidden": "False"
    },
    {
      "Start": "db8363b880944e99b6c680ca24f647b8",
      "End": "65a0c92fc14c40e9b711d998de8d27ee",
      "Id": "660e8ab2fe46403ba85f56cae6616d9b",
      "IsHidden": "False"
    },
    {
      "Start": "9d0a7ef2424d4fbf96970cb4509d80b0",
      "End": "b32f3c104fc146a6bc4ad1642c44fc79",
      "Id": "5bddf744f8134fb58144a4f0f5b23424",
      "IsHidden": "False"
    },
    {
      "Start": "c6a08bb0799e46de899a33b08a4e28ac",
      "End": "712a149b472141708ae22cb52b90ab4e",
      "Id": "256a8eaf949c4aa2a7d72fecf90a9eee",
      "IsHidden": "False"
    },
    {
      "Start": "22cc10cc2d0a4bda822bebc1fd86c533",
      "End": "c3c8f4e1db954021bc0f509fbd12f1cf",
      "Id": "ac376e45068f46caa08441ae077bcdc6",
      "IsHidden": "False"
    },
    {
      "Start": "22cc10cc2d0a4bda822bebc1fd86c533",
      "End": "72abc5c6330842988a7c5def4262c5a3",
      "Id": "cbae62f0d7914a0594d964039340cf62",
      "IsHidden": "False"
    },
    {
      "Start": "31075e204ec8449da1d3fe29583c3c61",
      "End": "04d547406f0b4323b287bfb80cb7f721",
      "Id": "000b1dc7863d470f9ac79e6fc4241858",
      "IsHidden": "False"
    },
    {
      "Start": "99e74498c582433b9250a1c4b7b26fc4",
      "End": "78ec6fda22294f35873f4f5049405586",
      "Id": "a05ec1a0c85544df9d1868a313e7e928",
      "IsHidden": "False"
    },
    {
      "Start": "99e74498c582433b9250a1c4b7b26fc4",
      "End": "2ad1e5d4252841259e88c49c022ff416",
      "Id": "e24e58ab51d84e728d520648a6731f4c",
      "IsHidden": "False"
    },
    {
      "Start": "99e74498c582433b9250a1c4b7b26fc4",
      "End": "c2a649090e45461d9214967438c972dd",
      "Id": "5114aba7087e4d21a77b7d90dfd022e7",
      "IsHidden": "False"
    },
    {
      "Start": "99e74498c582433b9250a1c4b7b26fc4",
      "End": "95e58cb95d0c4b389511011ea0bc49f6",
      "Id": "9a72a023c94e4240bc1164ca18e5b4da",
      "IsHidden": "False"
    },
    {
      "Start": "99e74498c582433b9250a1c4b7b26fc4",
      "End": "727c04d0450043c69feb075c4e2dbdfd",
      "Id": "af639a16c0104084a5d360791db627ff",
      "IsHidden": "False"
    },
    {
      "Start": "99e74498c582433b9250a1c4b7b26fc4",
      "End": "adda2fe43069402c96ef6c98c0df7799",
      "Id": "ff4389f1a48a44e8a1f76da616d4c796",
      "IsHidden": "False"
    },
    {
      "Start": "99e74498c582433b9250a1c4b7b26fc4",
      "End": "0bb481349b314307b7e8ce22adc7b91a",
      "Id": "40684e26a61642bd84c00f63ce0038d0",
      "IsHidden": "False"
    },
    {
      "Start": "ada8f07082224213b3d3887ab37a1df0",
      "End": "d9707a7823a0464585c8bbb3013bc027",
      "Id": "e75f6d774cf6412281b7bfc43297f3e3",
      "IsHidden": "False"
    },
    {
      "Start": "03f3c0078f51466b98938f26eeddd819",
      "End": "bf506498ef514d0a958c7db313926eec",
      "Id": "626b3b75e3d24b79bbd361c3e0bb9491",
      "IsHidden": "False"
    },
    {
      "Start": "79b2027fa8624d5b88fe4f493895fa7a",
      "End": "6f699a3c83714cff9fd767d4fc12c282",
      "Id": "a41f95b8c7aa4d54bda6f08b5cdb71b8",
      "IsHidden": "False"
    },
    {
      "Start": "79b2027fa8624d5b88fe4f493895fa7a",
      "End": "cc5fe1d4b747433fb87bcdccc429ad27",
      "Id": "285de1ab356f4a27aab0d94d2b85fc68",
      "IsHidden": "False"
    },
    {
      "Start": "8c6353eff7fb4feb80e795da99455e56",
      "End": "41631ab550e44c6480f058c319172a9d",
      "Id": "93fb0ca7445d4e44839d33c28c4217a3",
      "IsHidden": "False"
    },
    {
      "Start": "584bfddd0e384eb7ab64a817d22e20de",
      "End": "f64375fd6dfd43b18e11177a09aa6558",
      "Id": "81b97113a06b411c901d6e69e9360e1d",
      "IsHidden": "False"
    },
    {
      "Start": "584bfddd0e384eb7ab64a817d22e20de",
      "End": "16e0850204004fcc95dd7fbbd4cb817d",
      "Id": "ab598cce7dc04d7a8705603fa4637a20",
      "IsHidden": "False"
    },
    {
      "Start": "571b324bbd0249909c21243dd6c74bb2",
      "End": "1fb89c0f26d2480dbfae01bd7eef7fec",
      "Id": "7f58f4b2cceb4ef49bc322ca04f31623",
      "IsHidden": "False"
    },
    {
      "Start": "29a071cb374b40728ef6f417732cacf2",
      "End": "b24ede1a5a9e4797848fb612a40f20c9",
      "Id": "0f4d6f1744a9456f968e2f247b563ab3",
      "IsHidden": "False"
    },
    {
      "Start": "29a071cb374b40728ef6f417732cacf2",
      "End": "06540bd3b3dd46d79508291517e0cbee",
      "Id": "bf984f269a624d78a55d4e488e68382b",
      "IsHidden": "False"
    },
    {
      "Start": "69ff3dce06fe4aabae50110eab3a9637",
      "End": "8d650bd01159468e85cdeb64e9ed284b",
      "Id": "4387c2672dd241d0be2c005457827658",
      "IsHidden": "False"
    },
    {
      "Start": "17116f9bc64e4413b3f9ba430a3d2851",
      "End": "8d762772d4c64e04a05418fec497d0fa",
      "Id": "e7955d44f4b64b159be4b29c9374ba46",
      "IsHidden": "False"
    },
    {
      "Start": "8af098f0800944b89e8623d441ec4cc1",
      "End": "51cb40189821410fb770200fa8192a83",
      "Id": "8cb0bea3e1424a90ad593cb720a9c50c",
      "IsHidden": "False"
    },
    {
      "Start": "8af098f0800944b89e8623d441ec4cc1",
      "End": "67ce678bf60d4e998fac2a71d288bd2c",
      "Id": "c7feca59e63d48cebc1ec054f1ee4390",
      "IsHidden": "False"
    },
    {
      "Start": "7cb85a66a12441ce88d0eb86d84ff818",
      "End": "ee5f6f496f994d858fceb0ac3989f688",
      "Id": "b84f7629f4464307b2cfb6eedb16f4c1",
      "IsHidden": "False"
    },
    {
      "Start": "42e91d7d6e61458792e0f932a9db7d6d",
      "End": "2e7a6ed881da4a269a1cf093f43e6ac0",
      "Id": "113869b2ecb244b0a6a9b42e83440a8e",
      "IsHidden": "False"
    },
    {
      "Start": "42e91d7d6e61458792e0f932a9db7d6d",
      "End": "91a19819079b4575a62797acb15a516a",
      "Id": "ead340074ab24989bc2375cac5373f89",
      "IsHidden": "False"
    },
    {
      "Start": "958e80a970ac47cc8097604419f14932",
      "End": "54966e76b2964bde9508ea4c9f1f533d",
      "Id": "24a9059892544288a11f4149e9c8f29c",
      "IsHidden": "False"
    },
    {
      "Start": "c3e70f87c71d40b9aecfa0a701f85195",
      "End": "c27c8228462c497f82c0c4980dd47db2",
      "Id": "73b45970868740b3b1c41d0b5641ca08",
      "IsHidden": "False"
    },
    {
      "Start": "22786a666f5d4e4890b4df454b404eea",
      "End": "ea1f0b2872e4453991389c99056107d5",
      "Id": "dfefc45e95fb49f2b07ee5465bc3b987",
      "IsHidden": "False"
    },
    {
      "Start": "a0c992017fbe415b85a513ba7c0f9fa3",
      "End": "12657f9a50d94ac7b290d555ea1a6d4d",
      "Id": "1921bf7421b643b7b7f7ecfe5bfca57b",
      "IsHidden": "False"
    },
    {
      "Start": "967774ae71624a96b6ae2a40ed06bb36",
      "End": "7740263f206a40ef9df30c3f4d7de936",
      "Id": "6fe42039b74e4676b6c286ec4b33b290",
      "IsHidden": "False"
    },
    {
      "Start": "967774ae71624a96b6ae2a40ed06bb36",
      "End": "8eba5b288d9a4de3bdceebc3f186fcd6",
      "Id": "5807f6bc75644b6282744ef7f14c7a42",
      "IsHidden": "False"
    },
    {
      "Start": "967774ae71624a96b6ae2a40ed06bb36",
      "End": "aefe58c6f3e5414098ec1d768dee6f10",
      "Id": "bd2acb49f752422da0989a0becd193b4",
      "IsHidden": "False"
    },
    {
      "Start": "0455e9382db84eb5ba24bae519cc3c14",
      "End": "58c15a5772eb4e64a79e92f82a534135",
      "Id": "29a3de0b80544105ad52a2a88570571f",
      "IsHidden": "False"
    },
    {
      "Start": "7faf532bcde34f8aaf581b5e4cb032de",
      "End": "d079c45c21a24b518e23a7913daedca4",
      "Id": "5c8c5881114b41eda4166f039d832bdb",
      "IsHidden": "False"
    },
    {
      "Start": "639c744536634eea8e307be3df765918",
      "End": "110a511bfcba42e2a92916c77f0ad952",
      "Id": "9bfdc8a12f774695925145c43b2bfafd",
      "IsHidden": "False"
    },
    {
      "Start": "09bb428f069c4226a06609543b64d32d",
      "End": "debffe94c3cd47df8af1db64bdf49697",
      "Id": "722cb0302afe41cf86c33dac77b271a2",
      "IsHidden": "False"
    },
    {
      "Start": "09bb428f069c4226a06609543b64d32d",
      "End": "f3cdb97d494c45218601c67b88e22842",
      "Id": "0138846e698f4c6c9e9630821d55cdc0",
      "IsHidden": "False"
    },
    {
      "Start": "09bb428f069c4226a06609543b64d32d",
      "End": "33a8313ec9f848ffbb520cf2fa863d1f",
      "Id": "60e866ccb5204537adfa11e24e955935",
      "IsHidden": "False"
    },
    {
      "Start": "09bb428f069c4226a06609543b64d32d",
      "End": "1b0be06616a042799c9e226a80a090d1",
      "Id": "c5970c0f646a4876825975c1e83f2121",
      "IsHidden": "False"
    },
    {
      "Start": "2ca25833a5c44714b35c22e28488cdcf",
      "End": "6303111fb44e4ed0a9ea91b66ea7daa3",
      "Id": "0c163f6d97d54920a562469d09059367",
      "IsHidden": "False"
    },
    {
      "Start": "7ab25aeb0c9244dfba4b7098557fd95a",
      "End": "4250d3c8f5754d0b87e41845e28fda73",
      "Id": "12987be86b1a4ecdb8d6a3254c223ae6",
      "IsHidden": "False"
    },
    {
      "Start": "0e59461076df4adf923092939c8abae0",
      "End": "08cdf73edfeb4a079cd9b2b9a885120f",
      "Id": "91354a714f024043acee30b45816bfd6",
      "IsHidden": "False"
    },
    {
      "Start": "480d9f0c3a3541fc8c897a9ea9da4f7d",
      "End": "b905b8495761417ca7f998df43d2164c",
      "Id": "350a03fa7f564884b888da312b682291",
      "IsHidden": "False"
    },
    {
      "Start": "cf3fee574a424af38f71ea52a5f82fee",
      "End": "a37e87435c8049d985730f95f451cab7",
      "Id": "48f63093dae749b496fc5d417e32b09f",
      "IsHidden": "False"
    },
    {
      "Start": "cf3fee574a424af38f71ea52a5f82fee",
      "End": "8af1912c802244b1b9fe159da6b668bf",
      "Id": "43a4cfdceda94ccd8c532c0baf9bcd4b",
      "IsHidden": "False"
    },
    {
      "Start": "cf3fee574a424af38f71ea52a5f82fee",
      "End": "b9d6e98c3c444c05a548622cb7fd32ac",
      "Id": "280a39eadf1c4f81bbde9a11d1538486",
      "IsHidden": "False"
    },
    {
      "Start": "e22ca4dc92e5440ebfa77c90ea9038dc",
      "End": "dd0c32de36a5463087470329ead4ebbb",
      "Id": "5c431dca26254e6a8225749772874011",
      "IsHidden": "False"
    },
    {
      "Start": "b9c6fa2aedb84bd99c6740f659bb1577",
      "End": "fe68710e972d4075a51e3f6bc1457633",
      "Id": "234e979d22334854997d5b793862b8f0",
      "IsHidden": "False"
    },
    {
      "Start": "d4933397123445b397cd213792959465",
      "End": "88553bcd9e1c4ac7ab7e07dc588de942",
      "Id": "b4199089460d4476bec6ee7a8ad463af",
      "IsHidden": "False"
    },
    {
      "Start": "002801c16029479d87047eb78184daa9",
      "End": "49fca60ec379421b9bb8a0b79b7d7c5a",
      "Id": "6db28d5b6a554016a748f8d962eb266a",
      "IsHidden": "False"
    },
    {
      "Start": "46efb0f469084a00b7582ee21759340a",
      "End": "c53fa799e16c4216a95c47937ba27e86",
      "Id": "2928aa1f42ba44b1a9827178c881650f",
      "IsHidden": "False"
    },
    {
      "Start": "46efb0f469084a00b7582ee21759340a",
      "End": "28836568a0f345928d6353224c313f66",
      "Id": "cc78d14de05c46d39233174c046f096f",
      "IsHidden": "False"
    },
    {
      "Start": "46efb0f469084a00b7582ee21759340a",
      "End": "1ce762fdc53d4676916ce697e8307470",
      "Id": "14209cb6e8964d9a8daa817a1bef09fa",
      "IsHidden": "False"
    },
    {
      "Start": "46efb0f469084a00b7582ee21759340a",
      "End": "ec891c743aee4f42a94cfc118153c31f",
      "Id": "e41cc98ab6a74cdba71d18140c96bbd9",
      "IsHidden": "False"
    },
    {
      "Start": "63a227628a3645d080bba83820f20d2c",
      "End": "dce7843e4fef433297c04a6583a62aa8",
      "Id": "9e0b92b3c76449278f0fd3e364af0064",
      "IsHidden": "False"
    },
    {
      "Start": "63a227628a3645d080bba83820f20d2c",
      "End": "4f9819e6ef5647faa026fa89986df539",
      "Id": "ead6d3434f7942ef82f479c0caee17f0",
      "IsHidden": "False"
    },
    {
      "Start": "63a227628a3645d080bba83820f20d2c",
      "End": "9e8296219a264789ac5f6e52bd7a0456",
      "Id": "9c37118565fc4b579bfc1840e1bdf8f9",
      "IsHidden": "False"
    },
    {
      "Start": "63a227628a3645d080bba83820f20d2c",
      "End": "7776fc69f9de448db77b6c01f72437f4",
      "Id": "cecee24534d14e59baebfd57fc155325",
      "IsHidden": "False"
    },
    {
      "Start": "190b07caf5d94ff495152b6ed97c22bf",
      "End": "4ca8365e360a45deb7580973c13929e7",
      "Id": "6db898f9c4284f39aec1fb9eb932936c",
      "IsHidden": "False"
    },
    {
      "Start": "4dca787435d94706a4c82a7040459276",
      "End": "ee2969bbf46349338286e941de8600c3",
      "Id": "2b4743c9196746a296b4faec7f621dcc",
      "IsHidden": "False"
    },
    {
      "Start": "a93c1e64b7ee46dc8ddf9a884a9bb342",
      "End": "958eb27ef3054f2592ad5e6ee88f82e6",
      "Id": "8515f74c1c8a4caeaa5a9170894bcbc8",
      "IsHidden": "False"
    },
    {
      "Start": "eeae470824b64c7da100668d03ef7497",
      "End": "03493e6d902343e899f1390203704fef",
      "Id": "57cf2d4feffe4f14aa4f3747ca0bfaaa",
      "IsHidden": "False"
    },
    {
      "Start": "156b16c24257409990c5d3c8e5963254",
      "End": "67c8545b4f044f72ba2ff95feda3b81f",
      "Id": "67fbb68b13f14120990c784d35e7cfc5",
      "IsHidden": "False"
    },
    {
      "Start": "d4ade9599c4541349a610d2aad3e7f18",
      "End": "c21cb7acbc194a90b80c3d21ef812aa8",
      "Id": "de5d11eddb8e4aec8d441358a8ad0262",
      "IsHidden": "False"
    },
    {
      "Start": "d4ade9599c4541349a610d2aad3e7f18",
      "End": "609741d6120c4d5890ce463049ccfed4",
      "Id": "7f12de3c628044d69a705089f090f630",
      "IsHidden": "False"
    },
    {
      "Start": "d4ade9599c4541349a610d2aad3e7f18",
      "End": "e6ae53127a6f4b8ca33c020727cb6964",
      "Id": "88b213f6fe494e0da6237494a33b484c",
      "IsHidden": "False"
    },
    {
      "Start": "d4ade9599c4541349a610d2aad3e7f18",
      "End": "85d155b40ab546b0af05a95edf1ff891",
      "Id": "7d33dd2df551466bb97c2fecebe1ecc5",
      "IsHidden": "False"
    },
    {
      "Start": "e2c2e2abecdc485faf2ee3fc63af2719",
      "End": "67d5f6140bbf4437a0224aefd1671517",
      "Id": "a259586b7ca040748de65cd3e6f571e0",
      "IsHidden": "False"
    },
    {
      "Start": "67f594f429b84815b587786f5110b0e1",
      "End": "9ac47c74e21947019fbf25226cccb27b",
      "Id": "cb7294ebbd5443b783ca3b7d82648329",
      "IsHidden": "False"
    },
    {
      "Start": "b0dc0bc395954d3a95008d8e63046d99",
      "End": "0b2ef1d4337e45918459dc36212b09dd",
      "Id": "df50341f680e4a39bcac76cbfb3288ca",
      "IsHidden": "False"
    },
    {
      "Start": "f9b3b3851a7e485c80bb65fb353dc8ba",
      "End": "ba2888ca995f40619b410b3c6a0e84ac",
      "Id": "2be08de6a48b4baebbc03dc197398504",
      "IsHidden": "False"
    },
    {
      "Start": "5eed23e1bf494e8281da7048f8cfbd9c",
      "End": "77755de6e6dd4c088e827d951c05c7b9",
      "Id": "39b667685e8c4e09adea21a17340efbf",
      "IsHidden": "False"
    },
    {
      "Start": "ad1c142428a64d90a9fd77fa5143bc94",
      "End": "17a3f8b219974d1e8c7a75524dcf6f8a",
      "Id": "5eda1da087864150bfb5005b481c06fe",
      "IsHidden": "False"
    },
    {
      "Start": "1e4b6248c7c44a568e3302bee6e44d88",
      "End": "9282c3c9fed84f0d9fd98a232dd21355",
      "Id": "2ad9a530de6f4bee9b56865aebd30a45",
      "IsHidden": "False"
    },
    {
      "Start": "42ea3a4abfbb4b5e919ad0d9ab9cbe79",
      "End": "a465fec80be046829fe5af3be5bc71f5",
      "Id": "5449335e411642d5b7fe915e2c6278a5",
      "IsHidden": "False"
    },
    {
      "Start": "2266989fa355428c90f3d7454511cdd8",
      "End": "be14809648ee4d5c88c10d2ff494cf72",
      "Id": "572cddad4d3d478c8c62d81087c0a55f",
      "IsHidden": "False"
    },
    {
      "Start": "959b43c15f6d4f04987b30997bfe572d",
      "End": "fc19c35db0c34054a95e639d77775d29",
      "Id": "53be51983104466480e0d2e7dbcae13c",
      "IsHidden": "False"
    },
    {
      "Start": "f298c80012764d9c9da52b8b6f09a1db",
      "End": "539943d67fef47aebeaf17c4f4140efd",
      "Id": "3d5821dede344372b2cd0f0c5889d46e",
      "IsHidden": "False"
    },
    {
      "Start": "5c444f2d416343dcb631c57c59496f2c",
      "End": "466a1b969e3d42e1897312ef536f8dfc",
      "Id": "a20603aca51e48bb9fef1b7b1dad41d3",
      "IsHidden": "False"
    },
    {
      "Start": "2115617fd72e4556bf3b6515b6ab12e3",
      "End": "b6000bd971e2468eb6a22287a917d42b",
      "Id": "dcbbc734fca644e3a88ca818e0775255",
      "IsHidden": "False"
    },
    {
      "Start": "dd71a994d3dc4e6f8e89cbcc614df8c9",
      "End": "6d4d6a0b774c4cc4b6d5b017ae64c89a",
      "Id": "11b5459cd09b4036b8eebafc3e3c37dd",
      "IsHidden": "False"
    },
    {
      "Start": "591f425e0e6e427cabc9caefe61b0b39",
      "End": "04e2a0cb2d234c6ea1a77f38946159f4",
      "Id": "25d0b5ae4eb340a48ee2ab3ac5ed3020",
      "IsHidden": "False"
    },
    {
      "Start": "757c0f4353154aa2bc0d71ec30d9e63d",
      "End": "b30583fa50db43a88227d5181ddfb271",
      "Id": "5e7a0cc9d6754c289ad96f1c557b7fec",
      "IsHidden": "False"
    },
    {
      "Start": "e1d09690f5b04f4c813b8938375a92a0",
      "End": "8c7793fdf8924861b5e0b1d79b207315",
      "Id": "27945701f41d46b29364c01af9b10bad",
      "IsHidden": "False"
    },
    {
      "Start": "162c46fb97944ad98dea6a329f4022da",
      "End": "4fd7769b62ae487c972a760d2763acdd",
      "Id": "f510c46d9a614aba99881f9987c91b05",
      "IsHidden": "False"
    },
    {
      "Start": "162c46fb97944ad98dea6a329f4022da",
      "End": "1464fa4fe66b4f11acef87a814f64c41",
      "Id": "28e6d350efb24acaa404a1f89b7d1307",
      "IsHidden": "False"
    },
    {
      "Start": "162c46fb97944ad98dea6a329f4022da",
      "End": "c13a9cb29a8b472fa510c32bcb1b95d8",
      "Id": "af0869ce9ff743f7bcc66bbabc4e4a60",
      "IsHidden": "False"
    },
    {
      "Start": "790c9b5c16374cdeb90e202543bf5038",
      "End": "416a018109324b39a64074d07824cd51",
      "Id": "30d55af357be40ed877b8e7df9a4c1bc",
      "IsHidden": "False"
    },
    {
      "Start": "8f6b8623949f4e34b841df771158651a",
      "End": "fa5510ae055a4386822ec241208ca0b8",
      "Id": "bf74d7a2cbd940ab844e398baff509be",
      "IsHidden": "False"
    },
    {
      "Start": "0dee9bcf4a024cecb34a2864f29effbc",
      "End": "678084431c1e4a5e8b724427c9a644ee",
      "Id": "fe06c808b6cc4bdf886a2d64267f7258",
      "IsHidden": "False"
    },
    {
      "Start": "bbe9dd327f1f49e6a4a088677b676347",
      "End": "83aa1d991262402585932a211ea8c87e",
      "Id": "f076ea60cabe4c58bfab65926014c3be",
      "IsHidden": "False"
    },
    {
      "Start": "c2bb720265b546e28b3d4f6d9ec1115f",
      "End": "39a82b9f565542ce81b8ab5b5625fb4e",
      "Id": "741281a84af54d1eb71b0543e321066b",
      "IsHidden": "False"
    },
    {
      "Start": "babf08853d384ad4851f7f57c0ac0a2b",
      "End": "56b59f580401447fb639c1e476f85c59",
      "Id": "ce76cbd35f2147df82d749b6cc591aea",
      "IsHidden": "False"
    },
    {
      "Start": "babf08853d384ad4851f7f57c0ac0a2b",
      "End": "3ba2357045cd4a25a144fb282738ff10",
      "Id": "27bf0114d979445f9acd68747936318a",
      "IsHidden": "False"
    },
    {
      "Start": "dd60ce6495ee471192c6431d3c5d4ce5",
      "End": "4e5094723ff64f239c4b8bcfd9fb77dc",
      "Id": "8360f5150b1c4fd491b46806507687d3",
      "IsHidden": "False"
    },
    {
      "Start": "9b8602c373f44786ad1de25f3aaae0b6",
      "End": "bbf768a5b213420b903e629d6ac6ce92",
      "Id": "f24c6cfbd3ab4028b614ecc59c5330b2",
      "IsHidden": "False"
    },
    {
      "Start": "9b8602c373f44786ad1de25f3aaae0b6",
      "End": "75da6c53f31446c6ab053beb0a43ada3",
      "Id": "4f5047b1a4fd4d2dbde92f3fbf114ca8",
      "IsHidden": "False"
    },
    {
      "Start": "a88bfbac84244fd1b28b3c560a818768",
      "End": "a4b0cb0ccd9f481ba6d7793cb60b1056",
      "Id": "9b9a98b64fbb40e9b54c5714d4d5b737",
      "IsHidden": "False"
    },
    {
      "Start": "5f9f3e817b80426c9903a60add59506d",
      "End": "69179e605ae84a888ded0c25db004322",
      "Id": "3787c0b39040446ba968124ad5680f31",
      "IsHidden": "False"
    },
    {
      "Start": "09fffd927f5f4de287e8fc4bf358c628",
      "End": "535fb295c05a4ecebf9e29795ea1930d",
      "Id": "15ac3dde4fdc42dd9845970e9853eb77",
      "IsHidden": "False"
    },
    {
      "Start": "0e8f001bf60c4f1abd6ed903aa9ddfc5",
      "End": "82d9531c792848d9b344e1472f0fe59b",
      "Id": "bea0e7b62e954a4bb803a26f24948332",
      "IsHidden": "False"
    },
    {
      "Start": "0e8f001bf60c4f1abd6ed903aa9ddfc5",
      "End": "f073266ccfb04e1d9fa1ad4583310ca4",
      "Id": "7225588f2a1847608fdbb97b41af57b1",
      "IsHidden": "False"
    },
    {
      "Start": "493866657e364d93a145184313f14253",
      "End": "fa7f44c34e394d30968825d2135caf6c",
      "Id": "c2b649b3a3c64599a23167da39eba1c2",
      "IsHidden": "False"
    },
    {
      "Start": "27990e32e5e24594b8dde2bd7b51f655",
      "End": "efc6abbe6b9a40bb9f6541643d860653",
      "Id": "008bbd4e49b04f98b5eba3900a49d3d1",
      "IsHidden": "False"
    },
    {
      "Start": "caf80b993f8b4588b37c9185fad339b1",
      "End": "4d38f293593c4edd8845f3f202fde507",
      "Id": "ae08327cf4724f9db02b3e9cc0bd3b84",
      "IsHidden": "False"
    },
    {
      "Start": "515dbf73611c4213aa1a04b86a3c4159",
      "End": "2d049ca30bc34e07969850d9d21ce5ef",
      "Id": "6751ffedcc6b45cca875c262ed310b95",
      "IsHidden": "False"
    },
    {
      "Start": "e96355f3743c42e38b3af07ce94329d2",
      "End": "4965c2fd1bb1417cb07a191b3bc2c7c3",
      "Id": "f234ed0190ca490da443d0bf86e424a1",
      "IsHidden": "False"
    },
    {
      "Start": "e42273bdd0fa425f89784baf2eafd705",
      "End": "618e8b1bff4541d99bfdbb1156980fcc",
      "Id": "585d41a4b6c94b6a9fff992a59efdb93",
      "IsHidden": "False"
    },
    {
      "Start": "9e290ed03b82445e84fad8d8a6c58e94",
      "End": "57918952c85a408d8d37cbef21b18198",
      "Id": "d9e44be0ce5846a5b38db5a55ae9a8ef",
      "IsHidden": "False"
    },
    {
      "Start": "c09ac09277da403cb0bb11e2310c3015",
      "End": "37c8ba2b25414be69b2409ba5157337e",
      "Id": "2b3fb103dab441479a6b1d52e063f0ef",
      "IsHidden": "False"
    },
    {
      "Start": "ae0ae687035046e391f9159540aadd61",
      "End": "675b2a92297b4fb4991991af0816a7cf",
      "Id": "3de9c5607aab45878864a03a47346b9f",
      "IsHidden": "False"
    },
    {
      "Start": "9e5b6d39d5424daaa2cf059ee446aef5",
      "End": "3e96dccdc15a4ae8afb933e2e9d30f04",
      "Id": "1aa61b42275c4cd897ef49836a67c1d9",
      "IsHidden": "False"
    },
    {
      "Start": "09de54ed7c894589bd566d32db96d26a",
      "End": "d8fa91e731c344449bb7c28c84610310",
      "Id": "4c0ceb6d67b042c4bb4b773049fca222",
      "IsHidden": "False"
    },
    {
      "Start": "ef4d2ddfc9c149b2b4e18e7fd545691b",
      "End": "fa2fd3d4ea3649a1ac90dc98a21b3bf4",
      "Id": "c8b5c9561e344e69a95513e637d8cc5b",
      "IsHidden": "False"
    },
    {
      "Start": "7f91d1e620fc4edd8a99202bb366517b",
      "End": "e325886e4552409a94073a88a71c22f7",
      "Id": "771994c7730e413daf00991af70bd95c",
      "IsHidden": "False"
    },
    {
      "Start": "96e0a005e7a34fa7ae4f232692f3496e",
      "End": "9922b2d19bbf45bd80682cf46417f45b",
      "Id": "0ebc08376f3f48dabecba4a88126b19f",
      "IsHidden": "False"
    },
    {
      "Start": "d63b8e8987cb4456b066ce77c3791c80",
      "End": "48be9c9381c940d184d62a007ef3c60d",
      "Id": "105fef15ff5d469b857d1ecdc4ea20d0",
      "IsHidden": "False"
    },
    {
      "Start": "59aad3a81cd14936a0b99a7022dbc458",
      "End": "00712743962f4d638ad921b13a331711",
      "Id": "c175ee2a17fc48f19153754ebfaad423",
      "IsHidden": "False"
    },
    {
      "Start": "59aad3a81cd14936a0b99a7022dbc458",
      "End": "5d7e3df64f2448e9aa9d18ed2f2c1ddc",
      "Id": "0c7d5548490e475d8c58ff2e01626cfa",
      "IsHidden": "False"
    },
    {
      "Start": "96f28807b3024bd895c6691409da14e1",
      "End": "b0eb12b0b7b4486c963afeea804e98ce",
      "Id": "aac8ca94d436470b8e221dac3d659b35",
      "IsHidden": "False"
    },
    {
      "Start": "26ff4969b5d84be195420513649084e9",
      "End": "3ea094f458024177abaf96b73841c4ff",
      "Id": "60f6e9eb158f4bf0921c52432431f5e9",
      "IsHidden": "False"
    },
    {
      "Start": "26ff4969b5d84be195420513649084e9",
      "End": "1eddbbed4c88433084d76c16eaa0a9ce",
      "Id": "728a1e33c89a4aa9aaf614792324bed7",
      "IsHidden": "False"
    },
    {
      "Start": "7e12fdae8134451a9fa2d3d00daa4553",
      "End": "00fcd937208a4d3399e30711690c2fd4",
      "Id": "b2b1f4a63eb3477fbed3ddd43ac158b5",
      "IsHidden": "False"
    },
    {
      "Start": "7e12fdae8134451a9fa2d3d00daa4553",
      "End": "e49313b9537c413298774c8e8ab2c260",
      "Id": "c0c9c56270b644e8834194f766c48d84",
      "IsHidden": "False"
    },
    {
      "Start": "c66e78121752474894ce473aba446b12",
      "End": "bafda20577334be9a57d4aefe292f186",
      "Id": "0c277d9bffdc495dba141b8e8eff69bb",
      "IsHidden": "False"
    },
    {
      "Start": "051bb562fd2d45ae87e127c9358d8dad",
      "End": "2abb8e549fe14cc6b5472a08c3cc4544",
      "Id": "a74fcaccdb8848a695d2fd393fe84254",
      "IsHidden": "False"
    },
    {
      "Start": "5a8303e2e17a4458a0efd20b951fc361",
      "End": "27f4653700b842a1ac4825e2393f2798",
      "Id": "774c3e7501a4470e94e953b2a4cc4da8",
      "IsHidden": "False"
    },
    {
      "Start": "0b18d9f15b374829af287a8822bb1128",
      "End": "8432a5853d0f43a7a9a70a70a1f525ff",
      "Id": "5d8b44badb764c189389131cfc3695d6",
      "IsHidden": "False"
    },
    {
      "Start": "82759e1dc29642928bf86bf0eb851876",
      "End": "7559dfa1b94946c3b91d879bed79a613",
      "Id": "13a1073d62b7491986305f17c3a79ed8",
      "IsHidden": "False"
    },
    {
      "Start": "7f8312bbabfe42d986eefdd3a545bd06",
      "End": "d27766c79ed945a2913832c8149475b9",
      "Id": "e151fd8cde3a43f19b4ae98b30a07b8e",
      "IsHidden": "False"
    },
    {
      "Start": "7f8312bbabfe42d986eefdd3a545bd06",
      "End": "c86bf0cbb56d48cb9a71e4c274a2075e",
      "Id": "788a9dd286704761bd0ce70b99bfb239",
      "IsHidden": "False"
    },
    {
      "Start": "7f8312bbabfe42d986eefdd3a545bd06",
      "End": "3518e64f52b74e1d91963ecf33b9d690",
      "Id": "d362ede9bd2f463784f481b43e48c579",
      "IsHidden": "False"
    },
    {
      "Start": "7f8312bbabfe42d986eefdd3a545bd06",
      "End": "0948b0238c5a457e9e57fbd0e6db8354",
      "Id": "b36c067440ac49068805b2533d12a1cf",
      "IsHidden": "False"
    },
    {
      "Start": "18397af39ce441aca647e39e3c053e17",
      "End": "1887ba52a7bb4368be14a531caf8efb8",
      "Id": "c081c710e08841539805f66692193090",
      "IsHidden": "False"
    },
    {
      "Start": "74bbdd2cecf64b9c99747c88d89433fa",
      "End": "5569ca0311ac4ce78bdf843d7485c75d",
      "Id": "3189408c477a4d2c8c82f52b817c486d",
      "IsHidden": "False"
    },
    {
      "Start": "e39052119f3940389a40557df0f88dfd",
      "End": "830156297c1147f4bdeb45bb29672659",
      "Id": "5eb1b048c37e4f2e9c669aec4e8f68b7",
      "IsHidden": "False"
    },
    {
      "Start": "bede83191bc14281984cd7b3b0925d8a",
      "End": "eff8abaa171747bc9a2a40980563a19b",
      "Id": "2b2655601d0548819ae9bf5628f640bb",
      "IsHidden": "False"
    },
    {
      "Start": "bede83191bc14281984cd7b3b0925d8a",
      "End": "d947a06ff34b49e790e0da95d1fa4278",
      "Id": "72d0ca3f499a4163be0a8e178ca9363a",
      "IsHidden": "False"
    },
    {
      "Start": "aa09df90aaad49159de3b5e8351ea3c8",
      "End": "2a2fbcda5b4743f9b23ba64411824fde",
      "Id": "fefde24246f545528519465a641794c4",
      "IsHidden": "False"
    },
    {
      "Start": "76611c52e6f64327b0079060e09330f6",
      "End": "8364afa00e7b41738cc9c37d4d6a6f7f",
      "Id": "b33d683eef6a4f32bfc85ee3f177f075",
      "IsHidden": "False"
    },
    {
      "Start": "3c01251f63a742b888df0c43b4882b6c",
      "End": "2b8cb80d6e4543ff8ec5da0d210626ce",
      "Id": "1198e833050d488c8de9f96d853502ec",
      "IsHidden": "False"
    },
    {
      "Start": "068dd1da481840519de111521eb4a817",
      "End": "8b2bbc7621684a199e4ae9e6c37adb2e",
      "Id": "4eb6f738f6ef4fbe833b5bb9128739ce",
      "IsHidden": "False"
    },
    {
      "Start": "e26a65f0429e49acb4603b6f7badaf40",
      "End": "5173f8e91f6849bdaeb7952cc6d381c7",
      "Id": "dd5b23a6ad12431fb0f6d9246b0c64a4",
      "IsHidden": "False"
    },
    {
      "Start": "981317af838a404b935e07b3767b6198",
      "End": "34bc201a34914a33804f956838ed0cfc",
      "Id": "ebf73dc826e74639a624f81c86b6561a",
      "IsHidden": "False"
    },
    {
      "Start": "9ec0883352584d02b31f61c0cf80a2b2",
      "End": "1d9cb97b036844f1bed4064992a11934",
      "Id": "3d89e2f9cb3a47ec9424f6566e3f60e4",
      "IsHidden": "False"
    },
    {
      "Start": "9ec0883352584d02b31f61c0cf80a2b2",
      "End": "fa59b2e222b9450890d28904168bff1f",
      "Id": "b035985197314e2fb582617c12784fce",
      "IsHidden": "False"
    },
    {
      "Start": "9ec0883352584d02b31f61c0cf80a2b2",
      "End": "bb5f72d7c6964aa3ac4f086d4b694639",
      "Id": "9e28fb4a384e4861bb01c316de95ddd2",
      "IsHidden": "False"
    },
    {
      "Start": "9ec0883352584d02b31f61c0cf80a2b2",
      "End": "fc51514508fa43f2bc018ef9e52dcdec",
      "Id": "7b1ed0dc555542b49f604d62330caaa5",
      "IsHidden": "False"
    },
    {
      "Start": "a3a57a386cf947dd825ff3be984adaac",
      "End": "007bb4772ecb4a97892f8f61d4311af9",
      "Id": "1585728a1b0c4050a6bb4dab897f5a6c",
      "IsHidden": "False"
    },
    {
      "Start": "8996a5134e1d4200a245711cf550f8b1",
      "End": "5e6363f4036348a8b1aebe8360493eea",
      "Id": "c3d4df82b2fa411f973c358e7e2c3905",
      "IsHidden": "False"
    },
    {
      "Start": "4380f547537f4d2895937008e9fbf24c",
      "End": "575a4c1acc3545418f66fc008db0b8dd",
      "Id": "48d071f12a7448ee9fd17d86067e2c98",
      "IsHidden": "False"
    },
    {
      "Start": "edeeff6080a646ee9d61b1836a30d2ba",
      "End": "b5e14859314b479eb8184418ab1e53a1",
      "Id": "d7e33633a75248ca92e2317df1014340",
      "IsHidden": "False"
    },
    {
      "Start": "e3894cd64f1e4bc58971185e24ec3df1",
      "End": "de8c4cae8c194758a77787a0ced14e0a",
      "Id": "dc76f1ae914645b99324627b90bc7c5c",
      "IsHidden": "False"
    },
    {
      "Start": "e3894cd64f1e4bc58971185e24ec3df1",
      "End": "c969366978d241bd881e53ec2413209c",
      "Id": "5b93894ac1fd4173a82b5de36b461365",
      "IsHidden": "False"
    },
    {
      "Start": "bf0149a8994b4feeb149d94c8f8e5701",
      "End": "d8d86f685c9e4f86b611d4fcbf7f242f",
      "Id": "ac991ea975d84e7ab1adb77533e07ea4",
      "IsHidden": "False"
    },
    {
      "Start": "bf0149a8994b4feeb149d94c8f8e5701",
      "End": "3fde2bc47f254050962dad78ab4c39f6",
      "Id": "32257485effc480093ebcc39140dd37d",
      "IsHidden": "False"
    },
    {
      "Start": "67408112d95d47a984f5f63c3df6eb2e",
      "End": "c66f8744256341558a0a4c784ba4ec21",
      "Id": "9faf8480d7d34d49b79f99b233b0ca8c",
      "IsHidden": "False"
    },
    {
      "Start": "67408112d95d47a984f5f63c3df6eb2e",
      "End": "8a37c666774047cd8c7023a8520de399",
      "Id": "9d67111e90b54adb936e6d29d7b0ee87",
      "IsHidden": "False"
    },
    {
      "Start": "67408112d95d47a984f5f63c3df6eb2e",
      "End": "3f19dd9c79864a6ebaad0e2dfb7b3514",
      "Id": "0eb0104d65874e1da323312d5c344676",
      "IsHidden": "False"
    },
    {
      "Start": "bb1d442c9ea646ff95e6ab9c425812d9",
      "End": "cdebeea57dd0467a859ca91bd93f369b",
      "Id": "14f37470a65a4943ad721a86932ad1da",
      "IsHidden": "False"
    },
    {
      "Start": "bb1d442c9ea646ff95e6ab9c425812d9",
      "End": "8f2c557137b0439d87973b572da3ad27",
      "Id": "9317f3845fe742f187ed014b5cfec30e",
      "IsHidden": "False"
    },
    {
      "Start": "bb1d442c9ea646ff95e6ab9c425812d9",
      "End": "842b6a9523634e94a0c29a105bfb383b",
      "Id": "13cc0f8dde224134b375b7583c6e82a8",
      "IsHidden": "False"
    },
    {
      "Start": "49b68360f4814346ac3ce21168ab098c",
      "End": "8d995beeb4564db1a113710d139252ff",
      "Id": "2d3c4e0a29014581ad9789fcb7480d9e",
      "IsHidden": "False"
    },
    {
      "Start": "ce59380719c543ab9ff7a553b39c3b1c",
      "End": "9df191caea39455a92235ab3e9e90b8c",
      "Id": "7c07d22227514b3d92817fa080fc700a",
      "IsHidden": "False"
    },
    {
      "Start": "ce59380719c543ab9ff7a553b39c3b1c",
      "End": "fd02ff113cd04017b07557e92c22bb4a",
      "Id": "c31cbae4c57a4211a0177a86112a91a2",
      "IsHidden": "False"
    },
    {
      "Start": "a7d9ecb95b5842d1a2b227b871641b64",
      "End": "de4999835b6840fc843ca80427308e2a",
      "Id": "928b3a7ae57e4cbcb5def507ed14e043",
      "IsHidden": "False"
    },
    {
      "Start": "f08b7eb7450b4520bf9d94b7d44b0e10",
      "End": "4d617a9795d2425a81dab1d8718f9a01",
      "Id": "cc1595e4969c41679aa01f98d8013d97",
      "IsHidden": "False"
    },
    {
      "Start": "e0a12e1d88ab4f7ab2a15cc5e636a31d",
      "End": "769cbcd793c243e3aa8de59206f098e1",
      "Id": "5587570f264049d9bbd27ab8cab61ef2",
      "IsHidden": "False"
    },
    {
      "Start": "2d972d152aa44b02bb7988956c84c56f",
      "End": "534e760d839b41538994a24a2c8f17a8",
      "Id": "edf86f9ec7b3450784795daec8e523fb",
      "IsHidden": "False"
    },
    {
      "Start": "2c431dbb5fe64a8e86c65a60ec479dc5",
      "End": "9fb85a2764864aae8895b0127ca5986b",
      "Id": "1ed0f52ccc104d6c9ba695b9de7fef14",
      "IsHidden": "False"
    },
    {
      "Start": "603ee614f837436595504faacba24202",
      "End": "d725a26337f1470d8ea8bc9fe2d0a542",
      "Id": "ee40cdfc11a34ca5ae71cfd5124b9dac",
      "IsHidden": "False"
    },
    {
      "Start": "c7c8c4d0dd3c4ca1898352042c83017d",
      "End": "01f5994129884268aa932ffcccd94800",
      "Id": "53a0df73f98d4793a0d68187cd06d890",
      "IsHidden": "False"
    },
    {
      "Start": "8f8a7ac5292b4618b98541e2a4181cfd",
      "End": "9c50a0ebdfe84db4bd310dc250fe4d2e",
      "Id": "9d6bd1d987e04c19a8a9c9d0a2e6184a",
      "IsHidden": "False"
    },
    {
      "Start": "dd0f67a962db49b89f2785d7d4f0beb3",
      "End": "57ca58cdbaad4cb0b7b2148afc7e0827",
      "Id": "9c564fbca93d458cafdeef9aed1a7955",
      "IsHidden": "False"
    },
    {
      "Start": "dd0f67a962db49b89f2785d7d4f0beb3",
      "End": "ef1fa22512984407849578a9a445bfb4",
      "Id": "4da0050ce922457dbc0eb70438c7bbcf",
      "IsHidden": "False"
    },
    {
      "Start": "dab6b027d3c74655a97cc680aff9433e",
      "End": "451f626d62874877a757ef843253d414",
      "Id": "262b40980079471e9dd710a34ca6b461",
      "IsHidden": "False"
    },
    {
      "Start": "dab6b027d3c74655a97cc680aff9433e",
      "End": "55e716117218483dbdf5a21be6d0c008",
      "Id": "10dbad63640c427d9576d6f5abc8f915",
      "IsHidden": "False"
    },
    {
      "Start": "a8b3d50991f94e3bb5788f6b861b14d2",
      "End": "54c53a57474f40ea8f78ded0a1c8bcb2",
      "Id": "be1a19ce6e564b2d8e045950259a6590",
      "IsHidden": "False"
    },
    {
      "Start": "18ea4dc62c174414a51c3d313b6ac85b",
      "End": "baf8d6cd27b04ba485ec6a4b8010b810",
      "Id": "2be0587a88a94424b2095bf9c3c10c20",
      "IsHidden": "False"
    },
    {
      "Start": "18ea4dc62c174414a51c3d313b6ac85b",
      "End": "1741fdb6645c46a9945496be1c74f523",
      "Id": "e69aa3b0a6234402adb4d2430c68cc44",
      "IsHidden": "False"
    },
    {
      "Start": "74bdc0724c604ed5a1e89472915145db",
      "End": "bdd04d0575b5482ab6de08499efbdfdd",
      "Id": "6b2a6c8f0a4c499495b6db38c889a568",
      "IsHidden": "False"
    },
    {
      "Start": "bf8e4a6b2e844dfd832e4c203175675c",
      "End": "007f604d43364f6297f70df185040e9a",
      "Id": "75eb00982b2542ca9ad6de956552fbad",
      "IsHidden": "False"
    },
    {
      "Start": "b87209f96a4c499b9698ee5f663aa162",
      "End": "a5abf3a2cda8424693e25a5a5b42daf6",
      "Id": "51f1e9077a964b5c8fa9695d0d81b0db",
      "IsHidden": "False"
    },
    {
      "Start": "6c685a8efeaa4a3885970f10ed8b62e2",
      "End": "993d1e30299d4ec78aa1659b56ce92c3",
      "Id": "740eed64fd25429fa8243b86911ec3ab",
      "IsHidden": "False"
    },
    {
      "Start": "6659ec5d2cc94aed91174ecea57be253",
      "End": "a3d90e65a04e4ec7ac3ffdc6e80af0ac",
      "Id": "4dd950670f394cc096abcacf54b3f3ee",
      "IsHidden": "False"
    },
    {
      "Start": "6c0be6a1e7e54b58b7c310a572d8f063",
      "End": "b5997e7af74c48eea145c5862fd74915",
      "Id": "837093b5c94a49bbb6d06dd759f19e3f",
      "IsHidden": "False"
    },
    {
      "Start": "6c0be6a1e7e54b58b7c310a572d8f063",
      "End": "ed8cf0a8d0d34a98952bc9105031dec8",
      "Id": "a0344a3c67834047be5232b2a6857323",
      "IsHidden": "False"
    },
    {
      "Start": "214da1b024374617988a988e422d83b9",
      "End": "443b1796b7b84f229a1aefd47a5630aa",
      "Id": "e95ebc7b752b409bad769d6f0bd30e70",
      "IsHidden": "False"
    },
    {
      "Start": "214da1b024374617988a988e422d83b9",
      "End": "95e81ddc3e8f413290814bc4ab98622b",
      "Id": "7db6f65a8cfb4f4480a4f3d57c633b62",
      "IsHidden": "False"
    },
    {
      "Start": "0ae8b7598a7747519ebe8f462e174350",
      "End": "aef1b0dff4e44620880cfb9e67b1b3fa",
      "Id": "a110f80b327b4428a1f11b46ea6abf37",
      "IsHidden": "False"
    },
    {
      "Start": "5d0714619cb04a58b8a0d42be87e010c",
      "End": "1b78f0c16c4e40c2bd15f5c6d97ca36f",
      "Id": "59cd4ce04aad4b32953a9d07f99a55fe",
      "IsHidden": "False"
    },
    {
      "Start": "f3b273cca39542ee9bc7b100d7b21c11",
      "End": "c5b925f850d44e2aa08b341483d7e38d",
      "Id": "897296c30e5d44bd9d22308a59a48e00",
      "IsHidden": "False"
    },
    {
      "Start": "f3b273cca39542ee9bc7b100d7b21c11",
      "End": "6d95d28e3d934546b868120977546585",
      "Id": "621e9c60b68643f2aa3af049483cf15f",
      "IsHidden": "False"
    },
    {
      "Start": "f3b273cca39542ee9bc7b100d7b21c11",
      "End": "d2a76e1464334735bec7d99d7ed34d3a",
      "Id": "44a47e84bc1246c9a597631fbf020ffa",
      "IsHidden": "False"
    },
    {
      "Start": "70dacabd122b499ea138d052d7cc1d6e",
      "End": "b1031c5544a24bd3b306b2f30f2035d3",
      "Id": "2648fbcfb30042a382e233162ca3059b",
      "IsHidden": "False"
    },
    {
      "Start": "3e25b4492fd841d6a714a526f4ee62a8",
      "End": "6c81b2e528354d32b26100d632c6e32a",
      "Id": "395f507170d545ccb1928c47ff1408a8",
      "IsHidden": "False"
    },
    {
      "Start": "b5ace9f291814e9e8b99fbe94a9c5743",
      "End": "fd68871d47584630ad3753671d84e3db",
      "Id": "deaed6cc78a44f40824198ca41c01ea2",
      "IsHidden": "False"
    },
    {
      "Start": "031b04f2d9c64ef0bca2241ebe52e411",
      "End": "7a0d669adc47466cb0faa750e57af794",
      "Id": "fb7eda7d50da48ac922779131148e13a",
      "IsHidden": "False"
    },
    {
      "Start": "4b97eb79df6742879dd48603e43d917c",
      "End": "66f0f210ff764697afce67c79b715827",
      "Id": "63af30f8d15d4183b781f1f7916c4b35",
      "IsHidden": "False"
    },
    {
      "Start": "500a44e01882462eb192809fa73ecd9b",
      "End": "1a29d5a21c2b42f98645c63526a96cfd",
      "Id": "827d564dd7c6450588bf45cf90f6c1e1",
      "IsHidden": "False"
    },
    {
      "Start": "e2aa4d5160234bd680d1ef4c06f39466",
      "End": "652ec99eafb14f7c87c547d38e72c875",
      "Id": "3f3b7015f9434dd38ea053a78349d571",
      "IsHidden": "False"
    },
    {
      "Start": "72b20533cce443ecb0c6a6fa490088e9",
      "End": "e5af927964c7486f935490237d32835a",
      "Id": "992307600c1946dd853fa62f7285f92f",
      "IsHidden": "False"
    },
    {
      "Start": "328dbc4a535741109d9f84f2df793864",
      "End": "002a4e1d52544371bb159e48a6209cec",
      "Id": "37d3d1030caf42b1bedf11516a222ca3",
      "IsHidden": "False"
    },
    {
      "Start": "80b776163187465e8501ca1a8a503d7b",
      "End": "89c95ad0a27c4f29a7685aea69fc184d",
      "Id": "d4b4998319f641a38a5bab92dbf06283",
      "IsHidden": "False"
    },
    {
      "Start": "21835214fc0941fdb1be29946b6f45cf",
      "End": "73991f8fc6644549a1f85fee44a2ad6c",
      "Id": "0d783250a8284905bc255bbf8a385f85",
      "IsHidden": "False"
    },
    {
      "Start": "0d7790887e844002af930a5ddb4f501f",
      "End": "bf42ef1617f7427cb28cb6a8864ae2b7",
      "Id": "601541ae140d4574a12efaa430bd45ab",
      "IsHidden": "False"
    },
    {
      "Start": "967b5c5201224ec1b7ee497597199a1c",
      "End": "631796d864a04aeabf22f0e04367dd91",
      "Id": "588a971f673e41b48cd9415e36eea2fc",
      "IsHidden": "False"
    },
    {
      "Start": "9322434a9c0b4a29bf16267043b28347",
      "End": "9f85da5b703d469ab4db0a1cc8c8d24f",
      "Id": "95d41095fcca429298c1742d30b5cbca",
      "IsHidden": "False"
    },
    {
      "Start": "b6c03a8966f14c19932a1ae2ff1457b1",
      "End": "39cc2e9038c04f3084961786701b0ac3",
      "Id": "544c002e32bb4229ac37677ac8ff3e89",
      "IsHidden": "False"
    },
    {
      "Start": "683bb568c4004e22b6c3d0229ea0eb56",
      "End": "8f164dac3ad54423954b349dc81dafd0",
      "Id": "f6c33319449c438fba223fee376bf794",
      "IsHidden": "False"
    },
    {
      "Start": "1ceec1bd797c4931b1d3efc57f7ebb34",
      "End": "ac4c1c8bfd78484488c99aa34acd759f",
      "Id": "3c4d586867c04373bdea0c1ac8042751",
      "IsHidden": "False"
    },
    {
      "Start": "1ceec1bd797c4931b1d3efc57f7ebb34",
      "End": "30f88453539d4e79a328a737c835f9ab",
      "Id": "a3a259e5c9674ca8b618c5f9260b654d",
      "IsHidden": "False"
    },
    {
      "Start": "0ec339c0d07344e08eeb7dab48af0a3d",
      "End": "6ba1a99f999445cd8c52c3bea99df9b1",
      "Id": "74d5188d46ea406189d16cfe98b4e6f0",
      "IsHidden": "False"
    },
    {
      "Start": "fca76c2f86ef4f73a8d71ad6b1df412e",
      "End": "f81a8c624caf4fd1935daae9dd0ef7d9",
      "Id": "9c56ced674f341d48077ad230921c847",
      "IsHidden": "False"
    },
    {
      "Start": "3f032c1cb3a04deca1ebd581f4ecb652",
      "End": "7d12b9adda20402cacc640313c3be345",
      "Id": "bb71e8275d814b2996105225ad3672da",
      "IsHidden": "False"
    },
    {
      "Start": "f639412cf47a4b7f8776c10cc82355be",
      "End": "3881dd05b11b45af8b2f4ec8f532afbc",
      "Id": "6e0786b640df4bc6bedf87f0e57231dd",
      "IsHidden": "False"
    },
    {
      "Start": "c93b6192b4ba42e7acd35dc47783695c",
      "End": "3df07fb691fe4ec99552cc3471867d1a",
      "Id": "e7213e5df73a47b7ad12e8c90050f383",
      "IsHidden": "False"
    },
    {
      "Start": "aa9388b4780c4656abba2272de6b7cef",
      "End": "c5eae567cdf145b2a15fa0241ed701ba",
      "Id": "a0955426016b4cd88737d76f1b1822ff",
      "IsHidden": "False"
    },
    {
      "Start": "e135823cb0db48bbb86279fb872410e5",
      "End": "84ca85aee0ba4bdc9c9530d1221920af",
      "Id": "777d677216aa44c2907bf613c1cbd0c2",
      "IsHidden": "False"
    },
    {
      "Start": "e135823cb0db48bbb86279fb872410e5",
      "End": "80bdcea8275e450ebfc0d34d05b864f4",
      "Id": "edd2d70e071a4b62b47ddca1b373712f",
      "IsHidden": "False"
    },
    {
      "Start": "89162576c2d6421289c80f69c1eb1381",
      "End": "d0e2df99c52342c4903e47e17bbea64e",
      "Id": "a8205c358ed7467791cf907aed52123f",
      "IsHidden": "False"
    },
    {
      "Start": "782892cdad4742069cca2729b8e89b8b",
      "End": "e5e722c898204578875e6484dae3f55b",
      "Id": "1206d68f2e344a88832243dbfc95428f",
      "IsHidden": "False"
    },
    {
      "Start": "053c8f8710a74439899ca6bcc0c07a68",
      "End": "1b2783f8ea8b4d6e9903c51888877c90",
      "Id": "124881e369944eaeb5781c13b19d2424",
      "IsHidden": "False"
    },
    {
      "Start": "751511cdbd2140d79b88a049198b9bb3",
      "End": "729cf30510234489a31c020880a847b5",
      "Id": "976ab2e1a3ae49ccb04e289b34a03703",
      "IsHidden": "False"
    },
    {
      "Start": "fabe19d8ce7a472fa2aef7af7b398b24",
      "End": "a0ccf2b41ace442eb334f3451307b380",
      "Id": "004da56e51064a139163e99e8678fbfb",
      "IsHidden": "False"
    },
    {
      "Start": "3dc3284397a94917b62feb0883ec23a4",
      "End": "cae76bc46caa46189d6b3e926cf6a1de",
      "Id": "f53579c70eb14b19b63d4245e67d0619",
      "IsHidden": "False"
    },
    {
      "Start": "3dc3284397a94917b62feb0883ec23a4",
      "End": "aa5b2357cdec494ba73ccd24ad636923",
      "Id": "9a8a12d636a64e8c845bb8356e4494e1",
      "IsHidden": "False"
    },
    {
      "Start": "82d0a705b573410eb8f00c7659295dc3",
      "End": "e97045dbce814fe6b353cef37690b282",
      "Id": "36b3cae62b064b22954d533a87cf1ba3",
      "IsHidden": "False"
    },
    {
      "Start": "1a0a0d898e17426ab644ada8b60e2959",
      "End": "4c9c3c12b2b54272aef1034d1e54b991",
      "Id": "989c72c7695647a6b7574c01177cc672",
      "IsHidden": "False"
    },
    {
      "Start": "1a0a0d898e17426ab644ada8b60e2959",
      "End": "8e4f9015b81c46938f4e51d973f049a4",
      "Id": "722578494e6741f2b35b1d9177e69b60",
      "IsHidden": "False"
    },
    {
      "Start": "7deeff648f3e4487b04e8fe452a380d2",
      "End": "3f90dec918894c3295540340f485f5c8",
      "Id": "b913a8ce892f425089a984b66027279a",
      "IsHidden": "False"
    },
    {
      "Start": "d489a7ed243643ed8a3182d803f6c39e",
      "End": "8455fcf46a3247b6af030da901689084",
      "Id": "49e046b8d4494a5682e60e641798cf55",
      "IsHidden": "False"
    },
    {
      "Start": "edaff679c9164d579ae637310b58fb81",
      "End": "127e32306e2a42a7a8e64e663ff4ca14",
      "Id": "d6f0fef574cb42db8967a02256a46aed",
      "IsHidden": "False"
    },
    {
      "Start": "eb33135b123c465c9d23532f8c6d027e",
      "End": "79cdf5d003e04e6291d9b51e3d5eb1b6",
      "Id": "9b202a8e30d843178434827e1908cddf",
      "IsHidden": "False"
    },
    {
      "Start": "eb33135b123c465c9d23532f8c6d027e",
      "End": "773fb834ff944cc488876fe9c7d0cfd9",
      "Id": "32793692054540a1844c9b02f667fa1e",
      "IsHidden": "False"
    },
    {
      "Start": "e6edb4ce758d4152b6c2f17052c0a261",
      "End": "c218a220cf2846d2bb9d36312df28eab",
      "Id": "94178e3a9bac46aeb9260bfd41b58aad",
      "IsHidden": "False"
    },
    {
      "Start": "5f18147953d74bad82269098e64856a2",
      "End": "17601c67b3be430ea03e156c39a1470b",
      "Id": "6fbb1a14ab5f4f25910c49ae96e64d28",
      "IsHidden": "False"
    },
    {
      "Start": "530d71d591d044328ede1bab89000aa2",
      "End": "d1f0b470eb1445b68c66c72bcde97dbb",
      "Id": "607825173a6448a1a883a43e892dc659",
      "IsHidden": "False"
    },
    {
      "Start": "d5ceb48dec724deb84cabc18ef0d433a",
      "End": "d1d13c478c534e2387d412248c3d3698",
      "Id": "7a0b52f08872445eb3a3026789e08436",
      "IsHidden": "False"
    },
    {
      "Start": "fc77f451afa949bda55a0a84f3da6016",
      "End": "c4511da6822b443f8cdf880da7851bb1",
      "Id": "6a90b204706a46e192aa35f43098c1dd",
      "IsHidden": "False"
    },
    {
      "Start": "68cd19178f144c50936b5e40bfe26f51",
      "End": "6d7f73a712f54a5d9ab22005adffb72c",
      "Id": "cc926b22c59c4852a587fa8050694ffc",
      "IsHidden": "False"
    },
    {
      "Start": "68cd19178f144c50936b5e40bfe26f51",
      "End": "fafb4338cc544ddbafec0ce1f667273f",
      "Id": "73c33b01b9974cd39879dfe768df8b9a",
      "IsHidden": "False"
    },
    {
      "Start": "68cd19178f144c50936b5e40bfe26f51",
      "End": "270d21485f30484b891f5fce92ae8bfb",
      "Id": "05afad6b1ada4141bacf02006cdd91b9",
      "IsHidden": "False"
    },
    {
      "Start": "68cd19178f144c50936b5e40bfe26f51",
      "End": "ec8aac38538e485da136a67fd7001fa2",
      "Id": "3fd64acd676d4b019b47ced5ece8f2b8",
      "IsHidden": "False"
    },
    {
      "Start": "68cd19178f144c50936b5e40bfe26f51",
      "End": "35b87d09b77e4028a2670e66b1619e15",
      "Id": "30d1e6b050c1466589f49b87f1865fdd",
      "IsHidden": "False"
    },
    {
      "Start": "8b61f872a4f24347ba6f7708eb16e1c4",
      "End": "f435915af23a413881664ef2f840296d",
      "Id": "9e50c4ceeefa4edd8c9169d60b6135d9",
      "IsHidden": "False"
    },
    {
      "Start": "1cbe723aba9642d48140d7db9f930b8d",
      "End": "07e282c8eae1468bb32fe9f7f68765f0",
      "Id": "1f666a9fad854442b29ba70d80068ceb",
      "IsHidden": "False"
    },
    {
      "Start": "8fd694656c554a57b36c3b65a5bfaf08",
      "End": "2cf0bfa01571493f942604b6911f9cb0",
      "Id": "5522ef50d1cf4dd5b9662f61a3d02b3f",
      "IsHidden": "False"
    },
    {
      "Start": "32ce5fb97a054d41a8baa68459ac53aa",
      "End": "940738eeb39e4225bc48daf46baa4028",
      "Id": "b6095a9a3d9d465cab0f20c5b7f52312",
      "IsHidden": "False"
    },
    {
      "Start": "596f8c7f1a3a48a486e73879fdeed1d1",
      "End": "4bd2e798c5184421a4e79d59b0392019",
      "Id": "b425e833ade940fdb5c47bb8aee1a33b",
      "IsHidden": "False"
    },
    {
      "Start": "6b321d7057784a8ab6476aaa3a2a12d8",
      "End": "aed2c26deec84512ad2235c1cd61b866",
      "Id": "56b57bdad26d423e8c68dbe88e51ab92",
      "IsHidden": "False"
    },
    {
      "Start": "1169115fb6e94a5787fb6183af92a225",
      "End": "ba0545383b4d4a7d9e8ba5f11adb6deb",
      "Id": "2c91f24d681e440ebb036474790ddefd",
      "IsHidden": "False"
    },
    {
      "Start": "fb45bd194d774e209ea3b1f1710dae89",
      "End": "c7948c4326ef45ae87633c65b8d1fbad",
      "Id": "b06bde4fb3b240938d704d828619783c",
      "IsHidden": "False"
    },
    {
      "Start": "511df18267dc487c8d171659c2e78d66",
      "End": "ff7750e1b5e340a0ace63135e462bddc",
      "Id": "ccec7ee21c444b3cb176c444a9606dc8",
      "IsHidden": "False"
    },
    {
      "Start": "511df18267dc487c8d171659c2e78d66",
      "End": "f64e4461189b409e9e9bff6026dc924c",
      "Id": "952b1e48446942089713c9aaf580d023",
      "IsHidden": "False"
    },
    {
      "Start": "7343c21368bd433ab8baf6bdac58da9c",
      "End": "313e6a07bcc94daba61776c3d7b33997",
      "Id": "c3382a34a2764bb39db992cbb4c0b27a",
      "IsHidden": "False"
    },
    {
      "Start": "7343c21368bd433ab8baf6bdac58da9c",
      "End": "6f54eedc56c949e588802346ea5868ed",
      "Id": "a8676bc16b834a1b98c208d25291b934",
      "IsHidden": "False"
    },
    {
      "Start": "56e4f3c3298b47a2844f78621ecca06f",
      "End": "739e272c049f40b9907474d09538fae8",
      "Id": "3f3f8ba1b1944ba5bef0ba6bd856f17a",
      "IsHidden": "False"
    },
    {
      "Start": "56e4f3c3298b47a2844f78621ecca06f",
      "End": "89dc327cb5eb40aaa12964df32ae954d",
      "Id": "738a439291b141c992571453177cfe41",
      "IsHidden": "False"
    },
    {
      "Start": "d0a304ce73ee413b9405587a1591b7c0",
      "End": "1bdd56044de64efd8278f19672740298",
      "Id": "a1cd183e4af148f49872cf2219519664",
      "IsHidden": "False"
    },
    {
      "Start": "042eb074b2d6465daf464e72168b40d7",
      "End": "6481c4f917e14d2c943b05d2c16fe315",
      "Id": "0fc4037585684701bc2a0f1c597c00a7",
      "IsHidden": "False"
    },
    {
      "Start": "ddc6757d35664aa082b5fcaf44a31b23",
      "End": "15499037e28043599205900a195cb98a",
      "Id": "7e3f2af7dde04932a0446c7d8c2d2b64",
      "IsHidden": "False"
    },
    {
      "Start": "ddc6757d35664aa082b5fcaf44a31b23",
      "End": "5f598d8f9de346129638fcb3396f909b",
      "Id": "47f41906447949f097a2f69ecad2f489",
      "IsHidden": "False"
    },
    {
      "Start": "520f7586f04a4891a4c2bc61b8d27df2",
      "End": "fa7ea5e7dd5d44de8e4206fd78a2fa4a",
      "Id": "a047097ddaef4282bab9980fafb4af98",
      "IsHidden": "False"
    },
    {
      "Start": "1e585bdbcff04d9fb8d8486607027e67",
      "End": "a8ec8c5b662e44fca8bb60fda0132820",
      "Id": "ca8d6acb21c14f03893074737598c41c",
      "IsHidden": "False"
    },
    {
      "Start": "1e585bdbcff04d9fb8d8486607027e67",
      "End": "4a8f96d5bcee47ea9cf6fcc96964504c",
      "Id": "65ff980d6b814c28b42ca6676d053388",
      "IsHidden": "False"
    },
    {
      "Start": "a646267ddeb54aa0874b6dcf7a061080",
      "End": "4125529f2a4e4939830dc39f4015c1d5",
      "Id": "fd82178caa6d433187c543e59565e145",
      "IsHidden": "False"
    },
    {
      "Start": "dd6a0172df7e4206a8e93ecb236e0240",
      "End": "e2a9d58535594f0cac3deb615f230383",
      "Id": "97635edffff540c3a43535b0d2fe8f54",
      "IsHidden": "False"
    },
    {
      "Start": "dd6a0172df7e4206a8e93ecb236e0240",
      "End": "e7844f382d06487b90c7e4265cac35ca",
      "Id": "4dc046ed019f49ce9ccf8ef1a957c596",
      "IsHidden": "False"
    },
    {
      "Start": "dd6a0172df7e4206a8e93ecb236e0240",
      "End": "3fcc6c94fe8149539e8d7370e5482521",
      "Id": "2a5655e64c52439fbb8754675d92c76e",
      "IsHidden": "False"
    },
    {
      "Start": "14d5959b05af401582e21403e1b23112",
      "End": "d83baf8e964441a6a3837f90fe521eba",
      "Id": "b6c433ff7c26492ca0f2e48cb2ba12a9",
      "IsHidden": "False"
    },
    {
      "Start": "14d5959b05af401582e21403e1b23112",
      "End": "dbdda5ad7a7e40b19a2b95a8b671e0ab",
      "Id": "a241938c426a4891a7175a2fe30e91fc",
      "IsHidden": "False"
    },
    {
      "Start": "14d5959b05af401582e21403e1b23112",
      "End": "386665eacb164f70b728bcf1a8e35128",
      "Id": "20dd44597f094f62979a53eb1223f1b2",
      "IsHidden": "False"
    },
    {
      "Start": "8e35eb4569fa4bf7b9e5c900b0408c7d",
      "End": "7668760fe6194c0ea766f03cdca7b91e",
      "Id": "065b494f4a90480daedc8b574649fa85",
      "IsHidden": "False"
    },
    {
      "Start": "8e35eb4569fa4bf7b9e5c900b0408c7d",
      "End": "f24c2251a58149699dd0c9f96877f90c",
      "Id": "318bcf917fb34d918a72c05ecc5f2c7f",
      "IsHidden": "False"
    },
    {
      "Start": "8f3f084bc70f4f4a86e86a74c6c1d093",
      "End": "78b55526cd9b46c1bdb36cc7231bf3ff",
      "Id": "f842e9fa59a744df9d25b18382105182",
      "IsHidden": "False"
    },
    {
      "Start": "8f3f084bc70f4f4a86e86a74c6c1d093",
      "End": "d4917fe427534927acb6f6c0d2b3de1f",
      "Id": "94f0a8cf5abb47d1a92d529507d02112",
      "IsHidden": "False"
    },
    {
      "Start": "403030d4eb2c4d94811d7136bc911f13",
      "End": "bf1bb24da6ef46ba8b2995b269a1c09f",
      "Id": "4ac53608a52f4bb59b8873fdfd2e1777",
      "IsHidden": "False"
    },
    {
      "Start": "f2ff2ef2ec634ddf98c2c0176ecd3067",
      "End": "1d9085f5d4ea41a4ab6e0abe1f6f013c",
      "Id": "9719a053ffac4aedab614eff55936c5d",
      "IsHidden": "False"
    },
    {
      "Start": "7a6cb34732eb424f92d9011694f051ae",
      "End": "ef157c92c71c40aa8c8e04ddf3043abb",
      "Id": "8107ef5209c948508719ce6f4e92d96b",
      "IsHidden": "False"
    },
    {
      "Start": "06f4ba6a8928443e91307568aed20266",
      "End": "fa42ed6e36244b079f4c2b5e96219395",
      "Id": "8e041e2c8f2e41b2a07abfad4eb4c273",
      "IsHidden": "False"
    },
    {
      "Start": "abafd4b2d1d84c508528da99f2faafa5",
      "End": "511db71309f641499f6425688ab6a12a",
      "Id": "d47962c0ad2d4a5ca2f2ff7573e64cbd",
      "IsHidden": "False"
    },
    {
      "Start": "abafd4b2d1d84c508528da99f2faafa5",
      "End": "31f308adb5604185af657bd9be3f8e76",
      "Id": "f02c81ee71b44041b99b014f012332ab",
      "IsHidden": "False"
    },
    {
      "Start": "123ef32b66234301a80e25058c281e6b",
      "End": "86e8578516df4e33972b1cda242c2b1e",
      "Id": "d65ee46c8e6d4a5394e6f20571fc84fc",
      "IsHidden": "False"
    },
    {
      "Start": "6c26aebf9c4c44ed959ca6f79bff98be",
      "End": "07eb5a24e3cc459cb8eab9f176ef0607",
      "Id": "43ca7a55b3d3406495747e074dc54088",
      "IsHidden": "False"
    },
    {
      "Start": "69ba5595ac2e4905b72a996617b4c011",
      "End": "483d8b44472d4e4582382de9cafbdbdd",
      "Id": "cbdbe8de30a34467a5cada44adf893f6",
      "IsHidden": "False"
    },
    {
      "Start": "ec0272bafa164b09832384bc00f8f6cf",
      "End": "09de811f172642fbbdcac8f188e7b31f",
      "Id": "3f46a0e665b54438b7770bb9aace3202",
      "IsHidden": "False"
    },
    {
      "Start": "d05bfb7531234c79a4ae232608064499",
      "End": "0bcc6c12d91f491eb39bb6bf2a62088d",
      "Id": "9b8bc40111f2433fb265d48614914a4d",
      "IsHidden": "False"
    },
    {
      "Start": "7977c3fc00df4c99aa73fd051b834128",
      "End": "1212b20f52ac4a89bf79248b14691c8a",
      "Id": "83e18f3841e34bb29969dcf6facf7e0a",
      "IsHidden": "False"
    },
    {
      "Start": "7977c3fc00df4c99aa73fd051b834128",
      "End": "e14b0d2252544ca0b108de9349cc209e",
      "Id": "9e77e1fd0a33490686dfc9cace66c7bd",
      "IsHidden": "False"
    },
    {
      "Start": "19ad9f7ac3d544b7a90b4d2a6e0053d4",
      "End": "f01e621f520640b79dcbbc553d9c4471",
      "Id": "309c0a9b6bb54442853a357e38218b30",
      "IsHidden": "False"
    },
    {
      "Start": "19ad9f7ac3d544b7a90b4d2a6e0053d4",
      "End": "92c7476a8159405ea962ce4f1a6a00d1",
      "Id": "d99856f33e1f4b87872d1f9ce8eb287b",
      "IsHidden": "False"
    },
    {
      "Start": "66522dd702cf49f6b644d26bda90758a",
      "End": "4a271f36cb214c6a9cafd5529294d348",
      "Id": "6e24cec7d63b40569a314c89110d45fc",
      "IsHidden": "False"
    },
    {
      "Start": "66522dd702cf49f6b644d26bda90758a",
      "End": "292f92b7bd9e4ba4b9da4734d61ce9e0",
      "Id": "149490c5d6624332a4579c59d9298643",
      "IsHidden": "False"
    },
    {
      "Start": "9ce5904b20214a228991d66636e093ae",
      "End": "a5d078e46d9c41dcb3032f4cc2f4c62d",
      "Id": "124cfc616fcd4e939aa871422df6783a",
      "IsHidden": "False"
    },
    {
      "Start": "9ce5904b20214a228991d66636e093ae",
      "End": "cd6afffc7a424fe896b442925ba25045",
      "Id": "db8abe8344f34cc0ba9505eaaa2a60c3",
      "IsHidden": "False"
    },
    {
      "Start": "8481b0dcebcf44a79a345c8e1aa368e0",
      "End": "6fa089bbabbd46868783aab0510ccb45",
      "Id": "95bffde13bb2471ba55899b6f409a83d",
      "IsHidden": "False"
    },
    {
      "Start": "b32edac178ee48389b861b4d8046420f",
      "End": "30924bf1cdea49c2b5c8e0252c2d7f12",
      "Id": "60d62de604774199809fd759f95c25ac",
      "IsHidden": "False"
    },
    {
      "Start": "16b2b924c3d54ef6b35cf6dd5da74da6",
      "End": "17e082093a3d44e089147b0f5930a943",
      "Id": "79722f4edbd048808acfe708697f99ea",
      "IsHidden": "False"
    },
    {
      "Start": "2d0b719c1d7a497aaaeace59a062419b",
      "End": "393ea0a61f3e478b95eb4b6c2ac8e835",
      "Id": "e19c6f922a4948e0b7f54b5c13e6ecd5",
      "IsHidden": "False"
    },
    {
      "Start": "f36b04dbb33742f9a47cafea29614e14",
      "End": "a535d8c07bc648b8b6c58a68d400b9f6",
      "Id": "59a56144c2774ca2a6fc9c494760a600",
      "IsHidden": "False"
    },
    {
      "Start": "f36b04dbb33742f9a47cafea29614e14",
      "End": "bec457b353134b3a99f335a25fe9c421",
      "Id": "36036e5e3d3a48f0948c62af940f04eb",
      "IsHidden": "False"
    },
    {
      "Start": "b9e522704582474d82bfbe4a35fc41a6",
      "End": "63f5333190e74e77964ba779fc1843a4",
      "Id": "a242aa1ab7ec4f378210cc5106a1f751",
      "IsHidden": "False"
    },
    {
      "Start": "50179d92eb434b2cbc7046ade1397ab6",
      "End": "b866cbf227db4f5ca7c2a02e86f264bd",
      "Id": "acbeba259e5143bdb7ad368a37e2c1b1",
      "IsHidden": "False"
    },
    {
      "Start": "b71229e5aaa348d3b9ebad804b66703a",
      "End": "3d4a4a81528d48de9b03c6662902081f",
      "Id": "d36ef77a67fd4fb29307ef5207a7c23f",
      "IsHidden": "False"
    },
    {
      "Start": "1e0349d85ef04cfb9747a840255f2c5d",
      "End": "55d117e0abd3482da8d4299a5ed1e893",
      "Id": "0e41123e7ea04b41b68e70479aea8d00",
      "IsHidden": "False"
    },
    {
      "Start": "a71d3f94c3b94bd680c06fa816e5666b",
      "End": "09526a5f61a84518ad499e86e38a8d84",
      "Id": "286c263e5cfd413b8e0129663699735a",
      "IsHidden": "False"
    },
    {
      "Start": "3437421b199d401ca88f78472899b81b",
      "End": "74cb403c8049418ab8970f77100d8849",
      "Id": "9499135aea984ccc88649e57cf2177d4",
      "IsHidden": "False"
    },
    {
      "Start": "d66e659102ad4d7b965d24f9c048fc33",
      "End": "1c2acf6273ed4e109c6efda705ebf024",
      "Id": "27f7cae0237b4a2393b65c291e5adbf7",
      "IsHidden": "False"
    },
    {
      "Start": "12e8dd846ecc4e419a3b9fb8ccefb131",
      "End": "e180b4e03e334734b2f90dc5f135a629",
      "Id": "ce5e6482bf1646fb98d9c982f62f291d",
      "IsHidden": "False"
    },
    {
      "Start": "8644f4c3dee544d1838fc1fed6f6f12e",
      "End": "53ce8519f46d405599b110cd28754c18",
      "Id": "323396bc344e4c23b652ee173bc07f27",
      "IsHidden": "False"
    },
    {
      "Start": "ea31b47d2e9b4d95bef06c8a67d58099",
      "End": "33ecaa8dc5dd4b02941a75f4c93001fd",
      "Id": "b27f759d4e2f4777ab31b40d7a3c9539",
      "IsHidden": "False"
    },
    {
      "Start": "b44ed6c43237496fb250402c3f7cd3e3",
      "End": "281aa7fa91fc483f886f05b36abf2c77",
      "Id": "ef6aa2db72c44a8bb94c3a336871542e",
      "IsHidden": "False"
    },
    {
      "Start": "b44ed6c43237496fb250402c3f7cd3e3",
      "End": "f93680ae2ace4848a4d53d6afef1ea28",
      "Id": "03ce2fded7944dfc9d5f2ff920d8935f",
      "IsHidden": "False"
    },
    {
      "Start": "7aac3d52e4e245ccaa15d576b8f8c17a",
      "End": "2b1f242a5c6d4cfc9030b3434ce4481a",
      "Id": "b705ec35dee54fddba9b3dac468d668d",
      "IsHidden": "False"
    },
    {
      "Start": "467c2d12b8f34e1eb6dd41d4f3431f5b",
      "End": "80c4a5e868c347269d99fcb5723185af",
      "Id": "3498f713e43f450ea20caaa432e110f3",
      "IsHidden": "False"
    },
    {
      "Start": "ce80dddd59064a9b88f73efee721b28d",
      "End": "04bfb540db524a009a02b1dd8346ccd0",
      "Id": "4b77b4689cac48a88d2f8868ec9df469",
      "IsHidden": "False"
    },
    {
      "Start": "ea2fba55ee0140b592d11a65c264a3cc",
      "End": "8bb5d72366bf4725a4c025006f5b1b79",
      "Id": "01b1443dc9b241839e760e7c1f3e91f3",
      "IsHidden": "False"
    },
    {
      "Start": "6f692f8dffc446a18720d66472461220",
      "End": "8458ef71f656466cbeef13c4e10675ae",
      "Id": "7e9f9dedd3b543f5befd766f4494f209",
      "IsHidden": "False"
    },
    {
      "Start": "5aebc019ba4547b6ba22470610a67902",
      "End": "1a4d1db9ba074d5d980b718cd7a29bf1",
      "Id": "40a3d9b367b84eb88af3072f3848eabc",
      "IsHidden": "False"
    },
    {
      "Start": "f7441d71b59d49af8fa45d233060707d",
      "End": "38834f805a2d47c9bc559f30a9835d11",
      "Id": "ee4890953c654f37bd2a326b3b256338",
      "IsHidden": "False"
    },
    {
      "Start": "7e2951b75a6042c492506358c32eaf1f",
      "End": "9e5af09088bb4c42ac5e45bf288eae80",
      "Id": "6e4c94a9c75a402c933066944d8c370a",
      "IsHidden": "False"
    },
    {
      "Start": "7e2951b75a6042c492506358c32eaf1f",
      "End": "e03a4d8a90f041978e78ba30879f4397",
      "Id": "8190f7c4c0e74b42867a8a2c6bfed0a7",
      "IsHidden": "False"
    },
    {
      "Start": "74b5423b8b7a412495552a6dc65ce39e",
      "End": "66386acee8c649788444ce6b2d1aedbf",
      "Id": "389de0c3d80b4c4e8fc44dc4cc194399",
      "IsHidden": "False"
    },
    {
      "Start": "957fafca876b48b59c03dea3ab31e0f5",
      "End": "8d025ea5c767496d8f43289b17b9b1d4",
      "Id": "84cc74d4d0de45ef93f21f08cf5774e2",
      "IsHidden": "False"
    },
    {
      "Start": "67558f0313ca4ec0bee0befc9f89f5f9",
      "End": "e67d473f4dbe412492d1ef2d857d2ad8",
      "Id": "1910497cf8a148e287f5021cf1eeea0d",
      "IsHidden": "False"
    },
    {
      "Start": "6600b528d88441f6b925ad25409417ed",
      "End": "5f1c48deeae04cc1b0085a227767f04e",
      "Id": "faa3aecd32ac490a855f65f43fa41ea0",
      "IsHidden": "False"
    },
    {
      "Start": "a59bf84991cc458196a991efa2dde947",
      "End": "e62d7394f9b74c0993b1200320880a9a",
      "Id": "4db711ae80a9472b94d022da0a0e95ab",
      "IsHidden": "False"
    },
    {
      "Start": "a82a95f2f3c44fb891f98e41a64a7b7c",
      "End": "af23a6c430664bbab2ff0060487ea60d",
      "Id": "5bd74a3de6e74ebc80d1b30152aa0c3b",
      "IsHidden": "False"
    },
    {
      "Start": "a82a95f2f3c44fb891f98e41a64a7b7c",
      "End": "230d8ce26c6846bb9e053c5a21f76744",
      "Id": "74b72930c5f6439bbd0337121b3982e9",
      "IsHidden": "False"
    },
    {
      "Start": "82b4037b58404b65b69dd806a1fb2ce8",
      "End": "11287659804f432f890ee848ed5946c0",
      "Id": "b3e2fae48b0e45aea41dba0c87325f97",
      "IsHidden": "False"
    },
    {
      "Start": "a460ffb718d3451fabfbd056e12778ad",
      "End": "804de8f05b874142918152dd5641639a",
      "Id": "03061726b0a74f6e90ac040765dd0523",
      "IsHidden": "False"
    },
    {
      "Start": "a460ffb718d3451fabfbd056e12778ad",
      "End": "71b3501163ce45408a4bfc09a784395a",
      "Id": "ab280b1a380c45acb2ac7cbbedf5c0e6",
      "IsHidden": "False"
    },
    {
      "Start": "01a2c05ec8de4015bd8843547a52c176",
      "End": "1d4e67de57e7420b8c1fe532a9597907",
      "Id": "1a49555147b34895b5ab9427295449dc",
      "IsHidden": "False"
    },
    {
      "Start": "29ba8e35384b40caa614ed7d3e2036f9",
      "End": "bae4e2a34b284ad3931e9137cf423532",
      "Id": "5cbbf7f0c4224891acf2cded69990224",
      "IsHidden": "False"
    },
    {
      "Start": "159b374d88464830be8eb0f891ebfca5",
      "End": "3b48905915464fbf83110cb385ae967e",
      "Id": "d2a92069e5ce4d8a9b816ee80909641c",
      "IsHidden": "False"
    },
    {
      "Start": "6fbb5846b6d9497ab3422e97a6dc6dbd",
      "End": "930934ebd5444064b81d1c7aaae27bfc",
      "Id": "942d74e28ce04bb28fa01a84bcac8bd8",
      "IsHidden": "False"
    },
    {
      "Start": "8e44b1a4b34d4b2f801ad37aea46e73e",
      "End": "e4718c3d13d14373bdbf33610cd0d53f",
      "Id": "d3f5181a7a1f4643bf79a6fc10e3f79c",
      "IsHidden": "False"
    },
    {
      "Start": "8e44b1a4b34d4b2f801ad37aea46e73e",
      "End": "31633d7b2de94c3685b91d967d5889ff",
      "Id": "9f1abef8c3a74e60b052d72591cb48f4",
      "IsHidden": "False"
    },
    {
      "Start": "2456ddeba17a46e2af273e2657cf10ee",
      "End": "354cb48e08e849b989bbde48e78a4955",
      "Id": "e304b4fcb39b4d64b033c8b755e5d457",
      "IsHidden": "False"
    },
    {
      "Start": "1edfdf6b1275467d84d32a38bf3ce784",
      "End": "344f81dcbcbb41e6a1d2de2fd5dc22fd",
      "Id": "7d6315fafc534e3aac3c9217c468238e",
      "IsHidden": "False"
    },
    {
      "Start": "02a5b00b392e4b6d8b5e0859830ac4c7",
      "End": "5027217b0bcf4f7fa18d55f01d36617a",
      "Id": "83a25e7a34d6443eb894bdae50d77b5d",
      "IsHidden": "False"
    },
    {
      "Start": "fc84e29173ea4abfbe99eca7e40d80ee",
      "End": "c5e3bfe3472340de98b32007a3d6404f",
      "Id": "93659e391e0242ddbec2f046474eb7c1",
      "IsHidden": "False"
    },
    {
      "Start": "ebbe51302ac24be595fab41a6c3ee9f5",
      "End": "58b003e6608046c1bef4f3204606a20f",
      "Id": "0b3bc499225845f6a00739318cd13919",
      "IsHidden": "False"
    },
    {
      "Start": "2fba564b5c4741a2878e14dc9fd26669",
      "End": "8ca2d595023e48b08700e871774e0ca9",
      "Id": "a5372c12f70e47c39e0a3be1278dbacf",
      "IsHidden": "False"
    },
    {
      "Start": "267932c649b24cc0be35252c3914bae8",
      "End": "f2fadfe7588341688ad0ad577e8898cf",
      "Id": "1d841db0d2d64df2a306345669be8669",
      "IsHidden": "False"
    },
    {
      "Start": "267932c649b24cc0be35252c3914bae8",
      "End": "6616240518204e7091de71477cd7c06b",
      "Id": "9a500ed1179d49fc913247e64e77364f",
      "IsHidden": "False"
    },
    {
      "Start": "aabaf1e404b948899780a0f029d5ba79",
      "End": "87812b564bb14574b5e7d56288b909b4",
      "Id": "38b25ef10c3e4686885b614597c6c1a0",
      "IsHidden": "False"
    },
    {
      "Start": "0826fdbda73c47819b7bb35353c323fa",
      "End": "cfea2c0907af4a02a5fc33742bed2031",
      "Id": "bbd148d5630646d49fbc25214c101c64",
      "IsHidden": "False"
    },
    {
      "Start": "cd9a3a17af5747acb0a13783c62241bf",
      "End": "0fde7254328349278c347bc6ef360663",
      "Id": "64a42a4bf6d3496d8150a85cc05baeaf",
      "IsHidden": "False"
    },
    {
      "Start": "c1b60b87663448ba881eabcc54e951a4",
      "End": "95bf148660534eac832d3f512ef55dd6",
      "Id": "64fbd943bc0d4e1fafc7175b9e5e10a7",
      "IsHidden": "False"
    },
    {
      "Start": "c1b60b87663448ba881eabcc54e951a4",
      "End": "631aef7844f446ada6e9850e86e1be29",
      "Id": "60d90a5e145f4b1cad2c11bdc0426558",
      "IsHidden": "False"
    },
    {
      "Start": "90cce42dd9914d1cb820bdd2ee701414",
      "End": "d9e334ac4d9e4f168914dd77b5b1e8b8",
      "Id": "154d51381a0847108b7b30a4cb824bb1",
      "IsHidden": "False"
    },
    {
      "Start": "90cce42dd9914d1cb820bdd2ee701414",
      "End": "7043b2606936480085acca9f4127f86e",
      "Id": "26703b48a195452e9fcb90c9f832c59f",
      "IsHidden": "False"
    },
    {
      "Start": "90cce42dd9914d1cb820bdd2ee701414",
      "End": "ab4e31daa9c74892859084265e4740dd",
      "Id": "7fe007d0aab74e7e8f5f723791974750",
      "IsHidden": "False"
    },
    {
      "Start": "8864feab8d864dca995b712c13c75232",
      "End": "003291fb1480451eb65d917f72b2eacd",
      "Id": "1608682861bf4dad88414c283e5f7795",
      "IsHidden": "False"
    },
    {
      "Start": "921d0dc7bd434ec9956312bd240e3fd0",
      "End": "8c6fa6722b1f44a393ce320fc1f66304",
      "Id": "d9fab4d2e5f04cedbf797e2245195856",
      "IsHidden": "False"
    },
    {
      "Start": "921d0dc7bd434ec9956312bd240e3fd0",
      "End": "f03b4150ead64e888e64803e14ff2024",
      "Id": "93e4f4287b5a49f5a67739d29fc49f60",
      "IsHidden": "False"
    },
    {
      "Start": "0c49c17eae384a2fa7799ef289be8162",
      "End": "cafa48b55d7240f2bd59b7b46dbc504e",
      "Id": "ab85d3d7eb7a482f9b108c2daa83827d",
      "IsHidden": "False"
    },
    {
      "Start": "08b1c2ea7f434e79848d412941e8b55f",
      "End": "08876560cde1488cb9e86460343969ba",
      "Id": "f1874340ec02494081ca0d3540d44cde",
      "IsHidden": "False"
    },
    {
      "Start": "08b1c2ea7f434e79848d412941e8b55f",
      "End": "2a4cc895f9ed4de1a8fd7e15d437e862",
      "Id": "c50a821700c9465b827af55adf818621",
      "IsHidden": "False"
    },
    {
      "Start": "3c22850170734377b77f2d2fe90f09b1",
      "End": "b0e3b92614634cc8a86889c432b7b02b",
      "Id": "383d7869c2804421b77b85fc4346a11c",
      "IsHidden": "False"
    },
    {
      "Start": "fcaa03b3a49848908eef86c766215a81",
      "End": "0c0176fcf3b44d218cefee415be89e1a",
      "Id": "3ba55431b9f14337b7163915de129755",
      "IsHidden": "False"
    },
    {
      "Start": "fcaa03b3a49848908eef86c766215a81",
      "End": "fcb32d32aa5143baa4ca15f72756e98a",
      "Id": "f136d77907f9410b90c4220073bde6e0",
      "IsHidden": "False"
    },
    {
      "Start": "9e33037420cc45dc998083af19aec7cb",
      "End": "1c998c1ea87f457eade91c0d4dae70da",
      "Id": "ed992c3d1e3d457e8b758b09cda02b7e",
      "IsHidden": "False"
    },
    {
      "Start": "4e4be34e6ce04011a2e983f1c07fb4ea",
      "End": "3cd388c7d3134826a189b1c6bdfcf6e2",
      "Id": "3decfeb327484deaa162f926ced417f0",
      "IsHidden": "False"
    },
    {
      "Start": "c443fc156510496e89320085127a255b",
      "End": "9e04f11021d04a299cd8481671c6520c",
      "Id": "39c8fe88ea06466bbcf6e5bdcd6edde3",
      "IsHidden": "False"
    },
    {
      "Start": "0eb0e666070446248b93c4fe24a06447",
      "End": "6ea0152f18bf439c8080b6d6c13279d0",
      "Id": "ba2c4863b240494689eb6b6c5cc14619",
      "IsHidden": "False"
    },
    {
      "Start": "ae199aeaba854f10b60df220569ed28f",
      "End": "2cdf233dfa5944e38741bb85942949ee",
      "Id": "c1cc3e5d20c24480a8e894344158b858",
      "IsHidden": "False"
    },
    {
      "Start": "e14c1a52b0da41dcb9df964ffcec2f41",
      "End": "4e8cb7cf0da04e0a9820f54232b28bb1",
      "Id": "fbc596db3cbc4a788ddff8616403f4c8",
      "IsHidden": "False"
    },
    {
      "Start": "e14c1a52b0da41dcb9df964ffcec2f41",
      "End": "a963c7c248bc447798597c05abf9755d",
      "Id": "70f3076557f0437abc3e691a186d905d",
      "IsHidden": "False"
    },
    {
      "Start": "9a00709197394594bbfef3604319e353",
      "End": "69d6b9c5ca5344dfb5b48621377a1698",
      "Id": "f99abedb01f14e0084649f71f82a31a7",
      "IsHidden": "False"
    },
    {
      "Start": "afe946bd596e4233886d98088cff4d46",
      "End": "e67f8d78e56a4251b80e0b42bafe5ea5",
      "Id": "6f1ac714405a4dec8bf49a099f5513a4",
      "IsHidden": "False"
    },
    {
      "Start": "afe946bd596e4233886d98088cff4d46",
      "End": "3b0a5971db3042c6922a2b5a16d0c420",
      "Id": "267f1d65065b46cd9f1abb5b6f985fd0",
      "IsHidden": "False"
    },
    {
      "Start": "afe946bd596e4233886d98088cff4d46",
      "End": "6b4ff6acc30f463b8cbe6901867fbb5c",
      "Id": "0da5c0812adb4c77a66ce69683986512",
      "IsHidden": "False"
    },
    {
      "Start": "8f2c586c67784001840db6385c641cb5",
      "End": "eef359e3fc0e4bd28f6eb3e82ab79e75",
      "Id": "1c9c46c25faa4ce8a2b1660b94d2cf32",
      "IsHidden": "False"
    },
    {
      "Start": "c819d804a2e04bcfb904c270eb36969a",
      "End": "55565e5c596f4737880b209e07907e4d",
      "Id": "c45fe53da7534aa893557d67661d892f",
      "IsHidden": "False"
    },
    {
      "Start": "c819d804a2e04bcfb904c270eb36969a",
      "End": "e18ea586615d44249282e0b73846043c",
      "Id": "c3684958f7a1426fbdc80441095b356f",
      "IsHidden": "False"
    },
    {
      "Start": "c55aa16abd2145bea3ade03b8f811ab0",
      "End": "466c9f814dd148b8838bae797afd5c09",
      "Id": "039801f5012d4d72b092b5ee9928a196",
      "IsHidden": "False"
    },
    {
      "Start": "be4fc6af1f8a4c66ba0e7b8d6fb1bda4",
      "End": "ed78fd596d2840a2b0f0a16617323d74",
      "Id": "db7e32825011462d88c99b1d79fef075",
      "IsHidden": "False"
    },
    {
      "Start": "b21bf436892b4237ac4eec1f7fa5e7a7",
      "End": "2bc704799aeb44b3a51e638aa09b869e",
      "Id": "afcd857c640d48499595bbdb1ce184c0",
      "IsHidden": "False"
    },
    {
      "Start": "025639fb2eb442f59f2d87b3032d2eda",
      "End": "82053b6bcf70492baf935b7f13f41475",
      "Id": "98f06710f8e54c398caaf3e616d8b2b2",
      "IsHidden": "False"
    },
    {
      "Start": "466ae806a10a4ea3a00621c64350c8f8",
      "End": "e33054e9b894476d9cce8796f9161d47",
      "Id": "74fab9d5129243108a0c2efef1b5bb8d",
      "IsHidden": "False"
    },
    {
      "Start": "83c7434e19964892873f85196aba3fbd",
      "End": "a368d085e10d4993af14a8873faa43d6",
      "Id": "4d7195d4486743beb12c8b7ec0e32ac1",
      "IsHidden": "False"
    },
    {
      "Start": "ba25255e26484ba386de678b0b1e12a6",
      "End": "7639e4ed33ac43deb98ff01cfaab812e",
      "Id": "0861cdebe3e243bd9ebbed0b43a1c2fc",
      "IsHidden": "False"
    },
    {
      "Start": "ba25255e26484ba386de678b0b1e12a6",
      "End": "192a0b83bbd145a882771541aa9efd34",
      "Id": "c3258bd8064a48fb89972e7b7a98ee84",
      "IsHidden": "False"
    },
    {
      "Start": "f581eb07c6f04f0386b28f283f02f9b0",
      "End": "e0aec37c724744ef84706d98370842fe",
      "Id": "a69d98f2e66f4272b0127a7b20b86835",
      "IsHidden": "False"
    },
    {
      "Start": "03a5a6bccd854180920ccee8bd23d8ee",
      "End": "751ef8c37cfd4303ad5b9615c2750b20",
      "Id": "97edc648fa624130b2ca217613e5b443",
      "IsHidden": "False"
    },
    {
      "Start": "03a5a6bccd854180920ccee8bd23d8ee",
      "End": "a1ef64c8b2c244b89ed94ec8b87f38e3",
      "Id": "0b3041ab7eec478da398ebe9c8f88cd2",
      "IsHidden": "False"
    },
    {
      "Start": "03a5a6bccd854180920ccee8bd23d8ee",
      "End": "7892f91fcc234ef7bfd745f591775fbe",
      "Id": "d60ab34362b74464b08d7ae686339ece",
      "IsHidden": "False"
    },
    {
      "Start": "03a5a6bccd854180920ccee8bd23d8ee",
      "End": "0638807f318b4eb2b58f084a93d10672",
      "Id": "9ec15ffb410a49b99ddc886c7c8e997f",
      "IsHidden": "False"
    },
    {
      "Start": "03a5a6bccd854180920ccee8bd23d8ee",
      "End": "0850843287ed4090b78fdaabd93776fa",
      "Id": "038d9dfc5b6e47cd97ce15b260e094d7",
      "IsHidden": "False"
    },
    {
      "Start": "1b5805cd1b294904b34b40f3e87bd86f",
      "End": "44e8b9f981384a5eb30203a72164de45",
      "Id": "63a8232b28d349ff9df46fa041ade4f7",
      "IsHidden": "False"
    },
    {
      "Start": "6a71d53719da4e09a238c5cc2734b8d9",
      "End": "dcbe25c2a004435fa284366d51b5f23a",
      "Id": "bf62a545b33142f5be56ed2908622530",
      "IsHidden": "False"
    },
    {
      "Start": "b90c0329d20a41ab8eb3810c7986cee3",
      "End": "3555a66c947e48a8b08c71544400bc6b",
      "Id": "f89edee3656c4457b5387ad72bc7241a",
      "IsHidden": "False"
    },
    {
      "Start": "b90c0329d20a41ab8eb3810c7986cee3",
      "End": "caa7158a442d4330b925d8e506c9cfec",
      "Id": "84d46f394dc24bc889b63068bca3dab8",
      "IsHidden": "False"
    },
    {
      "Start": "b90c0329d20a41ab8eb3810c7986cee3",
      "End": "da0b353f5adc4e13b095541e0349e4c4",
      "Id": "c6a7d4a32398492996d814c2c6d2b95b",
      "IsHidden": "False"
    },
    {
      "Start": "f4f0d9b910de488d9e1fd66d963d4cde",
      "End": "5200d767a2ef418b9b509cbc32c06e27",
      "Id": "906e2c7abe644be0a708e1e193cf862d",
      "IsHidden": "False"
    },
    {
      "Start": "84a83e083153449d8a3124e9922be5e8",
      "End": "171d68d4173f4da58bc143a432321e7a",
      "Id": "208d33601db14dabb31049cc0478dfed",
      "IsHidden": "False"
    },
    {
      "Start": "1d8e9e3127d44d2fb9e23157f3086bdb",
      "End": "4b851115e54643eabe37d78d5cc4af9a",
      "Id": "12c2d234ccc34e22a311e2454f9b278f",
      "IsHidden": "False"
    },
    {
      "Start": "1d8e9e3127d44d2fb9e23157f3086bdb",
      "End": "a42c34d684e04564be84896dee7ec8c3",
      "Id": "8b14fe89730249f8acbc9df99e35ec28",
      "IsHidden": "False"
    },
    {
      "Start": "0921cd3173d6447e905a193d29aafdbf",
      "End": "b17744971b00457087de0dac85960136",
      "Id": "78f9d32acf0c466cac3d0b845dfcf4c8",
      "IsHidden": "False"
    },
    {
      "Start": "465682cf527840d294fd00b9430410bd",
      "End": "597a93d04ca9418bab9a0eaf2622a2b6",
      "Id": "8bf32b6c4989432796beba49744741c0",
      "IsHidden": "False"
    },
    {
      "Start": "3ee34e1c35c842e6b308ee44fbc8cee8",
      "End": "ad32b660b5584569a1a6dc3cb17d3183",
      "Id": "bbdc3de8e76a4c15a28bc7bcfb46405c",
      "IsHidden": "False"
    },
    {
      "Start": "3ee34e1c35c842e6b308ee44fbc8cee8",
      "End": "b4f5e1ac29134b47acc501e1dba457b7",
      "Id": "524232606681454cb2ab66a2efa1b010",
      "IsHidden": "False"
    },
    {
      "Start": "11c9283ab74544e0a19b8487ecfe3170",
      "End": "e29caee225c84955a0be6ec02e3188c0",
      "Id": "0a521208dbd643f1b438557cd2487ef6",
      "IsHidden": "False"
    },
    {
      "Start": "11c9283ab74544e0a19b8487ecfe3170",
      "End": "32a9af8e7b7d483f86098df489d19add",
      "Id": "7abcb7f9a7244e8fb8788f460e470364",
      "IsHidden": "False"
    },
    {
      "Start": "4ede1cb26501463bb451150aa4a7cdbe",
      "End": "485619234411456f9055cce247e6e0f9",
      "Id": "2f43dbb4824e460aa69f6d2701b7ccec",
      "IsHidden": "False"
    },
    {
      "Start": "5e3894474fbc4d709fcd171257dbe681",
      "End": "f017f496e760479b835052cbba0a1fdc",
      "Id": "5e728551507e49e6840024d2f4d9b616",
      "IsHidden": "False"
    },
    {
      "Start": "af0f2a189d6e4732b6d5c74ff52ee3ba",
      "End": "b9cf6fbc55ec4bbd8e4d87bbdca3de6f",
      "Id": "54b8db81bfaa423aadfeba84c96060cf",
      "IsHidden": "False"
    },
    {
      "Start": "1954c33643754394a0a88d26996d820c",
      "End": "084245c4c94b4828b877f5992e712ba5",
      "Id": "c99b037b71794df79471ec6283450911",
      "IsHidden": "False"
    },
    {
      "Start": "714d3b55ec3e4836af131fbcbbdc78d3",
      "End": "762067b939be4d87a8c8e06220f935d7",
      "Id": "870bcfa53c4d4b7ea08698548dbbe69d",
      "IsHidden": "False"
    },
    {
      "Start": "04978add10a145d2b802d0cd9bf0972f",
      "End": "0e01c67e2eb64717bd03a080a307d4af",
      "Id": "1ba3b03f007a4775a053218879df1c48",
      "IsHidden": "False"
    },
    {
      "Start": "04978add10a145d2b802d0cd9bf0972f",
      "End": "01061c5f710d4ae69ed72a8c6fe08dea",
      "Id": "82e01adf1b8d41a988596ffa298aef68",
      "IsHidden": "False"
    },
    {
      "Start": "04978add10a145d2b802d0cd9bf0972f",
      "End": "482c036da3054d4b8bd970ac4d91ed15",
      "Id": "9cb5b611456f4eaeb31e76183452989e",
      "IsHidden": "False"
    },
    {
      "Start": "b3c8b188933a48cfaf0e8347bd032d7f",
      "End": "e86b79cfb2e44ac4a9aab870ca28df81",
      "Id": "77ee0e8cd3594b8e947b411839e0f34d",
      "IsHidden": "False"
    },
    {
      "Start": "cbd5f2072dc243e298bfbd50d86aa455",
      "End": "eaab98d90bf849eeb20539d578901e3a",
      "Id": "e890e83df4094343b3d2f4fc746fa2d2",
      "IsHidden": "False"
    },
    {
      "Start": "4197aff148f244b881da1a3cdbf7123a",
      "End": "9afd7dd2ed1d46cabcecb32afeb83e47",
      "Id": "dcab18f08f8a4502950c91d90ddfdbdf",
      "IsHidden": "False"
    },
    {
      "Start": "62f6430c37c240e4b5c9e42afe27839e",
      "End": "2c1930682c244892aef2a4b20409ab23",
      "Id": "04734c020c344e13a2d398a7620ff83d",
      "IsHidden": "False"
    },
    {
      "Start": "62f6430c37c240e4b5c9e42afe27839e",
      "End": "9ca66253f6204819861d12e51bd6e305",
      "Id": "7540c2abb3b14218ab35103d25867213",
      "IsHidden": "False"
    },
    {
      "Start": "fa54d7798c0a40e08bc9d40f3d97c704",
      "End": "7b12cafaa304427e98656b9006167afa",
      "Id": "4952f538ca6b4199af70feb689d00fb5",
      "IsHidden": "False"
    },
    {
      "Start": "0448cbcf04714bbd83a73e96d7a6ac86",
      "End": "b093ad293f884ba8be88518ccca582bd",
      "Id": "f30ae5eaecea4b3d8d795185c05e89f4",
      "IsHidden": "False"
    },
    {
      "Start": "0448cbcf04714bbd83a73e96d7a6ac86",
      "End": "3d175375043d467fb9e9405a221b5a18",
      "Id": "de178464e7864feead9a68d0c4c0ffa6",
      "IsHidden": "False"
    },
    {
      "Start": "0448cbcf04714bbd83a73e96d7a6ac86",
      "End": "a128bbf190bd456888a867f5767e9c51",
      "Id": "2d50fb94113d4398a1c38d8e5e7ecc8e",
      "IsHidden": "False"
    },
    {
      "Start": "0448cbcf04714bbd83a73e96d7a6ac86",
      "End": "879e6f83ce1d413e9b7b9edd9f1496f5",
      "Id": "1d9e868d13e14d74a1e0409a5c40581d",
      "IsHidden": "False"
    },
    {
      "Start": "0448cbcf04714bbd83a73e96d7a6ac86",
      "End": "718edd2a9ee94aa9ac8766fb76632003",
      "Id": "1717349a57524b6bb79ee43068496c3f",
      "IsHidden": "False"
    },
    {
      "Start": "71f1ec0fe8104bb0bf7d34c758c37c4e",
      "End": "aeb687c936ac4a0eaf8509a3d29792d2",
      "Id": "616d5f4a4fc4479d8ee4e72c6415bf37",
      "IsHidden": "False"
    },
    {
      "Start": "71f1ec0fe8104bb0bf7d34c758c37c4e",
      "End": "b43394bbf95b41c5ab21602cbc6a03c8",
      "Id": "eded73bbb24a4bbaa2d848ebef6f6487",
      "IsHidden": "False"
    },
    {
      "Start": "71f1ec0fe8104bb0bf7d34c758c37c4e",
      "End": "d45316dadc7449c59d863283e59020e4",
      "Id": "5f38e9ebb28b41b1844a50037e9e92f6",
      "IsHidden": "False"
    },
    {
      "Start": "71f1ec0fe8104bb0bf7d34c758c37c4e",
      "End": "59bbd4cb536e4730aee9bd62a1812ccf",
      "Id": "4d7b6f4bfe964f54ab73efaec5df7fbb",
      "IsHidden": "False"
    },
    {
      "Start": "4c6a9c2dfb024b69831ada78fa838dfc",
      "End": "de44cda5bebb4263b89a904281875eef",
      "Id": "c895950156444905878735a4ac8e7137",
      "IsHidden": "False"
    },
    {
      "Start": "1b80f3461bd7491a9baa6a68726a7250",
      "End": "d3b435d696ff410a965e889798b80b9c",
      "Id": "aa8da60136ea4f7b9170d7c3ee107a8a",
      "IsHidden": "False"
    },
    {
      "Start": "647d9a8efa9c443dae3135c6a56cea32",
      "End": "37f0491746e44d42a7f350e9d5252c13",
      "Id": "c8df1b76276f455097f83574c323087c",
      "IsHidden": "False"
    },
    {
      "Start": "647d9a8efa9c443dae3135c6a56cea32",
      "End": "c4821556785f4e3a9ae1a9d7f179408c",
      "Id": "bad3ac94475b429c90163341e87f6373",
      "IsHidden": "False"
    },
    {
      "Start": "e9232fff6e4643f48b1d19150520b522",
      "End": "9976673663e54cf5996a4634cc451f85",
      "Id": "d4d425dbf6804d81b9ed1bf9f384504b",
      "IsHidden": "False"
    },
    {
      "Start": "c5d09da3e8f2455883aeacd12e47968a",
      "End": "bb35ae95da85420e8773e4a703b58d91",
      "Id": "023347dea89a4a44afe6ca39047d35e0",
      "IsHidden": "False"
    },
    {
      "Start": "416ecc1867f541b79c32281a7585aec6",
      "End": "e36450d00b09491c84ee0523d60dbd3d",
      "Id": "193d1f91fb914deebebbe9f4d7407ce1",
      "IsHidden": "False"
    },
    {
      "Start": "4f87c58815034d6b90e4f3ad5f4c4e5f",
      "End": "3073e7c592644233bea2d42bfaf26742",
      "Id": "7727d81620bc44a4a15d69484f2526e2",
      "IsHidden": "False"
    },
    {
      "Start": "19eac21263c046568bc890e926e18b0e",
      "End": "ecd8d85ba767431e9bc4342862decc0b",
      "Id": "a845cc9be4254e95a1e6fe975a7168a2",
      "IsHidden": "False"
    },
    {
      "Start": "83b8a880a7514e589abd49751877ed2d",
      "End": "db34cf5c81ab4dc19ad64443db9660a4",
      "Id": "fbc9e16d7b16425495b110546cbfbbd4",
      "IsHidden": "False"
    },
    {
      "Start": "83b8a880a7514e589abd49751877ed2d",
      "End": "09609dafe8d5480ba172fce59b726282",
      "Id": "37f0b8fb372349d9ae0c33c7cb576b25",
      "IsHidden": "False"
    },
    {
      "Start": "d390d0cc632c4df893fb5168dd647f69",
      "End": "59d051a8b0c547459502e98a469c3274",
      "Id": "30b36287a6fc425ba6ec2869590298fe",
      "IsHidden": "False"
    },
    {
      "Start": "d390d0cc632c4df893fb5168dd647f69",
      "End": "dbc56305824f49f68584014c999fa9fa",
      "Id": "2e9c2668498e46f1ae691d484b8ffb9d",
      "IsHidden": "False"
    },
    {
      "Start": "7ddf7e25f49b4ba5ad7d35cdc8475500",
      "End": "5672050919b849ed93484d83105925cf",
      "Id": "0f209a6b1c6c460ab44799d241739630",
      "IsHidden": "False"
    },
    {
      "Start": "f3980dc9b4b149b4921c7bb27d3ac1f3",
      "End": "c6da619277fb4434b139790c47d4fedf",
      "Id": "f4f90a4baa2044888a0c44a54bd088ee",
      "IsHidden": "False"
    },
    {
      "Start": "f3980dc9b4b149b4921c7bb27d3ac1f3",
      "End": "ab869cf00f354a838c544e964f61cf06",
      "Id": "f993791b9388417b871ee051b970a064",
      "IsHidden": "False"
    },
    {
      "Start": "8cc4bed878d6440ab4f32f3bcaf81162",
      "End": "cf822b03c8b74589a73300b720e00cef",
      "Id": "9f5b65c05c0545a39e8d172b061a2298",
      "IsHidden": "False"
    },
    {
      "Start": "d64e14bbb3594736b6b99346d19cb554",
      "End": "8d5c45500dbf4c66a5f683b355415109",
      "Id": "eaa31705eda5452ea6cc1d559c4ec2ca",
      "IsHidden": "False"
    },
    {
      "Start": "d64e14bbb3594736b6b99346d19cb554",
      "End": "daf2fabd86cb4d45913745a123caef52",
      "Id": "bec6afc0c6da42d9954f1c190b79c5b8",
      "IsHidden": "False"
    },
    {
      "Start": "d64e14bbb3594736b6b99346d19cb554",
      "End": "119c687a632b4ba095a9b808d9420396",
      "Id": "d9cb3286d59a482f89afa9a3d8bad7fe",
      "IsHidden": "False"
    },
    {
      "Start": "f2369664b86a4d9fa9119b10bf2897e7",
      "End": "430dd2eb37d44000baf0520b26019730",
      "Id": "100516a1069a4e5ab46cf6a226dbe7bd",
      "IsHidden": "False"
    },
    {
      "Start": "31c8e024b48446a18eda75d401d19d59",
      "End": "3a4c65faf4cf4336bc6436c4312b2bf6",
      "Id": "fb6040a673f4401dbddf6807e5066319",
      "IsHidden": "False"
    },
    {
      "Start": "51312ffc825949deba0ca6a50b8a517d",
      "End": "ccf29db2b585475480df0f8024f35082",
      "Id": "24462f36a03249a89fca4f049a12c027",
      "IsHidden": "False"
    },
    {
      "Start": "f5a2501a1c6d4bf5b1e544ef82ae6e2a",
      "End": "e3857ffbbac3473e886f33b5a452017b",
      "Id": "64d6c8d7d6aa40ed8e6bfcef340af501",
      "IsHidden": "False"
    },
    {
      "Start": "f3d95cb14c504f68bc30b7400a90d429",
      "End": "65fe5e4b4b7a47be970ede317adaf149",
      "Id": "c87e92687f6944bbbba1d759fc105f65",
      "IsHidden": "False"
    },
    {
      "Start": "c128428ac005444ba519220aafaa0656",
      "End": "260a239bb87045eaa18765d4b28ead25",
      "Id": "80c65eafc6f046d9a8cdc6c9dc6012da",
      "IsHidden": "False"
    },
    {
      "Start": "fa5be5b96a0d46df97d73df4821afb48",
      "End": "8a579ab1825140b4b54c8f0a101b23f1",
      "Id": "dfd3c0fae4094e57b34c49c26761141d",
      "IsHidden": "False"
    },
    {
      "Start": "fa5be5b96a0d46df97d73df4821afb48",
      "End": "8448479e2b274e939b0e7e72df5216e7",
      "Id": "1b60049954664f37805f572b5cbdc659",
      "IsHidden": "False"
    },
    {
      "Start": "187c50e787de4d12970d2c01f5f98539",
      "End": "4ea4e5745154495a9f3d86384689fb18",
      "Id": "a0a38f5f54954811932abdc6397cbef1",
      "IsHidden": "False"
    },
    {
      "Start": "e1fb35e844554869861a1ecaf92e0c3a",
      "End": "8da29044474a4fb6bc89b43fd06a9d7b",
      "Id": "723cb419604b4aee94425e8ced997e9e",
      "IsHidden": "False"
    },
    {
      "Start": "11d3f299f841447890a34ef1e747333b",
      "End": "610c43ed45af4659b98668bab2cef230",
      "Id": "252a3a9728c44a5d808abbdd773e7d6c",
      "IsHidden": "False"
    },
    {
      "Start": "5ff04f66dd734ad4b5c25639445f6875",
      "End": "6ed11620d1634643924d6f6026232d20",
      "Id": "70cf7a8f72124152adb834d6c3b7d492",
      "IsHidden": "False"
    },
    {
      "Start": "3a05afbb8a2b4bc1a9dddcbccf97642e",
      "End": "bfcffce47c3c40ec81388bac9648913d",
      "Id": "12f9bb06888e4a878877c5bbdf702cbd",
      "IsHidden": "False"
    },
    {
      "Start": "a4792b44d97344dc9f857a79569a4336",
      "End": "f2f738c5e22e4a62a95ad09df3effdd0",
      "Id": "a991f3b475a74c87a6c8bde16acf038d",
      "IsHidden": "False"
    },
    {
      "Start": "06bcc7f7cfc54107ba10444810e778dc",
      "End": "dda166492ca44c72817e6d106ec0a63e",
      "Id": "981d14cd09714770af71b4c8e1dd5f8c",
      "IsHidden": "False"
    },
    {
      "Start": "06bcc7f7cfc54107ba10444810e778dc",
      "End": "f6b8f4c4d65941ff8926dd547a2e09d3",
      "Id": "778f072a331343a0b233188731ef4a16",
      "IsHidden": "False"
    },
    {
      "Start": "3fed7d105b0c46fd8f0b63d586ead851",
      "End": "e77f20e74864460d8f29502ffad74929",
      "Id": "27d0274c1b874787974aa4e96ffb6975",
      "IsHidden": "False"
    },
    {
      "Start": "3fed7d105b0c46fd8f0b63d586ead851",
      "End": "28ae689ddaab46228417f3082b521afe",
      "Id": "ce791943cdb3487b9f628d490c966f2a",
      "IsHidden": "False"
    },
    {
      "Start": "d115178a59b54d0b9f254a51caefe404",
      "End": "44a0b5a1797c44f2948b102cffbb1719",
      "Id": "ec8925b29ec24a61ab9009a6f45d0360",
      "IsHidden": "False"
    },
    {
      "Start": "fbcda104d18541f3b0345b856ff9ae1f",
      "End": "99748232b5594b6486eb502373eb95d5",
      "Id": "109cd993ac7348a68e14e9a1323cedc2",
      "IsHidden": "False"
    },
    {
      "Start": "d2b48919063a4d2fb87a9424c33adcef",
      "End": "d9d3f1dc34274ba4ad01e25a245b0b9b",
      "Id": "f968dd9987f646258bc89dc339ca559b",
      "IsHidden": "False"
    },
    {
      "Start": "942717a3f7c64f3fa14e73436b63c83b",
      "End": "d45e4691e11d4861ad3ea4092610630a",
      "Id": "111283cf235747cb9016abe25ed5a106",
      "IsHidden": "False"
    },
    {
      "Start": "82ae5e0891504208a6efa90b264c0add",
      "End": "6f48f5114f51403aa89a22c0b7f6628b",
      "Id": "e826d9a3595e4df6a63064dee9b46f8a",
      "IsHidden": "False"
    },
    {
      "Start": "38ba40a2aabc431b82d4dfed2452a5ec",
      "End": "bd14373ce72146a2b496c196dce1df6c",
      "Id": "f7ccd90e83b34ebeafa051e2a51a060b",
      "IsHidden": "False"
    },
    {
      "Start": "ec331a5dd7104208b18d735af6eb0837",
      "End": "b8ef24f595134d5fa2eef0f269593dde",
      "Id": "431e1cca2f27499c8712766fc9591da7",
      "IsHidden": "False"
    },
    {
      "Start": "ec331a5dd7104208b18d735af6eb0837",
      "End": "4217b6c1e8514769a5d4981065b5cbfd",
      "Id": "e90906f6dbde41f7bc3c5d2e44879b22",
      "IsHidden": "False"
    },
    {
      "Start": "d3a40e1b5d4a4b35aec2efcddabba023",
      "End": "5b8821812ec34d2494e4501131ad2ee8",
      "Id": "f284fbf7653c4f0897fed2db16ba62c7",
      "IsHidden": "False"
    },
    {
      "Start": "2f35fadd8c9d4b76937a87633db0309d",
      "End": "d2b463ea45894e98af724be6e06e1756",
      "Id": "1846da7a56d44249a35e417597f4482c",
      "IsHidden": "False"
    },
    {
      "Start": "6a63f65ee5974df095ff3b92f3071eb7",
      "End": "759fab5216dc42af9460d77fc0845ef0",
      "Id": "a680fe9eee2544d28abde62dfe417268",
      "IsHidden": "False"
    },
    {
      "Start": "81402118f12940b79e307494d8b6632f",
      "End": "99fba28d1a134e2b8ecb92edf0deda42",
      "Id": "7425eaf060ea4ec5a072c4d87f56bfe8",
      "IsHidden": "False"
    },
    {
      "Start": "2b0ead0f87f341fb94d2922ada22ad51",
      "End": "09105a103b0a496f94d7e25bc81539aa",
      "Id": "800e895a3bd7419983fafa9a70955348",
      "IsHidden": "False"
    },
    {
      "Start": "3567e7e999414c42897241ffcfc075ae",
      "End": "11cc1bb49ef148e6937ffbaf6127d724",
      "Id": "644a49bba8e24e1eafc0ee869fb94146",
      "IsHidden": "False"
    },
    {
      "Start": "90101d42c510453fab5b14c67617db76",
      "End": "a5444efc86584b11b30898fd0fb8309d",
      "Id": "15aa4a5ebf194d7791f70f5d2995ab04",
      "IsHidden": "False"
    },
    {
      "Start": "02a62d256d274f2286d19248accfed7f",
      "End": "457325b8cbc743218230edd42e51db0f",
      "Id": "371837e352b54f11a0a026c028a24eb7",
      "IsHidden": "False"
    },
    {
      "Start": "4a5f03126f1e4ad1b910861c98e7dd67",
      "End": "ef5d1aa9d6b8416a9724959e3b6b3bf5",
      "Id": "97af9d4b050b4e1ab20f98315a6fc098",
      "IsHidden": "False"
    },
    {
      "Start": "4a5f03126f1e4ad1b910861c98e7dd67",
      "End": "65f442949cfa4a738ec13cee70955049",
      "Id": "dafe5210f6024900bf02db06bdfa683c",
      "IsHidden": "False"
    },
    {
      "Start": "45c632803d264052872fbb2ec6822c6a",
      "End": "dc14755100c5454cb8eff5dd96614e7d",
      "Id": "80983d8564ac40c9b82769ff93a2086b",
      "IsHidden": "False"
    },
    {
      "Start": "2a20abe54701463da15173f3740d74e4",
      "End": "51f4ac27861f48bfa76f6d121a76f061",
      "Id": "6fdc4fca99ad46419e2a104d7cd464c1",
      "IsHidden": "False"
    },
    {
      "Start": "7ad31bf739c14c26b388b336ed468a41",
      "End": "a405a9154dd044ad8822d41fb0f816aa",
      "Id": "46efa6138a7941a9b231642cfa0fdd99",
      "IsHidden": "False"
    },
    {
      "Start": "b33c159dcc174685887810b19f36c8be",
      "End": "b8f5b2d837ba4397983fe5cd86ee9777",
      "Id": "b5a4f6e769b447a7b35fa75c1964d75a",
      "IsHidden": "False"
    },
    {
      "Start": "bf6ad6a7f6dc419f9c8b8ef222bb71d8",
      "End": "3e464bb3ed714a22819607c1c01567c7",
      "Id": "c60d0c36dc3e42b5b74803d44fa27a0d",
      "IsHidden": "False"
    },
    {
      "Start": "cf289ea0fc2e420bad95271e142c830d",
      "End": "ad7fc8222a664836863f0ef9a77bd34a",
      "Id": "dba4de0a40ca457d98f2efff0c6a89f8",
      "IsHidden": "False"
    },
    {
      "Start": "bb610278cc054a32b16e8ae0583cad18",
      "End": "239c58e75a334130af707079a679041b",
      "Id": "c8d9047b167f421dbc71ff17874083d6",
      "IsHidden": "False"
    },
    {
      "Start": "5a2b6ec14a28479bb2e823c38ff452ce",
      "End": "fab4bc04f8854c898152cef2112b0476",
      "Id": "7ebb26f6c10047f0ad73709cbadc1547",
      "IsHidden": "False"
    },
    {
      "Start": "5a2b6ec14a28479bb2e823c38ff452ce",
      "End": "bfd2e95a6f374a6f91e8cd05ae0c864a",
      "Id": "4b5e91eb832a4660a1c8a728196ef3a2",
      "IsHidden": "False"
    },
    {
      "Start": "2e040a9552ed4c6bbbf448ac2e64956d",
      "End": "685613f27f1a41e09b2a05462bfb67d1",
      "Id": "26b6fe2efee84540829c0dfeb0c3d907",
      "IsHidden": "False"
    },
    {
      "Start": "765ccd86069445188f54373544446f2d",
      "End": "f29f8b2cdd4047ada28e403beabdc582",
      "Id": "d1167b1e44304ce1be9d76c57554ab93",
      "IsHidden": "False"
    },
    {
      "Start": "cdb7f026286744f183a8009ca5589b8a",
      "End": "9f64d7f120b0470db0ab8ae2042b2590",
      "Id": "d6d35b8998c54be5b79ecf1da1c8e885",
      "IsHidden": "False"
    },
    {
      "Start": "cdb7f026286744f183a8009ca5589b8a",
      "End": "ff86eefa7556422bae7240cafd1df5ae",
      "Id": "5566a96e3f1941dfb06cc7db7f362ba4",
      "IsHidden": "False"
    },
    {
      "Start": "4bd33a7a03b5411192120e9f1920c075",
      "End": "67e072791d234c8cbbea8bcffa7c2eb7",
      "Id": "e327eec88e0540a3ae3c1edca063952f",
      "IsHidden": "False"
    },
    {
      "Start": "4bd33a7a03b5411192120e9f1920c075",
      "End": "2007b7d4e23e44b380d74ba1c83c155f",
      "Id": "b3907574679d497b89a570cf49cf1144",
      "IsHidden": "False"
    },
    {
      "Start": "347e4738cae94bbdb47c2d25dff405a2",
      "End": "00d94caf996e404aa433bd5f73aaae11",
      "Id": "304a968a745240eb8a8f5b82a7aa6bda",
      "IsHidden": "False"
    },
    {
      "Start": "594c308653df4be4a7e30e599eff6d97",
      "End": "4ce2167dcab247f8a96c128249d28a9c",
      "Id": "ab91af9f11294e02aa4e0fcfb1b7bd36",
      "IsHidden": "False"
    },
    {
      "Start": "c9e3966050674942834e33be18c14d25",
      "End": "00150ad801a34a7cac1ba8a25f062f86",
      "Id": "8957c97a030740cbad3c3527fccf4788",
      "IsHidden": "False"
    },
    {
      "Start": "c9e3966050674942834e33be18c14d25",
      "End": "d9a59de328984d4f9dab6aa424b71205",
      "Id": "2c3a90c3994545d5a34f298dee3f3d47",
      "IsHidden": "False"
    },
    {
      "Start": "c9e3966050674942834e33be18c14d25",
      "End": "6089bebcb938436b94ce29b5bf9e8851",
      "Id": "dad411bc86c34df68c889f1c959fbf60",
      "IsHidden": "False"
    },
    {
      "Start": "3be7d3e3f6024ababe73238ed6c21419",
      "End": "95422ffc32db435d8020c3d00b18a5a0",
      "Id": "0e2a077d1291498f94cf63115e6ae21d",
      "IsHidden": "False"
    },
    {
      "Start": "3be7d3e3f6024ababe73238ed6c21419",
      "End": "7c93aef510944498bc92945e50ad7351",
      "Id": "09dd6a47e42b4e0d887e5d48c8df1a80",
      "IsHidden": "False"
    },
    {
      "Start": "3be7d3e3f6024ababe73238ed6c21419",
      "End": "7578b2872eec4fcdb1ff33a110c411e6",
      "Id": "55df0430ec594f27a3bc7b1ab92a6be8",
      "IsHidden": "False"
    },
    {
      "Start": "547ee550395149bb91a5b4fb41119455",
      "End": "eeb664487e8d4d3fae70c4ce550bab77",
      "Id": "1dfc6416400c4c22acb9e8a0d4f34efa",
      "IsHidden": "False"
    },
    {
      "Start": "dce6fc481aaa41e48804460157aa80c7",
      "End": "faea2e8e3b474036818539845b363dec",
      "Id": "d8173c16cc10409198138786a558f756",
      "IsHidden": "False"
    },
    {
      "Start": "dce6fc481aaa41e48804460157aa80c7",
      "End": "11b140ec56fc407b961732f185db562c",
      "Id": "85ca48ebd2ff498ca20d23d9d9b31ab1",
      "IsHidden": "False"
    },
    {
      "Start": "f5f608355b5c4911bf5ebfc472138df8",
      "End": "97a9f1ca2cd54f9481b5531340881f7b",
      "Id": "611dd82251e44f3381e2be2a75f8e886",
      "IsHidden": "False"
    },
    {
      "Start": "0091dbd5ff9045cb96f7c08c2d605796",
      "End": "32e53e773cfc4399990db46767e5ae7e",
      "Id": "0d4cb33ea60b4a44ac8bf282cc6b11b1",
      "IsHidden": "False"
    },
    {
      "Start": "0091dbd5ff9045cb96f7c08c2d605796",
      "End": "ab2babedd2f842abacf47204dc0b3646",
      "Id": "89d1b0d1ee614cc69e63ac2955234f77",
      "IsHidden": "False"
    },
    {
      "Start": "9620c3f2a7d0418385cd88fb101fa797",
      "End": "e0585b2cb547437c9c446de133384757",
      "Id": "2b527aafb39244baa8aaeac22ad19a50",
      "IsHidden": "False"
    },
    {
      "Start": "7156636e871940eaa395c3792b8b83ad",
      "End": "9c0c9e788f8a48fc8d49796dd9302bdd",
      "Id": "12b54b3989894afca215ba5e15265727",
      "IsHidden": "False"
    },
    {
      "Start": "09cced2037384bfb8673f8951aa36958",
      "End": "dcb8abeb951d4c10928e4c7fe7ce9ed8",
      "Id": "c94f594d4e084e2ab7bd49c29a78a50c",
      "IsHidden": "False"
    },
    {
      "Start": "30eef6b94aea4830bd79bb81c4ad67cc",
      "End": "e54fe9a77b2c4af681eca61355b23147",
      "Id": "e51d9f3053d846d797e38d111eca78e7",
      "IsHidden": "False"
    },
    {
      "Start": "c02420b3f6104bdd83fdee37e6e8f5f1",
      "End": "9532d7d8ef024172b0de92c21617f69b",
      "Id": "950329a43951453780a824173d271998",
      "IsHidden": "False"
    },
    {
      "Start": "c106e44cf65d4229be57bcd95dca3b71",
      "End": "58a51dde5baa4d7c843f239fa75eb561",
      "Id": "51870bf0af1449c4bea4f653ac58fb77",
      "IsHidden": "False"
    },
    {
      "Start": "564272d9a4164788b43672a9927ed8c9",
      "End": "083e7c167eb1461188ba516dbe3a3323",
      "Id": "48a6ec780e7a49d8bb10ef8c7d6cf8fb",
      "IsHidden": "False"
    },
    {
      "Start": "bb4369aaeafc44f395006c2da9b04421",
      "End": "f64ebaec393840a29cca021f5a78cb16",
      "Id": "0e03f4850f1345a6b2d2cbd64ca45393",
      "IsHidden": "False"
    },
    {
      "Start": "87f29654d5be4bc8b66395b7e64f0baa",
      "End": "b206553b80fa4cebb5c96e2aae42796c",
      "Id": "8706d03d0af84a5c9ca3aa3c7eef60b8",
      "IsHidden": "False"
    },
    {
      "Start": "87f29654d5be4bc8b66395b7e64f0baa",
      "End": "92fdf44e15f347bfb4c5c1368f5f9bd4",
      "Id": "b408c59e308a4026b8f0565ed8586398",
      "IsHidden": "False"
    },
    {
      "Start": "11ff234517924450a5a4fa5366d32162",
      "End": "15eba8da0e8946b289c05bf20601a042",
      "Id": "cefb544e58fb4cdd9872c97d45b43e45",
      "IsHidden": "False"
    },
    {
      "Start": "73a6f71b1d6d4ed78dd7b3d8236e5e2a",
      "End": "a8ed16a3c4f64b0a8ab985f895e9365e",
      "Id": "af6bc8b556f74ea087cb14af03a246e0",
      "IsHidden": "False"
    },
    {
      "Start": "da8cae7e16cf4153827c1225d394e207",
      "End": "21c90604cd2143059736ba922654bcf7",
      "Id": "0deed500587c48779bcd80e517063a9f",
      "IsHidden": "False"
    },
    {
      "Start": "da8cae7e16cf4153827c1225d394e207",
      "End": "f3c00147142a463bae7fdb4b5bb7f128",
      "Id": "c7e9d1ac35264bffb20801ecf0513748",
      "IsHidden": "False"
    },
    {
      "Start": "0b3c561a26cf43adb517cee91e272b6d",
      "End": "cd9d3dfc47984b50a4b6808b100b9998",
      "Id": "d814970a7e7e4976aeeaecfbe5f4210d",
      "IsHidden": "False"
    },
    {
      "Start": "8a30421af2e945ba86c4b0daf9ab0a68",
      "End": "b38213e913e640ac92a6a97cbda6f688",
      "Id": "69fac22525a14cb4b28df1dbaaed8d19",
      "IsHidden": "False"
    },
    {
      "Start": "588a12baf42c45fea17543d88a791194",
      "End": "721cdfce611a4a939fa7acd5dada19d9",
      "Id": "de1841b348ce46bfa224f2f7fd60c819",
      "IsHidden": "False"
    },
    {
      "Start": "8c4e38bc23b946eba20a2c652bb35907",
      "End": "6572eee5be0048858177d6701f10c8d0",
      "Id": "5c7a080a32f14e388a8ef062a765c24b",
      "IsHidden": "False"
    },
    {
      "Start": "efabcfb6617b473588edad28174272c4",
      "End": "1223a26890e84e409bdd9bd8afebdd62",
      "Id": "47c43fc8c97f40c8ab47f21457fb01b0",
      "IsHidden": "False"
    },
    {
      "Start": "efabcfb6617b473588edad28174272c4",
      "End": "5736df7adb784963b0813f39e8d793b3",
      "Id": "97f53d418589445ab5d307fb100c7914",
      "IsHidden": "False"
    },
    {
      "Start": "2e2af15325e4444582a332f4d30c252b",
      "End": "778e6e271c9245e7970ae82b7d444e8c",
      "Id": "5feb6783921c4fe7b4f816ddfa51951e",
      "IsHidden": "False"
    },
    {
      "Start": "2e2af15325e4444582a332f4d30c252b",
      "End": "5528661d627649f0aa4e3bf4840116c6",
      "Id": "35fadff52f7d4de1bea3e6efa1d6934b",
      "IsHidden": "False"
    },
    {
      "Start": "32570438e0d0455db9a43ad699bab585",
      "End": "fdfb7072c8bd4f5595b3cfe130f42a15",
      "Id": "5697b9ee756f421eb6a989943dd06dbc",
      "IsHidden": "False"
    },
    {
      "Start": "32570438e0d0455db9a43ad699bab585",
      "End": "daa71c6a52a146b38e8074ecd5b15917",
      "Id": "3c837ee13a9e41f2a05e65499d62aac9",
      "IsHidden": "False"
    },
    {
      "Start": "db99233f00504b92b8e131b02433718c",
      "End": "d58520551edb43b5a9f02bb142fa7f9a",
      "Id": "58bfc42fe77c4a5397dcdd8afaee0cf0",
      "IsHidden": "False"
    },
    {
      "Start": "a0caa2b7861d433c9d206d134cf48889",
      "End": "043f9376c844425ebec7b5eb5e5bdb14",
      "Id": "31558ac0aa5e490cbd3fc682ce4295d8",
      "IsHidden": "False"
    },
    {
      "Start": "b8d643ba59104f03b332d6db4ca362ac",
      "End": "0d0ef14915334218bfb7ebc68bff01b6",
      "Id": "7058e75c486d48ecb0f73d0ca19f89f9",
      "IsHidden": "False"
    },
    {
      "Start": "37dd22bac1684951b63c13e77106c40e",
      "End": "a01a2753c03e4e33aabc6ff2a16a879e",
      "Id": "5a09114f935b464e960d27dd1a0a50d6",
      "IsHidden": "False"
    },
    {
      "Start": "32d631ddf39941bd8101c2d04e683c1c",
      "End": "06415be30af44b90a8a39476cda52b7e",
      "Id": "02df613a6bdd412ea578f94e3e60af23",
      "IsHidden": "False"
    },
    {
      "Start": "f2aaa4ff93ca447b8cd553bb4db4b7cd",
      "End": "ee82dfd7804e428bb5ba32e0a1d30fe6",
      "Id": "340ff0bc5f554057bda44550802312a7",
      "IsHidden": "False"
    },
    {
      "Start": "f2aaa4ff93ca447b8cd553bb4db4b7cd",
      "End": "b077760373454edcb799f3623e12ecfd",
      "Id": "b1080860ffd34bb38b9d9b2c6ae653ee",
      "IsHidden": "False"
    },
    {
      "Start": "0beb9369ff154837a8afd27527a53b7b",
      "End": "bb87edec3de34104b99c39d3f96149a8",
      "Id": "e0136b81ab9f489485e34597501bedea",
      "IsHidden": "False"
    },
    {
      "Start": "0beb9369ff154837a8afd27527a53b7b",
      "End": "b0fa24589d00476fa61160a0e8d63c50",
      "Id": "fbfa18c507984436872eaa2b65d0bd54",
      "IsHidden": "False"
    },
    {
      "Start": "8ac4b6914cc742638bf33b0018b93515",
      "End": "76f2d735b0e44eb58ae1e0fa5ed1ab35",
      "Id": "644ef5e365e74305a567d0799adfc30b",
      "IsHidden": "False"
    },
    {
      "Start": "2032dafa46de4ca0b866f8e24992f9ff",
      "End": "e1fdbd0345ff4af9936120cac9f1f734",
      "Id": "079b92651bbb4fc695d86622abb687c6",
      "IsHidden": "False"
    },
    {
      "Start": "2032dafa46de4ca0b866f8e24992f9ff",
      "End": "ac1a00955bd14777a00f0f1303157190",
      "Id": "8af34e3421284f32a76a8024b39a7c72",
      "IsHidden": "False"
    },
    {
      "Start": "66a3d8b62071497ebd21d1d239f8d2f9",
      "End": "a067f5be5afd4622a9d8d1b201f83239",
      "Id": "daf7b24052134a1a80de46d288b71c4c",
      "IsHidden": "False"
    },
    {
      "Start": "070847a465e04d349817e44b0af8813e",
      "End": "103049bddd62460b800929b2e54a3e24",
      "Id": "644d2f8c99d3486d84605cb3cf9f89ed",
      "IsHidden": "False"
    },
    {
      "Start": "13dc46fb4e0d4c09bbbfa2c6d6553af4",
      "End": "28101d28394949c7a83a5fa38c3fcb4b",
      "Id": "f6f6015ff7174ba2af9665dc5b314b09",
      "IsHidden": "False"
    },
    {
      "Start": "13dc46fb4e0d4c09bbbfa2c6d6553af4",
      "End": "9b77428c3f084ad4b7e05ecedfcb99c1",
      "Id": "436005d1b7fc44f69f325dd21f54c43c",
      "IsHidden": "False"
    },
    {
      "Start": "e7b7e98e3fd343b38f0cc4d3d0c68992",
      "End": "1fe19d838a9b410f800285ab2f20978e",
      "Id": "1f0d0d850adb42079b98c3ee7ba20c6f",
      "IsHidden": "False"
    },
    {
      "Start": "e7b7e98e3fd343b38f0cc4d3d0c68992",
      "End": "18400bc27b424922838b5e0ebc316c27",
      "Id": "ddbcde332b1449b7a8527111bf9081ac",
      "IsHidden": "False"
    },
    {
      "Start": "e7b7e98e3fd343b38f0cc4d3d0c68992",
      "End": "d743654162b64c858e5cd48ac8e4860f",
      "Id": "538845eec7894e9892f5cdac3faa3634",
      "IsHidden": "False"
    },
    {
      "Start": "e7b7e98e3fd343b38f0cc4d3d0c68992",
      "End": "cc67c1d7b2c746579a7ea18b2f3ad733",
      "Id": "e988483c015d455abf1f2467d9922ded",
      "IsHidden": "False"
    },
    {
      "Start": "e7b7e98e3fd343b38f0cc4d3d0c68992",
      "End": "73cce0dd9cb44a47b4d98a5c467157c5",
      "Id": "130f57e24ef84ca69ecca2e82b528e30",
      "IsHidden": "False"
    },
    {
      "Start": "cb44dd7a4fbb41f194cc977d582bb8d9",
      "End": "3f7004f6f2704c38bcdf1990a8dad7b4",
      "Id": "502ead743e1146e3bec6f51abd9007a4",
      "IsHidden": "False"
    },
    {
      "Start": "e0a3ee8f8f6749ff806e122ab07f2762",
      "End": "b6aa3bb09a0a4af68fa3281521f35826",
      "Id": "f429d9e326264de992f5963fa07d84a5",
      "IsHidden": "False"
    },
    {
      "Start": "e0a3ee8f8f6749ff806e122ab07f2762",
      "End": "8aabc672c56245b6ac82d2fbf126fbbb",
      "Id": "cd2b732c7f4c4c5db59c207ace8b162f",
      "IsHidden": "False"
    },
    {
      "Start": "4d5fed385a704e199335d010ec029f05",
      "End": "ae16bd3210f94d1393b99f912d951f98",
      "Id": "d386f1ebb7da493a8cbe3260ee527a71",
      "IsHidden": "False"
    },
    {
      "Start": "c989c47c096e41f28d8628cbc4922063",
      "End": "1fec1f0249544047ac4b873149414efe",
      "Id": "1fe5a21f419a4a4485d06080e14935fd",
      "IsHidden": "False"
    },
    {
      "Start": "25169b695f354d9b9708765325bf1b35",
      "End": "e387ae30e37849eea5af6b863660d1ca",
      "Id": "f70cebbd3ecc445da0462f7aa4e03fae",
      "IsHidden": "False"
    },
    {
      "Start": "7bfdeb582b1d4cc98919310c3b6c03d0",
      "End": "2ea9a9f5fbe34140a2e7fd5278168119",
      "Id": "26bb6505a3354a878c8a5a58449e85e2",
      "IsHidden": "False"
    },
    {
      "Start": "a32fe437308d41fbb2e5aa41e2b9bd30",
      "End": "d8a6caa0848440b79d7d190f2d41fb1b",
      "Id": "9f8e5404232d47d983486af5450e6e29",
      "IsHidden": "False"
    },
    {
      "Start": "0cf3ff915f1a4e7eaca97022ddf2450a",
      "End": "93af359477174ea38df6ca1087e97967",
      "Id": "61006854c1ac488d861a429f0ad1fb0a",
      "IsHidden": "False"
    },
    {
      "Start": "965a61d356c8499eb48bfe27b94a2fe9",
      "End": "9d7252b68ed64708be6257067b0e08e2",
      "Id": "06a4b3c4d457411a8098f29e455f3190",
      "IsHidden": "False"
    },
    {
      "Start": "965a61d356c8499eb48bfe27b94a2fe9",
      "End": "605a7a664eb747f48c3a2e6d531b920e",
      "Id": "118e9b46a7a84362b871970c42dbfad6",
      "IsHidden": "False"
    },
    {
      "Start": "04b8a7b012804cd8af7d9d9973c34cab",
      "End": "bcdc96d31df54d7ca0ecd101f11fc86e",
      "Id": "3fb8aca281bf4a86b00d352ab45a030b",
      "IsHidden": "False"
    },
    {
      "Start": "b702155b47334be2ae557b266977990e",
      "End": "b0a0f701dfa04b3abd5e52df3676553a",
      "Id": "dc5ba49374bb49f3b2e56f48ce67d35f",
      "IsHidden": "False"
    },
    {
      "Start": "4909c2cafa7647eb90ed2c9c74fbe6ac",
      "End": "3bc4ea8f6ddf41d8b0fba5203d931492",
      "Id": "79f58aa6305a43e589db75efe1c88227",
      "IsHidden": "False"
    },
    {
      "Start": "4909c2cafa7647eb90ed2c9c74fbe6ac",
      "End": "18c3cb70c99149f0a8ade5167f201738",
      "Id": "ca2a0bbc8a3046b3b27046acb25e956f",
      "IsHidden": "False"
    },
    {
      "Start": "ae280c32f7884dac844487984ca55bda",
      "End": "7821c053d4a64bff8b41b1166119ed7e",
      "Id": "acab7743e0c54305a56be6b43da9922f",
      "IsHidden": "False"
    },
    {
      "Start": "9387c9a4b0b342608da72129bf0491fd",
      "End": "ae48ce748bc4475493acafe2b05a9813",
      "Id": "0404be778cb546659dbd1b47e6f3940e",
      "IsHidden": "False"
    },
    {
      "Start": "421f5079598540f7b030f347dc375ae2",
      "End": "4e554052dfb049939c555f85bb18f30b",
      "Id": "b942b807ebea41d2b3f012ee755da657",
      "IsHidden": "False"
    },
    {
      "Start": "421f5079598540f7b030f347dc375ae2",
      "End": "8b9e71bec2eb47e980e9a9892955d415",
      "Id": "c71e0095916f490e9a761045a8744447",
      "IsHidden": "False"
    },
    {
      "Start": "a97e4263ec3c4b7299549f3182f430aa",
      "End": "979bfc42374a4bf9b2affd38e99b35cc",
      "Id": "c1dcecde4b69440a9567a468203c8814",
      "IsHidden": "False"
    },
    {
      "Start": "e86884d4a428436db36f1285e1985471",
      "End": "b595f63566f849fa9ed67dab20feba94",
      "Id": "cb2dd6eb470b47eba335cee3245c128e",
      "IsHidden": "False"
    },
    {
      "Start": "e86884d4a428436db36f1285e1985471",
      "End": "aac124f0d6764842a3c2c7995fa15919",
      "Id": "558e2b1804cb42cda8c6e5c1ae9dca44",
      "IsHidden": "False"
    },
    {
      "Start": "e86884d4a428436db36f1285e1985471",
      "End": "99760184f72c48439e006d421f487a50",
      "Id": "709351f5a40d4b92a12c087edf875d1d",
      "IsHidden": "False"
    },
    {
      "Start": "f012b6ec7204449094fa2b1d32d6ebcc",
      "End": "c6bc661e06024c7fbd68384e67587a2a",
      "Id": "e3615da197f742df92b1e77caf48808e",
      "IsHidden": "False"
    },
    {
      "Start": "76d628a95b9a4760aadee016d3c6e489",
      "End": "ff524618aee74df2aabb02156441db0f",
      "Id": "862ac026beb14bc896760089114338ab",
      "IsHidden": "False"
    },
    {
      "Start": "0f25da94dbbf416ea0a8cd09fa731095",
      "End": "0c71bd16a5ac4becbee2f97854a02c5d",
      "Id": "42a66254ec3b4044aeadefe688199dc7",
      "IsHidden": "False"
    },
    {
      "Start": "93b165c7702a46879b0bb46e904eb93a",
      "End": "c6cc162174a847e7aa1f5ed41cb324d3",
      "Id": "b8248b10085849349464345ec748ce57",
      "IsHidden": "False"
    },
    {
      "Start": "e88e0b6a1ff14865a5f1ef472aebe035",
      "End": "372f98cac92f43859f888f68b823005a",
      "Id": "7e1c4ac31f00462c9bf71404a0817d17",
      "IsHidden": "False"
    },
    {
      "Start": "e737d83c2c4445afa40ccd2c3e5457a4",
      "End": "b3295e39d819403f9b914ec431388140",
      "Id": "258beaf76e9c4c46b8062c326bc009e4",
      "IsHidden": "False"
    },
    {
      "Start": "e737d83c2c4445afa40ccd2c3e5457a4",
      "End": "7188330429b24170a75a78d2e1246dcb",
      "Id": "3733ce22e50b45efb870c54490ef8862",
      "IsHidden": "False"
    },
    {
      "Start": "59121c7770c8429fa18de166981b46be",
      "End": "12d2ef2290054f1fb66a19742210989d",
      "Id": "6a603ccb10be46018e5d1168346afa62",
      "IsHidden": "False"
    },
    {
      "Start": "362a6d85f39a4e8e9bd583a88eed3f58",
      "End": "c6258c50b4e148a1a2ae7a646c617423",
      "Id": "356043d1a34749c890280522288ad27b",
      "IsHidden": "False"
    },
    {
      "Start": "362a6d85f39a4e8e9bd583a88eed3f58",
      "End": "f1c8f0b40e2447f89a2ab0bb2d2d22b7",
      "Id": "8ab6451c67054842a0c3cd165849d42c",
      "IsHidden": "False"
    },
    {
      "Start": "362a6d85f39a4e8e9bd583a88eed3f58",
      "End": "8098ac92a6bc443da87887dc193f5063",
      "Id": "1a7a4edc38694115a7655c492d5ad8d2",
      "IsHidden": "False"
    },
    {
      "Start": "362a6d85f39a4e8e9bd583a88eed3f58",
      "End": "0b9b0193481849108dea767b1109634d",
      "Id": "d37a8c9feb414936a4ca11b54c2671e5",
      "IsHidden": "False"
    },
    {
      "Start": "362a6d85f39a4e8e9bd583a88eed3f58",
      "End": "603a07d50b7b407691a47ec4c76ddcfd",
      "Id": "03a4f1437d734a9d850a56fe89b7ca4e",
      "IsHidden": "False"
    },
    {
      "Start": "77f0db3f4d4e43bdabe20f9ede6bd49f",
      "End": "d4e4b45cd2e04481b88499a306564a29",
      "Id": "4f491d943a47448785e8d29826f3de2c",
      "IsHidden": "False"
    },
    {
      "Start": "26f87a2d2b30495695bb3aceb60ecd3b",
      "End": "7dc6d107af654388af0e8bfacb8b6681",
      "Id": "f8bdbdb7e61e45b3aae6e967a5159a7b",
      "IsHidden": "False"
    },
    {
      "Start": "29e91bbaa3104260aadb2951aaa4fc1b",
      "End": "0c092faa6f394a3ba86d1a81a93e7a4e",
      "Id": "5938e7f2f5ca45c384ee1aeea39402c7",
      "IsHidden": "False"
    },
    {
      "Start": "13f042ecda164e6f95175d9c33a412fa",
      "End": "2c23433ece6e46279ac789de34415023",
      "Id": "e8afba88106a4a0ea78c1b7d842a6639",
      "IsHidden": "False"
    },
    {
      "Start": "13f042ecda164e6f95175d9c33a412fa",
      "End": "08ca0e12fd194650a99b54b5fe50d39c",
      "Id": "361d9891bf11499fa24c7e6a307761e9",
      "IsHidden": "False"
    },
    {
      "Start": "44a406feea3646d4ad9337ef75e84fd4",
      "End": "d75eac673a5448c5926783f0bb1528ce",
      "Id": "35932ef3258b4faf8283c5a3428d73f1",
      "IsHidden": "False"
    },
    {
      "Start": "44a406feea3646d4ad9337ef75e84fd4",
      "End": "fc965e7fb00e4254b45c1bdbfa175192",
      "Id": "b78af7933a854e39bf829477d7b104bb",
      "IsHidden": "False"
    },
    {
      "Start": "44a406feea3646d4ad9337ef75e84fd4",
      "End": "858c9387686c4f0a8f41af1176272a88",
      "Id": "94b47194c7804f639d2d472af9cab82a",
      "IsHidden": "False"
    },
    {
      "Start": "05eafd561e844d9f83bb7dbdef7df68f",
      "End": "e6687b75626c4507a6b35e0c2aa5b451",
      "Id": "8d269277077949be8dc81ad09f81f3a1",
      "IsHidden": "False"
    },
    {
      "Start": "c46ae5efa4bb4d96833d3c1413094bef",
      "End": "949009a3ae094b3a99e906a9473e3eae",
      "Id": "36844a94c7f545efa7959b4ffc138098",
      "IsHidden": "False"
    },
    {
      "Start": "c46ae5efa4bb4d96833d3c1413094bef",
      "End": "d745dc0e022f48d68f5f67c14735f52f",
      "Id": "97f0711dbf2540f594eca66c3a6a68b7",
      "IsHidden": "False"
    },
    {
      "Start": "c46ae5efa4bb4d96833d3c1413094bef",
      "End": "272c155a96b44d998967777781064961",
      "Id": "30accc0ae27a41bd9d5d2d4c99cc2dcd",
      "IsHidden": "False"
    },
    {
      "Start": "fc17e1fd95b54ca3a3465eff068fbfbd",
      "End": "5a36cc538ec345b5a7689a504d82b30b",
      "Id": "777e1c15838741fc9d1109ea844367b2",
      "IsHidden": "False"
    },
    {
      "Start": "fc17e1fd95b54ca3a3465eff068fbfbd",
      "End": "ee61c8ef3b5b4980bd5088e0c809019d",
      "Id": "4e6a09ef47da420990f16ec5dc1a3a6e",
      "IsHidden": "False"
    },
    {
      "Start": "cc0ca30b78c24ce9afc5070cdc04276e",
      "End": "a29784f9e4414fcc8269a9e00bcdf8ac",
      "Id": "4eb7fc9fb6bf43ed9d7e8f340ce3d024",
      "IsHidden": "False"
    },
    {
      "Start": "8e59c3c16e244e73b637be1c7d10432f",
      "End": "1e7db61e30eb4559b5a08c7d0aed4b23",
      "Id": "3fe440554d8d449780f1a96adfdc436e",
      "IsHidden": "False"
    },
    {
      "Start": "1af912f53adf4c1d99ab78630a44c64f",
      "End": "ddff50bc776542bfa3a3e5003d4ad521",
      "Id": "b1e9dc3c3e424838a6fec1b5c3672d40",
      "IsHidden": "False"
    },
    {
      "Start": "e348c3d6dba54dad8fdca17794273089",
      "End": "cc1bba8e061145ba8920223107b440e4",
      "Id": "06cfbeb1c7504731acc35d6996d70e15",
      "IsHidden": "False"
    },
    {
      "Start": "848da3b16f544d6fa34eec62fd66181e",
      "End": "208d40e5d2a74452b5b1cbad477ec789",
      "Id": "05aa1c9c840c4f6a979695ba167e1944",
      "IsHidden": "False"
    },
    {
      "Start": "26e664c22c9742db80c9bf2aac195928",
      "End": "65dc8c2ef9c048dab1d1204b1f6d2984",
      "Id": "aa08e27716384c97a0f78940d2455804",
      "IsHidden": "False"
    },
    {
      "Start": "4779c9862c9543cf85e86ad2ef6656c6",
      "End": "e03e60cc467a4c2fb85bcc8f4ef11f77",
      "Id": "931bdad767bd4abfb62d0ef63aa9eca9",
      "IsHidden": "False"
    },
    {
      "Start": "4779c9862c9543cf85e86ad2ef6656c6",
      "End": "89b2cdcd6868408d902d6484b9df147f",
      "Id": "58d9fa2f77804c63b027784db72cbacc",
      "IsHidden": "False"
    },
    {
      "Start": "8dc73c8af44f44969a6d34f04d2a7495",
      "End": "d9f825b73e124d27b20385f56cbb789f",
      "Id": "2f480f3baeaa4fa4a7d6b06e6231d26c",
      "IsHidden": "False"
    },
    {
      "Start": "8dc73c8af44f44969a6d34f04d2a7495",
      "End": "bb4e288c9247414fb26543a7e31e360f",
      "Id": "1f2facdf598148dcbab715c8fe151460",
      "IsHidden": "False"
    },
    {
      "Start": "8dc73c8af44f44969a6d34f04d2a7495",
      "End": "a823a004de06417da1451313ae29a06d",
      "Id": "c254f1b9fba64f7b9b86cf2c70717bff",
      "IsHidden": "False"
    },
    {
      "Start": "0297246f551a4426bcf76c08686161e2",
      "End": "3149b6b0fd4d454ba996d1efb9f23b32",
      "Id": "9b2f5017963d444082f63642ee6bc744",
      "IsHidden": "False"
    },
    {
      "Start": "0297246f551a4426bcf76c08686161e2",
      "End": "8de6908d55114d92a3b8adeb31903f9a",
      "Id": "0d8e153dfe834a2d8535e34bfa0862a3",
      "IsHidden": "False"
    },
    {
      "Start": "6b36e1e65cbc46d494ee06fa76d946bd",
      "End": "996af742a01d4d21bee471932164f3c8",
      "Id": "38832151ffa446a5b371302a353d531d",
      "IsHidden": "False"
    },
    {
      "Start": "724aa074225d436a9832ed43ca807899",
      "End": "9ed62b1913f04df8897d11fc0b1cfee7",
      "Id": "2299fef3ee9b4943a58a499c25599ed0",
      "IsHidden": "False"
    },
    {
      "Start": "0684f6a073204799baed5fe7f3c5c2d0",
      "End": "94d2f73924c64e24a03baaa6b39dde69",
      "Id": "b8e0561c60944eb8a59f2eab6572c827",
      "IsHidden": "False"
    },
    {
      "Start": "cadd29254dcc41ffbf2df9355f01f5d5",
      "End": "f16e22546c7e4c00bff986461f5e3161",
      "Id": "15ce741fd26d4479a6564aad84abe4db",
      "IsHidden": "False"
    },
    {
      "Start": "023ee3245cd34135bfb51091cd56e14e",
      "End": "437fe5ace94f407d9a0e98783bebc699",
      "Id": "2bf3978125bc4d719bab6df21ef248e8",
      "IsHidden": "False"
    },
    {
      "Start": "5b37fc711a2c4bb9a26102caa87d2923",
      "End": "9685c4819abc44059a743e27fbd4c4a8",
      "Id": "e3a251daf8af4b2c8616dcfc5fcb8977",
      "IsHidden": "False"
    },
    {
      "Start": "0bd9169ade3d4507bd9ae52657e01db3",
      "End": "9564a9e9aac54873b639a00ba1fb9d55",
      "Id": "8e45043e7d0d43938ae8e0dba55fcb8c",
      "IsHidden": "False"
    },
    {
      "Start": "554eb92f0a5d45a6b5a7ab91cc09a600",
      "End": "0cb21a073df7408db65b6ec095540cb9",
      "Id": "b0d1179e5bc6478d9bf6f612c9646a44",
      "IsHidden": "False"
    },
    {
      "Start": "3ffea347d4a94322acef631f9f09c223",
      "End": "9ee4b5b7118e4a6f8f4b254491d07434",
      "Id": "5c0f69c86be5482f8af096847f9438ff",
      "IsHidden": "False"
    },
    {
      "Start": "918ea60a355a4a94adf9671c60f901e6",
      "End": "2d213b9900ef4bca8ba2836163bbc7a9",
      "Id": "58e2902c2e5a49b8a466a801973a78ac",
      "IsHidden": "False"
    },
    {
      "Start": "768168beb6754a28be41222619d9e1b4",
      "End": "6fb86f059ee84bb1aa3f0c097bcbfe37",
      "Id": "4f583b8430f44047b5e90e5443d53d34",
      "IsHidden": "False"
    },
    {
      "Start": "768168beb6754a28be41222619d9e1b4",
      "End": "9e6d1949ad78426ba1201e5a38034b0f",
      "Id": "e372c86be46f4d3682ded3ab5ac903ab",
      "IsHidden": "False"
    },
    {
      "Start": "1cf707d4bafd4163ae76839193ad4e4b",
      "End": "7d7db15099cc492bbcb0dc5f6059823c",
      "Id": "347dedf9c3d44212b6ef00e69f8d1474",
      "IsHidden": "False"
    },
    {
      "Start": "06554ff8ef5943c48a41300b9fb70ef3",
      "End": "e408a85cf44140b1be659c66c5001b48",
      "Id": "7aefc52ae7f9497f870151c8b130ec37",
      "IsHidden": "False"
    },
    {
      "Start": "a1d01a1494de43b7a0739c3ed6899585",
      "End": "33ee593aee3c45829cf27c441322a962",
      "Id": "600b1aee9e53413489af7f5a51b69b75",
      "IsHidden": "False"
    },
    {
      "Start": "6887dfbc5a02440784dcfe4508337cfc",
      "End": "9bc091ea8037450a839ecd2926cbbdd0",
      "Id": "d03dea7efb4e4a33952debc090252447",
      "IsHidden": "False"
    },
    {
      "Start": "da3302383b854204be4b3b71eaeafac6",
      "End": "33194ecc196142769e60185059477812",
      "Id": "40e2fbe128dd4368934f74c845157b0e",
      "IsHidden": "False"
    },
    {
      "Start": "decfefbdbec742d898d2812e7bb3bc17",
      "End": "c0b3022232a54f5fb749ed24b3df98a2",
      "Id": "68494a35959f49cdae7b61367aff1984",
      "IsHidden": "False"
    },
    {
      "Start": "a0dd2ab1420b472fb5ea4a9a0cca5890",
      "End": "d9fa83c01dd441e58bc6912ffb280f9a",
      "Id": "b3f952ddbf7c4cb681ece5a29302f766",
      "IsHidden": "False"
    },
    {
      "Start": "d0e4b6f4df584109983039744ccfe251",
      "End": "0f32c96cfbaf48918fec3632102745e2",
      "Id": "ac7a2fd165d241b1aeb7c9a13b4ee30f",
      "IsHidden": "False"
    },
    {
      "Start": "58e272304e7f491480adecdbbf25dd02",
      "End": "9f79680d1ad24ed48b2736e34bdb477c",
      "Id": "5d34b34b677d47e8be092980e7e002ea",
      "IsHidden": "False"
    },
    {
      "Start": "cec981beaea247828cb34d1e12c65f96",
      "End": "23be02d19960499eaef2ce7c71280911",
      "Id": "0fbd00d28b334f7585d563ca35dfde56",
      "IsHidden": "False"
    },
    {
      "Start": "d4f1e954f60040e285fb74f4c13296b5",
      "End": "e084a95cd6544432851d77cb06beb72c",
      "Id": "c79e5aba5e3647259f7ec2f54fb05d02",
      "IsHidden": "False"
    },
    {
      "Start": "436d660b5c8a410f9dce6fce19adb84c",
      "End": "7de574bcf9284395a05120357555afc5",
      "Id": "cbf8d3bb3b8b47c882ccff0ad8333322",
      "IsHidden": "False"
    },
    {
      "Start": "51ba4089ba8b4e4a9e7faffe26682a23",
      "End": "a102d4611db4420ab055891ab9a1e152",
      "Id": "73a651df771b488894238294a184f4f9",
      "IsHidden": "False"
    },
    {
      "Start": "50a155fc2cc74854805e16d9ddb7e1e0",
      "End": "3e9109c88eda4d6f8534bf2f8d7a1874",
      "Id": "c3ac9ae8e67842a0b4af42ca6cd5fb31",
      "IsHidden": "False"
    },
    {
      "Start": "529211a3b4f94631b787edea1368dd15",
      "End": "17faabd4b77f4d61829fc65e3c66139b",
      "Id": "53747decfdbf4ee79f53a3b96bd58e55",
      "IsHidden": "False"
    },
    {
      "Start": "000535569db746e8b1262cb11e82fba4",
      "End": "28283ac54a734a7fbef965daf690459b",
      "Id": "cfd7498e947f41fcbf66c0069c7c7e14",
      "IsHidden": "False"
    },
    {
      "Start": "64a8c242a34249789a48a294753d346d",
      "End": "9c728192eef34ed48cf468f2e0cebc24",
      "Id": "22b8ab9de3a445cf8a01582d4509ee2c",
      "IsHidden": "False"
    },
    {
      "Start": "9a6fc46ddd1c455fa4befd43193b81ce",
      "End": "73c2c908541b4514b6f8151c439fc1e7",
      "Id": "755d283e76a44c48b58833c0c3a2009d",
      "IsHidden": "False"
    },
    {
      "Start": "4cce07f465e44d7d9b5ab50c0bffd0c1",
      "End": "507fdfd163044ed6b6ffe553a3ad083e",
      "Id": "9d1983b07f8747baa7252f6f72ef8768",
      "IsHidden": "False"
    },
    {
      "Start": "fb68b9fbe7814dceac04050c63e7ddb3",
      "End": "086992a5550441a39bb5cee433271fcd",
      "Id": "713ceb9463de43428f9d8ab71af681fd",
      "IsHidden": "False"
    },
    {
      "Start": "85ca7b0743c64f15a95c81236b0bcf0a",
      "End": "05bc12eef6a74f4e9e222063057180a9",
      "Id": "7ef4b1e5fe4846929dfa64d93ceee3b6",
      "IsHidden": "False"
    },
    {
      "Start": "913f64b85452481b85083be129880adb",
      "End": "4589529e581342b78dbe9000218d73e7",
      "Id": "7e8a3a8f6bb54889b84a582d14ff0d01",
      "IsHidden": "False"
    },
    {
      "Start": "913f64b85452481b85083be129880adb",
      "End": "0983dc84bf52404e977f361f1d052649",
      "Id": "5114765256ef432889b712a0ab783fdb",
      "IsHidden": "False"
    },
    {
      "Start": "5a2c36b99339421fbd0a4165d6273a65",
      "End": "88344a10773b4017a4ba29974cf32833",
      "Id": "d39acfb6a32b443dab22e6f92c10cbbe",
      "IsHidden": "False"
    },
    {
      "Start": "92284b1e04194b3aa182c235beefd613",
      "End": "71181b3f182a4b68a0be134d84f2db16",
      "Id": "218b9ba8288c46b899a8ab97e29108dd",
      "IsHidden": "False"
    },
    {
      "Start": "ad92e5c2f33f48e49d2566846b34beb8",
      "End": "86b75d36cfcf49fb90c586c6e63d9fe1",
      "Id": "b8dfe0ccacb14ccc9a24ddf9fa32c77f",
      "IsHidden": "False"
    },
    {
      "Start": "3b402563c0ae460b8c6869daf0c44ff8",
      "End": "9eb403178ce74043a0238a6c522fe663",
      "Id": "0d75fab9db514978b5f933b89d1b1f8a",
      "IsHidden": "False"
    },
    {
      "Start": "ff5afb04795d4f33b5346a53e70a2ef6",
      "End": "9882b02b125e4afebb06777324033305",
      "Id": "b802ce8e2da54cfbb96fbc51d1eb0659",
      "IsHidden": "False"
    },
    {
      "Start": "9a6667defc8841c88c4c9fe6ebc45a96",
      "End": "bf40011ea55842bbb2fdca5980f429e0",
      "Id": "1ef3a8cdc3fe41c990f674f3aa96a387",
      "IsHidden": "False"
    },
    {
      "Start": "bc42103fde27471898b8cd5105d879ad",
      "End": "84d5daf223dd4f318129f3f2d49f7fc9",
      "Id": "fb8c141ac2af408a9af72632527d8732",
      "IsHidden": "False"
    },
    {
      "Start": "f2e3afc5637343279ed37fa9b5c9ac19",
      "End": "8a7c6fa21b5744258dc2f5560f796b3f",
      "Id": "69c41f22978d4907bd610a1667264b98",
      "IsHidden": "False"
    },
    {
      "Start": "7b531022b0604479ae5e9c0d0aaabf7e",
      "End": "2c1461af078b4a35b42cfc185cfadb8b",
      "Id": "be8f6cad6f61489dab55635ca44246e5",
      "IsHidden": "False"
    },
    {
      "Start": "7b531022b0604479ae5e9c0d0aaabf7e",
      "End": "fba36f49691c4df8874235f3fa166a39",
      "Id": "8bbe128bc3334f029b64ce4f669150ad",
      "IsHidden": "False"
    },
    {
      "Start": "f08efea739074e86830d3606238b9e31",
      "End": "cc98a04f5e9948bead1cb6c4bd0a4db2",
      "Id": "2fbe060ea60a49f59c8c1a0e2253af41",
      "IsHidden": "False"
    },
    {
      "Start": "f08efea739074e86830d3606238b9e31",
      "End": "79cf941c0efc41538116234366f3c762",
      "Id": "ff3d53199ac84aa4ad3aa433a0a4b283",
      "IsHidden": "False"
    },
    {
      "Start": "f08efea739074e86830d3606238b9e31",
      "End": "4a9f077685c9486c870ba68b9111e252",
      "Id": "a7d97afc1437447fbd3dbcc96d1fbb8d",
      "IsHidden": "False"
    },
    {
      "Start": "f08efea739074e86830d3606238b9e31",
      "End": "ea54207336764e91862eed55ba45344b",
      "Id": "2e38c556030446b7b271c71116d20252",
      "IsHidden": "False"
    },
    {
      "Start": "f08efea739074e86830d3606238b9e31",
      "End": "d592fee7d46f4807b81029d92aa4a7ef",
      "Id": "dda3b3a00a27468f9890f07ad78adbdf",
      "IsHidden": "False"
    },
    {
      "Start": "bc7176ceba7d4388b908b01c5368d360",
      "End": "7d7a95097b174e4b90a6b3b9b96d1958",
      "Id": "36e03a92f4b64c53a7523e3846bd6f0e",
      "IsHidden": "False"
    },
    {
      "Start": "bc7176ceba7d4388b908b01c5368d360",
      "End": "6c7f4d86c9214b338f5339d80ad87730",
      "Id": "57dcb6d55725443fb6ad740c0c041c4c",
      "IsHidden": "False"
    },
    {
      "Start": "bc7176ceba7d4388b908b01c5368d360",
      "End": "0b59160a5cec425e818eaf5e1f48819c",
      "Id": "81775c212ae54d7a8241ef8a09499318",
      "IsHidden": "False"
    },
    {
      "Start": "dacebb8d4b444a6a9bc8732ba9f67172",
      "End": "82b61ecd34a748ce89edaa4db6d0f057",
      "Id": "6a460fc730694657a9a682ecbce13c8a",
      "IsHidden": "False"
    },
    {
      "Start": "34985810c52e49b48b75c6acf137dd3d",
      "End": "0ab6be1a26334f9d8525ffd5a11ec774",
      "Id": "11fc528653934b4a84cb42a567bd5ae1",
      "IsHidden": "False"
    },
    {
      "Start": "34985810c52e49b48b75c6acf137dd3d",
      "End": "fe3c3c9370a34acba8e1c71c2f99ab55",
      "Id": "42562395bbae443ca509918ec4485fb6",
      "IsHidden": "False"
    },
    {
      "Start": "4769188bf5cf4478a986be4d76c5f9a0",
      "End": "d5bd4e317b974ac29d564fc7be970296",
      "Id": "8a12bd498a544ff88e0aeec2695c9bb4",
      "IsHidden": "False"
    },
    {
      "Start": "bf5562c1620e464ca400390368c2db43",
      "End": "edda90e0908c4b1590df1aaa00443ff9",
      "Id": "8fc7adabdcb1465c894b6876cee9338c",
      "IsHidden": "False"
    },
    {
      "Start": "bf5562c1620e464ca400390368c2db43",
      "End": "53d9c96634484044a697c4debb19b7b0",
      "Id": "2922be53be324a689b0ba455eded34e9",
      "IsHidden": "False"
    },
    {
      "Start": "0ca45533b71b48e2ae36d67cd1496e36",
      "End": "4f3f505db6604244b690ea7216d9ec77",
      "Id": "699bf190397c4f978a90891ccb3200b7",
      "IsHidden": "False"
    },
    {
      "Start": "86d1c764e11745dfbad5f9369c1c1946",
      "End": "55695d522bdb4950aa221721ae0ff5da",
      "Id": "ee5ea0995c714568860b2d4ff9a5447d",
      "IsHidden": "False"
    },
    {
      "Start": "c4622a412f5b4b8294f3b8ff94a6c6a9",
      "End": "95a03ca6419f48be80233b1d5392a127",
      "Id": "ed533bd6138548438406863b1a0c96f2",
      "IsHidden": "False"
    },
    {
      "Start": "c4622a412f5b4b8294f3b8ff94a6c6a9",
      "End": "be1bcd93148e4f529521a7a1fc163209",
      "Id": "47516ab3f1c84cbaacc45572c6f43218",
      "IsHidden": "False"
    },
    {
      "Start": "71b14eb6efc44f9a9c8c219322255bdb",
      "End": "54e522c4cfef4198a3f60a4992bcd16a",
      "Id": "1da83fb47737440e8e5ac350d9a80b8b",
      "IsHidden": "False"
    },
    {
      "Start": "bad1d7b36dbc481d9fd54e53b088385d",
      "End": "f0616e8b98694b9c9ea63b76c61ac3b7",
      "Id": "ac671b96290841b2a151e64d223584b2",
      "IsHidden": "False"
    },
    {
      "Start": "b099bc5874494db3b59715c840999fec",
      "End": "deef3d141f3d4bfaaca3b66b0a9069ac",
      "Id": "4899a04d024942e4902a97e8075c264a",
      "IsHidden": "False"
    },
    {
      "Start": "577f7b342ccb4f4ab26f385dfd6b15cf",
      "End": "e0e888dbdc3542229f03a7972db084d9",
      "Id": "f7b1c9f02366464abe3705c5dc00c453",
      "IsHidden": "False"
    },
    {
      "Start": "c3f8c885b77e412dbc874f46be0de591",
      "End": "ad89d6f2b11a42569adce45874285f17",
      "Id": "04a4bb9b80ca48f881544eb52b8205d7",
      "IsHidden": "False"
    },
    {
      "Start": "b3bf0318dc7c42d5a9f8b8f598516e57",
      "End": "eec09c3236ed4a298c674994fc642874",
      "Id": "167dee5cc9114f0abc54311c290629a5",
      "IsHidden": "False"
    },
    {
      "Start": "9b9e70f5f5964d9a948eae806cf4e943",
      "End": "5cdff853956b4922ac28323553056067",
      "Id": "05fb1695fd034a2f8bac2f98e2eeac67",
      "IsHidden": "False"
    },
    {
      "Start": "64c66eef734e42bca50c4f654d785fec",
      "End": "91fbf1f6dd4b4b8a8cd578f8446cac14",
      "Id": "1e7e06709be742afbbec59913a20b5c7",
      "IsHidden": "False"
    },
    {
      "Start": "a4e568dc93ea4890af1a96b8618ffb84",
      "End": "cc51a11a79bf42389d279f49991eeb73",
      "Id": "73a9fe82881a4868bc75fdc3101e4e17",
      "IsHidden": "False"
    },
    {
      "Start": "a4e568dc93ea4890af1a96b8618ffb84",
      "End": "7bbf66d802924f20965cbf56e035eced",
      "Id": "4efa5a7550e64436bce00ee7978e8ae3",
      "IsHidden": "False"
    },
    {
      "Start": "e5bbbcae5c704ee68740bcb5a74ac31f",
      "End": "a6c4776eda5742ed9b1c8e84dd7ea8ab",
      "Id": "4919a13019c743a7bf0f679e4cb2a17a",
      "IsHidden": "False"
    },
    {
      "Start": "7bc4aabdbd484fad83fb4fcac2dae1a8",
      "End": "52c5119ff55241af94bfcf3ddf1ec88d",
      "Id": "69263436c8de42f4b44a9ccbc8c18e9b",
      "IsHidden": "False"
    },
    {
      "Start": "acfae7c5db8e45fa9063b796d55c3386",
      "End": "b00c41140d5b4604ac2927530c10e068",
      "Id": "5b0a59d9742d4e78bc289275b35fc1d5",
      "IsHidden": "False"
    },
    {
      "Start": "acfae7c5db8e45fa9063b796d55c3386",
      "End": "3ee8ba52d96e4101b74578d3a1d95662",
      "Id": "a50ede9a247b4c25a712353a33d7f64d",
      "IsHidden": "False"
    },
    {
      "Start": "a7eb76d4112b4770a2b92796f800bfac",
      "End": "4698693c376f4cfea1a51e1159b14be2",
      "Id": "10cf5117398f41f9bd30301f24151f10",
      "IsHidden": "False"
    },
    {
      "Start": "20a3d53eec674525be412d233bffc1b6",
      "End": "3ced39c6ec7f4151be3c76e2561fef43",
      "Id": "9e49a7bc318449768a1e4a86f243136f",
      "IsHidden": "False"
    },
    {
      "Start": "3934ede5325143138abff2fb1d924cad",
      "End": "cfca33a87f644f25aae5331ade69f331",
      "Id": "60be17c827cb4e3abe83f4023822f760",
      "IsHidden": "False"
    },
    {
      "Start": "9096d050866b44709e8283694f64edb6",
      "End": "396003b6b8e84258884b25fc3090714e",
      "Id": "589f8802322e44afa25667df02969c58",
      "IsHidden": "False"
    },
    {
      "Start": "dcbe4453ce7e4e2f8ce801754ad713d6",
      "End": "17a79d8b78ff48d2a2d205b150cc7209",
      "Id": "9b6977c0e418430ea26bfe6d52dd8e84",
      "IsHidden": "False"
    },
    {
      "Start": "dcbe4453ce7e4e2f8ce801754ad713d6",
      "End": "d706ccedfa9449558d6081274cd886a9",
      "Id": "eec44314054e4afc99aa79bae2f9c13c",
      "IsHidden": "False"
    },
    {
      "Start": "f0158e196b914d6593d139208663de1e",
      "End": "5c48c35cb7eb4435b6150a2f9ca0ae72",
      "Id": "6e2f3a1f146943e982a9ee2b33c8a098",
      "IsHidden": "False"
    },
    {
      "Start": "f0158e196b914d6593d139208663de1e",
      "End": "e10b11e9f9324153951db0d865b02a9d",
      "Id": "f28079b9689c4ee3ba021e904b457ca1",
      "IsHidden": "False"
    },
    {
      "Start": "ffaed9f25f53417bac577d40f5730e84",
      "End": "e84893d877d4480d9db1fb6def8161d7",
      "Id": "326aa7cf64ba4149bfc7a4522c28b621",
      "IsHidden": "False"
    },
    {
      "Start": "12381cca0f8a41e3bb989452cf05e280",
      "End": "6c7faffd5fa8479cbe9a2c855f6a6b25",
      "Id": "fe9bf2b6ba9e41d6a552aef1abfc2472",
      "IsHidden": "False"
    },
    {
      "Start": "d5bbd57694084107858e6930d1b0b372",
      "End": "5b1c155a1f2e4f53acbe53d576a18d48",
      "Id": "90075d22efea4fe88b2e4da34424fc00",
      "IsHidden": "False"
    },
    {
      "Start": "c4770aaf2926487d80777c344f744ef4",
      "End": "ec6e12736b264dcfa9ea1d1009e19e00",
      "Id": "a99a6e458abf4b4abbaa5e3d6fc670d5",
      "IsHidden": "False"
    },
    {
      "Start": "3f99b45e0bf64bc580156b34befdebad",
      "End": "720734c12c1e4124a6fa9e6ab96e2e84",
      "Id": "205ebc20df4440f0976445eb9aa90493",
      "IsHidden": "False"
    },
    {
      "Start": "3f99b45e0bf64bc580156b34befdebad",
      "End": "cbaed8e74787495391ca2f2b01f94eb7",
      "Id": "e9d98403e19044e08ef4b4b183f1acb9",
      "IsHidden": "False"
    },
    {
      "Start": "3d32b7f2d72d4fcda334877f0640e1fe",
      "End": "fc9121a4de6744648b17833e7657928e",
      "Id": "a6e270eb6805477db667cd244bf40e19",
      "IsHidden": "False"
    },
    {
      "Start": "f8722e07d8824498aa68e82192c6a696",
      "End": "5b6ef91b992b4e6abb34b684168fa692",
      "Id": "3dce9191fac5480d93a6a25d12603d08",
      "IsHidden": "False"
    },
    {
      "Start": "e470123f5ddd44be8eb1f41554b32a06",
      "End": "0488ff07c4e24e088f9fa9d637334d8b",
      "Id": "c05d0ecbaf504edbaa09c89980c5b7fb",
      "IsHidden": "False"
    },
    {
      "Start": "e470123f5ddd44be8eb1f41554b32a06",
      "End": "6d488910e8754305a44b3387ded62b66",
      "Id": "3ae0defa32bc4cec8533196ab9bc3077",
      "IsHidden": "False"
    },
    {
      "Start": "eb754dc95da1459c8e46e9269ea66c10",
      "End": "2c8d93709c6b4b1aa12c47d557af0dc0",
      "Id": "35320085654844b8863f6c0f25d13f40",
      "IsHidden": "False"
    },
    {
      "Start": "9e307571679e43e293b87b5e2cd4a588",
      "End": "e040215d80b44104bc32e6a85c2fce68",
      "Id": "bc171fb8bf5b4231b0ec1e5871fa764c",
      "IsHidden": "False"
    },
    {
      "Start": "b362ed11ec7f462988416b970281dd88",
      "End": "21948b4112324455834c904f5cbd0a39",
      "Id": "f6908f82e50b4e55b52405621531e632",
      "IsHidden": "False"
    },
    {
      "Start": "c1b7c1994dd04a5c8e64ba6007e100d2",
      "End": "6a54cc8c908f434e9b2464e2a11a5a44",
      "Id": "8bb13b796e744fe49f76fa08d278a8d4",
      "IsHidden": "False"
    },
    {
      "Start": "c1b7c1994dd04a5c8e64ba6007e100d2",
      "End": "35899d1b184847e89f7c304b8da0328b",
      "Id": "b1a6006eec344396bb88a06ca7b61693",
      "IsHidden": "False"
    },
    {
      "Start": "c9054077b3c14735a08b6f708e7306a9",
      "End": "81d52999a8ee4fc9b89a04f667bcdcf4",
      "Id": "9c29f6e60b84496ead051f6c79edb7f5",
      "IsHidden": "False"
    },
    {
      "Start": "c9054077b3c14735a08b6f708e7306a9",
      "End": "2ea52470e3b94a819da0adff3b40b810",
      "Id": "73ee43f872554b1497a7f0399c5dbe39",
      "IsHidden": "False"
    },
    {
      "Start": "83deb5ed45444de6b03e70ec9a27aa7a",
      "End": "428d8f44eb86492abfb3a0e7d9b3d53f",
      "Id": "2f31ef0e7cc24c508993b771d40e3ef7",
      "IsHidden": "False"
    },
    {
      "Start": "5ef0db710d6945fdaa88f4f4e647f3fb",
      "End": "89c505f2f13c4db3be827879af3b65a2",
      "Id": "14f5f70e0c22413a83da9533023ca1c0",
      "IsHidden": "False"
    },
    {
      "Start": "5ef0db710d6945fdaa88f4f4e647f3fb",
      "End": "592667055f624e649a42cc1417d9b5b9",
      "Id": "5ae4df64dd834dd4ac447e5bd1ccbe3a",
      "IsHidden": "False"
    },
    {
      "Start": "770605b538c0412baae5e500e14630c3",
      "End": "d0ba7f928722440e85b9c11719ed82f0",
      "Id": "b1a24eb336e74705b1f599070ec83f4e",
      "IsHidden": "False"
    },
    {
      "Start": "93e758071be54d89a2d84d867d3c85ad",
      "End": "0a7d23c4d69e4f13a1c9cea776ed6f84",
      "Id": "1c9e116a0a804ca59a058db9f5b27c63",
      "IsHidden": "False"
    },
    {
      "Start": "f2c838551f3740a08caed8c53b8c16c3",
      "End": "9ecf33679fc8455895eaebfd1e49c805",
      "Id": "a897be7305c7437db6502f4eb13b133f",
      "IsHidden": "False"
    },
    {
      "Start": "0adc339b94c14d12b1c381af443af235",
      "End": "2d640f29a66f42e7b7511fb7170155c5",
      "Id": "efcad23e8af7496583ccac966aecbadb",
      "IsHidden": "False"
    },
    {
      "Start": "40ff7ae1461245c89f9a16b88b306abd",
      "End": "3348bb7297da419f89eb97b3ae4c30b3",
      "Id": "f44111a202ca4d50904654832bf96741",
      "IsHidden": "False"
    },
    {
      "Start": "be11be02b4a94f5b90378e3f04fb97bd",
      "End": "cacdb2750cc64461a6bc664df97d00d6",
      "Id": "2e94ac4d71d048559c5596378f99d136",
      "IsHidden": "False"
    },
    {
      "Start": "be11be02b4a94f5b90378e3f04fb97bd",
      "End": "4c5ec0fbb9114b44bb8fa2a82f66f4ca",
      "Id": "37759ef97fc346b4b0d1cb56b024a37f",
      "IsHidden": "False"
    },
    {
      "Start": "fa9b66834da54792804f28b1e2bac8be",
      "End": "2fa86db2c3e84b6092cd0fd5059e18e3",
      "Id": "3330a81c5b85498e810ab86ce64b29ce",
      "IsHidden": "False"
    },
    {
      "Start": "2b8a35cef99b49f48aeaac194297944b",
      "End": "afc635311f704722ab2d0404d8d8a92e",
      "Id": "4f918d923a81418d858b7a9f02cfaba7",
      "IsHidden": "False"
    },
    {
      "Start": "2b8a35cef99b49f48aeaac194297944b",
      "End": "4a505c97d92a4851a414627fcb24694f",
      "Id": "129c8adac55a4a158cf6d81504e9d5da",
      "IsHidden": "False"
    },
    {
      "Start": "bff09e8499d44fe9b0cbdb1ec0309223",
      "End": "440cbba41f134b689631ebd92bce6a2e",
      "Id": "24b1be3a50d844c99be770d7d56479dc",
      "IsHidden": "False"
    },
    {
      "Start": "3f5cb6381e9e496ba22818e56688b020",
      "End": "007f433653df4d42a9ff49aac940c82c",
      "Id": "e2ac05618c804b56b3b0bd842b463707",
      "IsHidden": "False"
    },
    {
      "Start": "15bcc694b5af47d9b82ee10e9aca54ce",
      "End": "46a0ce03f6004b64a111e1d7ae4e2117",
      "Id": "654f72d1f061461dbc8373f3a65ba3a3",
      "IsHidden": "False"
    },
    {
      "Start": "e66590dbe89d41c381e24007d916b593",
      "End": "bc2f27fc98554580b3a63154be2ccd6a",
      "Id": "18b036493afe4bcaa2ae9d86ca6339ca",
      "IsHidden": "False"
    },
    {
      "Start": "99b5d487c53743a3b69da88263eb666a",
      "End": "0a0748f8e7ba458686bb465c77f256c1",
      "Id": "808069b558d144d7a3efa80c0c483d4e",
      "IsHidden": "False"
    },
    {
      "Start": "a63772fbb8084449909c52e49f571c59",
      "End": "81a1f6a68b47496b89ec8145a1356453",
      "Id": "a1fd3e15ba464cd99aeb15ed9a71d96c",
      "IsHidden": "False"
    },
    {
      "Start": "e80f342e628d4e03a5d5e30f86af69c6",
      "End": "b666451cf0274ba9b683843a3801753e",
      "Id": "6f12697e8cb3422499c6ffe9b66daf87",
      "IsHidden": "False"
    },
    {
      "Start": "afad334b221a48089bcc314d1f7fed0a",
      "End": "086d040ab17c4a2e964574348bd79039",
      "Id": "54ad9ec2286f4eeb9cbffa1a69c37911",
      "IsHidden": "False"
    },
    {
      "Start": "afad334b221a48089bcc314d1f7fed0a",
      "End": "d2aefe0d5ff946f293586334500a8188",
      "Id": "3edebe653ee1454e9bd20b982fc3c1ba",
      "IsHidden": "False"
    },
    {
      "Start": "afad334b221a48089bcc314d1f7fed0a",
      "End": "4accada1173844d89131f3ef48a2367a",
      "Id": "e62ec6efab364efcb95028933c4a2462",
      "IsHidden": "False"
    },
    {
      "Start": "afad334b221a48089bcc314d1f7fed0a",
      "End": "98e5fcd8ff4248feac177376f91d4103",
      "Id": "1bd9ee8e5cec4686acfc2bf5f7fd522b",
      "IsHidden": "False"
    },
    {
      "Start": "afad334b221a48089bcc314d1f7fed0a",
      "End": "fd2b1a11c6cb4edebb6d8033fe6628ae",
      "Id": "eb6f5fc2f1424912b3d14c9803cfd9ce",
      "IsHidden": "False"
    },
    {
      "Start": "672019fc278749118d311a9ee3aae0a5",
      "End": "d21310989e934bff919f7541519397ba",
      "Id": "e8ab7dee937d4078ae5794d70c34a096",
      "IsHidden": "False"
    },
    {
      "Start": "157463ceb69442298c15e2c021345d77",
      "End": "4e131c877b654d13818c97920cc65a0e",
      "Id": "016837aef3bc46228b947484a986847a",
      "IsHidden": "False"
    },
    {
      "Start": "1afc2466c59a44ee875636687d0d21d9",
      "End": "06e6679bb040496fa45a923c4896e3b3",
      "Id": "a74d67c3b75a4197a4c86dced9a36871",
      "IsHidden": "False"
    },
    {
      "Start": "1afc2466c59a44ee875636687d0d21d9",
      "End": "bc9ec6663924466889bbeb5eb401d11e",
      "Id": "8d2cad6c8ef94705b12ac72d732b4f19",
      "IsHidden": "False"
    },
    {
      "Start": "ef342ecc7f8340aebc6327d33cae2521",
      "End": "aa449852985e4694bbb50be779b204d1",
      "Id": "2b5a2e2aefaf49bfb45d9d1946821c26",
      "IsHidden": "False"
    },
    {
      "Start": "ef342ecc7f8340aebc6327d33cae2521",
      "End": "d963cc9c593741db8136c05b35c6d169",
      "Id": "df05696f35de483b8b6171905355619a",
      "IsHidden": "False"
    },
    {
      "Start": "ef342ecc7f8340aebc6327d33cae2521",
      "End": "0629361d9cae47ea89ecc1c91e63b084",
      "Id": "ea89fdc94c52440bb9d69356cd63be05",
      "IsHidden": "False"
    },
    {
      "Start": "e7ef0e9be3af49d7b2ab05d30a02309d",
      "End": "6264dfe1c9ec4cd5b9a9f4d51d153e7e",
      "Id": "fe083a604f864185951e5d422730e97a",
      "IsHidden": "False"
    },
    {
      "Start": "d8932447e9c047fd973b27f179e2a90b",
      "End": "078cff33b1df4d31adca7683add98d6a",
      "Id": "e58b139bfdb141ceb190a0ae2a83241d",
      "IsHidden": "False"
    },
    {
      "Start": "57d31226b4854f18b9716470cead4f6b",
      "End": "e91c440f8d384d1d979014faa64d8959",
      "Id": "42f157eeb9684f4492e469fe0f5cdfb2",
      "IsHidden": "False"
    },
    {
      "Start": "397f77466e56413fa1b926059d4c83e2",
      "End": "d927b0fd8c0e4ca79b2069416154636c",
      "Id": "924cd046271a4c7fb4edee0d906f8b54",
      "IsHidden": "False"
    },
    {
      "Start": "b1dbf954cdc4419f840cd245351f3c6d",
      "End": "24380fa6080c464e8182206cdcc9b44b",
      "Id": "dbc2e91cfb6a4ab8af88f13ac2cdf14f",
      "IsHidden": "False"
    },
    {
      "Start": "aa108a85eb1a40a5909da72d2457e726",
      "End": "d554c2cfff6c4d129d5edeb4931a263b",
      "Id": "4720998d9f9e4b31a8d04fe20b42dbe7",
      "IsHidden": "False"
    },
    {
      "Start": "ac680c339fe24e1da7e8d65d8aacfa34",
      "End": "681b5e68abb04362810b8f6898b13189",
      "Id": "2dc1b519af3d4771a9d75c9414778ec8",
      "IsHidden": "False"
    },
    {
      "Start": "f1302c3a0597479abcf70144ee298923",
      "End": "7d13e8f4507a4fa4bccaebef938d25b9",
      "Id": "3654ea1014814de7ab854be7f6e5d518",
      "IsHidden": "False"
    },
    {
      "Start": "386fdee78c2c41bf9239eb10a25eb164",
      "End": "c92d93d88c114c6fb872d63e6d3f64f0",
      "Id": "4f2538144da54f52953d69406e43ba2c",
      "IsHidden": "False"
    },
    {
      "Start": "386fdee78c2c41bf9239eb10a25eb164",
      "End": "c136abbaae594cd280d8840188473634",
      "Id": "3743a1cc438247d68266c79c2829ac7b",
      "IsHidden": "False"
    },
    {
      "Start": "386fdee78c2c41bf9239eb10a25eb164",
      "End": "c6d8bcbbf72344e2a3a601bc033ac43d",
      "Id": "a46927d7ffd945f581876e165e562203",
      "IsHidden": "False"
    },
    {
      "Start": "50978ce6d044453bb91fa5d9ded54579",
      "End": "e98db792ff94426787093852eff4b8ae",
      "Id": "a02180bd577a43dd9e401a9af129de1f",
      "IsHidden": "False"
    },
    {
      "Start": "50978ce6d044453bb91fa5d9ded54579",
      "End": "ac8ef311028e4474a9514bb1e3ca5366",
      "Id": "39fc90259cf242c3a1b8aecd76a3f47f",
      "IsHidden": "False"
    },
    {
      "Start": "50978ce6d044453bb91fa5d9ded54579",
      "End": "943897d138af4408a55b23cb70c5ff74",
      "Id": "51c6169621da438eae68aebfdf910634",
      "IsHidden": "False"
    },
    {
      "Start": "50978ce6d044453bb91fa5d9ded54579",
      "End": "6a137a0a4e014a9ea6175510977e22e8",
      "Id": "7af7df773c5547ddb4f7e9419b2e8b27",
      "IsHidden": "False"
    },
    {
      "Start": "50978ce6d044453bb91fa5d9ded54579",
      "End": "fe6bbb831c954fe99da4f3c421af0e80",
      "Id": "3b58715f2bdd454ba5dade2d70e5445e",
      "IsHidden": "False"
    },
    {
      "Start": "a0aa60d9e71b4216a3a788938b943ea9",
      "End": "dc2e979e1eb44d40b9cc8ccdc0d2338e",
      "Id": "734b3a346ab04d058ce4f0d818439b03",
      "IsHidden": "False"
    },
    {
      "Start": "a0aa60d9e71b4216a3a788938b943ea9",
      "End": "7c7c95eaa3764c0d89676bedc075a78c",
      "Id": "ac1e6597f4ea45338b0685ce81c4e535",
      "IsHidden": "False"
    },
    {
      "Start": "6b8a6518a7be479aa7ad1990507b6143",
      "End": "d98f0a25b0e04298bd171698518ce479",
      "Id": "5efd1affe88f4b49b63cfeea4fe39a88",
      "IsHidden": "False"
    },
    {
      "Start": "6b8a6518a7be479aa7ad1990507b6143",
      "End": "d8e0654ea51346249042a9abde735a4b",
      "Id": "4085d47b69884a02a4573ba25eb0019f",
      "IsHidden": "False"
    },
    {
      "Start": "6b8a6518a7be479aa7ad1990507b6143",
      "End": "3c85ef70c3b0455a9358e48cb24a9fba",
      "Id": "848fe1f3d4334df288b7d6cbc33437c1",
      "IsHidden": "False"
    },
    {
      "Start": "7bdd36dd2fdf48f7acfc1cd1cb82b3e0",
      "End": "2658460b0819453581ca89d5927334a3",
      "Id": "4fe7243a3db447feb0c81ea34fb4fe34",
      "IsHidden": "False"
    },
    {
      "Start": "37822b05565e46e398b28d797c5ecd76",
      "End": "1296352340d64303bdaf7d3ba56a0971",
      "Id": "1c0aeb56ebcd4c3c919abd36332197f5",
      "IsHidden": "False"
    },
    {
      "Start": "5c54ced2f9974168935c8b20c2aa88b5",
      "End": "aedf5166819b40149d4829d64fe27f4d",
      "Id": "1bfca3162e2b455298adeac840a6c732",
      "IsHidden": "False"
    },
    {
      "Start": "71a03590a14c4ba89a115de7e7159b21",
      "End": "32ed2833ac0c47ac9173ac98efd735ed",
      "Id": "361d3e2490f94694983ce94860eff920",
      "IsHidden": "False"
    },
    {
      "Start": "7a22b7efbe8c4d1e9755da043dae1288",
      "End": "c0e866c0e3c446f4a9b3b9c676859f53",
      "Id": "a4ac870ac97f46158536cb873f27b440",
      "IsHidden": "False"
    },
    {
      "Start": "19079e8938eb480989997862488e2fa6",
      "End": "8ea04ba3f0fb4870bd806380df658b9e",
      "Id": "09e280a721804a9a9919d4e64062e079",
      "IsHidden": "False"
    },
    {
      "Start": "44a1d0286bd9497a8abbe7ee702d79a8",
      "End": "4bf90494f523403e9aa7fe4f84d869bd",
      "Id": "e9b5155b9fed4dd0abc7dc671e863287",
      "IsHidden": "False"
    },
    {
      "Start": "55d7d02c165f4d1fa5f2139b1bd7c81c",
      "End": "31fb24712c8549d28ba369e889e5d706",
      "Id": "7bbbc8d8e87c4a3d8692cfdbcd3c76b4",
      "IsHidden": "False"
    },
    {
      "Start": "f588e8ffd83b42739c42ccfacaa95f57",
      "End": "f0eb71d564724462b7d6e8e2b24a0be8",
      "Id": "9ba4835eb8004fe7b5595cd89c217e86",
      "IsHidden": "False"
    },
    {
      "Start": "967bfbe4e0044fc28d0a4d7206b64a2c",
      "End": "dd0bf09a983d4ebc8d172740e1f977e4",
      "Id": "7f487b4197f540f6b9b2ab9392b7291b",
      "IsHidden": "False"
    },
    {
      "Start": "3d37ee30b555407ea867b5affd471edf",
      "End": "181fd897ada94dfc840f0cf659ee9c9d",
      "Id": "5592a83c90bb49bf9c04c79c29b5893d",
      "IsHidden": "False"
    },
    {
      "Start": "1ef94a7e490d4016b6c0a1152892ce52",
      "End": "84cb41513ed14980b17ff8c56e456a2a",
      "Id": "845db50a42704c98883c5eb72ee5e96f",
      "IsHidden": "False"
    },
    {
      "Start": "839e21f6763141eeb6e15e9f4ffbac27",
      "End": "2a6498b52a6949c690982cb072a46e24",
      "Id": "10d4fe40141848668818b4330da97cd7",
      "IsHidden": "False"
    },
    {
      "Start": "839e21f6763141eeb6e15e9f4ffbac27",
      "End": "1ed0a6c3529a4d15b4398a1f427ea986",
      "Id": "80a38325efad4b25b97a14273c721a56",
      "IsHidden": "False"
    },
    {
      "Start": "176d9ee9a39c49fdae6643f681f5aef5",
      "End": "11bd5cc627714cea9d1fac7ffd73563f",
      "Id": "4b9dc6a326b1465baadaf02732726e46",
      "IsHidden": "False"
    },
    {
      "Start": "176d9ee9a39c49fdae6643f681f5aef5",
      "End": "2df293f721e64453acb42599c09cf50e",
      "Id": "6a26c44ba56d40c593d18da9d8be6489",
      "IsHidden": "False"
    },
    {
      "Start": "8ce51dd2763344889423fe466392bd35",
      "End": "35dec213cd3045fbb685ad0c20afb5b1",
      "Id": "c594c4ef04a54c7fb50a29cd1ccecf21",
      "IsHidden": "False"
    },
    {
      "Start": "a8b623ba0bec4fbf94770d2de6c25abc",
      "End": "97e6893569124210b7b4ca86af526bbf",
      "Id": "c80c286a6cdc4a23b6150aebf98b1408",
      "IsHidden": "False"
    },
    {
      "Start": "7781c0b0bc9c4409b4ace4aa3dbb4d57",
      "End": "e7f8a59ff4284c5a903a55fd7cbde39d",
      "Id": "ca3a88c5484d40a5a406c67f9cf4a835",
      "IsHidden": "False"
    },
    {
      "Start": "3f0ab7d17c1e402c81622fc502ec5289",
      "End": "2b182d370ed645a5a15acce54d3a31ed",
      "Id": "e1560069a0de48e6bb2db56261c8ff11",
      "IsHidden": "False"
    },
    {
      "Start": "3f0ab7d17c1e402c81622fc502ec5289",
      "End": "da6479e806d8484f84983bdfaabaf8fe",
      "Id": "5ec51aa2c0d14af78d9f6a0eb00cc85f",
      "IsHidden": "False"
    },
    {
      "Start": "f338f9df5a094750b8321e61c49d1c30",
      "End": "88845d5594e44763b6e63e46d7ab13b7",
      "Id": "826ced8c72b840af83d3d86977319453",
      "IsHidden": "False"
    },
    {
      "Start": "d7933ad8239146fca9bb7a4563a1b9d1",
      "End": "721088b29f0849c7972df84be404cabb",
      "Id": "9c3f509ad428475aaeed455517a4dc89",
      "IsHidden": "False"
    },
    {
      "Start": "050b3be4f24341579562ed9bb5df1bef",
      "End": "e6d6191e89fd4a0096a381009e88941f",
      "Id": "be2b8158e2434292a5b7a68e9544857f",
      "IsHidden": "False"
    },
    {
      "Start": "9938042b87034a0cba30cec37a4e27b3",
      "End": "d42f152c13034741aead537d9a0ca840",
      "Id": "b9a7070efa41425e933ba64a122245fd",
      "IsHidden": "False"
    },
    {
      "Start": "9938042b87034a0cba30cec37a4e27b3",
      "End": "7cf582af6f944532ab1e6a5e8ba3c06c",
      "Id": "939cbf4119cc4685aec551e4fd6a989c",
      "IsHidden": "False"
    },
    {
      "Start": "9938042b87034a0cba30cec37a4e27b3",
      "End": "58874b93b46c49d5bfac938ef4794646",
      "Id": "1beec17e2c534c59b716998f28f97c63",
      "IsHidden": "False"
    },
    {
      "Start": "395717959abd4a1aab402597316ed4ff",
      "End": "24b4f6bc41d94e7a8ee3e8f7f26ae86a",
      "Id": "85dd898b73cc47499c68d008e4d6430d",
      "IsHidden": "False"
    },
    {
      "Start": "113d1c3cf1884c2394b39588cb635b2c",
      "End": "c0aca339c4e1445a93bcac4b8a2364a8",
      "Id": "b7886943181443c886be5f0c28c2b4f3",
      "IsHidden": "False"
    },
    {
      "Start": "f814eb0adca7434db02e4319fb497707",
      "End": "1ce919e00c154bdf94c0b4a0ca3f4595",
      "Id": "6dd3860cdeac4237874efc51c31fe1ba",
      "IsHidden": "False"
    },
    {
      "Start": "d9029b6dad6245f89699c9544c465dda",
      "End": "e7cc2b5ff88a4545b79ffaed381b8eb7",
      "Id": "b963c588e75e471a83308fa09d8ce6c4",
      "IsHidden": "False"
    },
    {
      "Start": "d9029b6dad6245f89699c9544c465dda",
      "End": "4d6f08a1f9224c3281b64906d64ba2a7",
      "Id": "8619d10cfbcd49b0b0132d44a61a3f42",
      "IsHidden": "False"
    },
    {
      "Start": "e850032643e848ffb38292e3112bf16f",
      "End": "c15fbb772d0a44fd8979d3c626775068",
      "Id": "a62cc6487cf141069dae20fc4e7af8dd",
      "IsHidden": "False"
    },
    {
      "Start": "e850032643e848ffb38292e3112bf16f",
      "End": "9840542f5aef494f813eafbacde301ea",
      "Id": "700c5d01c5f14e6c87fd7d4de73eaf39",
      "IsHidden": "False"
    },
    {
      "Start": "46f966b7e1154006b157bc1066f77294",
      "End": "23f07e97630f4ba1bcb80118c6246bf6",
      "Id": "49a96ee0f2ce4df597c23831083d61f7",
      "IsHidden": "False"
    },
    {
      "Start": "05d2be3aa81f4fc8ae1f0e04b547d28c",
      "End": "755f527194bf434a8691893b3938e18d",
      "Id": "fca770615f6a4ba289b29068f4a638b3",
      "IsHidden": "False"
    },
    {
      "Start": "d34b4a9e75a1415c9444eab18a53571f",
      "End": "e5bb76f9508649b8825a9a1e7046c857",
      "Id": "130a8cfdf89f41ccaade61fad4e65f50",
      "IsHidden": "False"
    },
    {
      "Start": "49624d173e1143bb9060441eddf2219e",
      "End": "cd4b4d9691714440aa747cb496adfda3",
      "Id": "788e1bc703e34838b9bd0af04b3e2a1c",
      "IsHidden": "False"
    },
    {
      "Start": "0af1b840a06848b185a90f59a821bad5",
      "End": "7f11c7df8ad64860b4b11feaa12c3308",
      "Id": "dbae66c429ac467b8e47b5f08d508345",
      "IsHidden": "False"
    },
    {
      "Start": "376799d543d04d728d9f795d0e612ae6",
      "End": "04a130007ba9416ab0db648bcc2f52bd",
      "Id": "e40b2b3ed5594b458d15c45c69fb15ea",
      "IsHidden": "False"
    },
    {
      "Start": "99f37635c6254768971a123e2d98a414",
      "End": "597ce459a1e248408867fc9433bee3fd",
      "Id": "993345ac2e284481bb3aa0a5848560c8",
      "IsHidden": "False"
    },
    {
      "Start": "34c9504ad8964e9a8f6a76ac5c645204",
      "End": "527de3cfced847528bd3f33cca412375",
      "Id": "0d68622f88d44399b2b42a70794eb7a8",
      "IsHidden": "False"
    },
    {
      "Start": "0dec566b2d5942508fda78bbe90b9822",
      "End": "f503f8036bae4875b7c53c4ff0604b1f",
      "Id": "f6155f5d49764c809be5cce1d71a7e24",
      "IsHidden": "False"
    },
    {
      "Start": "0dec566b2d5942508fda78bbe90b9822",
      "End": "4d1d3018307b415c919aac86bcaf6f02",
      "Id": "b62ca6dc78f74e6b9a14f6934512ccb0",
      "IsHidden": "False"
    },
    {
      "Start": "0dec566b2d5942508fda78bbe90b9822",
      "End": "76257555ffb24afc8c57b9739e62399e",
      "Id": "c35f4b401fb24c5889580ed2ac25d306",
      "IsHidden": "False"
    },
    {
      "Start": "5bd261af7f3845cbb3e2a6df54d9a25f",
      "End": "bb43f9338cf640c29890aac644a60e0c",
      "Id": "d25893901bb34f26a02a0bdf0ff79163",
      "IsHidden": "False"
    },
    {
      "Start": "68ec006a4b914717ac2e9f68e55ddac4",
      "End": "051c23caa6cd46b9a7110fddc635d978",
      "Id": "825075dae0eb4758a6b7f84a0b45bed0",
      "IsHidden": "False"
    },
    {
      "Start": "89bbdf78d1de4a968f0bdd35f13b8c08",
      "End": "d9400b4b59c047429266d1b892d33ed1",
      "Id": "67b42cbcf17e4758b2ec0fbdafc753f7",
      "IsHidden": "False"
    },
    {
      "Start": "2d974bb8725f46ff912ed8a2a3cee07d",
      "End": "960eec0c0c3c455d99655b593db3df0d",
      "Id": "4a190e5060aa44e1950beb77501de354",
      "IsHidden": "False"
    },
    {
      "Start": "dafd1f74b8134bad83bb195d9f136cc8",
      "End": "d9cfb2384db843aeb3fada27a317466c",
      "Id": "1f890bf33e99444b9b4ab9dedafb9bf1",
      "IsHidden": "False"
    },
    {
      "Start": "dafd1f74b8134bad83bb195d9f136cc8",
      "End": "73f94a5ef45b4add93f250e1667df8ac",
      "Id": "9317212884794fcab76c91ad6e6a2ed3",
      "IsHidden": "False"
    },
    {
      "Start": "dd12b58407014c468e2b0aa8e2056c3a",
      "End": "5ffaaca8531d4035bcf44f246eff7353",
      "Id": "cc47f532ebdb4805b9aa7c9a3828c0ac",
      "IsHidden": "False"
    },
    {
      "Start": "421e8d4f32364f2380f426053f59a63d",
      "End": "281c3a2491834f2ab5ae702d21f84493",
      "Id": "bfd05805f2d34965bf333612647c6d49",
      "IsHidden": "False"
    },
    {
      "Start": "a463d23f63004ab6a95198f40ada7c01",
      "End": "3120bb6dc4c447809a12ff36cec4e947",
      "Id": "33f0fb3eadd14ad9b170e277ef897152",
      "IsHidden": "False"
    },
    {
      "Start": "ad17438b80f94f79accb09217ecb8bad",
      "End": "b886e5ad6fb34d42ad6628e4c19bd899",
      "Id": "9625700ef6cd4a1b89668f294b29547b",
      "IsHidden": "False"
    },
    {
      "Start": "ad17438b80f94f79accb09217ecb8bad",
      "End": "04cf1135111d4910af5930f7757c48e0",
      "Id": "d3c38211ac5b4080add1306da92a428c",
      "IsHidden": "False"
    },
    {
      "Start": "ad17438b80f94f79accb09217ecb8bad",
      "End": "b2f771d1ca1d4fba864186be6afeba64",
      "Id": "7f0c04ceb0c34f0cb22fdb7c563a124a",
      "IsHidden": "False"
    },
    {
      "Start": "7a0ff2f36d88435cb79bf4265b4e08e4",
      "End": "aa65ab4011604387872d0c0d7fea1281",
      "Id": "b2cd61b6a5494698ae64f3e764c232a9",
      "IsHidden": "False"
    },
    {
      "Start": "1e6ae4ae48574044bfc74e99b0d8fe28",
      "End": "64758f350b8b418989f80c9c81495cdb",
      "Id": "ff39e606efb54f6dab46a6a913e00339",
      "IsHidden": "False"
    },
    {
      "Start": "1e6ae4ae48574044bfc74e99b0d8fe28",
      "End": "d4dcf14fac87424f8856a04237e47092",
      "Id": "cc47a3f1b41a4f34bc7bb9dcb4c1c982",
      "IsHidden": "False"
    },
    {
      "Start": "449fd420fa674441b7867f1303790b9d",
      "End": "cb2e10c8190341af8b8c61401533c9bf",
      "Id": "f206593e39b64be1b026ff7092fc00d8",
      "IsHidden": "False"
    },
    {
      "Start": "37b90d96ca954fb9a49368595892af1a",
      "End": "5fcf79447d4447809fb84ff13a5e17cb",
      "Id": "67f5db98323447a08acaed313777f5b7",
      "IsHidden": "False"
    },
    {
      "Start": "1494f647cc814c949bf9cd27cd1fcb64",
      "End": "635188854a73492d94a64efaef42f682",
      "Id": "14f3f90c877842b78ca129af48a0763b",
      "IsHidden": "False"
    },
    {
      "Start": "09b974547e8c41e8b2dc073bbaf4e6b7",
      "End": "5b0e2b420efd4a26ad8149d33565d4fa",
      "Id": "6f6a5a0856cf400298a7227371b6827a",
      "IsHidden": "False"
    },
    {
      "Start": "a0a20d9cb09f4abcadf75bbbd6ac0b2c",
      "End": "0618b12d263e42058cb83dcf861ec647",
      "Id": "91491cb5f01e4843bd94a0e16983e6ae",
      "IsHidden": "False"
    },
    {
      "Start": "0c27ae9f42e44aafb3c1361be0ccafb7",
      "End": "5ad6b8a627e24ca68c60f2d10ade52f4",
      "Id": "c2393d2898094a1b9f94ab4fc45f42bd",
      "IsHidden": "False"
    },
    {
      "Start": "9affcec58d654cd68db5daba04eaafb7",
      "End": "02aa4aed86bc4dc98561b47ab8af58c6",
      "Id": "3a0ad22593b34136a60f3ebb653efa63",
      "IsHidden": "False"
    },
    {
      "Start": "541d88011b2f45408ea9edccf1731adc",
      "End": "502c92625d1f4e559660fef1868e067d",
      "Id": "db8151c902634d26a48ccd82991dcaba",
      "IsHidden": "False"
    },
    {
      "Start": "c21a1da25add4cc6acf9ef15514db11f",
      "End": "bd1a7d8042cf44f8afc13165ea312605",
      "Id": "fa6041942f9240f7954740df23b8de44",
      "IsHidden": "False"
    },
    {
      "Start": "40e00dd60d6b440f9d4ac054111b377d",
      "End": "339926505dff461f801c6d67169a3a9d",
      "Id": "3f42545187964073b8ee282c84bc5dc1",
      "IsHidden": "False"
    },
    {
      "Start": "12a6169e276240d28be010cb6ce6fc99",
      "End": "4493563cb52a4a9b9e7a717ded910626",
      "Id": "f93546db49d14776ae34c6a450f90d73",
      "IsHidden": "False"
    },
    {
      "Start": "734d2096cda246ab85bb78c61dadb0bc",
      "End": "eabc14d7afbb49a980bccde36234a86c",
      "Id": "ef953d543f4f4d8d9bd3a71e44ff1c3c",
      "IsHidden": "False"
    },
    {
      "Start": "981b46398cdd4f6399df5b1fa031f2a2",
      "End": "d2f1c3b254af47a8b650d25d02b36b58",
      "Id": "2bdbbfa7ad3a4c6e976c75bf8dbd5bb7",
      "IsHidden": "False"
    },
    {
      "Start": "f1a36e162b6841d1be2d06bb052e8540",
      "End": "dcb17a872dab48b0a2d1709c3c579615",
      "Id": "09a778274139472fb0bb9abff377d812",
      "IsHidden": "False"
    },
    {
      "Start": "916a9e7796a440309056b28164932322",
      "End": "b8a8001ebe7446eab31eccf2bd7966ba",
      "Id": "832cc9b15ea34b53b83be504f68a1e6d",
      "IsHidden": "False"
    },
    {
      "Start": "fda22d7d689444089deab45c839a2a8f",
      "End": "ce949cecc08e47ce8c02b5316a866b22",
      "Id": "e13c76485e694829ba5de2db7c11758b",
      "IsHidden": "False"
    },
    {
      "Start": "b03e1145701249d2b4394b76c58e1610",
      "End": "d5efe96a2c6a4d68b5c419156349a95a",
      "Id": "3ad11a766e7e44539f28706a6a7878ed",
      "IsHidden": "False"
    },
    {
      "Start": "1dc7f30ecdc94e42844392f45e489cdf",
      "End": "c02eed54409c43888a8d9276da054bcb",
      "Id": "430ce8fae959466b8a5a9284fdd405be",
      "IsHidden": "False"
    },
    {
      "Start": "051ede1886c6482e984cb0793900c0ce",
      "End": "972efd2a4dbd4efd96d1f61756f83e0c",
      "Id": "1db7d4b00c9046cf9dc300996fe2dbca",
      "IsHidden": "False"
    },
    {
      "Start": "7501e151203b4f8cac85e63f047077c3",
      "End": "100c918a7c4040479901d6cd21bdd561",
      "Id": "a5b40d8af89f4d31bc6fa4c99081ccff",
      "IsHidden": "False"
    },
    {
      "Start": "b0a8d101c8274916b0de318e949581fd",
      "End": "d8edbba097b440dbba84c90d701d27dd",
      "Id": "2f225969604a44528b275fd34e5edbab",
      "IsHidden": "False"
    },
    {
      "Start": "1b1af88070e24640b66f4d12cf5a7d22",
      "End": "d0097d4801ea41dc9e9b8d5f18545634",
      "Id": "11404f8b6e9f4093ba2cbd8d77787252",
      "IsHidden": "False"
    },
    {
      "Start": "1b1af88070e24640b66f4d12cf5a7d22",
      "End": "0508391eb3e948298d9215eae87448c2",
      "Id": "e62f3ce6b8304c588223ac4008e0fd1d",
      "IsHidden": "False"
    },
    {
      "Start": "1924fbdbe7de4435a831997fbc71142f",
      "End": "ebb5fd3a469541d49772bfd8b662822b",
      "Id": "a1416773bebf415db6f3891aa92ec4bd",
      "IsHidden": "False"
    },
    {
      "Start": "a4cd36593d5142028ecc5e9ca7fc031c",
      "End": "ef4232a40aa0402396c9658bb6fcd1ff",
      "Id": "dad82dfc0b8643819621b8513c19fd16",
      "IsHidden": "False"
    },
    {
      "Start": "a4cd36593d5142028ecc5e9ca7fc031c",
      "End": "e35a5fbc323b4be98ea0d6db5088b2b8",
      "Id": "bb0ff5425de046c7ad9270d452cfb132",
      "IsHidden": "False"
    },
    {
      "Start": "1cf43d5ada174dccbbdbdf21737a8313",
      "End": "6ad1d6b30f4748d1a86d3afb804fc2f4",
      "Id": "9902832c2a5a4ab2a829e8e26469beba",
      "IsHidden": "False"
    },
    {
      "Start": "bb100ec3ae8b4d57afb4c922031f494d",
      "End": "8183c1f2f7ed402ea9c31194ef0602c5",
      "Id": "c2d4e0e8b4474c659841c8718b014b0b",
      "IsHidden": "False"
    },
    {
      "Start": "e2b1c9f2819346bbbe8e61b1391c3fc9",
      "End": "5688940ef5a14249835de32f0bb48c1d",
      "Id": "2017b71aa14c4b359ffdaf254e69abcc",
      "IsHidden": "False"
    },
    {
      "Start": "77fe4da4b7fd4c6a88141507e7423334",
      "End": "0b504f79cbdc40cab0e335f2354d0934",
      "Id": "137443dbad454bbb814577d037f91549",
      "IsHidden": "False"
    },
    {
      "Start": "d0b9b577838443f0bafa383fc7388a87",
      "End": "5a492a69d1084e1c99fb688cfaa89787",
      "Id": "2ac92a37a23b4f6aad9861b8d2794f1a",
      "IsHidden": "False"
    },
    {
      "Start": "6d06996324e14e61a8c34cdfaa4e5b62",
      "End": "4a72b3d02e444c64bb02283c6fa6e6d0",
      "Id": "8179a67e9162436bb9d0ab36a2decc3b",
      "IsHidden": "False"
    },
    {
      "Start": "6d06996324e14e61a8c34cdfaa4e5b62",
      "End": "0d58cd2fd0994caf92cdeab2bdfa92e0",
      "Id": "e175f55a87774c47bd18aa8d3d6f22a5",
      "IsHidden": "False"
    },
    {
      "Start": "47d404299d994047a24032758b98ba80",
      "End": "6d369512bca846f0b4de591bdbc76fbd",
      "Id": "74fd3605f60b46afbd64cfb4fbd8ee2a",
      "IsHidden": "False"
    },
    {
      "Start": "47d404299d994047a24032758b98ba80",
      "End": "9449278d6bfd420692a5b427955e2324",
      "Id": "55f88115cc6d47bdb20f73b66e317882",
      "IsHidden": "False"
    },
    {
      "Start": "3ee43dca5f2c49bf839209b5c478fc85",
      "End": "a33b2458c0ef4f9c9979ace1137e7341",
      "Id": "3902b60aa4754c3dbe7f1fa8be4cb462",
      "IsHidden": "False"
    },
    {
      "Start": "9971561960d04e3b85e165218bed0a57",
      "End": "861b2bceb6b0419cadcc763c7768b101",
      "Id": "21901b42f0b6432f99f969ab311bccbd",
      "IsHidden": "False"
    },
    {
      "Start": "34f3f95f296545129cf57bafa3bdd5fe",
      "End": "463f083546d34901b13bf7268b583dbc",
      "Id": "4fad3f53b0c64604811731a7b5fd32a5",
      "IsHidden": "False"
    },
    {
      "Start": "2e47edad325946b7929c66588ac15456",
      "End": "cb6f389fd6294e829f2ade894d793678",
      "Id": "6b3aa939a45947d69f061a9b80ecdadd",
      "IsHidden": "False"
    },
    {
      "Start": "d612faaa07974b96be9819923c1a657b",
      "End": "8d1a78d27dcf45caafc7c420bfac42d0",
      "Id": "e4be65bc553c4d9787f9a2c925b96c5d",
      "IsHidden": "False"
    },
    {
      "Start": "d612faaa07974b96be9819923c1a657b",
      "End": "15f7646fc8a94382a23de1ef37e4e713",
      "Id": "61eb87fb667446f58b623aaf95729d7c",
      "IsHidden": "False"
    },
    {
      "Start": "8f97613ab5944de680623f8b1bd8860f",
      "End": "f9deb5c39285401aa45f066dd5b9c6d2",
      "Id": "f32657267391446997d566cc9fa6d83d",
      "IsHidden": "False"
    },
    {
      "Start": "80909ffef2634134b8eeeadbec9c8eae",
      "End": "20e682d6b640462a8ca69c2100b957c1",
      "Id": "e2e71decfda44a4d8bad20c7fb92121c",
      "IsHidden": "False"
    },
    {
      "Start": "99d1e7704c5943be9bb5daedcf4a4022",
      "End": "08fe253e8c9546da8ea16e6acd3e7797",
      "Id": "c4f6ae3a769d41e38d473089831a904b",
      "IsHidden": "False"
    },
    {
      "Start": "cf0663d24c3f4df999f73c6b3551befc",
      "End": "e24fcfdb45c4490e867c70b47a3407f5",
      "Id": "28b331d700744c369df715bd4af1a1f0",
      "IsHidden": "False"
    },
    {
      "Start": "aad6a94bbce14b6882480cd7ccb7dbf5",
      "End": "14e00b38b07440da8ca6fc07bf714013",
      "Id": "0a5b87c741b24cee8d22cc07832dad4b",
      "IsHidden": "False"
    },
    {
      "Start": "0ae67f1c4475444a9caee18bbbed1b11",
      "End": "8f77931c99994e5c88e2ce3730040b23",
      "Id": "1030085d739e49588cc446e81e9ccbaf",
      "IsHidden": "False"
    },
    {
      "Start": "264428c06f8e484a8ac4ae875d81514e",
      "End": "882fdfc16bb7486583e49f364babca2d",
      "Id": "ddb2787d807742309e4276a76dcc3ac6",
      "IsHidden": "False"
    },
    {
      "Start": "2d3486e4434a4becb9e75114da3ac4dd",
      "End": "5ece98697b5d418aa140622597291c2f",
      "Id": "48a3df5f45bd4865b7c987aa27a275de",
      "IsHidden": "False"
    },
    {
      "Start": "2d3486e4434a4becb9e75114da3ac4dd",
      "End": "03c84a5cbf414b2f9537cd34e8251fd2",
      "Id": "c5e88d64aafb4331b3c829b325e2d441",
      "IsHidden": "False"
    },
    {
      "Start": "2d3486e4434a4becb9e75114da3ac4dd",
      "End": "88f616c6c174418b98a33fee56e104a2",
      "Id": "aaa4c63621144a9fb4c7c74b6962681c",
      "IsHidden": "False"
    },
    {
      "Start": "da3bde33ce924813bb66b635fb9c00ac",
      "End": "09c1d2629f584b399ec882df2fc3f2f7",
      "Id": "f2716f73582447e8b2cd9eb384f06748",
      "IsHidden": "False"
    },
    {
      "Start": "da3bde33ce924813bb66b635fb9c00ac",
      "End": "e5f773c9b7774618a0925eee93841cfa",
      "Id": "c09a376421f74978b1ee8736153bd11e",
      "IsHidden": "False"
    },
    {
      "Start": "1af729342c9f4532b0bb5bd7f3d176dc",
      "End": "18af3639b26e4b78b3e825abfbeaaa07",
      "Id": "4fc95c98a6314a3cb474f5b9aeb1e14e",
      "IsHidden": "False"
    },
    {
      "Start": "c2575d2f7b694a6cbf316718dd9fb5e9",
      "End": "765d6e861ac445f28c0ee4b12b30e2eb",
      "Id": "bcb04f59a666412c8093d948601c344f",
      "IsHidden": "False"
    },
    {
      "Start": "b15c01d991604374a58a8a67057b2651",
      "End": "dd83cae0168f432eb6be71afc14e9362",
      "Id": "e5f141ffa573440f9e0fcf13cd9e3ec6",
      "IsHidden": "False"
    },
    {
      "Start": "b15c01d991604374a58a8a67057b2651",
      "End": "28c150e312a6436a8e542dbf66a74899",
      "Id": "be51d62040b841ada54efef24f45f379",
      "IsHidden": "False"
    },
    {
      "Start": "d4a58a71f9274328813a7e972c720370",
      "End": "6860b896ac8e4f2ca99d5e90f7989187",
      "Id": "e3b3b3b23cd4424ba82f0999960fe898",
      "IsHidden": "False"
    },
    {
      "Start": "d4a58a71f9274328813a7e972c720370",
      "End": "858b0351468c409fb171ba6e819e7183",
      "Id": "01d83d1c5b73478bab9e4b1133d03b6e",
      "IsHidden": "False"
    },
    {
      "Start": "d7e8a89299c24276b8bf231aacadaa4c",
      "End": "1be37f7ab7d547a2813214d2773f2102",
      "Id": "a7a1954d126b4715a31dd6ee87682933",
      "IsHidden": "False"
    },
    {
      "Start": "0c5d298aecdd451bbe07ec7d96f4ba53",
      "End": "460a68b42f0043f5be0e28cd1520ba5c",
      "Id": "b3350013238a4f89aeda257959721dc2",
      "IsHidden": "False"
    },
    {
      "Start": "6ea6ba2ff3814e65a1fb87c08cb7b7d8",
      "End": "23c65fc2958c477a8cd72b06f6392fb3",
      "Id": "6abdda0d772a43259534c3c25c307aba",
      "IsHidden": "False"
    },
    {
      "Start": "3158edc3cc72459da7609e72e1ea3278",
      "End": "1f2c66d805194846a409505edab35200",
      "Id": "918f7d43af1e46bfaed3c9be978ecd70",
      "IsHidden": "False"
    },
    {
      "Start": "3158edc3cc72459da7609e72e1ea3278",
      "End": "2178deb575b94acd8dedb18e5745bd29",
      "Id": "8311c181f903401a8dfabf1634d73c33",
      "IsHidden": "False"
    },
    {
      "Start": "73df77509723455a9c4ead84fbf5ca52",
      "End": "1a3f72341ad2496ba0adcf6071898588",
      "Id": "ec034394b9bb410ebf23f09dcb6d9ffe",
      "IsHidden": "False"
    },
    {
      "Start": "552e4185baa6431d87d8240948f3c441",
      "End": "1725fe99b29e4c65a34ad89510d33cc3",
      "Id": "72a467133f43480c81633b8b6f98240a",
      "IsHidden": "False"
    },
    {
      "Start": "c4cef83e96d74a5ba2c58111e3e030f9",
      "End": "9192793826a84242ba69d16c338ce6a2",
      "Id": "0a9f4ccf012747e9a6647b3ead619faa",
      "IsHidden": "False"
    },
    {
      "Start": "0e8068d0a3a84fdfa4649424609e1d50",
      "End": "2b9c20fcdc424ce7bfba7c096a2a1584",
      "Id": "842fa62832da40fb8332c4e41468392d",
      "IsHidden": "False"
    },
    {
      "Start": "0e8068d0a3a84fdfa4649424609e1d50",
      "End": "8d34a4cb9fd24b3cb95280eae276f0c3",
      "Id": "ea04b11cdb454a48890f868f51360ead",
      "IsHidden": "False"
    },
    {
      "Start": "567499d84b934a4184ba45a80f7eeff2",
      "End": "b5ed7b1498cc47af9689ff15d7b1f3ba",
      "Id": "9ae27cf048c14c29a1bfa09f24b988ec",
      "IsHidden": "False"
    },
    {
      "Start": "567499d84b934a4184ba45a80f7eeff2",
      "End": "ac9ef4fca78242d1b5da446f40decb44",
      "Id": "0924a613f67b4b4bb7a1b259b02c29ac",
      "IsHidden": "False"
    },
    {
      "Start": "567499d84b934a4184ba45a80f7eeff2",
      "End": "cb97142ddba4450d9a86cc4ae6e74372",
      "Id": "4cc846d24c7d4ff291edaae6d4aa424d",
      "IsHidden": "False"
    },
    {
      "Start": "a7dae6d6dc03442f856d7f980987e056",
      "End": "8267ce2d0d154fd3a2999a910c651e33",
      "Id": "03071f4ab3e5407bb002fcdd121a7ce6",
      "IsHidden": "False"
    },
    {
      "Start": "b9f77c35507f4e36bf0b41c3f4245249",
      "End": "c1931051748f40b8919be30944766353",
      "Id": "5fbf5404fb5b458e877e2c79ab073acc",
      "IsHidden": "False"
    },
    {
      "Start": "791857a410a64169bc0db5756a899692",
      "End": "577c3f7e91d34e2ca499990f077bbe4c",
      "Id": "c26b41dc77bf4d0e8607d7322a7f07c8",
      "IsHidden": "False"
    },
    {
      "Start": "da259d12ac79485bb9c414091f445c4c",
      "End": "f594910fa1574745b2dc833f66e936a7",
      "Id": "6d514341c52647869eb933b10047d5c5",
      "IsHidden": "False"
    },
    {
      "Start": "e195303d12af4819a0e427136079f265",
      "End": "ab18a5cd068c48a7810cdde0ee90dc60",
      "Id": "639d9867b9f047b583736a71179d98c7",
      "IsHidden": "False"
    },
    {
      "Start": "e195303d12af4819a0e427136079f265",
      "End": "20871556b3624d0db714e69dbce95d60",
      "Id": "655df8c8baf9481ebe4bdbe9a97aebee",
      "IsHidden": "False"
    },
    {
      "Start": "ad5ccd1e749742dda06e59e1ba25ba9f",
      "End": "e9ff8aba7dd74c38973dd1a6db02e946",
      "Id": "d5363d2049fb4780a1e92a9c912cc3aa",
      "IsHidden": "False"
    },
    {
      "Start": "00895b0246664d02b37d4c846344b5b5",
      "End": "569ad868634d4abfb9a7259fbfc5f28c",
      "Id": "f2060c2194bc430584d8cf6d2e91c4bd",
      "IsHidden": "False"
    },
    {
      "Start": "bb240fde190547cda400efb1f0453393",
      "End": "9f013726a41a4f28919821638f28a968",
      "Id": "9404a244ef2a4e369836850f4b3fdd24",
      "IsHidden": "False"
    },
    {
      "Start": "8a3ab5a100974da7ac7084209c4fd9d6",
      "End": "5e436ba0aaed44f39c5ef56d81d37cf8",
      "Id": "5efa39cbf6cd43dfa819505747875031",
      "IsHidden": "False"
    },
    {
      "Start": "f17c3a43e031446ab91b57273cf3a3a4",
      "End": "d99c2aba18c4449a84f337513a666326",
      "Id": "ac3d6b01a13646dda3fed1eef06c4478",
      "IsHidden": "False"
    },
    {
      "Start": "fd04709c36d845bc8411e267a9e09525",
      "End": "9db61919796e49968d4f646a655bb383",
      "Id": "a0a13d88a11f41e5be453954ea329a9b",
      "IsHidden": "False"
    },
    {
      "Start": "27760d6dc8e942a993cf7c0754f9a54c",
      "End": "bf348ef911d8441ea92e062e19cf07c0",
      "Id": "b210bc2feae74afd938dc6e2983893f9",
      "IsHidden": "False"
    },
    {
      "Start": "27760d6dc8e942a993cf7c0754f9a54c",
      "End": "07e01592615946c18e36b0fcc17f84a6",
      "Id": "ce29f9758fff4e76acf171a4dacaf346",
      "IsHidden": "False"
    },
    {
      "Start": "54a6712da97446d9a2a536cffa35e79b",
      "End": "8d257230ad7f486cb21ffe161c774e81",
      "Id": "2d981d822b4a42ba87737392d03e62bf",
      "IsHidden": "False"
    },
    {
      "Start": "400a12c20e514115941b82c509ae579d",
      "End": "812e8741174d492e8c5f08966f38f91c",
      "Id": "a24030dded244ca797edbd5c70dc433f",
      "IsHidden": "False"
    },
    {
      "Start": "feff650a3ef54544808257b1ef8304ef",
      "End": "a2d7ec94eea843fa886f3aed5dd1742e",
      "Id": "fb9e3dd2ce034e81998c9c950315ca15",
      "IsHidden": "False"
    },
    {
      "Start": "daa26130f23e4a289fa00c004dc28355",
      "End": "ce87c24ac6284291906f926940bf3347",
      "Id": "97468d0b0bee4ab2813e906e539364f8",
      "IsHidden": "False"
    },
    {
      "Start": "de95b23fed31420c8989bb4b92be43a3",
      "End": "7a18a339f20c462fa60559b95e5bfdb0",
      "Id": "a6fed116b17a40bfb25644f1975f5312",
      "IsHidden": "False"
    },
    {
      "Start": "de95b23fed31420c8989bb4b92be43a3",
      "End": "831da16c0afc40379e1b461fd2c66185",
      "Id": "3db7ce60b36048399bd69c36490f8fd8",
      "IsHidden": "False"
    },
    {
      "Start": "07cedfc9f9564361b949ac7ddbac6596",
      "End": "4ebc3034e2c94fec8a3b588b089117bb",
      "Id": "f2aff36d63f448ce903c4cf40a6f51ba",
      "IsHidden": "False"
    },
    {
      "Start": "520cc5c0ad7646f296e73bff131989be",
      "End": "ae6cb082dff04c8db6ce4494a5c940d5",
      "Id": "e67ebe38c02e4912887b35dabe5d52df",
      "IsHidden": "False"
    },
    {
      "Start": "b934d0594e33439dadeb2ebc645d97c8",
      "End": "976ecf530edf4377918e9208ac6627e6",
      "Id": "523ef21b559f41ee9428c7ee4f4507d5",
      "IsHidden": "False"
    },
    {
      "Start": "b934d0594e33439dadeb2ebc645d97c8",
      "End": "3fb3f4cc2e8146a39f802adcf205cae5",
      "Id": "79849ecbcfed42b0837515670ccabd2e",
      "IsHidden": "False"
    },
    {
      "Start": "28bc17fa47194200b7b6df13a4b8fdc9",
      "End": "438a5f8992a8480c8d44158c064b7965",
      "Id": "84094f234ced4f3ab28959cbf34ffbeb",
      "IsHidden": "False"
    },
    {
      "Start": "917eec00dbea4019bcdcf66e9c570fdd",
      "End": "72fc467eb9814537b7a5173b5280b140",
      "Id": "0e33dcec834b44b3968454671d458247",
      "IsHidden": "False"
    },
    {
      "Start": "d944fd1737214fd4ac537b2aee04cdc0",
      "End": "01a8fdaa78a94b53891190f2fbc82f5a",
      "Id": "334d399d3c8a437485635ab8d5c4fa87",
      "IsHidden": "False"
    },
    {
      "Start": "d944fd1737214fd4ac537b2aee04cdc0",
      "End": "801c76dcc50d4c089fcd007384d09172",
      "Id": "d31481ec0c0a4ae9b2fba13fd708de1c",
      "IsHidden": "False"
    },
    {
      "Start": "d944fd1737214fd4ac537b2aee04cdc0",
      "End": "1b27768112e346488a03f198bba2d414",
      "Id": "39ce748424d64a0e91e5990a5857c90f",
      "IsHidden": "False"
    },
    {
      "Start": "83b91516c30e4050a34e4b18b5465201",
      "End": "9ad5c7dc9b0f490e9e03f4da32a735b6",
      "Id": "892c5b4cf4eb45da86dcd0873334cb8f",
      "IsHidden": "False"
    },
    {
      "Start": "bfcd3b8ef4f6469d8bcd8e6a7b55d151",
      "End": "d1e514d3bdb74adf861fe1cdc5e1ff33",
      "Id": "e724ef3f96c24af59d72ece9d0e2e2bd",
      "IsHidden": "False"
    },
    {
      "Start": "3b6c77a170a64a2ca023004fc5fe83b8",
      "End": "4e5d14b41a8445e99a90c5a831485104",
      "Id": "bed4485934b1429fa1060d70c03339d8",
      "IsHidden": "False"
    },
    {
      "Start": "6b826eddd8c64603a9b03dfbacc454b5",
      "End": "f612d943675e4c66b1a2f1339e53cd2c",
      "Id": "638743a418274a6ea045011a7b6a5a1a",
      "IsHidden": "False"
    },
    {
      "Start": "30b8cee227f6499081c6804d9154641d",
      "End": "e015140dcc8c479c845e44e892f295e4",
      "Id": "27de5286e05242f89a7376be4c2e9552",
      "IsHidden": "False"
    },
    {
      "Start": "fa3333a36d5b45c39143079cbac30c59",
      "End": "deee30056c39447e9f94d08f8829a9ab",
      "Id": "94a81a6028bc45d4a247d2866aa54f0d",
      "IsHidden": "False"
    },
    {
      "Start": "fa3333a36d5b45c39143079cbac30c59",
      "End": "34902224922b4565ae1d5d0f40d49d3a",
      "Id": "715202a7faab46e7a846d8f4c70db034",
      "IsHidden": "False"
    },
    {
      "Start": "913bfa02bf7a4b73b6a5c85027f28a57",
      "End": "e669267bd7e84f9599a355e1a44e823a",
      "Id": "bba6e0c466184e829f4a3ef843266c4d",
      "IsHidden": "False"
    },
    {
      "Start": "913bfa02bf7a4b73b6a5c85027f28a57",
      "End": "d77d44fa1d594b7b8e2d7701988205b2",
      "Id": "7ac505fc9292461aad8ef112f38c6953",
      "IsHidden": "False"
    },
    {
      "Start": "09e69280aed04de996e685b73731dcf9",
      "End": "a3d7d3a5dc5242c4b9dcbf78577b8560",
      "Id": "3e94d98065814bf0bf8bf6db955579a2",
      "IsHidden": "False"
    },
    {
      "Start": "9a565fad325f4767a8d6a0d50edc2b45",
      "End": "0b17d715edcb4bea930f4ea1e56b6a64",
      "Id": "d96439ea774f44c8bd33e8dff0838814",
      "IsHidden": "False"
    },
    {
      "Start": "c56d1a2d6bf94228861028ff5e16e047",
      "End": "24feda742069448890d232c44c76777e",
      "Id": "d0f8950486464abf82d7e59b30f35fbc",
      "IsHidden": "False"
    },
    {
      "Start": "3dbe9c98e4f24ff3ba8c65491609e452",
      "End": "b65abf86700a40af8c836e4842319cb2",
      "Id": "bf53e608ec11475599b566a020dbcbb9",
      "IsHidden": "False"
    },
    {
      "Start": "3dbe9c98e4f24ff3ba8c65491609e452",
      "End": "028cd9d2274e4285b41ebc265a8fce0f",
      "Id": "28817f4e591d42fca882c8b2fbb82017",
      "IsHidden": "False"
    },
    {
      "Start": "0bca67a1d82f4d72b4958e08fde1484f",
      "End": "298c7100150f4a7cad4b808fa66038df",
      "Id": "8a90f8734d8a4cc0872f4e249642c26e",
      "IsHidden": "False"
    },
    {
      "Start": "fb2c629124ef47fd9867ce3726f3a03b",
      "End": "860f79db5f53415eacb904693d0fc9ad",
      "Id": "0afc3ae59a3047f793530d6c95e78e2b",
      "IsHidden": "False"
    },
    {
      "Start": "fb2c629124ef47fd9867ce3726f3a03b",
      "End": "23df37ffd3144739b010e82f15c621df",
      "Id": "d443833c01eb4c2c845d108d6a76c0b7",
      "IsHidden": "False"
    },
    {
      "Start": "018f9fe8f5454c6abb65f42fea799853",
      "End": "f4a5c31014554d879d1f7b949cd6c835",
      "Id": "0340f18fc7474a4cbd0cd907a8110732",
      "IsHidden": "False"
    },
    {
      "Start": "c8094c8df0394766b5551bf7f9f7f78a",
      "End": "024b524a735a4089828ffef569c4954d",
      "Id": "1fb8a0297efc4cc68539b49d29325c4c",
      "IsHidden": "False"
    },
    {
      "Start": "c8094c8df0394766b5551bf7f9f7f78a",
      "End": "96b8071788304f5b82e34f851b47d440",
      "Id": "219556bc64ab407483bc5fe37df4a3c9",
      "IsHidden": "False"
    },
    {
      "Start": "c8094c8df0394766b5551bf7f9f7f78a",
      "End": "5828249338064b87b0afb5aa9fee7a8e",
      "Id": "4994c3d2e9374d208c1e37ffae7f3b89",
      "IsHidden": "False"
    },
    {
      "Start": "126d37ff8f06487895bfc67bde49003d",
      "End": "289e67089c5e46c1911fb548dd7da8d9",
      "Id": "11ced2eae9864ca283e9e2edcebebc8c",
      "IsHidden": "False"
    },
    {
      "Start": "219bdadb1e234490a7b788532eac389b",
      "End": "698461596cbd435295db61a77deeaca5",
      "Id": "f5cd6a322ab64eaeb79518396cf94d27",
      "IsHidden": "False"
    },
    {
      "Start": "08503eba2d16422da3035e773470432b",
      "End": "76a319d1734f4aa0b5f8e75b851ed2ac",
      "Id": "45fb2dcd03b546cda0366cac4ecdfced",
      "IsHidden": "False"
    },
    {
      "Start": "1246d34ab6784d0fba0f7b86bd850d15",
      "End": "2904bc0f79c84a7a8398b2255dd105e9",
      "Id": "9a0071fc94f144a9a8e61d928bfc949c",
      "IsHidden": "False"
    },
    {
      "Start": "66bd222024794df4bc6313ceba2765ba",
      "End": "8095bc5d0d6e4fceb2f9452dd806781a",
      "Id": "18e26c0818124cde8e3b69697b98347c",
      "IsHidden": "False"
    },
    {
      "Start": "3b208f2112df43a59c832a0eefce554b",
      "End": "99d6089ec5a346ffa746e0b681f3c955",
      "Id": "25c21c2f7c5e4b02906ab66ef93d91df",
      "IsHidden": "False"
    },
    {
      "Start": "31ce0eeacbb24d8282093dbd8e144e9e",
      "End": "57b7a96deabb492582c3decb24db4733",
      "Id": "9cf080f321d64bb08316b25c08b45bbd",
      "IsHidden": "False"
    },
    {
      "Start": "31ce0eeacbb24d8282093dbd8e144e9e",
      "End": "5dff3a0899874911bbdf739943a9c3ec",
      "Id": "40f7a0f6a86242ee94f16a4d8cca6c83",
      "IsHidden": "False"
    },
    {
      "Start": "39263e927e544a31989c9cb4d7939973",
      "End": "a979181b3df540f2aebf8cc258909a8a",
      "Id": "7f03c2f31e944aee9b46c543a2ea3f53",
      "IsHidden": "False"
    },
    {
      "Start": "ca7cfa52df454d819616839b66e35a50",
      "End": "46f75ba09f374fa7b4594e8caa1a3c39",
      "Id": "1515d7d6a94e4747853f1e47a480e56d",
      "IsHidden": "False"
    },
    {
      "Start": "527e88f7ab98496bbae34a9ed4a57ae6",
      "End": "caa13eae9e3844a986a01a9fe9442140",
      "Id": "1b799bdc68ec4eabb99e56e82626f986",
      "IsHidden": "False"
    },
    {
      "Start": "3481cc31896c49768a9f7a024d6888a4",
      "End": "4eb82449c8534ee2900f1a993c9daacc",
      "Id": "5897bcb0c065410f99d220548cb0e83d",
      "IsHidden": "False"
    },
    {
      "Start": "23aa9e1c3bbd4cfab89741c1ee2c9a48",
      "End": "ead298207e7b46a7b9cfd7dc9d373083",
      "Id": "e237623215dd4209b85ac8004a04e6b9",
      "IsHidden": "False"
    },
    {
      "Start": "799ddb42368b4ea6ad127c8db7927138",
      "End": "2721b871c6e445b78fe5b70ad0df3e1d",
      "Id": "178aaff3610449f5b461e9712060a69a",
      "IsHidden": "False"
    },
    {
      "Start": "55dbaaabf39647219821d7de9d2caf38",
      "End": "92dca12af7be444cb71f5c03240c24cc",
      "Id": "65ce2a0e22c542a180a7cdb90518caa2",
      "IsHidden": "False"
    },
    {
      "Start": "36883e7a3b5e4c32a2ee994a99c4fc36",
      "End": "2d54edd6f2a044c98a60af4620a9e9ab",
      "Id": "0495621715764007a7541e8bd3e71732",
      "IsHidden": "False"
    },
    {
      "Start": "36883e7a3b5e4c32a2ee994a99c4fc36",
      "End": "09a17e0de20b42eba2e7477e37576b60",
      "Id": "6ccdee2dc40144899429559aefada16d",
      "IsHidden": "False"
    },
    {
      "Start": "6fd5bbe0e41a409fb5c8062857d42f09",
      "End": "7d33f92c64cf4555bc1096cf3aded3ae",
      "Id": "07d1174b8da64f2ca5fbc7b76878e9cf",
      "IsHidden": "False"
    },
    {
      "Start": "4fc5b4b32c9347dc9fc22638778331f3",
      "End": "7c5a4a9bab894acabfb82a32a803c9c6",
      "Id": "99255249aebb45b2b68987326b1530ea",
      "IsHidden": "False"
    },
    {
      "Start": "ebd0135e0b014fc6a76f624c82a2b03c",
      "End": "644f7d873184494e87dd300d1473f71c",
      "Id": "2c0ba4338dbf403fa365c8236df389f1",
      "IsHidden": "False"
    },
    {
      "Start": "61faba1049b543c2ae8db8b21b0a30ac",
      "End": "4e5347f13dbf4b539276c2770a171413",
      "Id": "2dabcf388ca04db2afc023444ee1973a",
      "IsHidden": "False"
    },
    {
      "Start": "ac26939eb84d4aa7a6127d47baf2f208",
      "End": "a5cdf7217cfd436b9f11893246c86f86",
      "Id": "15da09488319484583515a74ec35f7a4",
      "IsHidden": "False"
    },
    {
      "Start": "351290d6b0d247fb842fe8902f2fc3f5",
      "End": "a28ea7ead2cb4aee92a36b43b84257a1",
      "Id": "0a0e84ecbdc64c5a8aa9acec8cc28cd8",
      "IsHidden": "False"
    },
    {
      "Start": "1db66e8c1ee54ab294403390270e4c99",
      "End": "e9c3e3b92fd247cda9a9b01b65ecc273",
      "Id": "9e00cdeaa4f149e8b510fe51a9316473",
      "IsHidden": "False"
    },
    {
      "Start": "1db66e8c1ee54ab294403390270e4c99",
      "End": "e9c6c14785ac46e895344f7a7c0f9c4d",
      "Id": "9a3000d53f7d489b81110a9a362c743e",
      "IsHidden": "False"
    },
    {
      "Start": "1db66e8c1ee54ab294403390270e4c99",
      "End": "3c1823a579cc4186bf248a5b4671bc1e",
      "Id": "47e2a8c17a1e4fc2923e4a1bee21fbe6",
      "IsHidden": "False"
    },
    {
      "Start": "b28a39820baf429c81abb6b3c2f239a4",
      "End": "c2ea17b3fa3d492aba8bbf9b713595e3",
      "Id": "27139ff02f064b44b348c9814e7efa59",
      "IsHidden": "False"
    },
    {
      "Start": "c7199465a00542de9054e998319a75d7",
      "End": "f5e2574efb054e6eab10eb9a61cd5e29",
      "Id": "f60b87997c314c398c3227b3fedcd097",
      "IsHidden": "False"
    },
    {
      "Start": "5818698ebeed4661b2cd62f7c5dd10bf",
      "End": "1d74786a5e794955817d1302887b81d7",
      "Id": "82f68e57b3d2405ebd6164c2ca3000fd",
      "IsHidden": "False"
    },
    {
      "Start": "7290d8f8a271417e8aa2c5f7660d55f1",
      "End": "4213081ddaf74a08a5f146cd7a0163bd",
      "Id": "2dc4ee9799e444ce97b9396da532cf3c",
      "IsHidden": "False"
    },
    {
      "Start": "aad39bd6707f4e01815929ac5946de46",
      "End": "d0f483a432d840658bbf6d1f7536ca9a",
      "Id": "3c3e501371e54d6cb646ae569367d725",
      "IsHidden": "False"
    },
    {
      "Start": "aad39bd6707f4e01815929ac5946de46",
      "End": "9ca179b78afb48ccbcd16894fc445206",
      "Id": "76c1ae0a90c44575a37ea4eb4585ab2d",
      "IsHidden": "False"
    },
    {
      "Start": "aad39bd6707f4e01815929ac5946de46",
      "End": "fc925cbc73e7438ab8d020a723a769c9",
      "Id": "176b19b6f4e84155b10a47323b43e825",
      "IsHidden": "False"
    },
    {
      "Start": "aad39bd6707f4e01815929ac5946de46",
      "End": "0afb99179bc74921bd37aa7264f28c85",
      "Id": "7695114b45e34b08bc097182765f2d26",
      "IsHidden": "False"
    },
    {
      "Start": "aad39bd6707f4e01815929ac5946de46",
      "End": "8dd23964148b4f8683c36fd243a6a40d",
      "Id": "db31c86130864266954f894c2cf38d60",
      "IsHidden": "False"
    },
    {
      "Start": "aad39bd6707f4e01815929ac5946de46",
      "End": "78b7178e3cc448cb973492110f706506",
      "Id": "cc39447ce8284029a9c8dc2390507fe1",
      "IsHidden": "False"
    },
    {
      "Start": "db64ba77f666490094a174c0837b128b",
      "End": "c051e97fbd514d85b4af284784b23a85",
      "Id": "704f44fe95694a38b8a642f3e6c3d942",
      "IsHidden": "False"
    },
    {
      "Start": "db64ba77f666490094a174c0837b128b",
      "End": "6ea770e7e974432c9155a2d2bddd1e79",
      "Id": "fa13540350c64e59bd2aa80408f04b80",
      "IsHidden": "False"
    },
    {
      "Start": "db64ba77f666490094a174c0837b128b",
      "End": "395ecdb4f362431cb8a158a94aefcef6",
      "Id": "6e06a60e0465422e9a17086c173558da",
      "IsHidden": "False"
    },
    {
      "Start": "a63773698af94e958785316712bc7e2a",
      "End": "2678cde63d584adbab3c9a21db53544d",
      "Id": "e6248e1e9de9420fb6304b7f025ebd97",
      "IsHidden": "False"
    },
    {
      "Start": "a63773698af94e958785316712bc7e2a",
      "End": "2f89e88b8a47432e8657a970d3716592",
      "Id": "fdaf57f9c74a4a7d96f488e5b7e211cd",
      "IsHidden": "False"
    },
    {
      "Start": "a63773698af94e958785316712bc7e2a",
      "End": "c2a8993f7d4c47aa8110cfc1f9f6a302",
      "Id": "42b245ddfacb41c9b1ea63641bd65b77",
      "IsHidden": "False"
    },
    {
      "Start": "48767401a57a48efbdf1a295c353e7a0",
      "End": "3df862ece5444e91ab9c5cc3934f547d",
      "Id": "48b95679b3364e26a1c83d5af52cf125",
      "IsHidden": "False"
    },
    {
      "Start": "48767401a57a48efbdf1a295c353e7a0",
      "End": "84038c9db9f043329c58453afe2405f8",
      "Id": "d8e895544cb041c69565eaf5809276ba",
      "IsHidden": "False"
    },
    {
      "Start": "48767401a57a48efbdf1a295c353e7a0",
      "End": "e4276a1dc5a04e0fb5afb79cb365c8c9",
      "Id": "22eec3792feb492e95811f9a4b877d7b",
      "IsHidden": "False"
    },
    {
      "Start": "8c388aff0de9417b9333c9cf4f846431",
      "End": "f4a635de0f92410f88cb1df9fbe268f4",
      "Id": "272dc5f6a3a344549b44517436203754",
      "IsHidden": "False"
    },
    {
      "Start": "8c388aff0de9417b9333c9cf4f846431",
      "End": "9547bf5675844f4cb2963f7c894920ab",
      "Id": "733acb51e5784139b41127c3933928aa",
      "IsHidden": "False"
    },
    {
      "Start": "8c388aff0de9417b9333c9cf4f846431",
      "End": "ff145f5b3fc042d5876c1f6c31f930c1",
      "Id": "f1597de93c6645c29dcace3d28bfb1ee",
      "IsHidden": "False"
    },
    {
      "Start": "701f00d58e6c4d4e874cf2ccafd99715",
      "End": "60be67539ff64a0e9f698681da541fe1",
      "Id": "f55e962f4b034400a87befcf6fc5038f",
      "IsHidden": "False"
    },
    {
      "Start": "6939539ba77c41f5b30585c749b85c00",
      "End": "3fa89bda35164528afc1197a9012e870",
      "Id": "f4d8b6e8604c436fa8880c21c8446944",
      "IsHidden": "False"
    },
    {
      "Start": "3483ed6af9ad4356b0e6ee01548e1269",
      "End": "0b4a3e1513784a0cb285fd1ba46e6cc6",
      "Id": "d33538b60bbe42d7ad10978892c60889",
      "IsHidden": "False"
    },
    {
      "Start": "b2eb4bb4a20342d68c8d969e0da66db8",
      "End": "edcf339b38ad4a3eac36add28c2bcf39",
      "Id": "3c09ff0603da44e0b26042fb6aa31aaa",
      "IsHidden": "False"
    },
    {
      "Start": "b2eb4bb4a20342d68c8d969e0da66db8",
      "End": "dbdbed714caa48b291f525369656a6ca",
      "Id": "18dad20ec2e14bdea9d207bbbae9dda3",
      "IsHidden": "False"
    },
    {
      "Start": "79a7ac52c29c4c74be17b9159495f5ad",
      "End": "1f2f27cc898e47c7b616369f359704ce",
      "Id": "56119924a0f74231b4ddc48d03a927f3",
      "IsHidden": "False"
    },
    {
      "Start": "f3b1f3a6864b4611b1e91c2c36c58d09",
      "End": "0c9b2a3278de4b68b5195ac4a00d059c",
      "Id": "a04c89b03d9848caa8d4f5cae50cfd60",
      "IsHidden": "False"
    },
    {
      "Start": "f3b1f3a6864b4611b1e91c2c36c58d09",
      "End": "48d46faaf2024f49a6bceb548e9468f1",
      "Id": "860c323667c445d1b7eee1b5f47c73cf",
      "IsHidden": "False"
    },
    {
      "Start": "9fa394e5728d447cbaffe2ef383c9e06",
      "End": "010de1d2db1c455f8fc81f4fc5d64154",
      "Id": "095ccb7c6a4e4763a6c34b6fe4bfb20f",
      "IsHidden": "False"
    },
    {
      "Start": "c4bc0d8522ff437e991462d9c2a65dfe",
      "End": "e5bffdcbb201466fb584e27ea86b022b",
      "Id": "f5f320590fba445592da2edaf8a2322f",
      "IsHidden": "False"
    },
    {
      "Start": "8092442757ec458c9f36a7b98224a1b8",
      "End": "8eaeb3468a45403584df5039e462cc1f",
      "Id": "f5e077db207c4002abadc37da5ab5680",
      "IsHidden": "False"
    },
    {
      "Start": "8092442757ec458c9f36a7b98224a1b8",
      "End": "ebff87f6289049fda956c1ce44107c5f",
      "Id": "0d665f41bfc442ad8cd735fabab3ad3e",
      "IsHidden": "False"
    },
    {
      "Start": "24eafbf2803c498ea720b902f23c5de5",
      "End": "3c8959714f1149f4844659439f9d71f4",
      "Id": "0e8a8fa1289643ffa7c6275b43d3284c",
      "IsHidden": "False"
    },
    {
      "Start": "095b6f6349714881be2e25853357064f",
      "End": "70c77e74635e41e18d7f691693c43a4e",
      "Id": "5f4164ba49cf4e1fba0be5f2951e5353",
      "IsHidden": "False"
    },
    {
      "Start": "0434947d2744466da8e7e44c89e1d527",
      "End": "a50d652c7ca44ae3aba6f9e48967b586",
      "Id": "180f3bb382a0434b9ffe93365574b9e9",
      "IsHidden": "False"
    },
    {
      "Start": "0d9c47f9216c467d9aadc3a36ec04d85",
      "End": "c6fb31c156fb4a7a9da619a9a5fef102",
      "Id": "11351a64055a438889bcf4a7444ae831",
      "IsHidden": "False"
    },
    {
      "Start": "0d9c47f9216c467d9aadc3a36ec04d85",
      "End": "d6ad97c7c4184ae194167542bfef542e",
      "Id": "097ec683c05c4f5db46941d5a1473656",
      "IsHidden": "False"
    },
    {
      "Start": "0d9c47f9216c467d9aadc3a36ec04d85",
      "End": "85448df0d4c447acbcbe712e4e54f90f",
      "Id": "2912d584ec7a42d29e938b15a0004a53",
      "IsHidden": "False"
    },
    {
      "Start": "9057faa00d2a499aa3384296970db414",
      "End": "506579e8e45d4f6c870808cc9b084d35",
      "Id": "2629ddd4360544e39870f52bf9fdc9e0",
      "IsHidden": "False"
    },
    {
      "Start": "3f6c7a8c371f429189922bbc842136a3",
      "End": "b094a7f0c5cf409fa4e69be492fa1a64",
      "Id": "f30977fc52d6427aa54f7f11eb9d0913",
      "IsHidden": "False"
    },
    {
      "Start": "70366d570fcb44e99258ebc584c8ff17",
      "End": "600b529755b34121bb20be458571795a",
      "Id": "7ffc293b910844518ad80e6ce6321926",
      "IsHidden": "False"
    },
    {
      "Start": "7239f5ac3a5648b59b989abce06ae870",
      "End": "a1c17d9ae74e461a847bb5c95406aae2",
      "Id": "b6cfd7a754df469da35f40a04f5fc6aa",
      "IsHidden": "False"
    },
    {
      "Start": "133d2243b8104659a15225971033a5fb",
      "End": "865800df58254e79b7d82e90f2bb4dbe",
      "Id": "d7e4842421ab4b68acebfd60b974b9e9",
      "IsHidden": "False"
    },
    {
      "Start": "94134f6b34d94ca4abf8189db293d87f",
      "End": "1776cd08b3a64496bc1ce8d3e0838b3f",
      "Id": "1c75a402701c4785839992bb2489d887",
      "IsHidden": "False"
    },
    {
      "Start": "cb1558df8b0449d0a87c976bf2599c55",
      "End": "6a551256cf85471ab85a94502dfc2ebf",
      "Id": "37640e93b8f04412aea9377838cf78b4",
      "IsHidden": "False"
    },
    {
      "Start": "1b6ed183683e4870a747b67a0e45e0ac",
      "End": "59bab77bc7f5496bb8f9f375a4672b94",
      "Id": "66c5dee1a784404e8395acefc14bc798",
      "IsHidden": "False"
    },
    {
      "Start": "70231f247b3e4651bc5064b754fb7cda",
      "End": "89e81464c7af4be685fe99df9e6628b1",
      "Id": "66a8505c90f9450f858eacd70c72548d",
      "IsHidden": "False"
    },
    {
      "Start": "c2c9cc6bbe7d45b095cf40beba565cf0",
      "End": "7c2e41d6c2e948a08b0c4443d4c66364",
      "Id": "b124c2d81fa44704a3d637a93dff7dbd",
      "IsHidden": "False"
    },
    {
      "Start": "97253db59e884b119106bff07009b935",
      "End": "84f0960bb7744feb87fb8e6dfa4a2c22",
      "Id": "d90d5f3c78f24f43b098d0ed6fa3e503",
      "IsHidden": "False"
    },
    {
      "Start": "97253db59e884b119106bff07009b935",
      "End": "9a7c826bb2714184977555569a5f8710",
      "Id": "6432163ca44c4aca8b6d99dd44c4b792",
      "IsHidden": "False"
    },
    {
      "Start": "97253db59e884b119106bff07009b935",
      "End": "6fd3d3171ed84e3aaae247e63f496efb",
      "Id": "24cf5833972847a8a61efb7dd7738e36",
      "IsHidden": "False"
    },
    {
      "Start": "97253db59e884b119106bff07009b935",
      "End": "463bf6d151f14ca6adc219fe9b73f68a",
      "Id": "a8f2ba2d306944c1996849e7db767742",
      "IsHidden": "False"
    },
    {
      "Start": "97253db59e884b119106bff07009b935",
      "End": "217fd1577feb47468dffc49bcdc023cb",
      "Id": "004013d2b3c147ef8e4afa41128f1e13",
      "IsHidden": "False"
    },
    {
      "Start": "97253db59e884b119106bff07009b935",
      "End": "1b8fef81f408412db3eec3ea8949da45",
      "Id": "1542bc4ce73c4ed6abaa817f87ad1570",
      "IsHidden": "False"
    },
    {
      "Start": "4c3d82bf9e1644c39e1da711e99073a7",
      "End": "9aef3d94534741e493414605b5cc5647",
      "Id": "df3e721c16694e589caa36e6d9136de8",
      "IsHidden": "False"
    },
    {
      "Start": "095184d2eed04e528751b870f209b0ba",
      "End": "6900201839044f9a81d785f3b3564338",
      "Id": "bab68f55ae9d45359b8b8f2f7148e5c5",
      "IsHidden": "False"
    },
    {
      "Start": "095184d2eed04e528751b870f209b0ba",
      "End": "387d3281b38943389162ca5b5097b460",
      "Id": "4f78fed2f8fa45caa1d79417c097693c",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "dd8a104465744ca39da6830d5ee27183",
      "Id": "6782159ab1df4387ae866a56150a7590",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "388210a2c0744c5693741534810895df",
      "Id": "2f470cbbcc9e423b9b8f5291d7e22af2",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "00eb22aa97d1462daa8f7734bb8030ee",
      "Id": "832fe15af89648559aaf9c23b3ebff7c",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "a571fa2e8e8b4641af1803c30e1278e1",
      "Id": "f2b6d3bb68fd4f79b9825487a6b314b5",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "18e4ce60b32c4f77a580e981d2e3a42e",
      "Id": "18dee8883b1e4e8c8f694e009c17e793",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "b395aa2754e54b819231b6ae94b3f7eb",
      "Id": "d838c917b6c34c5a871d6beb1716e943",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "27953b7019cb4532bb2742e8c24c132d",
      "Id": "df605d9c27d844ef85e35d77d05f70cf",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "63d4e2a92ac9446f9fb569d42cca78c6",
      "Id": "5003a0e9d37e408f8b3fcb76b535e01f",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "3c9f69c3e6bd4e8cb6bf57acfa8f8244",
      "Id": "a7d129ca087048b49779f901b12a71b3",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "ed9f2f82dbe447769319739a48c34d07",
      "Id": "64557f7e13c0452dbc6bb59b2b33e70d",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "828d03793a264d3c8f6ee97caaffbbdc",
      "Id": "d22a7995c57846fea08698acb5b6766a",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "63b102a9299f410c842030adc1b9b605",
      "Id": "91fdeb2164e64808ad6aa78692624104",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "e73c187b076647f9bc6f9f5a84481c21",
      "Id": "c91e035db9ed4b8e8ed565097706cdfd",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "87e5ad90db02492fba97da270b02322e",
      "Id": "d337d683044044dbb3ad957bcebb13e8",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "2e9d5d7ee1a94c6bbc2da65c6de0210b",
      "Id": "cb268731a1bc46cdbc6e200082596db5",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "fca114260aa54b40a23930b3c3840347",
      "Id": "b08cd1bcf92c436185bcc9f890245c00",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "99f5a7a3bc9e45a081910d618f165424",
      "Id": "4e8fe5ee3af64d699f1e990b01e3e4ac",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "6efa3d0045d549c8bce15875a5472934",
      "Id": "45b2ed61ea3b4230a56c1eb43019796f",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "583f6a581049473485ad308ac78ca312",
      "Id": "fece5c0e9bb94fae84e5c77caef86fc0",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "9b0caa6f606e4cd9a45fba857d2ecfb9",
      "Id": "7ffcdec9cc184ac0bf081ed3012cb568",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "72cc2c6e7db049798ff8dd98e8de3dea",
      "Id": "5613c1d416944a49807e53f5b7c68ac3",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "0ec004d82f5b4dde9eb94ce596b4d6bf",
      "Id": "d8ad5ceb8c46453691db8e9197201aa3",
      "IsHidden": "False"
    },
    {
      "Start": "4e5d99e7650b4d40a577003c8e227156",
      "End": "fdff8497ab5d4d92b4bae34d3b28e501",
      "Id": "8a67bf40efb348aca8160792f49a9ff7",
      "IsHidden": "False"
    },
    {
      "Start": "109eb6bd70be4efda13aa652ca06d53d",
      "End": "e687527675dd4e85b65092e1bb712488",
      "Id": "10e42c459d834314adef48803c6057a7",
      "IsHidden": "False"
    },
    {
      "Start": "109eb6bd70be4efda13aa652ca06d53d",
      "End": "c1c3f8b2fd6f43d4961b6be420a66780",
      "Id": "98e6312e2abe43e1b6b53c89a2607cfc",
      "IsHidden": "False"
    },
    {
      "Start": "aba8396041ad4e9f922888bb121fc1ef",
      "End": "589077647bcf4e1b959d6773c3f29e24",
      "Id": "e03a943f022849dba153729b055322d0",
      "IsHidden": "False"
    },
    {
      "Start": "0d6e261eccb143a2a0799933d229464a",
      "End": "de7b21e60d7f425b97561f410cb1bf10",
      "Id": "a56680bd69104af58732643f1ce16366",
      "IsHidden": "False"
    },
    {
      "Start": "90bead36a6de454f9de1ade3aeedca4d",
      "End": "4bdd4e1ba582485b8eaa753bdf42f43f",
      "Id": "9c884691792945948104acdbe074a27e",
      "IsHidden": "False"
    },
    {
      "Start": "be5a9a945dc7411a8b99cdf2116bc488",
      "End": "2724b3e2f13f4848bd81b9f61644ff34",
      "Id": "53858e5cf8b742b398a1760243a5c057",
      "IsHidden": "False"
    },
    {
      "Start": "77e01485df86442b9b93ecec67f03eaf",
      "End": "b2af10858c0349518701d2f5b294a957",
      "Id": "a731be9fbb0a402e86ce92239cf96884",
      "IsHidden": "False"
    },
    {
      "Start": "817cfb12b2e24e7d948deb9cace32a4f",
      "End": "19d99fbfa98b4023843755af1884c1a2",
      "Id": "64d0939627d040aa98097fc78a5fe861",
      "IsHidden": "False"
    },
    {
      "Start": "817cfb12b2e24e7d948deb9cace32a4f",
      "End": "04f333e5d00d455a9e01cf83c9b0621d",
      "Id": "65cdf49c744a4416949fa7c5d3d8c0c4",
      "IsHidden": "False"
    },
    {
      "Start": "f90f694b6d3b41eebbcc78783acfe4b2",
      "End": "d86f42d29f2c40eabe47cfeaac27a7be",
      "Id": "d5a797e00b534f3e9419cca19e0a4930",
      "IsHidden": "False"
    },
    {
      "Start": "f2101b14a0c147f5871e2b20291dfe79",
      "End": "a2fa82a741e14135af61e2c357a2db42",
      "Id": "9fc883373b9b4d0a9b35b848e9487fab",
      "IsHidden": "False"
    },
    {
      "Start": "8a279814c34d42e3a9c6654cf40326e3",
      "End": "d029c60eb4b44aeab16defba7cce8614",
      "Id": "0437ba93a88441098a784d8103b07a1a",
      "IsHidden": "False"
    },
    {
      "Start": "0da1c3428def41559bd9bb1a24cc3856",
      "End": "8157b8a1db3b4a8e98c121569d80ec9f",
      "Id": "f105e96568f843e09a66ed04f7817fca",
      "IsHidden": "False"
    },
    {
      "Start": "0da1c3428def41559bd9bb1a24cc3856",
      "End": "ff47b1ba0e9243988a9d6becc1d2fdfe",
      "Id": "85bde7ed00d54f8dbec55a298a2af7f2",
      "IsHidden": "False"
    },
    {
      "Start": "701d0e9f03fe4e39be578f414d824d1a",
      "End": "d1b0a0e6b8ea4a368dcfba3c9b1835c7",
      "Id": "f8a659ddec5c4cccb7cbc84f5467c485",
      "IsHidden": "False"
    },
    {
      "Start": "701d0e9f03fe4e39be578f414d824d1a",
      "End": "fd58c4f1b4b0407c9362bf2d99558108",
      "Id": "cf1a81160ca3414b861fd78014f33ce0",
      "IsHidden": "False"
    },
    {
      "Start": "701d0e9f03fe4e39be578f414d824d1a",
      "End": "16a4d9b78d84480eb1050cc27e690c6a",
      "Id": "c6e41965706346789cd3e99658099c5a",
      "IsHidden": "False"
    },
    {
      "Start": "5b0305f648bf4aa2a4c12ff9f6041545",
      "End": "13b1eb7c7454447cadb402b9625e5cab",
      "Id": "a14e5656a1404e849d3d4db4b3b24080",
      "IsHidden": "False"
    },
    {
      "Start": "2427244cb1714c02a0fb112f96bb64b2",
      "End": "27960e1e15a04c9386d5a13fc91ecc40",
      "Id": "b543ec2cdcc14c37aa3e142c6ed6b8a2",
      "IsHidden": "False"
    },
    {
      "Start": "2427244cb1714c02a0fb112f96bb64b2",
      "End": "15becd4dffa641b989005c3d513bb225",
      "Id": "78e278d2bace48f1b9504d9b5522a863",
      "IsHidden": "False"
    },
    {
      "Start": "2427244cb1714c02a0fb112f96bb64b2",
      "End": "9897854ddfcf45d39c464639e4de9106",
      "Id": "a9aef28974d4494e8f95de59b8938596",
      "IsHidden": "False"
    },
    {
      "Start": "6ab4082ad52344989e95174fe8913397",
      "End": "3b3891f055af4a0c90f4cd32e41059c7",
      "Id": "7005a9bfcb024d9f9aa7f58bd7ef1c17",
      "IsHidden": "False"
    },
    {
      "Start": "cff4cef18fe749ecb2cbb2ae4ecefa13",
      "End": "470f6ef7dfd645a59b2ee26fca679765",
      "Id": "45ce6bf5b82e4d308db87d36724b2f6a",
      "IsHidden": "False"
    },
    {
      "Start": "477c7c5e5a8b45e8a82984604d9d52ea",
      "End": "422c7f7e938d4e34b878ccc110ff72c4",
      "Id": "19ecb47a4c9d4b1abe227872c523b5aa",
      "IsHidden": "False"
    },
    {
      "Start": "a937578e6d02416da96db592c2ce2748",
      "End": "5cfea17087384594880af9bae0631a3d",
      "Id": "a43798451b1440cab9e60cdec39bbac0",
      "IsHidden": "False"
    },
    {
      "Start": "2ebd451aaf524812901e1eaabe0d8836",
      "End": "bed95c0a2ddc47a6894951eb611dc41a",
      "Id": "fabd42e74c184ff595ac4dd41085ac2b",
      "IsHidden": "False"
    },
    {
      "Start": "2ebd451aaf524812901e1eaabe0d8836",
      "End": "c97be1fb38564080928f14e94bc915e9",
      "Id": "b10d521c66db48639248b681cc873fa9",
      "IsHidden": "False"
    },
    {
      "Start": "a7bcf2b76bf94ae182ce53b8eff2436b",
      "End": "22144f740c1e48979378e1e42ce0dc33",
      "Id": "e2c4fb77d72b4ae0aed2cef77ca785fc",
      "IsHidden": "False"
    },
    {
      "Start": "7b9833b6261348efb66facfb2169ae96",
      "End": "a0321bd40f754140a45315b15a7febec",
      "Id": "f124cf58f7414907a44dbcea1fb0b6f1",
      "IsHidden": "False"
    },
    {
      "Start": "d103f8612f264cd7aa85e2569c298add",
      "End": "116454a61f6d4619a7e6886ffc8929db",
      "Id": "50f7688ce0e245799c989c9314655295",
      "IsHidden": "False"
    },
    {
      "Start": "8a9a63c031f14d4eba7470fd1deb9251",
      "End": "9c341e8f9c594c258b80897d9367d893",
      "Id": "0bffbaa7d3164eeeb48d3a831e692825",
      "IsHidden": "False"
    },
    {
      "Start": "8a9a63c031f14d4eba7470fd1deb9251",
      "End": "de5ed8a44e4945ca9cf66d7b731e8d88",
      "Id": "73f651eaf9b5415e84d6f90602f264ae",
      "IsHidden": "False"
    },
    {
      "Start": "3c06aba49e8e43d2ba0122835c763f85",
      "End": "c6d7328edc4e49e6ad3566a34b059803",
      "Id": "8b5fed1530e54ed082dc69267d1451f7",
      "IsHidden": "False"
    },
    {
      "Start": "a388b82810c244b4bae1386add4195f4",
      "End": "bbc92f307f2b485bbb457392da4480b7",
      "Id": "cc393470428e44bda60ca4845527b8cc",
      "IsHidden": "False"
    },
    {
      "Start": "d63864d856c1483bad23a80fa9d896b2",
      "End": "5334badff4dd4d52836e1239cd634109",
      "Id": "5f7f69b613994074a2f56e47f88f46c7",
      "IsHidden": "False"
    },
    {
      "Start": "d63864d856c1483bad23a80fa9d896b2",
      "End": "1cef1e3dfe1b4cd59da393aaa2a1394f",
      "Id": "0cd6346ba82e4ec99b5c75cf98821e9f",
      "IsHidden": "False"
    },
    {
      "Start": "d63864d856c1483bad23a80fa9d896b2",
      "End": "287ce828b03e4bedbec2e212296e88b6",
      "Id": "d780090ebac74d8ba8c654f0d7b08100",
      "IsHidden": "False"
    },
    {
      "Start": "4b137de8d0134769be16b036b08623a2",
      "End": "d549215c50ce464d89476e99ea4fca6c",
      "Id": "d2809c59c8584a9d9dd5591d34176038",
      "IsHidden": "False"
    },
    {
      "Start": "4b137de8d0134769be16b036b08623a2",
      "End": "2f9686e21e98432089c655496fe3e2ef",
      "Id": "eb2446d6e62c469cad555525621eb04e",
      "IsHidden": "False"
    },
    {
      "Start": "4b137de8d0134769be16b036b08623a2",
      "End": "e919600d30cb4aec89cb552e7d60b962",
      "Id": "d2b8797404a64570bcfc27c01b53c99c",
      "IsHidden": "False"
    },
    {
      "Start": "b02d06e475c246c5b397914026e6d61d",
      "End": "2dd2f6ecc2464d3cab8cf5dd4e60472c",
      "Id": "cf459c7c7c2246b3afe628574420a5fe",
      "IsHidden": "False"
    },
    {
      "Start": "b02d06e475c246c5b397914026e6d61d",
      "End": "18439d39e7ff4f7ebb45187533cae272",
      "Id": "a50b93480aca4ea69c8001b0fd35c1f9",
      "IsHidden": "False"
    },
    {
      "Start": "b02d06e475c246c5b397914026e6d61d",
      "End": "1eddaa93e98e4a49af31444b6b8fd2c8",
      "Id": "1574f86453244dc58d2ab9aeb537f975",
      "IsHidden": "False"
    },
    {
      "Start": "f90076dc656549a7acb85de434e6e348",
      "End": "df11dff68e454be8ab5300fcd721e17f",
      "Id": "b1bd7fba6ab249d98dbc575d03ddc07e",
      "IsHidden": "False"
    },
    {
      "Start": "f90076dc656549a7acb85de434e6e348",
      "End": "91e6378d8e9b43118c45dc28d12ab902",
      "Id": "740eecf6951c46f786e0e55f7959d88a",
      "IsHidden": "False"
    },
    {
      "Start": "baa4abd7d0ff4ba8a91fb3645232525e",
      "End": "953fd0bfbe8c4a5f9d9f16a445a00f96",
      "Id": "9af371596a9740479cda1957737cd059",
      "IsHidden": "False"
    },
    {
      "Start": "d1adc360dfe2459689c762fb75af18fc",
      "End": "069ac559c1394f6a98bea3f875870d98",
      "Id": "d9cdac0f8a5a41ca9f209586ad2930b4",
      "IsHidden": "False"
    },
    {
      "Start": "128b62c9a45c40e7b829289881017c8d",
      "End": "772a2bc4ef5d4bf5b12ce8049345aad7",
      "Id": "4aab38ad60074a199a6339abcf169e23",
      "IsHidden": "False"
    },
    {
      "Start": "ca3036aa965a4275b4ab8d3656b2d4dd",
      "End": "0d0c26cb5baf4e3abf8c82f77e922405",
      "Id": "c97cd184232e46f2a39f8d909035cd83",
      "IsHidden": "False"
    },
    {
      "Start": "8e3c51c037a34c94990667043e3a3c1f",
      "End": "24cc66e1a2dc48b58732460b61265a58",
      "Id": "f06ae7283fbd48d3b0dcd1da4190bed6",
      "IsHidden": "False"
    },
    {
      "Start": "8e3c51c037a34c94990667043e3a3c1f",
      "End": "dd6de7b1eee24d43a296bd4f979c8713",
      "Id": "6fada1a79f624589b7e63746309b9505",
      "IsHidden": "False"
    },
    {
      "Start": "8e3c51c037a34c94990667043e3a3c1f",
      "End": "b19c183d956e4673ad45551900af3886",
      "Id": "5fc053046419427f8108202052482eaa",
      "IsHidden": "False"
    },
    {
      "Start": "1cd86db936834ac0b25afca70bb5a6fe",
      "End": "0e22ee93a7eb4f40a4da0793d564e9b9",
      "Id": "91d38ae28cd644e7838516758b4bed00",
      "IsHidden": "False"
    },
    {
      "Start": "1cd86db936834ac0b25afca70bb5a6fe",
      "End": "f326435b764849ac95af5fdfb6f626be",
      "Id": "e2505d6cb8244e20b2890c7539763905",
      "IsHidden": "False"
    },
    {
      "Start": "1cd86db936834ac0b25afca70bb5a6fe",
      "End": "135764d105104389b31d24900cc62b9a",
      "Id": "24953e4041654910b9944e6a0307d68e",
      "IsHidden": "False"
    },
    {
      "Start": "02c2fe32706d47578c87e44523292453",
      "End": "cdf48f68d63d401aaaf69bc04a459c6b",
      "Id": "440bbacb32c741459ce09d9ea0f11b53",
      "IsHidden": "False"
    },
    {
      "Start": "3be1de7cd6d64fe4b5ae746ff730c424",
      "End": "9e1e5ff8336148e3ab0d7b4c7ffafb39",
      "Id": "3f525ee312be469eaf23eaf286acc320",
      "IsHidden": "False"
    },
    {
      "Start": "8894be0464074014985d4af1d9e49ca2",
      "End": "66f7e4904799449a84eab94e1a621e34",
      "Id": "caa53fd6e42a4392b255b4a430fe3ba0",
      "IsHidden": "False"
    },
    {
      "Start": "8894be0464074014985d4af1d9e49ca2",
      "End": "5c90eab6e0274182b994fbb7ad9c92d3",
      "Id": "17d724291992468aac9b31c34722ef7f",
      "IsHidden": "False"
    },
    {
      "Start": "5314fdda16774f6685230f081842022b",
      "End": "d06cfd41b48d41f7b750564e13fbaeb4",
      "Id": "721a1f6586e34048a2027b76330bd453",
      "IsHidden": "False"
    },
    {
      "Start": "5314fdda16774f6685230f081842022b",
      "End": "a4d217169df14faf818e7503eecf532e",
      "Id": "bbc57643c4cd4925a7043bf2aaf3de16",
      "IsHidden": "False"
    },
    {
      "Start": "5314fdda16774f6685230f081842022b",
      "End": "5afe6224a0a049adbfee605d1d90234c",
      "Id": "0f98a2f6bf4749389023fe275db48c79",
      "IsHidden": "False"
    },
    {
      "Start": "5e89a163d97648918172706a65d71c6b",
      "End": "debb8f0616164ca5a6c8bfde091e56b8",
      "Id": "330a400847c64b8485e9545bbebc431a",
      "IsHidden": "False"
    },
    {
      "Start": "52b1e2ec5dfe4ed381f2cf95baea13d7",
      "End": "e9bc3ec2836e4448af962d31d2a796b5",
      "Id": "6444ea014d19490eba91359ad913a0ec",
      "IsHidden": "False"
    },
    {
      "Start": "33fd45406a5f4877b80fd4ec0d79c555",
      "End": "38c3db2ff53748e6b2b5f25c470d5bb9",
      "Id": "3d4435ce6b954aac9477c1c26c3bc3b9",
      "IsHidden": "False"
    },
    {
      "Start": "6964210503354f52a295463a8759d8db",
      "End": "ee9ccf472900484b9293f41dc38b8cb2",
      "Id": "a5f336adab4045009b105a7ac329bead",
      "IsHidden": "False"
    },
    {
      "Start": "0fe012dc2de646adaa46305395f4fc57",
      "End": "44abd9013edd4c15906ba93e5b15a8f6",
      "Id": "f410fdf48e534d5eb86c716150e397dd",
      "IsHidden": "False"
    },
    {
      "Start": "8906b7085e2847c2a8ab71ee55bec582",
      "End": "eb945ca252c04c39b00d6a8b26890dda",
      "Id": "e146b1bbb9ab4af2b8601dbfb86b1f86",
      "IsHidden": "False"
    },
    {
      "Start": "7f89fb1c6de14e54b9f3ba5c020337a5",
      "End": "d1eb375d88884348addf9713f1794e7c",
      "Id": "ec5a6041b5d148d1abaf54622125bb9e",
      "IsHidden": "False"
    },
    {
      "Start": "4989c9c1c5f0490296336d5be94bd008",
      "End": "ec375200d93546c8ae6914861a86addd",
      "Id": "f97974238006496389d175e229cb8b4b",
      "IsHidden": "False"
    },
    {
      "Start": "9be89c8fad134689bc1bb78146d4b52e",
      "End": "4a83d6f58dcb4e49b69c8315186868ad",
      "Id": "5cc66b06d98247fface2d9e7a66ebf08",
      "IsHidden": "False"
    },
    {
      "Start": "f7e0fe6f85ef47b7a016ecaf9a553c81",
      "End": "4aa44687608a41fab9e10730518f34f3",
      "Id": "23c22422f14942c7a2d618e8864e0023",
      "IsHidden": "False"
    },
    {
      "Start": "cbca5c098ada453f84ead1374fd8eb6b",
      "End": "4933f630164e4d4aa1b0c002b98f3a40",
      "Id": "c3001485d2674522bf8a79d0d574f7cf",
      "IsHidden": "False"
    },
    {
      "Start": "bebeadc6d6ac45f197e2463c87f016b6",
      "End": "3c666078633347ed8e86e0ce90cd4383",
      "Id": "2fcadd524aa8407085c187f3b9d1ee86",
      "IsHidden": "False"
    },
    {
      "Start": "e4f1fe0f1e7342ab8f0cfc77a4ed1d6a",
      "End": "dd10f0cb9dd94e07a7fff94c48e3c391",
      "Id": "f44343cc098c420f80b304b056c8d061",
      "IsHidden": "False"
    },
    {
      "Start": "e4f1fe0f1e7342ab8f0cfc77a4ed1d6a",
      "End": "2b30003deff045de85ba8776265e47bc",
      "Id": "08434a95a73e40429250f31f3700d653",
      "IsHidden": "False"
    },
    {
      "Start": "e2026e17cb8844d6be07ab201207462f",
      "End": "d2bb626afc3d4ba984bba1d392126eb3",
      "Id": "f71bff67543c4a4090a0609b6ced3bc9",
      "IsHidden": "False"
    },
    {
      "Start": "8ddd7cdf6e4c41bf8a3a89434d172269",
      "End": "b0c8f77f6a034e53a0fce8773c181f10",
      "Id": "2a53bed0303b49d2aaf28ba82c91fd55",
      "IsHidden": "False"
    },
    {
      "Start": "81082bf346244d26bee9238b83a92555",
      "End": "a7637873fd594d86af0117a1ba365b5b",
      "Id": "7d57e0edd431408bb3dbf78e41efc5b0",
      "IsHidden": "False"
    },
    {
      "Start": "81082bf346244d26bee9238b83a92555",
      "End": "6fccc08d383d49c2ab84f20ab52eb622",
      "Id": "8d36565854174311a1d84229ffecb280",
      "IsHidden": "False"
    },
    {
      "Start": "81082bf346244d26bee9238b83a92555",
      "End": "d659206b3f6c4d5e88f233147b70fd83",
      "Id": "d7a5819e9fc94be6865c92f1ed2e5656",
      "IsHidden": "False"
    },
    {
      "Start": "ad16d37628234465a6b61580106136b5",
      "End": "35a748a39297465e800a22554b0de83e",
      "Id": "85a1d0eaae134b2d860f16c7cf5984fa",
      "IsHidden": "False"
    },
    {
      "Start": "d1b64542360941949d512c6d62a4100a",
      "End": "f1f98d2aeca04e1d908769f3be83a8bc",
      "Id": "bb64851bf4914253bd7e53570832f27f",
      "IsHidden": "False"
    },
    {
      "Start": "9b001ad68a814f22a1472e767aed3990",
      "End": "66df7524f28f460b8a238dd43b94762f",
      "Id": "fffcf64116534ff790d0408f5d0c99d6",
      "IsHidden": "False"
    },
    {
      "Start": "45e6ec8d25c444df8a8492a6c999d7bd",
      "End": "5cf79ee934f94f8a942072c62eff4064",
      "Id": "66eb5fcf56914d059992a3e4dd2cd609",
      "IsHidden": "False"
    },
    {
      "Start": "2ce9f703096d4b6a8b1ee9d6225a36c7",
      "End": "b3f717c45cbf4e24bebbbeb5857b10a9",
      "Id": "dcfbd46ffe6845fda8345d25c7c66881",
      "IsHidden": "False"
    },
    {
      "Start": "cf0af498c7ab46ff8f15a2dfc4cd58f4",
      "End": "58f00975b1b64d158529b775ec475d79",
      "Id": "0c3ea63f10344b92aac4932cabac7f66",
      "IsHidden": "False"
    },
    {
      "Start": "19ef6c37a5ba47fd839f21f2ca1be3a0",
      "End": "f115d2ca0c4642029577fbfe5f9d5b8f",
      "Id": "a8e766d0e569456db17b15e8b97b0bdc",
      "IsHidden": "False"
    },
    {
      "Start": "9f31b5b98a3448d2be2a865257730d52",
      "End": "27c7ffaf0871407b99a56c08eec2511e",
      "Id": "44de57227708455faf2a6d05239558de",
      "IsHidden": "False"
    },
    {
      "Start": "02486399e81441b3aa21bc9006da3f75",
      "End": "78816700c4aa48a8b1cd2be86c4ea4fc",
      "Id": "4477a3b472884488a1f3333869293c13",
      "IsHidden": "False"
    },
    {
      "Start": "02486399e81441b3aa21bc9006da3f75",
      "End": "180e255bdb9941219add919dc23d6653",
      "Id": "6e939c3285ef438d9a2a79263358005e",
      "IsHidden": "False"
    },
    {
      "Start": "ac70f953e2a2462fb218e14907d4f4d4",
      "End": "8e8aba88212240dead7392f82297f07c",
      "Id": "916001a498054b608cb06961a57e7d02",
      "IsHidden": "False"
    },
    {
      "Start": "1401535c0b1942dab902b21d43368b84",
      "End": "9bdf50511fb34f51b5538b79b0e71718",
      "Id": "830529678dca4c7181544d8ba7fd7a3d",
      "IsHidden": "False"
    },
    {
      "Start": "2c1a158394644b99aa724cf5ae7c4340",
      "End": "c72abcaa5f1f4fc7b49191cc08c18935",
      "Id": "1ff16f4287634faeb868a9c4d31754e6",
      "IsHidden": "False"
    },
    {
      "Start": "f234118ddaf94e6ab4f0b7b22de9e20f",
      "End": "ee143753c8774f33b4ca9f445713969a",
      "Id": "3636b1d7e8ff4d0782f5ca7e19549a79",
      "IsHidden": "False"
    },
    {
      "Start": "fe1516ca730f4fa989b1f93c04e73233",
      "End": "c201de6195de4b95bc9926f9a1f34024",
      "Id": "4a9f8208f2e043b592fcbecec4d53a11",
      "IsHidden": "False"
    },
    {
      "Start": "605335e854b14d3ab0d87af595b89699",
      "End": "22170de84dda4035bdf36dd5477e71e3",
      "Id": "fcd51de00815409fbecfaef36704113b",
      "IsHidden": "False"
    },
    {
      "Start": "605335e854b14d3ab0d87af595b89699",
      "End": "6a062ed575b54306aaa87fbedbddbf65",
      "Id": "ea971df53a5940b7908f0262ecd3909b",
      "IsHidden": "False"
    },
    {
      "Start": "605335e854b14d3ab0d87af595b89699",
      "End": "94fab97249eb4f31afc9340012d7bd9f",
      "Id": "2271ef304a664077905767f5abafca47",
      "IsHidden": "False"
    },
    {
      "Start": "605335e854b14d3ab0d87af595b89699",
      "End": "a2ce694f5aeb4e04a4cafb1efdd89983",
      "Id": "b2184ab79e05468b876fa576df6016d7",
      "IsHidden": "False"
    },
    {
      "Start": "784f07c63332424ebaa13e5de60e1948",
      "End": "76f15a18a0604bfa82bf66e2df57b1f6",
      "Id": "4569743cd89d44bb98308029a74ab24e",
      "IsHidden": "False"
    },
    {
      "Start": "b4874baf3d184d05a31ca95961da273c",
      "End": "20474ded0a924a16982d77afe5153b61",
      "Id": "af0da06c4d894833800c04a8fb17e4d7",
      "IsHidden": "False"
    },
    {
      "Start": "093dbfd91259421ba970643896aa51c2",
      "End": "4e49dc219f7c45e88e2d402d72347644",
      "Id": "f75ff71bea58466cb11e6fc636721131",
      "IsHidden": "False"
    },
    {
      "Start": "22f3167e1c2f407ea247e501e1f36835",
      "End": "e6d771fb7f8941dcb932cd5ee46b5278",
      "Id": "d90891703d9641a78c1fdd7573f693df",
      "IsHidden": "False"
    },
    {
      "Start": "3a428ee50194461b95f3162e280a5112",
      "End": "e61c059e65d744eca132d3538347e939",
      "Id": "93b717ae27374672b36b32216bdf7f9d",
      "IsHidden": "False"
    },
    {
      "Start": "8a8584d33b1841f5ab6c0aa9d4898e2e",
      "End": "65bdc831770e48328ac582aee6e1b737",
      "Id": "19988641788d499a8cd10f42f7605805",
      "IsHidden": "False"
    },
    {
      "Start": "c19b4d8af3fe4a0b8ef663f842415b30",
      "End": "7d09c360c3514363810b31167739541d",
      "Id": "24670237185f4253a671b733feb46d2e",
      "IsHidden": "False"
    },
    {
      "Start": "0fec254392ec40ce8953c8400bfbff06",
      "End": "7ec9f955f8e04445b73ddfe4d142ea0a",
      "Id": "5937ff66be494db2ba2898e8026e2cec",
      "IsHidden": "False"
    },
    {
      "Start": "b33e6c776bcd4781a161be79eb1e7874",
      "End": "a806118fa94943eaa3cbf9d687a0c877",
      "Id": "c01f634cc8584316b244b38c3dc2248b",
      "IsHidden": "False"
    },
    {
      "Start": "b33e6c776bcd4781a161be79eb1e7874",
      "End": "c0cfb695a7154db198195d93a89878c4",
      "Id": "ddc955c7bdb64846b546da37107bf840",
      "IsHidden": "False"
    },
    {
      "Start": "b33e6c776bcd4781a161be79eb1e7874",
      "End": "5f0fc7dd45b54b3195fd4e9c2e26bb7d",
      "Id": "9324a6b4e5714c2ead80eab9f11c6860",
      "IsHidden": "False"
    },
    {
      "Start": "b33e6c776bcd4781a161be79eb1e7874",
      "End": "27b928beb2e242f5a361f20e91447c1a",
      "Id": "e271e3da43a04bf3bec28604bd08876f",
      "IsHidden": "False"
    },
    {
      "Start": "1f3e1ec4aed14224a0665c06558a9d22",
      "End": "a2690bffbb5e4bc39a9e5be148bd4475",
      "Id": "50a689b7581645dba3e2d94f1b127e3e",
      "IsHidden": "False"
    },
    {
      "Start": "532f2b4c3a2b4115ae1d8d33dec1babc",
      "End": "cc5625499b00404e9b7feb8a42667995",
      "Id": "745190cb1ba546ae9cbb18d84a713dc6",
      "IsHidden": "False"
    },
    {
      "Start": "760896dcc9754ce399fc19424f9d32d3",
      "End": "f53eae9b46d2422a9e4453e21250c61c",
      "Id": "c7b6c3cd4be1407889e521c61adf717e",
      "IsHidden": "False"
    },
    {
      "Start": "d43efa64c5c440f7b5cb0744b058628f",
      "End": "01206fb8858548bdadfcdec5e2a0abbb",
      "Id": "d48ad1ef9ab74c1fadb0e0eba72184d5",
      "IsHidden": "False"
    },
    {
      "Start": "15c2be195cf04ca5ad25b9808854bf1b",
      "End": "029b28c23f444d9b8139a2306fd015f5",
      "Id": "c7fe0d7f75e343b7b31e5e5de8cce435",
      "IsHidden": "False"
    },
    {
      "Start": "70ef932713034f0ea0d04daa4bc08f70",
      "End": "dc9d1be426984f14bffc9a983f9bfdca",
      "Id": "b5196104c9a04fca885c3678dc2a65e3",
      "IsHidden": "False"
    },
    {
      "Start": "2810430aa75e4e93b1ea24da37500462",
      "End": "a7306ceaad2f4af59b5227c0b8ace89b",
      "Id": "a51eed942f2f49c697974d1353fa2a9b",
      "IsHidden": "False"
    },
    {
      "Start": "2810430aa75e4e93b1ea24da37500462",
      "End": "a19ba6460f19442395fb6615966f3ba4",
      "Id": "204c8e29ffd84c419491364c0d779462",
      "IsHidden": "False"
    },
    {
      "Start": "1685e88f581f4c079d39755a4bbfabc0",
      "End": "7d043caeb6604151888ab7dae2ea0a38",
      "Id": "6e595dc4aa0b4d9a9b8f6dce8ffaed88",
      "IsHidden": "False"
    },
    {
      "Start": "a95b8e13857d4e91843ce67010d0c561",
      "End": "3683860b53a64ad9a51d188af2967755",
      "Id": "3becdacd4f294b70adea7a74cc60f112",
      "IsHidden": "False"
    },
    {
      "Start": "a95b8e13857d4e91843ce67010d0c561",
      "End": "255a5a84c93d4112bf9eb4228ea9bf85",
      "Id": "81a5ac4a37114e609e134a96ad14a5ca",
      "IsHidden": "False"
    },
    {
      "Start": "8fb3b7c4e1934262b686df7c13eff019",
      "End": "4272a799df4e43e6a5b8fda338282131",
      "Id": "52cbd83783994909a401a6aacee6c42c",
      "IsHidden": "False"
    },
    {
      "Start": "8fb3b7c4e1934262b686df7c13eff019",
      "End": "aba91ad9af8e4e1aa940a25a3b2045dc",
      "Id": "80620638ab204de6b2c2693053e8adff",
      "IsHidden": "False"
    },
    {
      "Start": "e277f48de6064604a067c7327af82613",
      "End": "8ac9de55cc994ee99ec8d21ed89ae008",
      "Id": "9c9232f35e224a09b70127d3bc9e0789",
      "IsHidden": "False"
    },
    {
      "Start": "e277f48de6064604a067c7327af82613",
      "End": "de7a8db0bd374c3dac7c7cfbf3249143",
      "Id": "28a7855a248d43c09c7ea8ab14501ad1",
      "IsHidden": "False"
    },
    {
      "Start": "a6722a6a101f43e8880a7ca61ddf0f48",
      "End": "9c91dbf615cb463c83e854cead7a3329",
      "Id": "46d2ed6d6d834f10b7259099fd38e679",
      "IsHidden": "False"
    },
    {
      "Start": "8be3d7d8a26b4774ba2f4e35435565a3",
      "End": "93cbc5f70f64496bb1912d4ab6bcf640",
      "Id": "54a07253a8fb4d33b9543fbadedd9220",
      "IsHidden": "False"
    },
    {
      "Start": "8be3d7d8a26b4774ba2f4e35435565a3",
      "End": "12e3747aabdd464faf2fbae19eafaf16",
      "Id": "0a951c38c673441484bd88b79b014858",
      "IsHidden": "False"
    },
    {
      "Start": "8be3d7d8a26b4774ba2f4e35435565a3",
      "End": "3cfcc81235b84a1b905050d92a576bcb",
      "Id": "3ab221739bc64337a682624d36bb23fc",
      "IsHidden": "False"
    },
    {
      "Start": "a25c70a07a364c91bb7d44655f01c025",
      "End": "626078dffee0466d8225e667e619fafd",
      "Id": "ce5ce993203345f9a6c34ff1086f536c",
      "IsHidden": "False"
    },
    {
      "Start": "74629009771446258df508f69e5a491f",
      "End": "f92552e139034101b6c35ac8ab38611e",
      "Id": "e82d6cd7b2024d8f90799bc2c5dd1723",
      "IsHidden": "False"
    },
    {
      "Start": "8212d0f5d4594e10a9f82c7bdbc96abb",
      "End": "86e6467630e14dadb1495db7fc88d589",
      "Id": "0d0bca9f1ba3415cb38122240f8402a4",
      "IsHidden": "False"
    },
    {
      "Start": "94744a04720b4426a1f02449ff36c872",
      "End": "dc1bc4cb00cb4c98a8b078333b3dc8a4",
      "Id": "a3fe4424308d4868af18b814ec884f78",
      "IsHidden": "False"
    },
    {
      "Start": "94744a04720b4426a1f02449ff36c872",
      "End": "020d33d2a6b14195a794d7ecbdd99823",
      "Id": "5dbd36bbc4104df7912221889a14df4f",
      "IsHidden": "False"
    },
    {
      "Start": "94744a04720b4426a1f02449ff36c872",
      "End": "627d4821188e428da1b4ed43aaa9f65c",
      "Id": "7eb59d705e1d41618d33f8c84170513a",
      "IsHidden": "False"
    },
    {
      "Start": "94744a04720b4426a1f02449ff36c872",
      "End": "afe8535fa55d46ee85d8012e02fd588f",
      "Id": "95741a7b0150407b96bac389d0714d0c",
      "IsHidden": "False"
    },
    {
      "Start": "0676554946f04e5ea17a0de58adcfc02",
      "End": "370d250d61a645108eefea3fed51306a",
      "Id": "f4c62394509d465c9f09af16f742efd4",
      "IsHidden": "False"
    },
    {
      "Start": "9c621fb56452447aae9770abad7f9c2f",
      "End": "0d25d7559df34524a0f15a3aae53a2b1",
      "Id": "9ad7295184ad45bca6b8d6d81f57bf66",
      "IsHidden": "False"
    },
    {
      "Start": "8d34a9f0b0664f43b597ab75807e95e2",
      "End": "595bda5640e94309b772fba1f30018bc",
      "Id": "3e86a4b6021e4fee96b297ee9f129a95",
      "IsHidden": "False"
    },
    {
      "Start": "fb7620788f6241279dd542a178e39e49",
      "End": "65300f04a34d4e38a222b443cfee46f2",
      "Id": "8e004b806d0642cdb0005ab8fa228556",
      "IsHidden": "False"
    },
    {
      "Start": "80d580c929624ace8fa430c864131439",
      "End": "ba617602395c412e8bbb817de00f15d4",
      "Id": "0354c17ab7ae4d7fbbac25b14471d0e2",
      "IsHidden": "False"
    },
    {
      "Start": "1ed7c753e9104f31bfcd636c213efcbc",
      "End": "ba45abffd58f42c7965b43528b5d2c18",
      "Id": "48036bf6b572414688fbed87fb1f964e",
      "IsHidden": "False"
    },
    {
      "Start": "6ae3fc0c494e4a3d9f7ed7be66b0ee91",
      "End": "d986b8351b4f46e5bc7ed015e5abadd3",
      "Id": "2280d61decfe41dea8f695da462934c8",
      "IsHidden": "False"
    },
    {
      "Start": "1473c176b34f4cce9ba6d393f465c309",
      "End": "e5ba261938bc493b851495cb12988355",
      "Id": "bbb5cdb3e89f484bb9c8184e0a154c40",
      "IsHidden": "False"
    },
    {
      "Start": "2c0f25665991472b820fa9914afd4850",
      "End": "30955e603dcf46ca90218fea4cbdfc92",
      "Id": "937111f922764bcb9aad69956bf3b1fd",
      "IsHidden": "False"
    },
    {
      "Start": "5bfe23da404a423e821080d435971484",
      "End": "e1441a5f14e14ee28f0869d444a7eb03",
      "Id": "107f81c4977d47dc8e1a314f37ddfe8f",
      "IsHidden": "False"
    },
    {
      "Start": "a1f4587329fb413886c4b2db97780be6",
      "End": "a272fca694454a60851c507ce4c158b9",
      "Id": "6cfc99608f7b4a099f3e0cffe76f12da",
      "IsHidden": "False"
    },
    {
      "Start": "a1f4587329fb413886c4b2db97780be6",
      "End": "b62480e89a6f419d991538d0235aad13",
      "Id": "aa9fb9a927cf4f968f8e3e416fd02697",
      "IsHidden": "False"
    },
    {
      "Start": "ba7e9e687e224dd38b0cf455eb597476",
      "End": "d167a98e29e1458cb070056f4dcbe438",
      "Id": "535bf664201a4674b38a33a6ce21b6b8",
      "IsHidden": "False"
    },
    {
      "Start": "b811520e59c948469380aeeb7ff7103a",
      "End": "56082e0b6c394132856ec4eac17166ba",
      "Id": "c5326524c33445029f08605330eec26b",
      "IsHidden": "False"
    },
    {
      "Start": "f186282903784d748b72cc4c10b0e658",
      "End": "ee51b0f94d2842bf807282db1b88944c",
      "Id": "a91aaf5c8e6c485291326369e2e2c42b",
      "IsHidden": "False"
    },
    {
      "Start": "98dfb4f63d674804bf796682aec416a0",
      "End": "301f4ce958bc4c0cbfd0b07e0ac0a1bb",
      "Id": "7d84aaca1506474d8325aba5af23ce02",
      "IsHidden": "False"
    },
    {
      "Start": "98dfb4f63d674804bf796682aec416a0",
      "End": "74de1253134a4cc5a3b09db1f4e71352",
      "Id": "d2ec668f529847f382730d244b55cf17",
      "IsHidden": "False"
    },
    {
      "Start": "b70b312e6e1d442e93fde5bdc086c6e4",
      "End": "96e5d89507d64ada9e9242cf8ac096c0",
      "Id": "512b4cac82364a029a0843ab50c3e283",
      "IsHidden": "False"
    },
    {
      "Start": "78678cc1d9ab4299b0eec0124b748c45",
      "End": "f409f1a4cc8b4273ac91b2a276d5daac",
      "Id": "b40a1db7bc7a4cfd87528ea44475cdbf",
      "IsHidden": "False"
    },
    {
      "Start": "eae8bde586754df98c464506910dcffb",
      "End": "0990e1c3e18c42fbb2f5a05a3c57241a",
      "Id": "8344b88d7f0548d7955ec82336d3456d",
      "IsHidden": "False"
    },
    {
      "Start": "2471961b812b44e4804dfb2dda06d568",
      "End": "634465d25612441cbde4335984ca2bef",
      "Id": "41afb191160743ed86a6cca19235996a",
      "IsHidden": "False"
    },
    {
      "Start": "2471961b812b44e4804dfb2dda06d568",
      "End": "c31296750b504fe18d6277cf7547853c",
      "Id": "f43228e75d054aee8013325105c357cb",
      "IsHidden": "False"
    },
    {
      "Start": "2471961b812b44e4804dfb2dda06d568",
      "End": "17d935d10d534eda9c1af03efce64e7e",
      "Id": "0fb395d448974ae5a78b568f7f159a1f",
      "IsHidden": "False"
    },
    {
      "Start": "3a8f749a83fc47f88188f99eb747a834",
      "End": "1bacf7b2c1fa41a69047764fe7826190",
      "Id": "5b7ceca2885a42ca864e3d4d41b06f7e",
      "IsHidden": "False"
    },
    {
      "Start": "2ab9dd24ce904df1874844e69e429b33",
      "End": "64ab31d758f44490a86e74d34099ddd5",
      "Id": "df1ae1e8b2be449dbc49275e116f6769",
      "IsHidden": "False"
    },
    {
      "Start": "a61740bbc14d4bd5bdd29b88493d4564",
      "End": "754314d741ca4d199f424c8f47a4849b",
      "Id": "52c691f79f9b49fa8e68573b6713133b",
      "IsHidden": "False"
    },
    {
      "Start": "a61740bbc14d4bd5bdd29b88493d4564",
      "End": "bb1f9655feb147aebdff8e1dd8118a42",
      "Id": "2526b92f159b42f8a68c01b7e1443b88",
      "IsHidden": "False"
    },
    {
      "Start": "a61740bbc14d4bd5bdd29b88493d4564",
      "End": "3808b2bea5e54d119c44215e810fadfc",
      "Id": "e16b60577b6f4b84b13c799bf428e870",
      "IsHidden": "False"
    },
    {
      "Start": "a61740bbc14d4bd5bdd29b88493d4564",
      "End": "043e9b2059584f6d9b955c6097e0af19",
      "Id": "a6de4ad62733426ba381cf20a2a7c796",
      "IsHidden": "False"
    },
    {
      "Start": "4a99c13837a44b8da13bb1151444e95b",
      "End": "4937293cdf77409687eeaeb1c725a6fd",
      "Id": "f4205472504843f097857a99bec1d4f1",
      "IsHidden": "False"
    },
    {
      "Start": "68fd7bb03ca340cf93339db0c53f19ad",
      "End": "7ea46875ee0d4c90aa4caa4d8f228af1",
      "Id": "56a3f1f7a8e4427d80a2b67baeeee418",
      "IsHidden": "False"
    },
    {
      "Start": "68fd7bb03ca340cf93339db0c53f19ad",
      "End": "d23a38a80f8f435e8d1221e5d57f5a51",
      "Id": "b02194b7a2c946368ccfb500d91ebd0b",
      "IsHidden": "False"
    },
    {
      "Start": "59a7b0d3d1e44318898be71e102d1e4d",
      "End": "0ef981e3ea43442aaec89d6810df088b",
      "Id": "0bd97cd022f34b6da0326b25338138b5",
      "IsHidden": "False"
    },
    {
      "Start": "d71900467f9b48ba9e89a4565354dc71",
      "End": "cab12f7a8ba24297827c575479a5ce47",
      "Id": "653d354c31b44f33935cc7786d5bfc2a",
      "IsHidden": "False"
    },
    {
      "Start": "47545d4a5bcb4b3297b617ac5612db2d",
      "End": "df76638881c940c18d22b5e1654633cd",
      "Id": "8ce50c017a6d40ba82ae90e7b9ee90c9",
      "IsHidden": "False"
    },
    {
      "Start": "81cd2514c786492ba88b193c8c456b66",
      "End": "49c40fdf387249a1804c441ef7721961",
      "Id": "8f41be36ce524768a930fd62aa60fc72",
      "IsHidden": "False"
    },
    {
      "Start": "81cd2514c786492ba88b193c8c456b66",
      "End": "af67f58c7b434a5fb7a542175a8bbce2",
      "Id": "ed655893fa724f3fbbbf5ccb614771e9",
      "IsHidden": "False"
    },
    {
      "Start": "13b57970b38c4c488c026726ff0e23ab",
      "End": "f36fdd1744e84c988058f0595ae6e88e",
      "Id": "7419987bb98a4d88a83eb2c0bd2c5b51",
      "IsHidden": "False"
    },
    {
      "Start": "13b57970b38c4c488c026726ff0e23ab",
      "End": "cfeb494a02d8468ca27c70fd0575dc60",
      "Id": "1e4f171eb0524ac6a6dad3ed22930375",
      "IsHidden": "False"
    },
    {
      "Start": "f8f33d41fd174382babce15e1ad0c751",
      "End": "85d99353232544a1b510be6b4a4e14fd",
      "Id": "9689b31a36ef4093a6e99b432b696191",
      "IsHidden": "False"
    },
    {
      "Start": "f8f33d41fd174382babce15e1ad0c751",
      "End": "2ba9d66a65524c9689673551afd7562e",
      "Id": "28e2e07594c04655ba21c4de30185210",
      "IsHidden": "False"
    },
    {
      "Start": "f8f33d41fd174382babce15e1ad0c751",
      "End": "85cf68a0342c45c5af41f6caf03c54ab",
      "Id": "e2318fa3bdb3459bb87ddd922951434b",
      "IsHidden": "False"
    },
    {
      "Start": "bfe2054847a1462d8395cb9f29bb8549",
      "End": "ca387dd5944b406589a90e54e5ef9788",
      "Id": "c2c3fcd1bf504053b69822fa17bcf48e",
      "IsHidden": "False"
    },
    {
      "Start": "4f56dc990c2346e4b2a224564678b27f",
      "End": "4aa5ace6d9404dc2943b7b82eafe97ef",
      "Id": "01ab451a3c90432cb600ee11094eef89",
      "IsHidden": "False"
    },
    {
      "Start": "4f56dc990c2346e4b2a224564678b27f",
      "End": "1549f93bdb564bb29c5907013b7be786",
      "Id": "e0dd317f600f4b55ad57745fe57ec730",
      "IsHidden": "False"
    },
    {
      "Start": "4f56dc990c2346e4b2a224564678b27f",
      "End": "1f8a02919a7345619c7662acf6825712",
      "Id": "af7ac8cc78bc4bfabd7a8edbdfb95e41",
      "IsHidden": "False"
    },
    {
      "Start": "4f56dc990c2346e4b2a224564678b27f",
      "End": "a8ef65f5100b4d97b0477761b3adf82f",
      "Id": "d325e3637b1f4b2b8f8941d2df557be7",
      "IsHidden": "False"
    },
    {
      "Start": "4f56dc990c2346e4b2a224564678b27f",
      "End": "fa64e08f14b94c90afcdd5297682a7b0",
      "Id": "666321f74e0b45369726f6d403ba456a",
      "IsHidden": "False"
    },
    {
      "Start": "4f56dc990c2346e4b2a224564678b27f",
      "End": "f205eed3ef31435c8ab75a8a6d969df6",
      "Id": "6e9bd4cf528d4a4a98dba702f11dd8bd",
      "IsHidden": "False"
    },
    {
      "Start": "51c67463dca7419bb680a4bbab1c8751",
      "End": "80ff83d828a24e3eb42a7fa2527743c0",
      "Id": "f50f632cc4044b588d09e42d478de58d",
      "IsHidden": "False"
    },
    {
      "Start": "c746dbf660ef449e9f1bf90f35b26646",
      "End": "57f94c8f560246d18fb41d31f9502fbc",
      "Id": "c671ea3306004c25b2d7997459cd2c6e",
      "IsHidden": "False"
    },
    {
      "Start": "92a923f7fd4040d39236e0d2f04103f6",
      "End": "6b644409624f48a298d04cad9d113e05",
      "Id": "9b93fb2b59514c96812389b650d70ea4",
      "IsHidden": "False"
    },
    {
      "Start": "92a923f7fd4040d39236e0d2f04103f6",
      "End": "6b8417f97bda4de6a51589be6762e03c",
      "Id": "0ab7e7b9593e498cb5a8339fea6259db",
      "IsHidden": "False"
    },
    {
      "Start": "92a923f7fd4040d39236e0d2f04103f6",
      "End": "27836dcda52c4b56b0aee09c887363a9",
      "Id": "703bcfce7b124f598a3db0379d13b5d8",
      "IsHidden": "False"
    },
    {
      "Start": "92a923f7fd4040d39236e0d2f04103f6",
      "End": "403b181a701f405696fa9bdb1364ecf5",
      "Id": "44b7e10429864ad6a61e9e235bc54972",
      "IsHidden": "False"
    },
    {
      "Start": "f5d4d42d812e4450b76f05faa25a4f98",
      "End": "0a7d65b856ef4dbc818879fd6dae242a",
      "Id": "00d67b03e35140f29c7ad6d6620883fb",
      "IsHidden": "False"
    },
    {
      "Start": "278a80ad2b2944aa8ee8995beb46b787",
      "End": "af24d4c47f994a8daa06260ad66351fd",
      "Id": "485273739c5041ef8c319712c165fdfd",
      "IsHidden": "False"
    },
    {
      "Start": "278a80ad2b2944aa8ee8995beb46b787",
      "End": "05c9744089f64364a1dd5234313efda9",
      "Id": "e25c679a7b0945a588a2c572566b019c",
      "IsHidden": "False"
    },
    {
      "Start": "d55536e797ac4a3688cd96d63a41886e",
      "End": "704940ce7e8a43edae6d51041b2a8470",
      "Id": "d2356c2ea32a4003998433f5e7283835",
      "IsHidden": "False"
    },
    {
      "Start": "4049d9339cf04d358d414161574c9163",
      "End": "7ee0a3361b77482f85de60aef93323d4",
      "Id": "314dc786f28b40d1bb357a615b633bb5",
      "IsHidden": "False"
    },
    {
      "Start": "b1067ad2d8014c1b8f086ba0e105d010",
      "End": "4d4cfe08ef5645dd8e3c123d61cc4248",
      "Id": "ce5f5a0b3f3a4a5399b49ccdc9b33173",
      "IsHidden": "False"
    },
    {
      "Start": "0bdf8ef4aa394d60bd95cb705fe5e964",
      "End": "be30654a27e5438eb13346514a298464",
      "Id": "996ce0369d934cf3b7b04f8e4bbb2a57",
      "IsHidden": "False"
    },
    {
      "Start": "11dfb1020d83406c86fbd332ffdc2b46",
      "End": "04da07d198774c908db147fd7940ee73",
      "Id": "01a21c32afcd49f6b2b5d9a5a167114d",
      "IsHidden": "False"
    },
    {
      "Start": "11dfb1020d83406c86fbd332ffdc2b46",
      "End": "8bb5a1d808074532845db0f0dc9a010c",
      "Id": "9fc997877552492d853880abd3563118",
      "IsHidden": "False"
    },
    {
      "Start": "28435dd5b79c4338a5fba3f8780cf189",
      "End": "5d03920b5deb47a58cc1b1b25c29d78a",
      "Id": "ccfba79a447b464fa475b2e22ac46475",
      "IsHidden": "False"
    },
    {
      "Start": "29c287d2d3fc46b5baeaf274feb8b222",
      "End": "ceb08d40b18c455c872d90046e012768",
      "Id": "98c29d7b9543474eb9556550e64d2286",
      "IsHidden": "False"
    },
    {
      "Start": "8c998fee05e6497790d1c7a5fb824e98",
      "End": "98cb4dabde234f42a796f50db4fec057",
      "Id": "0db712a2f0614e9985df4b4d9f25e0bf",
      "IsHidden": "False"
    },
    {
      "Start": "1c1eb530841a4251896798d82630d4fe",
      "End": "478b3e05a8bc476f824216f195dd8240",
      "Id": "498ada7f0c3f4fd78a798be68c0c597b",
      "IsHidden": "False"
    },
    {
      "Start": "36540a8a323a44708f44cae939379387",
      "End": "2185339b7c104d768240fab13bd890cf",
      "Id": "f743037cd2e841f193b2f298018b413f",
      "IsHidden": "False"
    },
    {
      "Start": "ca57bf71d228490a8e6ca68d5acbe224",
      "End": "770debf96aed4cb8a48dbe86cd0d3436",
      "Id": "fc04572acdaa4458be43ffcafad07b4e",
      "IsHidden": "False"
    },
    {
      "Start": "2fbd87943d3441ecbac82fd342ffc2ff",
      "End": "0c5b0cb3b2374bfe82f56048c234ed6a",
      "Id": "4d10195b3b184322843462428ab3448f",
      "IsHidden": "False"
    },
    {
      "Start": "f21becea31bb4fe48e15367404ccd84c",
      "End": "686dc495442c469f8818a8f9fd32f861",
      "Id": "6c858e57d1de433d9e827a7225a66903",
      "IsHidden": "False"
    },
    {
      "Start": "41b59278780d45bfa5d22fdc25c50910",
      "End": "43d785da63034c30ab490d1d07d4a38f",
      "Id": "fa1482d901c24a86acb9d640cc40204a",
      "IsHidden": "False"
    },
    {
      "Start": "b6181aef165444daba9e9f47b4d34421",
      "End": "468cd146baec46fc9dc9d3a20941e8ee",
      "Id": "29ab1077d47f416b94ee3cf8c4ec6812",
      "IsHidden": "False"
    },
    {
      "Start": "5b33e6aed7b7492b9b50f7579e165cf3",
      "End": "80cd54324bc04fefa559dc27f25e8343",
      "Id": "51b4f913679d4351bbf955725d95564d",
      "IsHidden": "False"
    },
    {
      "Start": "7998dd60ab67406a8edf917fa3fb2671",
      "End": "6d83daf5d2c04025904ff29230030936",
      "Id": "8bdfff9749fe41219dd0c9fde7de1b34",
      "IsHidden": "False"
    },
    {
      "Start": "bf097cc6f79144a3814b3fba304fdf0f",
      "End": "4a7029c418064951b0cc05c4e6e987c5",
      "Id": "e0cff83b5eaa4ede80213d1735f87f88",
      "IsHidden": "False"
    },
    {
      "Start": "12d04283b2814e529c47a98b28f6a896",
      "End": "69c2512153be4d90af9374d6345238a4",
      "Id": "42781e07594944198ac5e683859782c0",
      "IsHidden": "False"
    },
    {
      "Start": "faac897124aa4ad09f871b7a2a3053f3",
      "End": "2ae2daf6b49c4be4875c06889fa3e559",
      "Id": "0755838293674619b03b52bf3ff11927",
      "IsHidden": "False"
    },
    {
      "Start": "c233a25475df4f9cbf098c4e199e07dc",
      "End": "5991ac6f91874087a8cbec52e756946c",
      "Id": "259023635d14471199cb816b2da158d5",
      "IsHidden": "False"
    },
    {
      "Start": "6b24d37c627a4e788638547b384f91a9",
      "End": "755b97d5778c49ab88bb36a0d9227d29",
      "Id": "5f9251cd623d475b8b65c36ccfd97778",
      "IsHidden": "False"
    },
    {
      "Start": "ed8f37ddbaff4cdcb04350bb54b11628",
      "End": "084e7a5b827a4b899585bc6e24f70408",
      "Id": "1b223112ddc64b2485f3761f8739dff7",
      "IsHidden": "False"
    },
    {
      "Start": "ed8f37ddbaff4cdcb04350bb54b11628",
      "End": "2277b28fb4f24030a3904751bd550896",
      "Id": "c2480312b5ca4937a700c86a8a66808f",
      "IsHidden": "False"
    },
    {
      "Start": "531d6ff155e34c5a809daca22ca9d640",
      "End": "7962c7fd2d3b400082e628b0a94b59d3",
      "Id": "23c85f0e13dc4eddbc4ab26929c30caa",
      "IsHidden": "False"
    },
    {
      "Start": "cb86d25d318d4e0e9d57ad52faca46b9",
      "End": "9eb87981b8064cce9c9e2e4c3587d10b",
      "Id": "3e80da3840c44e1fae678bf970417b1e",
      "IsHidden": "False"
    },
    {
      "Start": "4c9e26208af44c7785a51f45ecb4299b",
      "End": "d7012250aef7469e8ea40b9ac9890fb6",
      "Id": "780a94610f4d462e8db9068bebc644d0",
      "IsHidden": "False"
    },
    {
      "Start": "04196b6b79c94343a040a98f28648075",
      "End": "0e4df61565224980bb14c20634d0a8b2",
      "Id": "c2c64c9239aa4686b6f82bce81715306",
      "IsHidden": "False"
    },
    {
      "Start": "988842b131ae4c538eabd26bfb998297",
      "End": "3cc94986df8744929264a46cccffd4d4",
      "Id": "f4d5b0d8820841558180f641620a63a5",
      "IsHidden": "False"
    },
    {
      "Start": "598eea08cae94ae7958f9a3c85127c4b",
      "End": "a79ddc19d58b44f19e076a7ddd16a07f",
      "Id": "98db96747d39474c9836d50d45dfe8f1",
      "IsHidden": "False"
    },
    {
      "Start": "598eea08cae94ae7958f9a3c85127c4b",
      "End": "c9311ac110f84d6ca3db007e236f2e1f",
      "Id": "af3fbcb9f7534d14a14385af297cd199",
      "IsHidden": "False"
    },
    {
      "Start": "28cde05cc0e5474abef0ef9d682184c3",
      "End": "0b34357e6538402a9872d6949ebdad89",
      "Id": "aba16cd4840c492481b1dd3439531a58",
      "IsHidden": "False"
    },
    {
      "Start": "9d19855c3cc44b16909639a44fb9ab5c",
      "End": "37848ae02500415e9ea58c1aeed341ee",
      "Id": "d237d65541ce4b7a89ccf929383a5b1b",
      "IsHidden": "False"
    },
    {
      "Start": "dc727a22a9cb490a9b09f5bfac8f2f04",
      "End": "b76e5143562a4d63a20a47cb596a4a56",
      "Id": "9bf8a5dbd8534160992e050a052d1639",
      "IsHidden": "False"
    },
    {
      "Start": "81ad76c02991400fbd198a7ca8fa272b",
      "End": "cb52d082a4a54da196a800c30ec8c96f",
      "Id": "722805b54c5b449bbd1ae9a47f177a1b",
      "IsHidden": "False"
    },
    {
      "Start": "d3ac60cd1d1641faa5c126342ebbcefb",
      "End": "e3ce0138ea174e85882ae4a4352d1af0",
      "Id": "2d26155cf4bb439997da4c86a7a3ff32",
      "IsHidden": "False"
    },
    {
      "Start": "c2d710c358e845259c773f7248a04d8b",
      "End": "7d0cea1a1eb54381844817e41aa188b0",
      "Id": "a2137b4bdaba4fbebd9fbc3895d96a7b",
      "IsHidden": "False"
    },
    {
      "Start": "84e525b760344592a08267d8b12f7fca",
      "End": "e45d80abe70c417f82f22c0506b16f34",
      "Id": "5e7437b162a84b2987e9fcc0c3bf1230",
      "IsHidden": "False"
    },
    {
      "Start": "5c941569fa124068a18bf88d5727f47e",
      "End": "edf63c4e908d48138cd50882ba3d0475",
      "Id": "aaa2fd44f72248f2b97a404c7c6f0979",
      "IsHidden": "False"
    },
    {
      "Start": "232ded1beacd45f3b1fa1863a12b91a5",
      "End": "90e8fd4655c84928a619b449ab0f5ad8",
      "Id": "11e311abb3a14e9bbc5656c840ea819b",
      "IsHidden": "False"
    },
    {
      "Start": "232ded1beacd45f3b1fa1863a12b91a5",
      "End": "f1ed1f20d7214e28a2b7aac3c757e180",
      "Id": "1f74cb71d2dd45d699947cb817e0a1cb",
      "IsHidden": "False"
    },
    {
      "Start": "34100dc4817d4333bb3115855f4891cc",
      "End": "5d31319311b645a09fd083925f796b1e",
      "Id": "650d5abacbf846c38c1ff9b1d2111111",
      "IsHidden": "False"
    },
    {
      "Start": "30b1e40639d447a991fecb641c8d01da",
      "End": "df45f14527734713bd31b6da54c4e9e6",
      "Id": "968283f1d35e411f997ad408c50bb415",
      "IsHidden": "False"
    },
    {
      "Start": "b4acdb6f6cfc47768b5bb77eb2b7fea5",
      "End": "552972b546934e8d91c8f16402b4f895",
      "Id": "98a4b7be02a04c9ba2a1d75b2e031e6c",
      "IsHidden": "False"
    },
    {
      "Start": "aa5ec290d7f34259a6d5823ad8477e90",
      "End": "654d60a0e63f41bc9103e58809aed195",
      "Id": "254794d2312d486babd67d14502fdc44",
      "IsHidden": "False"
    },
    {
      "Start": "bbf2718938524ff9b1e4c03dd91efc7b",
      "End": "fb13dbda99bd41adb3c7352adb74dbd3",
      "Id": "9088d80d4612480a91172b3ee8906919",
      "IsHidden": "False"
    },
    {
      "Start": "d544f527bddc4880809a9222da324f3e",
      "End": "de03308a1809491d92f5b50eb696d1ca",
      "Id": "1b485d6526f74b2da1252f403822555c",
      "IsHidden": "False"
    },
    {
      "Start": "9fbda3b8950d4ec4a3e3b0c8adc593e5",
      "End": "eba876246dec47e19cc5d5d47cbda671",
      "Id": "30c0086b21cd49de9c3fc01cec016f9d",
      "IsHidden": "False"
    },
    {
      "Start": "2a69afabdf014aa49971922e7e40fa9d",
      "End": "b4e33242014e4bfb8fb2d1bfd84e6898",
      "Id": "cb5c9c1b6675484eb18b8118373ee355",
      "IsHidden": "False"
    },
    {
      "Start": "10245a16dee64dcebbdd8340e7ba2397",
      "End": "a456a76c40f9485f829b8447b6f6c836",
      "Id": "30ce07d1b283485ebc82335d420be8b4",
      "IsHidden": "False"
    },
    {
      "Start": "10245a16dee64dcebbdd8340e7ba2397",
      "End": "c90fdd2969de4332874dd1ad4b350e55",
      "Id": "ac054184373240a59ffde01094923743",
      "IsHidden": "False"
    },
    {
      "Start": "d408437ccfd947bb9ed1b4adeeefd469",
      "End": "c21d3060c4ec4be596493e855da09573",
      "Id": "865cfdd9d210446cab455ffbcfef779b",
      "IsHidden": "False"
    },
    {
      "Start": "d408437ccfd947bb9ed1b4adeeefd469",
      "End": "cd8fe688f1e14769a7395098a953ca19",
      "Id": "63c4d6bcfc654e738ed24d5f5b6045da",
      "IsHidden": "False"
    },
    {
      "Start": "8a4c3b54cf1e45aea90fedbb62e216a9",
      "End": "18edcd8872334090a6e89010371f5ecf",
      "Id": "d446dfaa9cff473e91c49dc1782442cd",
      "IsHidden": "False"
    },
    {
      "Start": "8a4c3b54cf1e45aea90fedbb62e216a9",
      "End": "9b5224ae24be43f983e4adda559a0f34",
      "Id": "bc0142efc5ba42de8f4a48c7fe37c0ff",
      "IsHidden": "False"
    },
    {
      "Start": "293fddf74aa74f529c512b6af28d02f8",
      "End": "ce689309550d45bdb806aaf1764a7274",
      "Id": "756a5c82256748a9b282a61b9002c0be",
      "IsHidden": "False"
    },
    {
      "Start": "c31ae9e7200b48658a5a84047bef1cf4",
      "End": "344bb41bdbf84991aedd00e04529f7d0",
      "Id": "b39c9abfec1b457a8c301d5ac04e00ad",
      "IsHidden": "False"
    },
    {
      "Start": "a9bda8a99d8c4857a3e7e00d670f75b0",
      "End": "f39d1eab9a9149998970036ee76093c7",
      "Id": "e4584b4c81a8487ab2476fd519a30368",
      "IsHidden": "False"
    },
    {
      "Start": "b169d85d54e44d01b19fd00264e0fae0",
      "End": "a2d156d35185499b918c994865eab192",
      "Id": "8f229298f2244bf99c2aee79b3b8cf1e",
      "IsHidden": "False"
    },
    {
      "Start": "7a476fa49ded4f4a8a769144bb94c4de",
      "End": "471eb5ed526c44dbbc575078b4f02c9d",
      "Id": "3ea568797d3142f8b745f37ad4f9779d",
      "IsHidden": "False"
    },
    {
      "Start": "7a476fa49ded4f4a8a769144bb94c4de",
      "End": "ea8547375feb4ff5a29062409c740f4f",
      "Id": "26288ff2a9fc445294d6a81ea7689a44",
      "IsHidden": "False"
    },
    {
      "Start": "2489e29a4eb4482292abf813a6a4a1d8",
      "End": "fcaa2916ae7e45aa9fd1942f51105bd7",
      "Id": "63cc1eefc7ed48fdbcb971a762f2ff34",
      "IsHidden": "False"
    },
    {
      "Start": "2a45f8c756de425db59bc0e7bb114e9f",
      "End": "1b3c5d9c65424c668284fa2b2cc2c841",
      "Id": "9eb33d8e706c4da895c55ca0068d866c",
      "IsHidden": "False"
    },
    {
      "Start": "d96b844b37154098b4e6d699bd2a00c8",
      "End": "52926e8f6e9e46e2ba0e1f3cf13a435f",
      "Id": "14a361a631d049bda73daebd74d8558e",
      "IsHidden": "False"
    },
    {
      "Start": "d96b844b37154098b4e6d699bd2a00c8",
      "End": "855c6129d86c4d41827b5013163df542",
      "Id": "a0086a29e52c45698268e5d9b40bbaba",
      "IsHidden": "False"
    },
    {
      "Start": "c490cccb39bc414b9165012878551233",
      "End": "6b00a0dab68241109ac09c4f2d5ce485",
      "Id": "b540cef280604d1face19b36f0ce3de4",
      "IsHidden": "False"
    },
    {
      "Start": "cc43378ff29d4ffb91b8ff99ed1c4de5",
      "End": "9355b6e681774b3da79f0b5d5c0bea45",
      "Id": "dcfa38fbace84765896de58b4e6d1754",
      "IsHidden": "False"
    },
    {
      "Start": "164c61e91060475283717b2abb6698b0",
      "End": "0bd04ce6cc1d464fa32c6c460a4d916c",
      "Id": "0377228b4c234a0ba5372da513440c9e",
      "IsHidden": "False"
    },
    {
      "Start": "7f042143af9c4343b5e42717820c5500",
      "End": "9054d199f81c4694ad01d8b3d6a91d29",
      "Id": "edaf53075a7742fd88f31dd67bd82a99",
      "IsHidden": "False"
    },
    {
      "Start": "7f042143af9c4343b5e42717820c5500",
      "End": "ba08982e2e1b4a43b1deccc3e28b4fb6",
      "Id": "ab8e7f22ae9b49fbb520d79096e785aa",
      "IsHidden": "False"
    },
    {
      "Start": "7f042143af9c4343b5e42717820c5500",
      "End": "5af047377c2440e28138e3a75b414c5b",
      "Id": "d1b9839e6bdc4bf3bbe276b3070ab6bb",
      "IsHidden": "False"
    },
    {
      "Start": "b00ac5f206d44a7b8d9b8c8c8c2cfd69",
      "End": "d2a2b6166de64019ba5225f5dd2daae9",
      "Id": "4f45a8d9c53a442fb6220facc761e2af",
      "IsHidden": "False"
    },
    {
      "Start": "ebfe02bf995f491dabd3eb3734b37b85",
      "End": "808e1883020249c5835c7afa7fe61011",
      "Id": "8a6f76bfd238496197f8a6433b9555c7",
      "IsHidden": "False"
    },
    {
      "Start": "f103b15b4a53497d9bb542261bb04593",
      "End": "5801ca35d9714762ba3408e1dfeaff04",
      "Id": "9e33f33c7bc54b43847b7ca8269442c3",
      "IsHidden": "False"
    },
    {
      "Start": "5a09d8e7112949a9839a6aede18924d5",
      "End": "1a4468e0a897403db7adce11260184de",
      "Id": "7c853d93c0fc4ece9ac088221e2d2826",
      "IsHidden": "False"
    },
    {
      "Start": "e6d26ab7d560468e8dbca959c1ba8f2e",
      "End": "5d51a5b7122f4101b322c2a80e88b3db",
      "Id": "8b636bffb738453d9c04a2c9b1917669",
      "IsHidden": "False"
    },
    {
      "Start": "9432d8f9cee142ecb980d4a34173c6c6",
      "End": "239dd46aa38646ee8d85cbc35127eb8c",
      "Id": "7e470e910bae4a06bd02d9f862665d79",
      "IsHidden": "False"
    },
    {
      "Start": "9432d8f9cee142ecb980d4a34173c6c6",
      "End": "031186e734da43b29b24216d10d513b1",
      "Id": "727383eba5424d3cb91e83337ca307e9",
      "IsHidden": "False"
    },
    {
      "Start": "5c4968cdeffb4db1ae12281fa5aaf3e2",
      "End": "9618b61afcc9437ab0a3ab5a770553c5",
      "Id": "acd0d12f55ee45fe88adbd1f97f1ba9e",
      "IsHidden": "False"
    },
    {
      "Start": "447d05c00ab948e395b7cf951626fb78",
      "End": "ba74567dfb884d40bcd1057ba3d07235",
      "Id": "37944d61dece4567bb76945bd68ea461",
      "IsHidden": "False"
    },
    {
      "Start": "69a2efb685954c57b592014493634764",
      "End": "eba17498c2c4499f9650540fe9b14e45",
      "Id": "e6d987c0bbbf429e8827b60b70c8200a",
      "IsHidden": "False"
    },
    {
      "Start": "e9a507fda607477c9eb53a6da7ec090e",
      "End": "6c8d65c172644bd2a25ca7f6ebf67145",
      "Id": "3f2e996a19e8402fb22c59e144721c93",
      "IsHidden": "False"
    },
    {
      "Start": "833286d548bb4896aee8885bc5ffe34f",
      "End": "8a559164b54b44d0851bc27a6ce2a374",
      "Id": "15582a88351e42dd9e9461a5a04399e6",
      "IsHidden": "False"
    },
    {
      "Start": "d44b58efdfa641e493b32dd3b6035f5e",
      "End": "8a5e3d46242643b3bd4c182626161b8b",
      "Id": "081204287a404894bd24996591da71cc",
      "IsHidden": "False"
    },
    {
      "Start": "1cb5cde819514a429b0d4a943ccc3ffe",
      "End": "e6ce1ed7d87b4983a853d031d6a6b81c",
      "Id": "fa8fd9aeeafd412fbdbfac839bb140d3",
      "IsHidden": "False"
    },
    {
      "Start": "1f276a799da74503aed687af0223a2a7",
      "End": "f6db5248003f42449cb2923c378c3bd6",
      "Id": "abc9c5b605b44577abf393d010863ffe",
      "IsHidden": "False"
    },
    {
      "Start": "ea03429c7c8f4714a19a4a2ed947c26b",
      "End": "0f3673bdd2ae4e6c92c6cc3be7c8a1e1",
      "Id": "2cb4d642c69d4c88a8d8abe2651bdf88",
      "IsHidden": "False"
    },
    {
      "Start": "9a99863191b14692b9c8319c59375eab",
      "End": "bca65e7f2aec4149be23a0d7a33361a7",
      "Id": "d268867486e445c6942cb9c264e55c8d",
      "IsHidden": "False"
    },
    {
      "Start": "9043ed9f4fcd49a092b767ff57b3bdde",
      "End": "793a984b6161439aa840c9164c2e7c92",
      "Id": "8b2c08443f8a483f83b785417cda22db",
      "IsHidden": "False"
    },
    {
      "Start": "9043ed9f4fcd49a092b767ff57b3bdde",
      "End": "9e131b58c69e422ea2ff7e29bb465944",
      "Id": "b9728126100d46669d9bd3002cc4fbc5",
      "IsHidden": "False"
    },
    {
      "Start": "e7828aa648da46b58c948bf790c59d25",
      "End": "a45aa8ab724940528cd9c3a79a106a80",
      "Id": "dcbc1eb6e7a045439fe2b5368342f33e",
      "IsHidden": "False"
    },
    {
      "Start": "78fb37a83dd145e1ac190f9d4bdec18b",
      "End": "312bb7afdc11476e94a3c71f5cd1446d",
      "Id": "945ea80bb8864281a7c9444357d4f438",
      "IsHidden": "False"
    },
    {
      "Start": "2a8d40d40ffc48c48aa89a1fc3518674",
      "End": "f6b20b06c65f46b7a61c13ac5e99a226",
      "Id": "018799f9b60441f5a2ea8b8434b9a1ab",
      "IsHidden": "False"
    },
    {
      "Start": "5a7ed017d9ba48938dbb8580e1bb22b9",
      "End": "97093d1403284939ad249a4af48ace12",
      "Id": "c486fe9eb2754e2d86f03b4640d6f5eb",
      "IsHidden": "False"
    },
    {
      "Start": "22b788feeaee4b5ab2258d8523e007b8",
      "End": "622fbcd8cabc46e8b413fffe58d9d312",
      "Id": "bc50c50cae654f78a621746a53e3a94a",
      "IsHidden": "False"
    },
    {
      "Start": "9d65cca58355473e9990afdb624473d9",
      "End": "67fdb325edcd428f8333f444922fea80",
      "Id": "d27c5dbe7fa84242b5674a088a4474c0",
      "IsHidden": "False"
    },
    {
      "Start": "74a4b7d6c58046289077ee134c130352",
      "End": "f834ebb5e70f43978411f4c4092f534f",
      "Id": "c2ae49716e9d4ae0bda238355ad2d3df",
      "IsHidden": "False"
    },
    {
      "Start": "6822a5948013438ea4aac099ab88c85a",
      "End": "196afe06aa974bd29cd7ed2a8b79c740",
      "Id": "58a6c38a47e04bd8b6725914a93c5071",
      "IsHidden": "False"
    },
    {
      "Start": "9f951a4eec1e437dab76b86846a54161",
      "End": "31095ba383934aeea2f1f80475e6c3c8",
      "Id": "676dc05d9bbc44548d7b7bddb0f1d80e",
      "IsHidden": "False"
    },
    {
      "Start": "9f951a4eec1e437dab76b86846a54161",
      "End": "2d461ce5751f45b6a716aa031399919c",
      "Id": "6c20f4c2a5884ea8b3e7f0040df533e3",
      "IsHidden": "False"
    },
    {
      "Start": "9f951a4eec1e437dab76b86846a54161",
      "End": "2139602b9637496d88b5c93608d39292",
      "Id": "df874a4d81934211b35e9acb492dbdea",
      "IsHidden": "False"
    },
    {
      "Start": "9f951a4eec1e437dab76b86846a54161",
      "End": "52cc21cd67b14c91a69e0631e4f51271",
      "Id": "9c5d316da9a94ddab8b4df1d723ce2fa",
      "IsHidden": "False"
    },
    {
      "Start": "9f951a4eec1e437dab76b86846a54161",
      "End": "30c388216ff0489aa221805ce83b9de1",
      "Id": "39eb0d3b9ce14fc59805ad0cb25c3592",
      "IsHidden": "False"
    },
    {
      "Start": "8facb6f867ab454dbe7e58738b7a1a81",
      "End": "bbba524f1f2748e9bb8ddc6d2b7b9692",
      "Id": "0c276011b6c14983af2e4cc622e4a5f7",
      "IsHidden": "False"
    },
    {
      "Start": "4905e8e0ebb34acf97934a94f7a6725b",
      "End": "378150a4b5444493939c19fce79398d3",
      "Id": "6cfcedb43a2c40979be61192edd5c0c6",
      "IsHidden": "False"
    },
    {
      "Start": "cad1df14281d4f57b5f89ef74ba9efc6",
      "End": "af3c40e463fd4ecba6792d8cf30ba8fa",
      "Id": "e242f13e8eab49da9baa36614a604e57",
      "IsHidden": "False"
    },
    {
      "Start": "cad1df14281d4f57b5f89ef74ba9efc6",
      "End": "d35dbcd47add4feea5cbb1d5c893b76b",
      "Id": "288db83e98174e0eb1d02f870c4ddeaa",
      "IsHidden": "False"
    },
    {
      "Start": "cad1df14281d4f57b5f89ef74ba9efc6",
      "End": "6bb0740e67f24c228c6d1d63c6b72695",
      "Id": "efd11adf41d5439c82d5bed3b36a9398",
      "IsHidden": "False"
    },
    {
      "Start": "cad1df14281d4f57b5f89ef74ba9efc6",
      "End": "fcdc759e4bdf4eda86388413db3ec1be",
      "Id": "9cdad54e31cb4dcd8385b86c91fe0246",
      "IsHidden": "False"
    },
    {
      "Start": "cad1df14281d4f57b5f89ef74ba9efc6",
      "End": "f4b27294095e4338ad5bbe03b8f1712f",
      "Id": "e81e0e08b51744a7b1485b16863efc90",
      "IsHidden": "False"
    },
    {
      "Start": "24956c71ca4e44f888abc583459dc1ee",
      "End": "4d71a934ef5f495587f88e242c144f70",
      "Id": "6eb6cde4bb14486288cc81ab519a09b0",
      "IsHidden": "False"
    },
    {
      "Start": "24956c71ca4e44f888abc583459dc1ee",
      "End": "d2bec92ff18f4327a01a23c112974ea8",
      "Id": "bd72ec39d2064f1fa9e09baeb3f45ecc",
      "IsHidden": "False"
    },
    {
      "Start": "012f7f8103cf4f0b92d4b5ade9e14234",
      "End": "a2009d9ce7544ecfa48459930d851ffc",
      "Id": "b201b4727d6c4eab8f1b030886be7c62",
      "IsHidden": "False"
    },
    {
      "Start": "e6a255c6e0294abc8189d560c692dc12",
      "End": "d1cf6e85f1ef4284b0aeaeed1020a411",
      "Id": "e9ed229a0d6f434990908d93e7886648",
      "IsHidden": "False"
    },
    {
      "Start": "177980f6ab284b6690e7d3393e5fefaa",
      "End": "10c23eeff5de431bb72043b5995298a6",
      "Id": "d70fac2056fe40e683763a1305e5666e",
      "IsHidden": "False"
    },
    {
      "Start": "d3e3192e0a51437db0cabd3ac45d9b03",
      "End": "b9f918c19e5c49f59461e710099aa715",
      "Id": "685865e26a32419697aa9752c3ea3fea",
      "IsHidden": "False"
    },
    {
      "Start": "02b3b3089bfb4d9a8ebcfdc3eb914570",
      "End": "3ff581aefbe840ceb8cf95a767d617fa",
      "Id": "99c4c51127cf4bc5b1728047247ae847",
      "IsHidden": "False"
    },
    {
      "Start": "c2dcda15ebf9402b8b5851eb4c468db9",
      "End": "cd25ad8155db423890b60bc98146c129",
      "Id": "5e4b786bc0664c53a95ccda523ed55d1",
      "IsHidden": "False"
    },
    {
      "Start": "d415a221fb65497182ed8d5acf1edda5",
      "End": "d6b8efd0081d489488ae60d7d64fa260",
      "Id": "29db65dd7dc045a8b97d14357f3c3883",
      "IsHidden": "False"
    },
    {
      "Start": "dcb90d7bed9f40308d4cd403fae791af",
      "End": "b69bbe354d01493da1bcfac3807cebc6",
      "Id": "4cf46f28ca4444e685b3624dca9e2a63",
      "IsHidden": "False"
    },
    {
      "Start": "dcb90d7bed9f40308d4cd403fae791af",
      "End": "daeb9123891e4af08feefbf844d638d8",
      "Id": "be795ebc7dce4982a2d1815b20aaacbd",
      "IsHidden": "False"
    },
    {
      "Start": "5abc866ac0214d79a343e17b0b022288",
      "End": "942f13c8e2d14f5fb0b34195eb941f48",
      "Id": "c8a819caf89843339ecdea9db1fc3c8f",
      "IsHidden": "False"
    },
    {
      "Start": "48629ae4bcec405ba99308a6191d7552",
      "End": "640c771d51b844059d4b31d137b8c464",
      "Id": "5fbdbb8db1f44682bd06cfa2d06cc51c",
      "IsHidden": "False"
    },
    {
      "Start": "87c4c27700a441c0b6cd3b4285420f03",
      "End": "5462c707d8b34d94865651f47aa8dd55",
      "Id": "567833f5866c4a48b40ccdb28df1b804",
      "IsHidden": "False"
    },
    {
      "Start": "4402356fdcb54f96bf92f4698cae9f41",
      "End": "2b2fe9801c744dd2819281ec10614664",
      "Id": "bd80d5c6fda04c1da13ee5512d7e6ca5",
      "IsHidden": "False"
    },
    {
      "Start": "a0c76f65010e409ea66664a4caab36b7",
      "End": "a2428da2cc74435688428760e9021864",
      "Id": "fd8b3408d5504e8a85599b60b3598e6e",
      "IsHidden": "False"
    },
    {
      "Start": "834619a31d65493bbb132f5077052927",
      "End": "c5d01b6074f7488d80c0eeb82b307a91",
      "Id": "e0cd2c937f83471cbcc3d850574ba269",
      "IsHidden": "False"
    },
    {
      "Start": "d54453ed00c941dcbcf8f3941aa05fef",
      "End": "0de71ae678c94a2da1eff8689b66f17a",
      "Id": "fb5b3bab654d440387b8ba846eade036",
      "IsHidden": "False"
    },
    {
      "Start": "52f736ab0d4f43169bfcf785fd31a63d",
      "End": "1d839ef6a40f432b8ba70b6ffb3d8c89",
      "Id": "86f34391d4d2409bb506c383ad48953b",
      "IsHidden": "False"
    },
    {
      "Start": "dfd55fcbc27c4903a3606cadb07e1074",
      "End": "81b6b23bfb964217ae00ee9c9d370362",
      "Id": "2555efaf3576465db4768b7db02a000b",
      "IsHidden": "False"
    },
    {
      "Start": "4d5d4e89ba264b6b8eee25d3340a2b85",
      "End": "45f5f9a1826c4a7da7cfcfe3a5ed9824",
      "Id": "730b5d2e6be740528175b147e921ca16",
      "IsHidden": "False"
    },
    {
      "Start": "ec4145e322244894b73a6a7aa5953414",
      "End": "ef6a07e102d4425482089dbda7ca9061",
      "Id": "69a0923c1bf845ed93e3106bdb46df8a",
      "IsHidden": "False"
    },
    {
      "Start": "abbbee53bbc146aca52b8881c40fbbf4",
      "End": "6e121c546e574245b418815a32efcae1",
      "Id": "3973ed97f4c541b585c84d815b19f356",
      "IsHidden": "False"
    },
    {
      "Start": "abbbee53bbc146aca52b8881c40fbbf4",
      "End": "fc97a9e946094e40bebde09697435d0a",
      "Id": "3287d289c77e41c19d3136bb79778e43",
      "IsHidden": "False"
    },
    {
      "Start": "0cb5532d248b4e019d0a3b4680f1dad9",
      "End": "89114ca7de0d4a98aa54dcc20f8603f6",
      "Id": "b8eac0be1bdb4caf87e5d9c05f218e37",
      "IsHidden": "False"
    },
    {
      "Start": "cb877c64f81d48d882156226322df47a",
      "End": "85fce47a18cb47b799ff5c12d183bebf",
      "Id": "13518482df0546e0b7b4a0669350cd45",
      "IsHidden": "False"
    },
    {
      "Start": "81169f88c1b640798258d51de07b398a",
      "End": "369716d84d784d8bbe9853a3d1a5db80",
      "Id": "c555f52c206d4e1e8d21d13d9d5953b6",
      "IsHidden": "False"
    },
    {
      "Start": "92afda4ef98342cf91c043600dd14d86",
      "End": "b3641b5082f649b0b8289964b20c436a",
      "Id": "ea700a41d08f4636b554a8794d7a4c2b",
      "IsHidden": "False"
    },
    {
      "Start": "d7d2829f30c7427cb2c971941cbe6dc6",
      "End": "1b41020c7d9c4f9cb26f7c58c63d503a",
      "Id": "da2547f319554963b090385b1fe48e03",
      "IsHidden": "False"
    },
    {
      "Start": "5c37791d897843cdb45cc9f65533cb5e",
      "End": "87dc2b43453f4f189f19f79ec6bf0018",
      "Id": "10fe5f7ce8b44308b3aecca98ef4e055",
      "IsHidden": "False"
    },
    {
      "Start": "25f4c2124d9148c4b0f21bc2ce6bbbfb",
      "End": "a197a6a7356a4a7cb59c5496d9004c29",
      "Id": "7b095096d1a843179f4540810daf45ee",
      "IsHidden": "False"
    },
    {
      "Start": "d191f25ee6d54b5c87f7877c9fb90514",
      "End": "4d1e843e2add4f818399c131c2b2a8ab",
      "Id": "06c4faad4f024e6487e6147edaf10f97",
      "IsHidden": "False"
    },
    {
      "Start": "cf8a6a4890ca43aaa52f8cbd761e6920",
      "End": "6598dd0e341146258cfd0401dd2e4bbb",
      "Id": "d2ba6a6add424d299ffc7e8935145e2d",
      "IsHidden": "False"
    },
    {
      "Start": "0d79a32bd2cc4e819e1eeefe7733d57a",
      "End": "c8a5eb9ef8704b85897db2d588e85830",
      "Id": "2e5787eae2dc42af9d66c93d4421142e",
      "IsHidden": "False"
    },
    {
      "Start": "fcdd3bd33b664f9994814be0f8559d9f",
      "End": "29e4e549da444ad7a10167756d32bc86",
      "Id": "19f6f3702c4d4dcf812f419c1cac9bcf",
      "IsHidden": "False"
    },
    {
      "Start": "1a454c39051c47a59447dbae2faf791f",
      "End": "1b97736035994cd8951daf6b9425e0fa",
      "Id": "5b069cc66a8c4fef99aaf214f868b131",
      "IsHidden": "False"
    },
    {
      "Start": "feaa4a53328340b0a8738371524e174c",
      "End": "6a753bf24414488e8c3412135a20615d",
      "Id": "1a0e13cd460f4c638f293cd9695eadab",
      "IsHidden": "False"
    },
    {
      "Start": "6f19afa3cfe6424aa5e3f49356ca68b3",
      "End": "6eb6589c64ee4b2a8879f628528c2872",
      "Id": "917326312a624f67999d7f9c4a0bfb88",
      "IsHidden": "False"
    },
    {
      "Start": "6f19afa3cfe6424aa5e3f49356ca68b3",
      "End": "5a4d6c68903f4425bec0025696268d8b",
      "Id": "e90c8305b9f74e0484c40804aa10fd20",
      "IsHidden": "False"
    },
    {
      "Start": "6f19afa3cfe6424aa5e3f49356ca68b3",
      "End": "462bd0082cf94ed4a6518fe0bf0a4c15",
      "Id": "f0cac0a701fa413f9adea02ccbe47fd2",
      "IsHidden": "False"
    },
    {
      "Start": "6f19afa3cfe6424aa5e3f49356ca68b3",
      "End": "a15e99bc5faa4cbaab87c47072cef706",
      "Id": "465258be5b6d4dc1b4aa7d33f4e565c0",
      "IsHidden": "False"
    },
    {
      "Start": "a132f8299ee747d7b35370b8b5ecfd78",
      "End": "2abd1fb5cc834be0872928c617513608",
      "Id": "173816590c1e41a3a5a9f53e82d3c249",
      "IsHidden": "False"
    },
    {
      "Start": "f3b3cd45b32147698cae9d384367b057",
      "End": "19505f38d48e44f69270eb9f932a83a2",
      "Id": "b6e0b775c4d44ea9a7bb52c61cbb310d",
      "IsHidden": "False"
    },
    {
      "Start": "ff1a05977cc4417b8c2320e311605507",
      "End": "20eced836f874c11a7d261f50d750ec5",
      "Id": "c4724bf401da407abc380f9dd8502368",
      "IsHidden": "False"
    },
    {
      "Start": "c136dffe0fff420a945d7a195f276cbe",
      "End": "c4a8cf4e8ab04e208e0c90249a534a83",
      "Id": "452bc8bc26c14303b2097ebbe113b033",
      "IsHidden": "False"
    },
    {
      "Start": "04e834c59dbf477a847fae507e716429",
      "End": "e97becadca744d4ab2269ee1c33959de",
      "Id": "5c5a76ac9e24455aa9cf50008e1d1e91",
      "IsHidden": "False"
    },
    {
      "Start": "676b58a892fb446293516e63af20cd7c",
      "End": "9999725f17b04fafad64f7bcd571e478",
      "Id": "b99aa2cb9e5a40ca97b43393f08bc060",
      "IsHidden": "False"
    },
    {
      "Start": "676b58a892fb446293516e63af20cd7c",
      "End": "9d49a904585145ed8dc1dd24b85dfe8e",
      "Id": "3f35e69b239b42558b1675b3d6504944",
      "IsHidden": "False"
    },
    {
      "Start": "e8a9efad38544946987038d617d43d71",
      "End": "89722a22b8d14368acacddf53c1ca1fa",
      "Id": "dc2061a8ad804d618cae13450c09eded",
      "IsHidden": "False"
    },
    {
      "Start": "afdad843603e4dbdb5e5f2732e7998c1",
      "End": "9ff0f2244b7f4343a4dc7f3931919dc8",
      "Id": "31d7a94fffb544b9b597734779638302",
      "IsHidden": "False"
    },
    {
      "Start": "ddbdae0b7a41494ca0c9622987fbc07b",
      "End": "e1f0d38ed26d4459a631a6c4b82ea6f5",
      "Id": "69ff7eb7f9c24923bddf0129be0c4a8b",
      "IsHidden": "False"
    },
    {
      "Start": "c8ea0d0be5f6478e9412a73e37be642f",
      "End": "58f0cb0514f344ad887b6828382a805e",
      "Id": "00d8eea5c5d849688b94c04ed6612659",
      "IsHidden": "False"
    },
    {
      "Start": "f09280f6d8b94750b70f272648fdc590",
      "End": "6021f91644714135815d1a1ba75bb920",
      "Id": "8ac35600883242e79f6012f4c4f0cf66",
      "IsHidden": "False"
    },
    {
      "Start": "662c41a16f7340179c6e8d0519512d43",
      "End": "134967bc7b454206b5cd3b384ae25e1f",
      "Id": "b621e81f409641b7acf3257773879616",
      "IsHidden": "False"
    },
    {
      "Start": "662c41a16f7340179c6e8d0519512d43",
      "End": "cb078b85f565455d920f85fdc09a8874",
      "Id": "aeb51eb49d724aa1812db79ee2e8eaba",
      "IsHidden": "False"
    },
    {
      "Start": "2dc7536dbb0d4845b7d812d4e91459aa",
      "End": "a90ff10bb72b47ce97c3244bea5128cb",
      "Id": "04c2987829a24a708a948e574d760e4d",
      "IsHidden": "False"
    },
    {
      "Start": "2905453d386d4cfea929f6e9e3fc607b",
      "End": "0135aaec17234a0ea481549b9dc7e022",
      "Id": "cc50e57bc6fc4e9cb1534bfc5e7ac86a",
      "IsHidden": "False"
    },
    {
      "Start": "7620be62e1e948ec90c89c72e36b73a3",
      "End": "ace880b206884ab395731a3a31ff915f",
      "Id": "01ff18b1d9fd49309d301427f713f374",
      "IsHidden": "False"
    },
    {
      "Start": "bfcc10366d534591bfc7b658dc454396",
      "End": "99f7be3da9554298926b735676942b8d",
      "Id": "b3d4a515ffe34446bcae868cda402440",
      "IsHidden": "False"
    },
    {
      "Start": "9681c97d71484285b61397efe0809dc9",
      "End": "27b768f216544961900117a1ed407838",
      "Id": "d5d9ce04b97f42389f09703763a02b28",
      "IsHidden": "False"
    },
    {
      "Start": "eecb319ff067447a93688ba8e2faf464",
      "End": "ec53b3c122b54ea9a06a7260700f1f83",
      "Id": "3556399fa41645d2b0bc963eea1833f4",
      "IsHidden": "False"
    },
    {
      "Start": "20d7037f887142799845a2b3f6b00afc",
      "End": "b32989bd56474250806a5bb4f464f94d",
      "Id": "9b1afbf16ebc48c4918be1459f4e2102",
      "IsHidden": "False"
    },
    {
      "Start": "6b37f37293024c69a5efde4f445d5615",
      "End": "1a04ab71fe244824808a5c41153e8bc8",
      "Id": "b5f8f9decfad4daab7c12db1056fcafc",
      "IsHidden": "False"
    },
    {
      "Start": "795fbfad141f43d68a455453318d5c08",
      "End": "2d4f94a5673146cca32a2a312c601094",
      "Id": "c3e24a3193a44ffd8876e484f13c4102",
      "IsHidden": "False"
    },
    {
      "Start": "7dd91787d51b4aedb6b8d84781f20926",
      "End": "8f29f311009a41a9b1d1019ba51f6736",
      "Id": "d707fe5c2c31488ebafd1e620fac52a2",
      "IsHidden": "False"
    },
    {
      "Start": "c5b1d704ffe742c288af06c0b59524da",
      "End": "bba363da8a9f458eade1485e62178329",
      "Id": "33e4ebb0e1f642bea10db1984cf60eac",
      "IsHidden": "False"
    },
    {
      "Start": "5da0a3eed31a4d798f1d9c5108f52e2c",
      "End": "bcd4f936d13c4765be15360dfba605b9",
      "Id": "659e7aba12e04fcba8b9c64247a36dbb",
      "IsHidden": "False"
    },
    {
      "Start": "c8c0f979ed17468987bdf66ed57644d8",
      "End": "7d1ecc992419413bbb156067def5721d",
      "Id": "254a8e6090cb4addb150f69cafaac672",
      "IsHidden": "False"
    },
    {
      "Start": "6264d4f71d01418c91eae7e80c26a1ef",
      "End": "92b354aaa7f641daaffb3d19a9353b75",
      "Id": "bc49ec01c0cf41688f6b0721bbe5f7ef",
      "IsHidden": "False"
    },
    {
      "Start": "89726da574594cbea942c483d1cea4a1",
      "End": "486892c613104399b661ac10a5694361",
      "Id": "1d3d05e82f9d485bb61af1ec93e15cc4",
      "IsHidden": "False"
    },
    {
      "Start": "450b4ad9597d45beb1910e202f4ded0d",
      "End": "b7afa9e1e171409a9345414781029dd2",
      "Id": "21ca2437392c462c899f3ab4500397a2",
      "IsHidden": "False"
    },
    {
      "Start": "450b4ad9597d45beb1910e202f4ded0d",
      "End": "90ca6a2bf6f94209a4aa490e8d8d8789",
      "Id": "83315638b08a44ae88524d66ee294834",
      "IsHidden": "False"
    },
    {
      "Start": "ad017d89d4db4153a29f86b2e62dc88c",
      "End": "1452056d2ab84b4d862c4253e1f50d6c",
      "Id": "d4e9ee3d20c443eea6970c20fb5c901e",
      "IsHidden": "False"
    },
    {
      "Start": "1472ec512a104b76b3e55d61836e90a1",
      "End": "2f084088904d4349a40117668ed3b0e7",
      "Id": "a1c780a3dbba4b4095f7c35cbdc5272d",
      "IsHidden": "False"
    },
    {
      "Start": "483f2a2a29464762a05d677d79368354",
      "End": "b72b3af6f441470f81e6b92e1582937a",
      "Id": "641bf323a10043c7aa06c55c76728dc2",
      "IsHidden": "False"
    },
    {
      "Start": "763c40b58ceb4afc874016e1dfbdddca",
      "End": "a03c7cc8cf6041118b6fad00e2dc6923",
      "Id": "0779303bd7c94a9f8b4c428ad299b7fb",
      "IsHidden": "False"
    },
    {
      "Start": "c9b4382642844d54b9062523e7303988",
      "End": "12a86e1226ee48ad87413a87337acb39",
      "Id": "77b95f413b1947dd96fb4d3a20a1189b",
      "IsHidden": "False"
    },
    {
      "Start": "fff0b0981342488599bf60be7737ee41",
      "End": "88cd0c68a0a245d2b5b37cb0be188846",
      "Id": "7559b553c4794b63890850e4088b3553",
      "IsHidden": "False"
    },
    {
      "Start": "af33dc8e5c0d4c1c8717895c8e36b925",
      "End": "e5e989ab78514680855f29ea9abd76ce",
      "Id": "fa82bd7691ad4f679a0172697bd7bacb",
      "IsHidden": "False"
    },
    {
      "Start": "9a659773c8a44f3cb95e4b08dc3da3bd",
      "End": "f58912ae22c04ec689dea73bfe941dbf",
      "Id": "0c4ebf6c16494137a26cdc4caf5b429c",
      "IsHidden": "False"
    },
    {
      "Start": "cb82934f824d4fb6ac9c3877736fa2f6",
      "End": "82b43ba5f5af45dca93b891649b4a320",
      "Id": "b6377fbd5a794e689097d9c79a0a1653",
      "IsHidden": "False"
    },
    {
      "Start": "63b8f566d267421397ebbc7d343f6eef",
      "End": "b350807e6c1d42479948e3d8c5da652e",
      "Id": "7152bec2644242beb5f836d0f1966ef8",
      "IsHidden": "False"
    },
    {
      "Start": "63b8f566d267421397ebbc7d343f6eef",
      "End": "cc526c8c49b14af68d25dd28f3d1f83d",
      "Id": "e1ad66b8f51c402a8f3606753bd62af9",
      "IsHidden": "False"
    },
    {
      "Start": "f3cccb8590964ab0b73220827eb8411e",
      "End": "8d74b8e7767c4ec5ace0121c2988c54e",
      "Id": "c7a815a24d47487e8975114161522fe5",
      "IsHidden": "False"
    },
    {
      "Start": "1a3e60d65fc046d3a038e62bb47664ee",
      "End": "73155ca98a3647f68bf18b30fdd9d388",
      "Id": "e8dc1c8a1c7c48fdb5886ff45e3d57b7",
      "IsHidden": "False"
    },
    {
      "Start": "4eab2de5440645f9a6ea508d1173284c",
      "End": "9ad3ab9144af42c48041d8c4ccce38ba",
      "Id": "42f861f52dd342da89e7180e5ef2b7a3",
      "IsHidden": "False"
    },
    {
      "Start": "c85fbbcc4dea4e44982eb41c4c85fd75",
      "End": "15e9a4289fee4ce59e6d70b1083aaa16",
      "Id": "1bcad2d1af5f4a54a4c121416ffe1faa",
      "IsHidden": "False"
    },
    {
      "Start": "13ae26af523c4426af694c26ca669ed6",
      "End": "430126238f6a40fe83ed7a3a3fce87d2",
      "Id": "295fdb26564b435baceae9003064a13b",
      "IsHidden": "False"
    },
    {
      "Start": "b5a55ba7257145d38330a46563ace799",
      "End": "9b968982d9bf4920a06af2f6053caa0b",
      "Id": "7c0b99c3a80546e2abe406f2cf6f7c11",
      "IsHidden": "False"
    },
    {
      "Start": "70c1719162fb41d58ae1e0551a984191",
      "End": "a686dc3131e84e9da30b8bdf33d3840e",
      "Id": "e3a2a0835e714ad98544a1a75c029d1f",
      "IsHidden": "False"
    },
    {
      "Start": "64576cacd39643188fd2d534de31648c",
      "End": "876f032b70854c3c91749f5b7f403c49",
      "Id": "910f239488744c8d8100faab47d724e7",
      "IsHidden": "False"
    },
    {
      "Start": "64576cacd39643188fd2d534de31648c",
      "End": "4f3ac3d3c6524164bbbb9f4e12abcf38",
      "Id": "2f1a8c2d63da41b1b6714700ed6211a6",
      "IsHidden": "False"
    },
    {
      "Start": "8b36ec39b7d243038ae5eee878686960",
      "End": "ff1a0b44f1954f55a9333ae86259688b",
      "Id": "1a33f6d13ad14640afd3eeb5dcd2d34a",
      "IsHidden": "False"
    },
    {
      "Start": "2b3283ba7cc9441ea1238c37f1795f62",
      "End": "15d8ee9219e047b3a996fc27b0ddb963",
      "Id": "e3ddce21189547ceba1658b7999cd5fb",
      "IsHidden": "False"
    },
    {
      "Start": "2b3283ba7cc9441ea1238c37f1795f62",
      "End": "0f987426528143bfaf23327b63c21f8e",
      "Id": "45a8239d293e4b7c8812166d6ddd651e",
      "IsHidden": "False"
    },
    {
      "Start": "2b3283ba7cc9441ea1238c37f1795f62",
      "End": "9bf2335ece424efea33bc7c3d8ae149d",
      "Id": "e0412823477b451e9569d05be71c7d9d",
      "IsHidden": "False"
    },
    {
      "Start": "2b3283ba7cc9441ea1238c37f1795f62",
      "End": "1f8d7d455e534102b97f794ef2cd68c7",
      "Id": "b66f65c424394bf0867a1f3828e246fe",
      "IsHidden": "False"
    },
    {
      "Start": "0fef55151da14cb8bf76b83080129b54",
      "End": "6625cea6e7b84f67b1847e3fafa20903",
      "Id": "d881932c11e246838357ed16735d08cb",
      "IsHidden": "False"
    },
    {
      "Start": "0fef55151da14cb8bf76b83080129b54",
      "End": "c0c24717b29843d98949af91b6ba8205",
      "Id": "163c6c3c551d430dafa39a22060d13b9",
      "IsHidden": "False"
    },
    {
      "Start": "5277d6278df44ff088c4ba57692ffc84",
      "End": "236f7e61bd4d4c7b9de839362aae9ccd",
      "Id": "e74bc2170d234e3e88703fe7166a3fbe",
      "IsHidden": "False"
    },
    {
      "Start": "43a3b16f0ccb4868a504b2a9859eab96",
      "End": "4d3149db1aa84924a35429bb0e2f2eae",
      "Id": "df801297fc8f4cbf9f352047b5d7a136",
      "IsHidden": "False"
    },
    {
      "Start": "d494800e00264699822c4a3b1905510f",
      "End": "69db2d7eb3db45dcbb27ea1c186915b8",
      "Id": "09735333787e4b02baa86ae7dcff8ae7",
      "IsHidden": "False"
    },
    {
      "Start": "165560d028fa49f98fbd565672c34f15",
      "End": "a3f384e120ea4d588b674954e53bdc03",
      "Id": "44ddd1f888d04aa88f6aba5df57e2010",
      "IsHidden": "False"
    },
    {
      "Start": "6a4f46f4a3db45f081039e1479c75946",
      "End": "e2caa31f292a4a04a90a87f860c844a6",
      "Id": "b5f0cc908156465a97e2d3bdd5101171",
      "IsHidden": "False"
    },
    {
      "Start": "b6262152c20f4f8ca0b734fe0ab5ecc1",
      "End": "9d8d5e04402f4e04ab6b1f6c36e5f62c",
      "Id": "4092d4cdb91f4c83a17708bbe23571d3",
      "IsHidden": "False"
    },
    {
      "Start": "aff869c722704ec9a612588b5d7eeced",
      "End": "3614b6b053bf41a8ad65ea9a3459e355",
      "Id": "211bbc360e7f4a04866505809b0d97ac",
      "IsHidden": "False"
    },
    {
      "Start": "2486ffcdf9414cc5bd90fd661fc8cfcf",
      "End": "1186cd57a69e455b9d703641f284eefa",
      "Id": "913558094cb24a69ad592d322c95168b",
      "IsHidden": "False"
    },
    {
      "Start": "298123729d0a43d38844abcc6689c946",
      "End": "b8c6bf47a13e4ff69cf10dfe8fc8359b",
      "Id": "bb3fe60926ce49888863f9cf0333082e",
      "IsHidden": "False"
    },
    {
      "Start": "e14f3d6a710241f1922bbe3778dda1a8",
      "End": "37d6221afaad43eeaaa0f782bf9de172",
      "Id": "d70cc94bf194488b8bd958e66bf9736b",
      "IsHidden": "False"
    },
    {
      "Start": "634c01066b2847a3805a4af2b4798fd8",
      "End": "f2940215aa714358a5238bf9701b3a3e",
      "Id": "fc15c8d1e41849428c2de1621f92710b",
      "IsHidden": "False"
    },
    {
      "Start": "2a9ffee310ca4d38a6f984c860d61d15",
      "End": "31d21b5b77b749498fcaa38f6a20bd38",
      "Id": "a073b5228a2c4eb081a399eabb32df0a",
      "IsHidden": "False"
    },
    {
      "Start": "7eba2379130f448cb0109d139260ea68",
      "End": "5fc33aa0a3484474b6500226d96b876b",
      "Id": "aa54f3966b534f089bfe19bcd7d865b1",
      "IsHidden": "False"
    },
    {
      "Start": "7eba2379130f448cb0109d139260ea68",
      "End": "112265bbde1d44a3976ceb469ffce671",
      "Id": "837cd6f50fc845b9b56cad53f3dee67f",
      "IsHidden": "False"
    },
    {
      "Start": "a54404821aa540ea853b9f3aa9ff911d",
      "End": "9ebb436a10fa47a1b62ccb8be0f882a2",
      "Id": "62f4a540273a45ad9b5235110126525e",
      "IsHidden": "False"
    },
    {
      "Start": "6c83a793d2424e30a8c073a4f50f4d10",
      "End": "a784ea3cde8846d9925bff5fe215301d",
      "Id": "f1621fdb916c4516ab17e854470cf47b",
      "IsHidden": "False"
    },
    {
      "Start": "182e36af83f7444f983e761cdafc063d",
      "End": "a9f8f0109b3647b2ba0a8464ac4f1f23",
      "Id": "06cf88f9154d4cc291b3397ac33bd17a",
      "IsHidden": "False"
    },
    {
      "Start": "36ee2bf5f53b431ab00f90cdd40b3bf1",
      "End": "06d0eddd3f0447a581d930b482312d22",
      "Id": "4ab878ebc9674edab19f4836698263d0",
      "IsHidden": "False"
    },
    {
      "Start": "d170284672ad42f8b16716584034ddc4",
      "End": "0358afc69a274663b7996dc734a39a44",
      "Id": "9978bc09b72c4df699f43847450a4343",
      "IsHidden": "False"
    },
    {
      "Start": "287a7a72a9234e109825f5355363fbb3",
      "End": "78c121a45f6743fc9c13f9c96687174a",
      "Id": "918a1bcb18e4444ca298407a3b330fb4",
      "IsHidden": "False"
    },
    {
      "Start": "e8f604bac72b4dfb94a24ef7403933d9",
      "End": "a5ecb146ded846599b80b865db755334",
      "Id": "2cf0cb89a784494dac0f69d047c4dfb2",
      "IsHidden": "False"
    },
    {
      "Start": "8a7dd8ecf53a41a0a7b15166ce5de558",
      "End": "41c0b178dfc84e2084473e119d66970d",
      "Id": "637ac229b2c94532b625a920333ec5e8",
      "IsHidden": "False"
    },
    {
      "Start": "d0424c81cea34b808f17fc827a71d045",
      "End": "3cdce4bc0a4d413a8b547b8c5aadcf87",
      "Id": "cdd2312d720e45078077399ed45186d3",
      "IsHidden": "False"
    },
    {
      "Start": "d0424c81cea34b808f17fc827a71d045",
      "End": "e0b4d9a639164430a984c0c385826a14",
      "Id": "455b4f3bf6f74c92a7da802e2235fd0e",
      "IsHidden": "False"
    },
    {
      "Start": "b30b7d173d8344e5a146a86503f016a5",
      "End": "689e135d8d594950914d7153e434c8f4",
      "Id": "deb992e18e9d4fc485d943a059f4f464",
      "IsHidden": "False"
    },
    {
      "Start": "4a98bf56e1b34b9aa10e777fa5d1d652",
      "End": "32af7dee9f9640cfbfc69074eb432058",
      "Id": "b77a91e0e0b148ce9bb8f9ae5e1b9c22",
      "IsHidden": "False"
    },
    {
      "Start": "2973ee6e2990437a8eae6e453d355e0c",
      "End": "1325b22f5aca453980e5ef19e817d357",
      "Id": "05a658a64c0f49db8a5e37d4b5f6f61d",
      "IsHidden": "False"
    },
    {
      "Start": "1bcf782fe3f54d2eb2c7ef0a24eb09c6",
      "End": "bc63a76a14c04ea0ab493b4ff8758cd3",
      "Id": "888fb494fa164942b44fb05b79c6c04a",
      "IsHidden": "False"
    },
    {
      "Start": "c6241191505a4d2786091667b757de69",
      "End": "0c19fc42b103433987a81cd1f108d8dd",
      "Id": "4ad8724963d24931b68b61c939d9b38e",
      "IsHidden": "False"
    },
    {
      "Start": "9b36d96d5c704f17a9b249e30f8b2a0c",
      "End": "c7a591e601a54dd0874a89074bb5ad94",
      "Id": "48fe1123f65e44669c16ed28264616fc",
      "IsHidden": "False"
    },
    {
      "Start": "e9bde9e3e0f945c699d230cd856ac06f",
      "End": "cc1d328daba9453eb53cf9d7c987fadc",
      "Id": "a5b0c02081ee45f2a9b5b5d5a40e3cc6",
      "IsHidden": "False"
    },
    {
      "Start": "e1330375e02a4bab8ad8a3cc42bdb1cf",
      "End": "f807d9942c46474f92e58c1340bc8f23",
      "Id": "6770fcb313444c4da0aed5c1a5365ebe",
      "IsHidden": "False"
    },
    {
      "Start": "468ed0772c464bbebbdfe8ac3d474c1b",
      "End": "3bb8dcc3db0c4ea4bf33a57e6e41402e",
      "Id": "c357320d8b2c4fe883cb8ae1a21d039e",
      "IsHidden": "False"
    },
    {
      "Start": "468ed0772c464bbebbdfe8ac3d474c1b",
      "End": "d7e38a9cf92a45e1ae5a6161a9156ad3",
      "Id": "1438a05154fa4cbb8a734759403d0da5",
      "IsHidden": "False"
    },
    {
      "Start": "d6ff45ad9e4747f1ab1882a0eed6003b",
      "End": "843ce45161604220b8411c67c0832b95",
      "Id": "1dc0d3ff9ffc4592b05b42a5e796e40b",
      "IsHidden": "False"
    },
    {
      "Start": "d6ff45ad9e4747f1ab1882a0eed6003b",
      "End": "3dfa1351d663499083315660376b50b6",
      "Id": "2561cea4a3444ab8bae1ffb67b7ecad1",
      "IsHidden": "False"
    },
    {
      "Start": "4c6c54b6e1754ca79ad0fee962794f86",
      "End": "c926b6ac54a5431098f6a09044bed509",
      "Id": "7c9360b1284e4be2b7f1195847f24896",
      "IsHidden": "False"
    },
    {
      "Start": "795acb9d4d5a421988961942c91814e7",
      "End": "f2702ddeff4a4f2891b9b62956fd48ff",
      "Id": "a1936e81b7684222b1a189436ffe6977",
      "IsHidden": "False"
    },
    {
      "Start": "af2c63f3315046979acee5f6c3b471c6",
      "End": "4363ca7bf9804bcc84706758c69f26d6",
      "Id": "f942d29941d94318beb8701fe532e17d",
      "IsHidden": "False"
    },
    {
      "Start": "6b2e5430e16c48e1b1523bb3808a5083",
      "End": "34be73f13b954a97b66905af9312a975",
      "Id": "ec0da2aa4946457bb2ad48029463474f",
      "IsHidden": "False"
    },
    {
      "Start": "1300d1a335b546228f155f9065a293b2",
      "End": "4eb2962864374e5abe7a8aa6ceb1d98f",
      "Id": "ff491a7e91f94836bcbc3266d4a659dd",
      "IsHidden": "False"
    },
    {
      "Start": "9a8b913baec841378130bd7bf8b2d89e",
      "End": "250cacf018cc43c7977afaa5c6646e1f",
      "Id": "48363ce088324058877b9a00da208b94",
      "IsHidden": "False"
    },
    {
      "Start": "3704e2da904a4daaaee2437649c907c1",
      "End": "ab3d37323d174026af0569dc018069e1",
      "Id": "af754d3eaf1540e8a45c4142429d8a91",
      "IsHidden": "False"
    },
    {
      "Start": "57f088c23e884501a822e2a3d7a3dab7",
      "End": "f10847ae093847bdaf54feacd1895f72",
      "Id": "477674e0f0734d69993b4213cddb11f6",
      "IsHidden": "False"
    },
    {
      "Start": "4ab85b45008147c094af81667c684fc7",
      "End": "92ca999e3a074d9fab79c22f1f07f1ab",
      "Id": "120796b1e635462aaa806d2f03333628",
      "IsHidden": "False"
    },
    {
      "Start": "4ab85b45008147c094af81667c684fc7",
      "End": "ec46e27e6c96434abddb1d71ccfb15ff",
      "Id": "5aed911b138d442babc194fe85f0e3ca",
      "IsHidden": "False"
    },
    {
      "Start": "2c2d6a07d8fd43058b0f4eb614efaa32",
      "End": "e5e8a68a1fa54919b9ba79ee045f9f05",
      "Id": "c6b11443cf124f1c8b63642fe1e1f90f",
      "IsHidden": "False"
    },
    {
      "Start": "2c2d6a07d8fd43058b0f4eb614efaa32",
      "End": "8f5c2f3f3ff14c5686a6482cf42d849f",
      "Id": "44073fb2a9f84bbe87d1da16460fb3af",
      "IsHidden": "False"
    },
    {
      "Start": "efc6a3c482f741c1b3487cb08ccef3f1",
      "End": "c5ff19d8d84c4f7d986b34d58d296ce3",
      "Id": "a905f63e8ee24fcf885086b6bf91c0b2",
      "IsHidden": "False"
    },
    {
      "Start": "d4b257c22bbf40ea987e95ab96899ee0",
      "End": "0116460b186543d087e5b7180fb03088",
      "Id": "b9b1be758a8b42518db37b256b772f0b",
      "IsHidden": "False"
    },
    {
      "Start": "8cb258edb8e14773b7a443e7d6c12020",
      "End": "ed2b71990b0b43a3a6f46a2c52d860ae",
      "Id": "680b32e47d7c480aa5a15448ccd18fdd",
      "IsHidden": "False"
    },
    {
      "Start": "38a6f94867e84b16a4efb542f5bc8643",
      "End": "eceab72c145046fa825f94cf43e187bf",
      "Id": "9a3e13cd266d49168cd0505f62329aec",
      "IsHidden": "False"
    },
    {
      "Start": "b8ada8e6ee234f838a9be69f501d8561",
      "End": "2f34010bdf804fdbb5cbd8642a8e11f1",
      "Id": "1cf2b41285874e8bb6d27fbe0c48fcf5",
      "IsHidden": "False"
    },
    {
      "Start": "8b12d029adb94ddb844f155d5c6bae7a",
      "End": "f8756dc9f70f409c8064f633070c59a2",
      "Id": "66369c69623a4127bfd1e7f3ad269c43",
      "IsHidden": "False"
    },
    {
      "Start": "8b12d029adb94ddb844f155d5c6bae7a",
      "End": "cb0629ee32644c3796218531ca0baaf9",
      "Id": "f9dceb0849ca48e58746e97c14e77fb6",
      "IsHidden": "False"
    },
    {
      "Start": "8b12d029adb94ddb844f155d5c6bae7a",
      "End": "53ea9abcf5e5476ca40570f92b08ad15",
      "Id": "ee3122873624448c94500d3f2b993d5f",
      "IsHidden": "False"
    },
    {
      "Start": "ded6f243799f4793807869e1c3bd8747",
      "End": "b64fc128932646af841ae3377201c2a4",
      "Id": "4ac15d8808c0472095a81191700292db",
      "IsHidden": "False"
    },
    {
      "Start": "71a64191c0714589aa7a390f745295ed",
      "End": "add203bfea10480284c1a6df25175d14",
      "Id": "19ef2385eff143c0ba708eadd015adc6",
      "IsHidden": "False"
    },
    {
      "Start": "fca4e485f799429089f3ef39cf252136",
      "End": "176c39be2e6c4e13b9e67ac59cccca3a",
      "Id": "bd6adc4918194c96bcb2eb3a42f958f1",
      "IsHidden": "False"
    },
    {
      "Start": "23a6fdb4d9414110994d373f382b3601",
      "End": "a4646bc29f4a4b66bb97e6fcf004b19f",
      "Id": "a2d5cc02105c45bd9695aa420bbb7ea1",
      "IsHidden": "False"
    },
    {
      "Start": "23a6fdb4d9414110994d373f382b3601",
      "End": "430a847c914c48febc7964bb98e795b1",
      "Id": "f686d4accae640ae8bbf726cf60699d3",
      "IsHidden": "False"
    },
    {
      "Start": "23a6fdb4d9414110994d373f382b3601",
      "End": "84e1566c9dba47e9b463d5a6273df85a",
      "Id": "c2cbff9b5ca44a5cacc0e341c768bec8",
      "IsHidden": "False"
    },
    {
      "Start": "b5e0c2e3b9064ab2a62004a27f977571",
      "End": "cb90d2f248e44118af40bee6ef217917",
      "Id": "b09a5347108e416c91cd2ddcc7294850",
      "IsHidden": "False"
    },
    {
      "Start": "b5e0c2e3b9064ab2a62004a27f977571",
      "End": "3ae25db1cbd54c049d33a15824c747f0",
      "Id": "25b54e9160214f5b9d56c4566304d2dd",
      "IsHidden": "False"
    },
    {
      "Start": "728a17651df24f64a8f0115cf55549ec",
      "End": "a58802f2b5a04745a32c15f420181692",
      "Id": "9694c78d7c3344eb98f414b774c908b5",
      "IsHidden": "False"
    },
    {
      "Start": "dd7ffb83e9124822a0e11189a352429f",
      "End": "43b6ad55cb834656adfcf477b57547df",
      "Id": "46d40089b01b4958a917dd2de10303a0",
      "IsHidden": "False"
    },
    {
      "Start": "4cc457b344434c32a67eb843c5511809",
      "End": "5ec262f56332470da63da75e756f44b5",
      "Id": "3fc86c2060ba4c86b063e23953eb6015",
      "IsHidden": "False"
    },
    {
      "Start": "8d619d7fc8a948a7b1d0a655eefd957f",
      "End": "79ef50f254284629bc19edc25679cee9",
      "Id": "1742989068224ef98a6df9c04d483c8c",
      "IsHidden": "False"
    },
    {
      "Start": "610893218aad4cd49e5b04c66456e88c",
      "End": "1c2b921e4e754f45948c5f194375f333",
      "Id": "1ef440d28e9740bcb0d5d95df60369e9",
      "IsHidden": "False"
    },
    {
      "Start": "866e7adb7d1f4502955fbaa47c2b7e61",
      "End": "59984e7c944543b6b2a4946c5209e0b3",
      "Id": "3e6a21d328874ab5983dc1fa3a83b2ae",
      "IsHidden": "False"
    },
    {
      "Start": "866e7adb7d1f4502955fbaa47c2b7e61",
      "End": "e3b6654a16b642388d3f1a2eff27d6e3",
      "Id": "216f75836ce646d3a3b70acb6be0427b",
      "IsHidden": "False"
    },
    {
      "Start": "c189e59b9ebe45f8b6142df766feacc7",
      "End": "ddac53dc1a3a47ec98b111f120eb9cf9",
      "Id": "ac79469438a84d0ca96fadbc78f62f51",
      "IsHidden": "False"
    },
    {
      "Start": "c189e59b9ebe45f8b6142df766feacc7",
      "End": "44ceaad2e1014b099259640043f3dc7c",
      "Id": "833ab0e6fc57400c8b155799af6abdff",
      "IsHidden": "False"
    },
    {
      "Start": "c189e59b9ebe45f8b6142df766feacc7",
      "End": "2eae3773b875421b9986f7f44d6d8b20",
      "Id": "6789039ca05c4bfbab8ccae684c6aaa4",
      "IsHidden": "False"
    },
    {
      "Start": "46b5784938d245ecacf180317aa68a87",
      "End": "952bd053bc924b238e5b542624a03022",
      "Id": "806d66f13f5f41e3bbb84bc5eb1dd429",
      "IsHidden": "False"
    },
    {
      "Start": "2fdc0481dc384621a7372700e220eef9",
      "End": "0bff0e8d19a0427097a761c3ecf85b40",
      "Id": "a4bc795e3d9748e0995258e03df42783",
      "IsHidden": "False"
    },
    {
      "Start": "a0495fd10dba4b3fa140bbec5df7c0a8",
      "End": "4fe65e7bd95e47409d0fec0139175912",
      "Id": "31aa5b5e080c4344a73e073437c614ad",
      "IsHidden": "False"
    },
    {
      "Start": "87f7d988307d4c808dd32d9914d3c16b",
      "End": "a2631d7142714c738c0bedf14248febd",
      "Id": "8617b7d68abf4c8db5faa2871668cd14",
      "IsHidden": "False"
    },
    {
      "Start": "87f7d988307d4c808dd32d9914d3c16b",
      "End": "79dd7c64a07a4677a1fccb77a37acd1e",
      "Id": "fbe70f67ddf9465aa6b5519a53aeb8e9",
      "IsHidden": "False"
    },
    {
      "Start": "38c9a9fc833944349c4691eee37b9fc7",
      "End": "046d9a25f09340bc99594f8b959f3ae6",
      "Id": "2664ab94210f4f1caa3afc6ea10f31d5",
      "IsHidden": "False"
    },
    {
      "Start": "88abb48a7a3244b088296b0949fabe75",
      "End": "04de52b52caa4ce8b7c4e73fa8415631",
      "Id": "88e6f5005ea94a17a54b14734f1bec49",
      "IsHidden": "False"
    },
    {
      "Start": "449294cebed440a2ad40e3cec864c0b8",
      "End": "b37ebdcc516446fa9ad688ab55260430",
      "Id": "c62f5d4fe38b4f40bbad7918b11fc64b",
      "IsHidden": "False"
    },
    {
      "Start": "77b126a6d86d4b99b47f598fef69fc6d",
      "End": "b300cf9d00d34d579d422ba44596e39c",
      "Id": "4ad6d4f573044a7e85ba076dbcffae62",
      "IsHidden": "False"
    },
    {
      "Start": "f35fc916e1f94cbea4b5103f68610e06",
      "End": "ad922c47db2a44d084c1cad61c410655",
      "Id": "e3567bb3183449c4be1be1e35797ee5a",
      "IsHidden": "False"
    },
    {
      "Start": "94e4b7e5138c48f28fe002cf3ecf7106",
      "End": "003b4933a0cc4eae9239a5ab1f7be9f7",
      "Id": "19c7c3f4483e4f83a34fcf49fc5ce1b1",
      "IsHidden": "False"
    },
    {
      "Start": "06bdc5b586bc42dbad470506c0cba154",
      "End": "e096078a4d9c4b409f89151da544d7a2",
      "Id": "32174e12131a45be89c7ca6ddcc01f3f",
      "IsHidden": "False"
    },
    {
      "Start": "afdfdc1e2a1941519a81c7da83cf192e",
      "End": "596ad0f40d924fa3adabeb79cec9e6b9",
      "Id": "e5a9e62c8d5945cebd50e905d5fd7b02",
      "IsHidden": "False"
    },
    {
      "Start": "ba896eb11c18487abbf31a9756654900",
      "End": "a2352fa325c640c5972a0474bca0737c",
      "Id": "ded32627960f4294936b38f312372a0f",
      "IsHidden": "False"
    },
    {
      "Start": "7300d73253604540b89bf96fd65408b1",
      "End": "f951d42bc9204b8a93f1b449643ded1e",
      "Id": "f00fabae380343e9b47825a004f38412",
      "IsHidden": "False"
    },
    {
      "Start": "f22fe24b57ce45338ec6fd0ea3d277f2",
      "End": "3e5f244aa307427daae09e33b4149253",
      "Id": "fa13e8791c6d479d94b44f8c29a7052c",
      "IsHidden": "False"
    },
    {
      "Start": "f22fe24b57ce45338ec6fd0ea3d277f2",
      "End": "18204fd41c1f418c89eaa7773da4fe3b",
      "Id": "d2116af8fc3b49d1aa8d595371f0060d",
      "IsHidden": "False"
    },
    {
      "Start": "802568218cc340d39f7a1c3991f374ea",
      "End": "0adc44e5b9fb4202a15890d7be703f1f",
      "Id": "c1a1e90241b04bb897c90bf12d9ef3ea",
      "IsHidden": "False"
    },
    {
      "Start": "802568218cc340d39f7a1c3991f374ea",
      "End": "48bd887701974f9fb22ea769d356f0c1",
      "Id": "4da08b25f41942ceacc39a482fb726b6",
      "IsHidden": "False"
    },
    {
      "Start": "8ffe2179006847c890d9b8ebacd26f32",
      "End": "34e1f6a4dbf84adeaaf5c35e9b828584",
      "Id": "0b96f02b2e5c4552a21435450584563f",
      "IsHidden": "False"
    },
    {
      "Start": "0ef7da40e00248f5ba0427ca7a909a55",
      "End": "08281798014540dda0f1bc913edaaf69",
      "Id": "42dfa9067fe64795a4d857c111d90d52",
      "IsHidden": "False"
    },
    {
      "Start": "0ef7da40e00248f5ba0427ca7a909a55",
      "End": "f9c44d8d11534a5bbaec9a4dce4b0c70",
      "Id": "1f38cc970a914b0dbe3a2c7357b85cf8",
      "IsHidden": "False"
    },
    {
      "Start": "f062a07cc8d94922b43cbb529842227c",
      "End": "c3bd15d34127402b8618989bfee7a8fc",
      "Id": "39642ded594f4c199a1572d99152b3f9",
      "IsHidden": "False"
    },
    {
      "Start": "8b0938cfabbb4651ac1ed712266cbe84",
      "End": "c005b0a469f9492db976eed4cca1adca",
      "Id": "22226589ef9647ada7bcfd1a4141c435",
      "IsHidden": "False"
    },
    {
      "Start": "8028181b3bb54625bdbc8b3dd79e2774",
      "End": "ad1ce071d3b941ac81949ef124083969",
      "Id": "07e7137aa579460b8849814627b8e5bd",
      "IsHidden": "False"
    },
    {
      "Start": "3de1444dd48d42f097a1f323f1f727a8",
      "End": "7438a3f577d642859fef6fcb4662958e",
      "Id": "7f0f585b720542df998819e523c3a58b",
      "IsHidden": "False"
    },
    {
      "Start": "4494295a841746a9bce5609d55643e1c",
      "End": "c720d5e4216f472face5c73376c613b1",
      "Id": "08e9e32cd38d4542b40a5d32a8580a38",
      "IsHidden": "False"
    },
    {
      "Start": "5ad83c7c09ea46498c076cee6549dbcf",
      "End": "28e827dd5a14425895665cb8f0397c46",
      "Id": "11bd6d172e0a4d69aa726b46b942c815",
      "IsHidden": "False"
    },
    {
      "Start": "962cc0fd139f4608a7d33236b5b61e31",
      "End": "a6916d1ffc334e8db40dc72b5a739367",
      "Id": "fcc08d7126c74906b37f9230bcd576ce",
      "IsHidden": "False"
    },
    {
      "Start": "cd8dbf9773c14f698de2ef5bbfa7a550",
      "End": "682b0a2b31e74de49d9949cb95ca856e",
      "Id": "90afc60e0dc440f6ba868cf7716ceca4",
      "IsHidden": "False"
    },
    {
      "Start": "9a1e4121fc33476295ca12e8472f7cf1",
      "End": "9c6a13720acf488185f8fba8ea5f5ef6",
      "Id": "ba3e817772134ca1962a75473649920c",
      "IsHidden": "False"
    },
    {
      "Start": "9a1e4121fc33476295ca12e8472f7cf1",
      "End": "a2a22d4bdaed4200b88647152fc5680c",
      "Id": "97fd1c50a4e540a9b0e947c09c8cf88b",
      "IsHidden": "False"
    },
    {
      "Start": "9d2d153c25174af1a322d8389b166be5",
      "End": "d54e386ce06f40308dd18c689b2962b6",
      "Id": "ff3096e06c3946b38443b9fee54e164a",
      "IsHidden": "False"
    },
    {
      "Start": "aa8f4708c67e4659bb86c9fcf9f9b821",
      "End": "135f348967f147378c586ef4196f80a5",
      "Id": "3e620dfceae74b4d8e745370f9c432c6",
      "IsHidden": "False"
    },
    {
      "Start": "355d1e1346c944a3a6f2e8ac672c206d",
      "End": "97db5e9ac7c14adfa7f558747f7a66a2",
      "Id": "b4449f8767244fc28364baeada6c2055",
      "IsHidden": "False"
    },
    {
      "Start": "28fb7151a3b8495abeb63b114f34347f",
      "End": "57815465600b4919aad7a4ef88f84e4a",
      "Id": "3fa6b9f4bd5f44f38f9e854ceb19f655",
      "IsHidden": "False"
    },
    {
      "Start": "efe5b945eb7443b8a6600ef3870fced6",
      "End": "1695b65135fc4404916775319b38456f",
      "Id": "958ab1bec9e5481e8df95389e3307588",
      "IsHidden": "False"
    },
    {
      "Start": "d3485348bc3b48b0bf086ddcfd07b8fa",
      "End": "34bc641a7c0f4408b5d01584009970ab",
      "Id": "53afa6ca860e4ee5a7189a0214e444d5",
      "IsHidden": "False"
    },
    {
      "Start": "552819921ae44104b4e17eda3ef72192",
      "End": "d7982f4ae8a741e79ca58c34f791bbca",
      "Id": "a462727c57e547ce9af76ae222380c95",
      "IsHidden": "False"
    },
    {
      "Start": "2d42b49fa8414696952d6c16f71228c9",
      "End": "3f709ca8ae9c471fa3bfafad5f1836f7",
      "Id": "e6f6c97a29ff45cf8c7508310822ccf1",
      "IsHidden": "False"
    },
    {
      "Start": "6cc3da9b57d74088b7910a4f1b2552c3",
      "End": "acf0d2e8542447b587138bd02f0936be",
      "Id": "4a550132c821419998f7300cc6e45957",
      "IsHidden": "False"
    },
    {
      "Start": "6cc3da9b57d74088b7910a4f1b2552c3",
      "End": "54d6b211887642cd80052f3efeb1d092",
      "Id": "d7eafdde2b574774869c8f0e14d231fd",
      "IsHidden": "False"
    },
    {
      "Start": "ff7086ee6d104f71bc9c596bdce9f5c6",
      "End": "93256b0bb8584053a2d09b2799ea5f96",
      "Id": "6629f1d33dd747f1904349f734650c11",
      "IsHidden": "False"
    },
    {
      "Start": "9fe07e056d204127bbfe2c61710d29b3",
      "End": "1406475f92f44a56b1cce129dbf545b9",
      "Id": "3ae08f0913da4248a5fa829e3481898e",
      "IsHidden": "False"
    },
    {
      "Start": "9fe07e056d204127bbfe2c61710d29b3",
      "End": "5de5f587f1c04bcfb1086eb755907ccd",
      "Id": "6cbfde069f8b49208736b117ac809fb5",
      "IsHidden": "False"
    },
    {
      "Start": "9fe07e056d204127bbfe2c61710d29b3",
      "End": "2504b6ec485541c6be34ddc8f0f4e6e8",
      "Id": "44974faed1954a80a1078d78473b3007",
      "IsHidden": "False"
    },
    {
      "Start": "68b14abd6ded4b21a706219b9aae5054",
      "End": "e87fb001048144449e049f339542fef8",
      "Id": "ec3f038390334dcc9af8c932e17bee34",
      "IsHidden": "False"
    },
    {
      "Start": "d9cac637432c4f51b8fda00efce86712",
      "End": "f7c4c62c809647678816f2b72d0a99f7",
      "Id": "9e37496cc92a42989a1f74ce43edd5cb",
      "IsHidden": "False"
    },
    {
      "Start": "c8916046e0ca461188c427c25089b522",
      "End": "a3ae6dd6f9f04a93a8a6661c5bdefcd0",
      "Id": "cc99269c1ab7497c84ef615bf4aa11b2",
      "IsHidden": "False"
    },
    {
      "Start": "1d30abdd7e944b30b8805e64b1cb8844",
      "End": "0a5da4c8927142cbba58ae9a8d4cb2cb",
      "Id": "7c7d18c563bb4f6495457ffe5ff99b6f",
      "IsHidden": "False"
    },
    {
      "Start": "b67fe318481e455e9f1c08986e98e47a",
      "End": "cd37631f21174ec1b3e8ada6a3d54d03",
      "Id": "0965304560bc422fbdb0a4bbbf95ad40",
      "IsHidden": "False"
    },
    {
      "Start": "b0cd47205d7e4e27a16360e646488176",
      "End": "014f7e6cf26a4ff7823c52230bbdcd1b",
      "Id": "836363c0469e4d31bb4a5d3b008148f0",
      "IsHidden": "False"
    },
    {
      "Start": "e8aaf6ea14ee4edfa00938e8c562cf3c",
      "End": "cdd1c61d80b74521b1833e0cd38a690c",
      "Id": "bf581fad09c44c4abcd2b2daeb1bba95",
      "IsHidden": "False"
    },
    {
      "Start": "6e4b9894773044db8661f53f97cf1410",
      "End": "7a8581b1253148cf8fc6b4a08500c59c",
      "Id": "9ee66ebe0f6e44a996a2cc1d163b78a1",
      "IsHidden": "False"
    },
    {
      "Start": "50e69f78d5de4317824b0067a9ef6495",
      "End": "cd7d0c8565d1441d8e1cf93e14b97643",
      "Id": "84c7b60875354a57bb6dfb60e8decafd",
      "IsHidden": "False"
    },
    {
      "Start": "f22d1d4e42dd4581b179fc133f7dcdd0",
      "End": "5355da0ebe8e4406a5ab94fc8eb1d69d",
      "Id": "d255a8fafebf4f30969cf38c957f7956",
      "IsHidden": "False"
    },
    {
      "Start": "9a29d6dc22a54d72ae86ff7ff266e72e",
      "End": "875d768bf8064dd8804716e13f1dc696",
      "Id": "48a48608341c4ee7b9a0a2adacf95592",
      "IsHidden": "False"
    },
    {
      "Start": "5353c9cd503b4ef69bb203c920a9a21b",
      "End": "796e005c84f3457695d6a55b6acf5c9b",
      "Id": "8a51229c6ce344eaac39461a51b4da89",
      "IsHidden": "False"
    },
    {
      "Start": "229ea1d1cfbc4587a0a29d6ebf9cdeb4",
      "End": "de4f30b2a6ba4abe99510929111ff68c",
      "Id": "d339d482a67e498c964fda01a7df68d0",
      "IsHidden": "False"
    },
    {
      "Start": "765dbe3020f34919b5c03d98822e2245",
      "End": "fb1ed400d6dc47cf9b0c86a5e71d7366",
      "Id": "c93bd19d8add484ebe6f8dd691fb7666",
      "IsHidden": "False"
    },
    {
      "Start": "c8dfa9549a6446f1bcd3863dd7d7619c",
      "End": "59b0061b8d1744a2b365144a7c1d8cc1",
      "Id": "9bf0480c04704031b75e2929d52c3644",
      "IsHidden": "False"
    },
    {
      "Start": "9439eb0e925a493b9673515b2a861e20",
      "End": "ae91da6d34e6487eb41da7e1f13c7171",
      "Id": "8eb16e8e5b20465aa0f9b27d392f4e39",
      "IsHidden": "False"
    },
    {
      "Start": "e0e64da3c1e04b6eb814764de6b6cf68",
      "End": "0ef62fd76f7443fd99c205d22f5fac98",
      "Id": "90ef91f5214b43478651e8a287df8b4a",
      "IsHidden": "False"
    },
    {
      "Start": "3e07d39875ab4754b86999407615213e",
      "End": "ffad9757ccd7406b9ba8cc13796d655b",
      "Id": "35b3236414384923b3ce54374efccd1d",
      "IsHidden": "False"
    },
    {
      "Start": "8f8c5a5ee33d45929306c8fef3dadd0f",
      "End": "ab2245f012cb4368b8c05193fbc85e6c",
      "Id": "acfafe1b9e3c4a4e83dced45818c9cec",
      "IsHidden": "False"
    },
    {
      "Start": "5c280797099d44abac0802a47165e9a8",
      "End": "6157debdae5049d1a66f55e4c2665bce",
      "Id": "bd6e1db271974bc69084434d5fb8329a",
      "IsHidden": "False"
    },
    {
      "Start": "9b579061730349b1a4d9127dee4f53ce",
      "End": "4a498713fd674d2e993e14a0000a50fe",
      "Id": "0af152f2ae44476fb7ffff159c343c63",
      "IsHidden": "False"
    },
    {
      "Start": "fab8804e87b84374b5f1a170a89a077e",
      "End": "e86fd711dddb4d8e9a1d71814420cd3f",
      "Id": "deae09160b234362ac2d331f68d3f0d7",
      "IsHidden": "False"
    },
    {
      "Start": "c7ba21d921a34048b8610370993fa514",
      "End": "b8f1a8cac3d540f6b3b111de82b7329a",
      "Id": "c6d2f10e787349dea399e53731024543",
      "IsHidden": "False"
    },
    {
      "Start": "681fdb517eb34b26983f5bc7240cad0a",
      "End": "9e5453e0fc2943cab6884e1a14b36364",
      "Id": "cc205e96d5f44107961194bfef9831d3",
      "IsHidden": "False"
    },
    {
      "Start": "2af38399494a4a9c81a053bf245650b7",
      "End": "290a662b3bda4148be11d818e816080d",
      "Id": "1ec54aeed27246e7a4c75b649ebcb82a",
      "IsHidden": "False"
    },
    {
      "Start": "2af38399494a4a9c81a053bf245650b7",
      "End": "caefc937283047368981bb7eec3ff6e9",
      "Id": "dfbe4111deff46caaa809ae1a2571667",
      "IsHidden": "False"
    },
    {
      "Start": "dda33d35f95244c9ba7c761a655a4fb2",
      "End": "eec5a600f4b547d381b37b60398d4fef",
      "Id": "5345092e6d9d421c81c222a48af2a553",
      "IsHidden": "False"
    },
    {
      "Start": "83cf1e6c4dfb4a06a784b67ceabf324d",
      "End": "4873c7c231894dc387025e782200d126",
      "Id": "0ba2437f5b1e4dd882a03dad8a43f6bf",
      "IsHidden": "False"
    },
    {
      "Start": "83cf1e6c4dfb4a06a784b67ceabf324d",
      "End": "ecf5672a0b224665a29c67663f22c3a1",
      "Id": "3e1f45aad0694f89bd6ebfa643b6e754",
      "IsHidden": "False"
    },
    {
      "Start": "83cf1e6c4dfb4a06a784b67ceabf324d",
      "End": "65d18baad7684ab79c31908e11055c19",
      "Id": "e5ef60bb1280405ea12129c3f630c71e",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "LunchBox for Dynamo",
      "Version": "2016.11.11",
      "ReferenceType": "Package",
      "Nodes": [
        "3007125f2aae40c6999e8ae0b1ace800",
        "fb1931c4c60747bdb0045452ba3ff804",
        "5841858bdffa49c79b1c050ba009e833",
        "6295cd04273a4568851f135c5a8aaab0",
        "d00cc8c6eeb243ec8130db08d6baf1ab",
        "84d7baf790ab43829c03e8b4211c6dd2"
      ]
    },
    {
      "Name": "GenerativeDesign",
      "Version": "2.0.10.0",
      "ReferenceType": "Package",
      "Nodes": [
        "b3dd47a6cadf4e2ea8a7b0a510f71874",
        "7284e476f0304950b971d8c127beff6b"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {
        "DefaultStudySettings": ""
      }
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "Generative Design",
    "activeLinterId": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 10000.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 282799.3125,
      "EyeY": 780998.25,
      "EyeZ": 439244.9375,
      "LookX": -151891.8125,
      "LookY": -751422.375,
      "LookZ": -557381.3125,
      "UpX": -0.16923759877681732,
      "UpY": 0.76529610157012939,
      "UpZ": -0.62103188037872314
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "38be98d274f648e0a448502c7a4e435d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Select Model Elements",
        "ShowGeometry": false,
        "Excluded": false,
        "X": -156.293082716506,
        "Y": 306.70610138185
      },
      {
        "Id": "237fe14ed8854ce982c914b85de4da7c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Geometry",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 312.23309815661923,
        "Y": 306.99491023622681
      },
      {
        "Id": "bddd129853ae49b9bed403afdf1cf6e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 798.78430847591881,
        "Y": 311.04778346859644
      },
      {
        "Id": "455ad1820ad140aeb719a76b18f580e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1193.1635462203303,
        "Y": 310.50457432364738
      },
      {
        "Id": "8358c34c1b1a436bb4079ee71b221917",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Polygon.ByPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1475.4040975874395,
        "Y": 309.62070369310527
      },
      {
        "Id": "f34a944aee3b44b1baeb4ec678adcbb9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1791.6596355349993,
        "Y": 207.37589675285767
      },
      {
        "Id": "627fb4e0c3f3436ea8e7a11eb7207edc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 2029.7602128327335,
        "Y": 368.08278803002668
      },
      {
        "Id": "7666ab36935f4547bc6058603fb3a62b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 2457.7247337168874,
        "Y": 155.79063789606016
      },
      {
        "Id": "83aecb65b4374adbb02498cb58246e24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Select Model Elements",
        "ShowGeometry": false,
        "Excluded": false,
        "X": -141.063851532524,
        "Y": 540.253409306403
      },
      {
        "Id": "092dd1d261264ce2afd169d3b61a5533",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.SetDifference",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 367.83301852673867,
        "Y": 543.21246154877917
      },
      {
        "Id": "d8c56f7aedfe4d7f86ac0eb613ff8df9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Geometry",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 834.4317702114713,
        "Y": 544.467281561939
      },
      {
        "Id": "d430a7bf7ce249869dd558ba37a9ed23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 2823.5212971892188,
        "Y": 508.90842526995789
      },
      {
        "Id": "86c26782c21545aa82cc60ea8580bf99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point_Entrances",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3251.7041652754097,
        "Y": 507.8734894928798
      },
      {
        "Id": "ab2a726fdaef40a0943133eb9b1b1c7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Lines_Entrances",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3253.9585968576448,
        "Y": 705.49116386062337
      },
      {
        "Id": "5ee04e4dd6be4ef9af447b00dd2c2630",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3615.54299967469,
        "Y": 504.99299620764418
      },
      {
        "Id": "cd82bbcb20de4ee396fb710347545d2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3835.648860162456,
        "Y": 504.62272209572825
      },
      {
        "Id": "094cbeaece2349e2b3388c490f65256a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 11746.221723935179,
        "Y": 4988.6813162909611
      },
      {
        "Id": "316b7971661e4a8e87df7a79a181effc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Number",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 14856.621723935181,
        "Y": 5156.3063162909611
      },
      {
        "Id": "c4b0ab193ee54ef7bcdcd3a28ddce405",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81072.621723935037,
        "Y": 4179.6938008189363
      },
      {
        "Id": "dbbff9e5d6c84958989c36722e4ca73b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80357.421723935026,
        "Y": 3982.5213008189376
      },
      {
        "Id": "859f1d8f449243e69d6b633b4b49cb6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 3948.6938008189359
      },
      {
        "Id": "cf84f1b9e59f426586c721d18dec3afa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 22161.421723935186,
        "Y": 4911.8238162909611
      },
      {
        "Id": "de25c7fab1cf4881b0291b1b2b8f8144",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 22161.421723935186,
        "Y": 4721.8238162909611
      },
      {
        "Id": "eeee196f1aa24e5b805a7470cd7663d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 22743.821723935187,
        "Y": 5013.8238162909611
      },
      {
        "Id": "d86296ce55bc4abc93eb7f2a6962889d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 22484.621723935183,
        "Y": 4916.8238162909611
      },
      {
        "Id": "7a9d1eb0ebe64100bc52e9ccbb19bd89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 22161.421723935186,
        "Y": 5102.8238162909611
      },
      {
        "Id": "872d66e58b924ba199f79f62de7d3c30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 20971.021723935184,
        "Y": 5010.5738162909611
      },
      {
        "Id": "de969e9ff2c943c88b8dee5d795c56c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 21900.621723935183,
        "Y": 4911.8238162909611
      },
      {
        "Id": "64e7bb83cdf14b338d426670125cf00f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 20971.021723935184,
        "Y": 5201.1513162909623
      },
      {
        "Id": "a604878c57dc4764ab1e7b690ffcd52a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 21310.221723935188,
        "Y": 5136.3238162909611
      },
      {
        "Id": "6d776083caa04a2b84fb1cd8a4a6c451",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 21665.421723935186,
        "Y": 5024.3238162909611
      },
      {
        "Id": "6f5a93e0bd144d2389d57e905cb7b199",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 21310.221723935188,
        "Y": 4946.3238162909611
      },
      {
        "Id": "e7a84959628545d6af055ae37cbdd104",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 19721.421723935186,
        "Y": 4931.8238162909611
      },
      {
        "Id": "a43acb0f487c4ed28c95704e3c722370",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 20636.621723935183,
        "Y": 4946.3238162909611
      },
      {
        "Id": "8921bbe933bc453b9eb6f22146fa8e79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 20010.221723935181,
        "Y": 5077.1513162909623
      },
      {
        "Id": "dac845c82f214a9891d5f85314d6b924",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 20321.421723935186,
        "Y": 4980.3238162909611
      },
      {
        "Id": "bc8f554e32b14dadb2d7bb06ca7871a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 20010.221723935181,
        "Y": 4917.3238162909611
      },
      {
        "Id": "35cd6269d5654c32a1b507a2e793e8a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 19134.221723935181,
        "Y": 4965.8238162909611
      },
      {
        "Id": "70b1e2b4ef614c2faec8c77d4daa5785",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 19481.421723935186,
        "Y": 4931.8238162909611
      },
      {
        "Id": "b2fad91f25944442b8b300c456de134d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 4138.7025508189372
      },
      {
        "Id": "e2c1b129d987473d813d2824cdb5210d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 4298.5300508189366
      },
      {
        "Id": "7da7fb917c71400cba87d13bf1f21594",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81072.621723935037,
        "Y": 4339.7025508189372
      },
      {
        "Id": "843c7e3669ed42668fe8c46a427ae6a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 14499.021723935179,
        "Y": 4830.8063162909611
      },
      {
        "Id": "38d6d9e316f94e2fb1112d21f65e25b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 14209.421723935176,
        "Y": 4864.8063162909611
      },
      {
        "Id": "5ca133eaa781425f8394b7a22fcc8b80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 13875.021723935179,
        "Y": 4898.8063162909611
      },
      {
        "Id": "4c06886c3fdc45bc813f39b3edb05878",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 13519.821723935178,
        "Y": 4932.8063162909611
      },
      {
        "Id": "334df44163cc4d60908b88a81d0c9646",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 13196.621723935181,
        "Y": 4963.1813162909611
      },
      {
        "Id": "1fbdce3ccb734b52aa77f67fe93dd9f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 12907.021723935179,
        "Y": 4997.1813162909611
      },
      {
        "Id": "84b24c2c99ac4c54a34e48ae93827a22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 12636.621723935181,
        "Y": 5031.1813162909611
      },
      {
        "Id": "6a7ff1f5faae4a35874138f9bc522cb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 12366.221723935179,
        "Y": 5031.1813162909611
      },
      {
        "Id": "d0a28d16f1784fcc9cbefb406fd05601",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 12069.42172393518,
        "Y": 5014.1813162909611
      },
      {
        "Id": "770fbce93420479d84e9649d3abccf4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 10874.221723935179,
        "Y": 4974.1813162909611
      },
      {
        "Id": "4ff37ecfcb8044afafa9635f38955e93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 10639.021723935179,
        "Y": 4974.1813162909611
      },
      {
        "Id": "8e51e22974254aed9479cc0f16e88518",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 10267.821723935178,
        "Y": 5008.1813162909611
      },
      {
        "Id": "1124d375da204fa1abdd8eaee8664deb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 9690.22172393518,
        "Y": 4949.6338162909606
      },
      {
        "Id": "4b6bf154e6b6479caf77cc574d4d16c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 9944.62172393518,
        "Y": 4915.8063162909611
      },
      {
        "Id": "1aacc98d5bfc40a39c494b12de7a54cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 11163.021723935179,
        "Y": 5119.5088162909606
      },
      {
        "Id": "fe5f9185e3544ce19b6bd583e7e262f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 11163.021723935179,
        "Y": 4959.6813162909611
      },
      {
        "Id": "910889a43c0744d7859a3a543a013472",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 11451.021723935179,
        "Y": 5022.6813162909611
      },
      {
        "Id": "3448e0fc65ef44168167092b46faeb7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 17901.421723935178,
        "Y": 4791.3063162909611
      },
      {
        "Id": "34407abd2ee8488892e6248b3e3cc4c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 18527.82172393518,
        "Y": 4854.3063162909611
      },
      {
        "Id": "38fe647eb63d45feb712fac3600d0f81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 18272.621723935183,
        "Y": 4854.3063162909611
      },
      {
        "Id": "b8e79952d7f74006b2ebb45b9eb6c8b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 17499.82172393518,
        "Y": 4790.3063162909611
      },
      {
        "Id": "d2de2646cabc4771a149a8cb50c6aa7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IsEmpty",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 18527.82172393518,
        "Y": 5044.3063162909611
      },
      {
        "Id": "fb5fe8e3488d470b91168b6ff0c7b001",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 16784.621723935175,
        "Y": 4806.1338162909606
      },
      {
        "Id": "1f182afd44784e229881a5d5043c1d13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 17142.221723935181,
        "Y": 4738.3063162909611
      },
      {
        "Id": "f44eab1294a64f3b9db6cc339471eb07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 16784.621723935175,
        "Y": 4964.3063162909611
      },
      {
        "Id": "6f8c6e84123d43c9857fcadbc909494f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 16461.421723935178,
        "Y": 5088.3063162909611
      },
      {
        "Id": "39a1c1b5b8fe4b9aa5fe4f8c45efee7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 16461.421723935178,
        "Y": 4927.3063162909611
      },
      {
        "Id": "92e0285d5cb14f3a875e888d75d11948",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 16138.221723935179,
        "Y": 5044.3063162909611
      },
      {
        "Id": "64178a3cf9324f0f8c15c452835b02e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 17901.421723935178,
        "Y": 4981.8063162909611
      },
      {
        "Id": "5b7505197bb247fbad9b7124acc9e01b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 17499.82172393518,
        "Y": 5016.8063162909611
      },
      {
        "Id": "8397891a82514c90ac1cc4ff20945944",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 17142.221723935181,
        "Y": 5154.8063162909611
      },
      {
        "Id": "d1796507ccbc4f74be97a99698bb87b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 16784.621723935175,
        "Y": 4615.8063162909611
      },
      {
        "Id": "c1c1283cb7da46239a0e129cf2c702a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 17142.221723935181,
        "Y": 4964.8063162909611
      },
      {
        "Id": "d1d6f3ba311548838719e3001d620ef3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 16784.621723935175,
        "Y": 5188.8063162909611
      },
      {
        "Id": "2289485f22eb4e6184ac812c07c6d8f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 15487.821723935178,
        "Y": 5151.3838162909606
      },
      {
        "Id": "d4ea6d5c6d5943358bd8aa43724a313c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 15843.021723935179,
        "Y": 5038.5563162909611
      },
      {
        "Id": "1fb3c8a1003c4f17b7723d53e91ed395",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 15487.821723935178,
        "Y": 4959.5563162909611
      },
      {
        "Id": "adbc16a7778943bcbbb90eb5e825c632",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 15179.821723935178,
        "Y": 5044.3063162909611
      },
      {
        "Id": "d0f3fd66dca141079c9f00fb7bcdb46c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 14856.621723935181,
        "Y": 4966.3063162909611
      },
      {
        "Id": "c5dd673411a84e28b4a3dfc0517187dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 14499.021723935179,
        "Y": 5021.1338162909606
      },
      {
        "Id": "ac7e3710ab514c42a761d29b6bc0e9ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 16138.221723935179,
        "Y": 4771.1338162909606
      },
      {
        "Id": "0519f441614040058eb6aa6f15012066",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 16461.421723935178,
        "Y": 4737.3063162909611
      },
      {
        "Id": "dd45d4f4923544068f540a9b9d0093f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 18816.621723935183,
        "Y": 4915.3063162909611
      },
      {
        "Id": "93b9882ee78c47728426af7347e7bc19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 32994.2217239352,
        "Y": 5296.172557399289
      },
      {
        "Id": "b996bfa5c581406aacb10fd14bb75f81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 32636.621723935197,
        "Y": 5431.0000573992884
      },
      {
        "Id": "a95b5489ee894138beb569616c274e1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 22484.621723935183,
        "Y": 5143.8238162909611
      },
      {
        "Id": "6ec82ee12a334da7b9a8adef54eacb83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 22161.421723935186,
        "Y": 5293.6513162909623
      },
      {
        "Id": "d110168d89cd4307a75ae9e391d9413b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 22484.621723935183,
        "Y": 5334.6513162909623
      },
      {
        "Id": "cbcb8343cc9e47c9bf25ba14aca9177c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 32636.621723935197,
        "Y": 5240.172557399289
      },
      {
        "Id": "32fccbba12994ac489d07f06da8b5ac1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 23039.021723935191,
        "Y": 4913.4750751826332
      },
      {
        "Id": "343e18e4038d4555b001d74a703a487b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 22743.821723935187,
        "Y": 5173.8238162909611
      },
      {
        "Id": "c6c97da8c7d844e2a5f068182682eabd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 37824.6217239352,
        "Y": 5165.672557399289
      },
      {
        "Id": "b312ce0901dd4eddab5007c6ce215a40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 36634.2217239352,
        "Y": 5308.0000573992884
      },
      {
        "Id": "246c05ca6b93411595a3e41ad37ffca1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 36973.4217239352,
        "Y": 5257.172557399289
      },
      {
        "Id": "a49d81b6f9424e22882ae3b4c83c254d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 37328.6217239352,
        "Y": 5145.172557399289
      },
      {
        "Id": "cb5367ee713d40ef9c69ff269b9ab72f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 36973.4217239352,
        "Y": 5067.172557399289
      },
      {
        "Id": "2e210134e80f4eaa99ed0e3d21026906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 37824.6217239352,
        "Y": 4784.672557399289
      },
      {
        "Id": "fe7d4a66e3fe47b4b35ff069db4b9bfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 36634.2217239352,
        "Y": 5116.422557399289
      },
      {
        "Id": "c8c8646404444d68a95313d7051df54d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 36299.821723935194,
        "Y": 5067.172557399289
      },
      {
        "Id": "e67cb05bbd0f4ca58930efa5fdcb0b0a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 35984.6217239352,
        "Y": 5101.172557399289
      },
      {
        "Id": "35e6d9df2aa849c39812afeca6610362",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 35384.6217239352,
        "Y": 5052.672557399289
      },
      {
        "Id": "26489c7945f940f48bcc3b42ce17a2ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 35673.4217239352,
        "Y": 5198.0000573992884
      },
      {
        "Id": "d22b2032e23444a2a89dcc794f5bbb62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 35673.4217239352,
        "Y": 5038.172557399289
      },
      {
        "Id": "a17a5c0e5b5447e8a49c12289f9997f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 35149.4217239352,
        "Y": 5052.672557399289
      },
      {
        "Id": "7ef9f7c8e23046e2926c675eefa2f47e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 34802.2217239352,
        "Y": 5086.672557399289
      },
      {
        "Id": "54fcd0e03d7a442e824da61b775a335e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 32363.8217239352,
        "Y": 5082.6831791091126
      },
      {
        "Id": "71c03bfc208546779f0192631acc1c86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80357.421723935026,
        "Y": 5013.1938008189363
      },
      {
        "Id": "99eddc713c6c437286bc894bf17c118a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 32994.2217239352,
        "Y": 5106.172557399289
      },
      {
        "Id": "60ddba8664734b4f87418a4780784626",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 32636.621723935197,
        "Y": 5048.6831791091126
      },
      {
        "Id": "2876d8655c7d4d6a98fba3bcbc0742ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 32093.4217239352,
        "Y": 5082.6831791091126
      },
      {
        "Id": "97dafe772aa5408a82ff5d70a13d426b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 31796.621723935197,
        "Y": 5065.6831791091126
      },
      {
        "Id": "8c1c45082c14415e9fe9298f7cb7baed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 31178.221723935203,
        "Y": 5179.9278682542
      },
      {
        "Id": "30ae04055d56466da5f2d26fa6e15629",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 30823.0217239352,
        "Y": 5327.9278682542
      },
      {
        "Id": "b98b7680cd77437e8b3b24408399f9dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 31473.4217239352,
        "Y": 5085.9278682542
      },
      {
        "Id": "e9af60cc01fe406385444f4ce8b43882",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 30823.0217239352,
        "Y": 5009.3883345365675
      },
      {
        "Id": "5a8b7ba8d5834c78bd7aaf1978fd7f4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 31178.221723935203,
        "Y": 4989.5608345365681
      },
      {
        "Id": "ebcb84b1040844ec810caa07b0fe5f7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 30823.0217239352,
        "Y": 4818.5608345365681
      },
      {
        "Id": "8f6aad720cb84e6483315ddd091107e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 30823.0217239352,
        "Y": 5167.5608345365681
      },
      {
        "Id": "032ca287ed8a4bcea94f0c6daf7bca3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 30499.821723935194,
        "Y": 5185.5608345365681
      },
      {
        "Id": "39b9b1cb38914521a1719d5049353842",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 27721.421723935193,
        "Y": 4976.5608345365681
      },
      {
        "Id": "f8d5d64d9e994ae9af3ee8fc3c49a209",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 27426.221723935188,
        "Y": 4980.3666959679294
      },
      {
        "Id": "40412fea99f745268fb03009b425c080",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 27146.221723935188,
        "Y": 5077.1941959679289
      },
      {
        "Id": "fa9d203157044b21a2732f12b8c68c50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.CountTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 27146.221723935188,
        "Y": 4917.3666959679294
      },
      {
        "Id": "44fe160f57a742bfb022a7d7f2f7c5d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 26791.021723935191,
        "Y": 4917.3666959679294
      },
      {
        "Id": "d09001cd7b184ee69f63179deb2bdc6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 26503.021723935191,
        "Y": 4917.3666959679294
      },
      {
        "Id": "89470d8409104871a406de1d7a86bed0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 25519.821723935194,
        "Y": 4968.3666959679294
      },
      {
        "Id": "d2e3d2c9f502430795bad4e269508968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 25230.221723935188,
        "Y": 5002.3666959679294
      },
      {
        "Id": "e5d2788322184d8d85b58abb5f7f10dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 24636.62172393519,
        "Y": 5133.1941959679289
      },
      {
        "Id": "261cb84be1b14e8c908109d47ab29c99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 24907.021723935191,
        "Y": 5036.3666959679294
      },
      {
        "Id": "f4884cade5994d3ea61b75071e6392d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 24636.62172393519,
        "Y": 4973.3666959679294
      },
      {
        "Id": "19bf9025a47f49de9956bb08bd2fa0b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 23981.421723935186,
        "Y": 5095.8666959679294
      },
      {
        "Id": "12cdff4f3d8741e59f58924ce97e34c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DistanceTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 24304.62172393519,
        "Y": 4987.8666959679294
      },
      {
        "Id": "be1b21d35f184b648dfc9c8a9a1ed93d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 23981.421723935186,
        "Y": 4904.1166959679294
      },
      {
        "Id": "89b09ce888044f43b69e37e94939a194",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 5028.1938008189363
      },
      {
        "Id": "1c1e0e6f7b9946bb9ed593d3a77adc36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 33607.021723935191,
        "Y": 5072.172557399289
      },
      {
        "Id": "9cd39846ab6e45aa982caada5fdc5639",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 33351.821723935194,
        "Y": 5072.172557399289
      },
      {
        "Id": "3f2b240cff10479f89f5f37793f4c353",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79999.82172393502,
        "Y": 5013.1938008189363
      },
      {
        "Id": "f490f5f68f8d4036b61825754fbb017f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79642.221723935014,
        "Y": 5013.1938008189363
      },
      {
        "Id": "a1fd0870f0094d98911b6368b6db70d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79353.421723935026,
        "Y": 5013.1938008189363
      },
      {
        "Id": "b3bbeb2bd8a540809592494d562e3566",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 32994.2217239352,
        "Y": 4916.172557399289
      },
      {
        "Id": "6a0539528863431582d3e6c09646489d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 30160.621723935197,
        "Y": 5162.5502128267444
      },
      {
        "Id": "ee269d1a193649b9b953a09065402bf7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 30499.821723935194,
        "Y": 5346.9278682542
      },
      {
        "Id": "339d9f82033c45a5ba8951db4685badb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 26214.221723935188,
        "Y": 4934.3666959679294
      },
      {
        "Id": "24b65244582d40f295ff3bc397c37e74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 25843.021723935191,
        "Y": 4934.3666959679294
      },
      {
        "Id": "6a06b2e2fbfb44ceaa164dc970107cd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 23685.421723935186,
        "Y": 5015.1166959679294
      },
      {
        "Id": "4f60413db7e645c19c27f9bdb4442a52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 23362.221723935188,
        "Y": 5088.8334543973369
      },
      {
        "Id": "0b9c5b62f9c54366811ed21bac974196",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 23039.021723935191,
        "Y": 5105.1300751826338
      },
      {
        "Id": "a801d9a64f3f4b589abbd99eaf09a07a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 33895.821723935194,
        "Y": 5057.672557399289
      },
      {
        "Id": "ad74026a59874eee8cabec7eda8dda2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 34183.821723935194,
        "Y": 5120.672557399289
      },
      {
        "Id": "6bf9b130eb274903bf5d517c09219857",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 33895.821723935194,
        "Y": 5217.5000573992884
      },
      {
        "Id": "9453bb0772c74b7ba215b4130672bfc7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 34479.021723935191,
        "Y": 5086.672557399289
      },
      {
        "Id": "ccc444e5a42b461197f9d5c62569fabd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 28044.621723935197,
        "Y": 4942.5608345365681
      },
      {
        "Id": "c67b34b080a64ca1a9ed4bf158a9e013",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 28391.821723935194,
        "Y": 4908.5608345365681
      },
      {
        "Id": "50363477491c4fb1a0c47e1d30a99e7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 28627.021723935191,
        "Y": 4908.5608345365681
      },
      {
        "Id": "ed30409e18dc47a9974e14b08cae2f9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 28915.821723935194,
        "Y": 5005.8883345365675
      },
      {
        "Id": "0b38fc39b20648df93d5dde03d8a8fe5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 29227.021723935191,
        "Y": 4909.0608345365681
      },
      {
        "Id": "61c62d3ede8644e4a5e9295a2eb99587",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 28915.821723935194,
        "Y": 4846.0608345365681
      },
      {
        "Id": "61ce9dfccbee45b786a1d3e1fad24f88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 29227.021723935191,
        "Y": 5134.8883345365675
      },
      {
        "Id": "19896675fc6b4cbba0406ca88e5afbe3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 29542.221723935196,
        "Y": 5005.0608345365681
      },
      {
        "Id": "37d6e545b9264e97aa78e3afe324b74a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 29837.4217239352,
        "Y": 4971.0608345365681
      },
      {
        "Id": "037a3061765c47bdbcd41c9bbd694903",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 30160.621723935197,
        "Y": 4971.0608345365681
      },
      {
        "Id": "66b4a53a494544a685373d219b079ce9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 48657.421723935171,
        "Y": 5035.0054768443269
      },
      {
        "Id": "e19349c552224dde977c3907333ecd5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 45823.82172393518,
        "Y": 5171.4040173411531
      },
      {
        "Id": "c3bb7231e4744fec985748d8668311f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 46163.021723935177,
        "Y": 5307.8025578379793
      },
      {
        "Id": "7172df7d82684fcb86b6bf39e9a82dfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 43384.6217239352,
        "Y": 4885.9981793284578
      },
      {
        "Id": "14e5f940a01d42b8b55b8678f5c507b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 43089.4217239352,
        "Y": 5036.1583888316318
      },
      {
        "Id": "c0ad703d7d2944f1abdd10f7337ea58e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 42809.4217239352,
        "Y": 5132.9858888316312
      },
      {
        "Id": "5dc31788439b4f61ab06a16750c1b735",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.CountTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 42809.4217239352,
        "Y": 4973.1583888316318
      },
      {
        "Id": "72d47a6f12994d7ba1ce05241c831e05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 42454.2217239352,
        "Y": 4973.1583888316318
      },
      {
        "Id": "a68f6eb5742443f39853d7449b8034b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 42166.2217239352,
        "Y": 4973.1583888316318
      },
      {
        "Id": "7c415d26e85149b1980306885f892f2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 41877.421723935215,
        "Y": 4971.2348448252842
      },
      {
        "Id": "65c50ecf7dfa4c1f903a0ecd173e8920",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 41506.2217239352,
        "Y": 4971.2348448252842
      },
      {
        "Id": "f08b23a88c63495c9132cec7635c540a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 41183.021723935206,
        "Y": 5005.2348448252842
      },
      {
        "Id": "b8fcb539c1fe4d1f968058e95c7b4b6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 40893.421723935215,
        "Y": 5039.2348448252842
      },
      {
        "Id": "d1cf030fb0214bb5a67d7fe324178458",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 40299.821723935209,
        "Y": 5170.0623448252836
      },
      {
        "Id": "97edbf0b99c34e5e9e4b5e109a8ff7ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 40570.2217239352,
        "Y": 5073.2348448252842
      },
      {
        "Id": "b4dababe28c046a8bd6e0c70ced7d3be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 40299.821723935209,
        "Y": 5010.2348448252842
      },
      {
        "Id": "74c19ecfbdcb481989f21df7bf193174",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 39644.621723935212,
        "Y": 5132.7348448252842
      },
      {
        "Id": "f5690e0ceec64be89cec41558af6e3b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DistanceTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 39967.821723935209,
        "Y": 5024.7348448252842
      },
      {
        "Id": "6aa903355e4544dc8b053a16d7694af3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 39348.621723935212,
        "Y": 5051.9848448252842
      },
      {
        "Id": "7a217366648b4aa5a1b712f84ffc86f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 48657.421723935171,
        "Y": 5415.0054768443269
      },
      {
        "Id": "2cc6595be67a47fb933276f4bf01b563",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 48299.82172393518,
        "Y": 5527.8329768443264
      },
      {
        "Id": "e99766de795148a19a1ad702eb12095e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 48299.82172393518,
        "Y": 5336.0054768443269
      },
      {
        "Id": "4d3c9010ee0b4c1e8df90085e1abb0cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 38702.2217239352,
        "Y": 4943.339637954251
      },
      {
        "Id": "b01244e81cdc457f846a893de36f916b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 39644.621723935212,
        "Y": 4940.9848448252842
      },
      {
        "Id": "a9e82b1079e047ffab6f3cd42c3826f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 39025.4217239352,
        "Y": 5111.69443108322
      },
      {
        "Id": "367c722c5da9494dac85078fb9368b0c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 38702.2217239352,
        "Y": 5134.99463795425
      },
      {
        "Id": "d45a8638ec084b68a5e58214a7ca9155",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 38147.821723935209,
        "Y": 5206.672557399289
      },
      {
        "Id": "19c43ade2ad243958476a5392f228a84",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 37824.6217239352,
        "Y": 5356.5000573992884
      },
      {
        "Id": "239849e5914a472c8611795df998b929",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 38147.821723935209,
        "Y": 5397.5000573992884
      },
      {
        "Id": "814135e11b2948a48adc4e69ba4a3b0c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 38407.021723935206,
        "Y": 5236.672557399289
      },
      {
        "Id": "935bdb63b07a4f9ba0f9138ac08aff88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 37824.6217239352,
        "Y": 4974.672557399289
      },
      {
        "Id": "f67392ad94ff4152a4121fb5b05a2e10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 38407.021723935206,
        "Y": 5076.672557399289
      },
      {
        "Id": "b43dea033fa846349fbcb566956a8adb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 38147.821723935209,
        "Y": 4979.672557399289
      },
      {
        "Id": "47460ece24af45e7a453285d90775cd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 37563.821723935209,
        "Y": 5090.672557399289
      },
      {
        "Id": "4b700da853274808bc7a11eef2817b9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 43707.821723935194,
        "Y": 4919.9981793284578
      },
      {
        "Id": "6f752e370a2848a29c0206ff25405eb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 44055.021723935191,
        "Y": 4885.9981793284578
      },
      {
        "Id": "88dce6f4b0a940f1b00fb5265e093c18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 44290.221723935188,
        "Y": 4885.9981793284578
      },
      {
        "Id": "2f8816a2af184b3a9382e179a4d17c2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 44579.021723935191,
        "Y": 4983.3256793284572
      },
      {
        "Id": "2df335f3d9644656a10447e4a6fdc74e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 44890.221723935188,
        "Y": 4886.4981793284578
      },
      {
        "Id": "bc2e08e7496447a2b3aab17599a45233",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 44579.021723935191,
        "Y": 4823.4981793284578
      },
      {
        "Id": "813f30c9a9814ee180329b311caaf6da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 44890.221723935188,
        "Y": 5112.3256793284572
      },
      {
        "Id": "d494506d4846471999a8017e17541f12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 45205.421723935186,
        "Y": 4982.4981793284578
      },
      {
        "Id": "d15858fb44c74c3c9270e2d2c46405b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 45500.621723935183,
        "Y": 4948.4981793284578
      },
      {
        "Id": "1259f1d9907f40cd9d59c843080f0d5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81072.621723935037,
        "Y": 4851.1938008189363
      },
      {
        "Id": "3575812e893247e8a918fa11cbaa76fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 49270.221723935174,
        "Y": 5191.0054768443269
      },
      {
        "Id": "9024c8c52a7044e58ad6c3e85103fffd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 49015.021723935177,
        "Y": 5191.0054768443269
      },
      {
        "Id": "b01c28e7a71c452fad73b10237ee6b5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 48027.021723935177,
        "Y": 5099.5996388316316
      },
      {
        "Id": "09ae3d337ced4d2cbdb2eb249502b000",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80357.421723935026,
        "Y": 4823.1938008189363
      },
      {
        "Id": "12d10cfc3efe42778fd8f62a62778f38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 4838.1938008189363
      },
      {
        "Id": "9424a4e28ac34e4f81694a3d7eb4b0cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 48657.421723935171,
        "Y": 5225.0054768443269
      },
      {
        "Id": "1ea759d1df54489eb7c1456bb5377c22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 48299.82172393518,
        "Y": 5065.5996388316316
      },
      {
        "Id": "9221affaa44e4cec8ef72ae2e42481d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 47756.621723935168,
        "Y": 5099.5996388316316
      },
      {
        "Id": "552769d0859e4bd997c06bd90a76f1c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 47459.821723935165,
        "Y": 5082.5996388316316
      },
      {
        "Id": "a962f1c49f3a49f4a88e5d6a4276c319",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 47136.621723935168,
        "Y": 5153.8025578379793
      },
      {
        "Id": "9070259638d94494bd45bc401fca2fe9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79999.82172393502,
        "Y": 4823.1938008189363
      },
      {
        "Id": "d59507916a544c449391d61e2360bbec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79642.221723935014,
        "Y": 4823.1938008189363
      },
      {
        "Id": "cc522c70aab34d78ac8f241e731b55af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 46841.421723935171,
        "Y": 5183.8025578379793
      },
      {
        "Id": "f8e54511861a462d8bce5d17caceaadd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 46486.221723935174,
        "Y": 5307.8025578379793
      },
      {
        "Id": "b70f170edc684b02b4816744ec5ca9b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 46486.221723935174,
        "Y": 4988.3256793284572
      },
      {
        "Id": "b3c99f8622004b0aad8c0f1843a60131",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 46841.421723935171,
        "Y": 4992.4981793284578
      },
      {
        "Id": "545d968efaca470d80fc8fc897f82039",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 46486.221723935174,
        "Y": 4797.4981793284578
      },
      {
        "Id": "948563fa491146f68e941509ae53dfd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 46486.221723935174,
        "Y": 5146.4981793284578
      },
      {
        "Id": "68c816353dea4078b4c6bd34c65c9f1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 46163.021723935177,
        "Y": 5099.4981793284578
      },
      {
        "Id": "a31da3b246334222b6f7429ac0fa27b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 49559.021723935177,
        "Y": 5176.5054768443269
      },
      {
        "Id": "43400f11d5134214999fead9bd2a2dec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 49847.021723935177,
        "Y": 5239.5054768443269
      },
      {
        "Id": "422fd25761ea43d984a8ea02062bec95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 49559.021723935177,
        "Y": 5336.3329768443264
      },
      {
        "Id": "96ea33f867fa458ea201960e3dd7be60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 50142.221723935174,
        "Y": 5205.5054768443269
      },
      {
        "Id": "b182fbf572c24ce3a009f8908889f124",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 45823.82172393518,
        "Y": 4948.4981793284578
      },
      {
        "Id": "92377479d7944cf290e1d4295bb33285",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81072.621723935037,
        "Y": 4530.6938008189363
      },
      {
        "Id": "d0c62da7652e4e96a683961cbb11cea2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 4456.6938008189363
      },
      {
        "Id": "d4a872557e0b41a59b5ba992f6728fb9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80357.421723935026,
        "Y": 4490.5213008189357
      },
      {
        "Id": "5e82b9368d214b66a11c0021ea7886cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 64320.621723935095,
        "Y": 5608.4926289439363
      },
      {
        "Id": "b4b9784d38814521912d75a7f5ea1651",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 54365.421723935142,
        "Y": 5363.1733247447164
      },
      {
        "Id": "4b6181b28ee44359b67d5e035b1055a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 63963.021723935104,
        "Y": 5721.3201289439357
      },
      {
        "Id": "5089953226c249568ec86d6f8084299a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 63963.021723935104,
        "Y": 5529.4926289439363
      },
      {
        "Id": "39301a8c68ec4546a1fa9b0e8e7ca7be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 54365.421723935142,
        "Y": 5171.5183247447176
      },
      {
        "Id": "60d71e5e1c2d4e47bbb1e09d5cbaaf4d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 53811.021723935148,
        "Y": 5417.5054768443269
      },
      {
        "Id": "cccaa5bf11bf4986b9239d9f10544641",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 53487.821723935165,
        "Y": 5567.3329768443264
      },
      {
        "Id": "6733cfbca87947508fb421402c543df7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 53811.021723935148,
        "Y": 5608.3329768443264
      },
      {
        "Id": "01f2c512b2514b8aa27a58b6c44930d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 54070.221723935159,
        "Y": 5447.5054768443269
      },
      {
        "Id": "60ee4e737adb49028a95e3579666c1c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 53487.821723935165,
        "Y": 5185.5054768443269
      },
      {
        "Id": "0b77575cc72e4a86b8330a24b14fe8f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 54070.221723935159,
        "Y": 5287.5054768443269
      },
      {
        "Id": "f7582d962f1e4d1393240c58d9b175f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 53811.021723935148,
        "Y": 5190.5054768443269
      },
      {
        "Id": "2b961f42bc2540d697db32fc144440f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 53227.021723935148,
        "Y": 5185.5054768443269
      },
      {
        "Id": "8bb7795453ed4aac8a9d318afbf78c1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 53487.821723935165,
        "Y": 5376.5054768443269
      },
      {
        "Id": "9b549a8962814dd98cd6e92cb3813df1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 52297.421723935171,
        "Y": 5474.8329768443264
      },
      {
        "Id": "9deef2b2c48240f3859b7f10ca74688b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 52636.621723935154,
        "Y": 5410.0054768443269
      },
      {
        "Id": "fd10822be23c437781e214578712adfe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 52991.821723935165,
        "Y": 5298.0054768443269
      },
      {
        "Id": "341467036a524281bdeffcbee10a97f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 52636.621723935154,
        "Y": 5220.0054768443269
      },
      {
        "Id": "6dbb4a096e1240be9c0c956c9acd6c99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79999.82172393502,
        "Y": 5809.1938008189363
      },
      {
        "Id": "ae6db74e43df41389183a6f3193a1201",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79642.221723935014,
        "Y": 5730.1938008189363
      },
      {
        "Id": "32e2ce209e29468a8e1883022a5fcf01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 69151.02172393509,
        "Y": 5378.9926289439363
      },
      {
        "Id": "489303116186478e9700778fc54efacb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 69733.421723935084,
        "Y": 5480.9926289439363
      },
      {
        "Id": "d4d810866b1842109adccf752a23c07d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 69474.221723935072,
        "Y": 5383.9926289439363
      },
      {
        "Id": "55fae366dc10442999c779b41b9f58bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 69151.02172393509,
        "Y": 5569.9926289439363
      },
      {
        "Id": "2675eda8667b432eae06ffa8321072e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81430.221723935043,
        "Y": 4974.6938008189363
      },
      {
        "Id": "8f62a9a8d9124cf19313926ce1820362",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 64933.4217239351,
        "Y": 5384.4926289439363
      },
      {
        "Id": "db2dc2f42ee744129e5bc984402629c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 64678.2217239351,
        "Y": 5384.4926289439363
      },
      {
        "Id": "0a9fb078d90942d7ace421c23c480fb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 63690.2217239351,
        "Y": 5298.0932148814363
      },
      {
        "Id": "7e699d92d83e4ab68b890ab0bcb4339b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81072.621723935037,
        "Y": 5041.6938008189363
      },
      {
        "Id": "478fa0c359b845529cc1ef9c424b5cef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 64320.621723935095,
        "Y": 5418.4926289439363
      },
      {
        "Id": "be02f64a33ce4f1cbfaf930bb178948f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 63963.021723935104,
        "Y": 5264.0932148814363
      },
      {
        "Id": "19636cc28c1c41568f5cdb533a808896",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 63419.821723935107,
        "Y": 5298.0932148814363
      },
      {
        "Id": "056dcf4dc15d4becad6d7705b112c770",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 63123.02172393509,
        "Y": 5281.0932148814363
      },
      {
        "Id": "35ba10ba63d643f493faa8e253ed9a49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 5188.6938008189363
      },
      {
        "Id": "7dc642d6bcb0411883082eae1a4514dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 62799.821723935107,
        "Y": 5349.7929219126863
      },
      {
        "Id": "a81500493e41428f92dde8b530452713",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80357.421723935026,
        "Y": 5203.6938008189363
      },
      {
        "Id": "0bd82bfde34348d8ad5ec689d17f8e6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79999.82172393502,
        "Y": 5203.6938008189363
      },
      {
        "Id": "edc07693e3494048959b43be984b19c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 62504.621723935095,
        "Y": 5421.7929219126863
      },
      {
        "Id": "48bc066cf6554b9b826eb093dc0de856",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 62149.421723935113,
        "Y": 5563.7929219126863
      },
      {
        "Id": "8d50f6b900704193b0524805c1cdd8f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 62149.421723935113,
        "Y": 5244.0708613658107
      },
      {
        "Id": "4f5ada85112f4a29802a8c42919a1580",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 62504.621723935095,
        "Y": 5231.2433613658113
      },
      {
        "Id": "3bb83b1fd22d4579806b4483aec710c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 62149.421723935113,
        "Y": 5053.2433613658113
      },
      {
        "Id": "15cb2ee21a1c4be190a6d2825ea72aee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 62149.421723935113,
        "Y": 5403.7433613658113
      },
      {
        "Id": "78e038fe5edd4795bd0e8afcada697d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 61826.2217239351,
        "Y": 5410.7433613658113
      },
      {
        "Id": "106b520b153949eab4acb38bc2c7534b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 64320.621723935095,
        "Y": 5228.4926289439363
      },
      {
        "Id": "aa2709ffa17040228ff6e01630452821",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 61487.021723935119,
        "Y": 5411.6427754283113
      },
      {
        "Id": "3249135edfc24f49ad287a95c3053f94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 61826.2217239351,
        "Y": 5570.7929219126863
      },
      {
        "Id": "52820104dcaa43d3a26ae0bc1f61239b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 59047.821723935136,
        "Y": 5203.6938008189363
      },
      {
        "Id": "17234024546045fc807e1835680a6b92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 58752.621723935124,
        "Y": 5250.0932148814363
      },
      {
        "Id": "48e1fe8e4d4e4aa9945c8a1b820e9492",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 58472.621723935124,
        "Y": 5346.9207148814357
      },
      {
        "Id": "095e05fdd73f4f7fb3802bb0bbf52bf9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.CountTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 58472.621723935124,
        "Y": 5187.0932148814363
      },
      {
        "Id": "9a391672755b45d18f299ec47d40d637",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 58117.421723935142,
        "Y": 5187.0932148814363
      },
      {
        "Id": "886ffc00d2e34ee7bed109c5d2afc0a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 57829.421723935142,
        "Y": 5187.0932148814363
      },
      {
        "Id": "c2cea56d3cc9409a8b42b647f98ebd56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 57540.621723935124,
        "Y": 5195.3935078501863
      },
      {
        "Id": "6bc5b2377abd411b91e8776bba3511d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 57169.421723935142,
        "Y": 5195.3935078501863
      },
      {
        "Id": "9ac18d3943a04e06ab1d02d0bda7abec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 56846.22172393513,
        "Y": 5229.3935078501863
      },
      {
        "Id": "cadb8893f3b442a88a930406583615dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 56556.621723935139,
        "Y": 5263.3935078501863
      },
      {
        "Id": "745ce91ba924468eac5a7fc5acdb352c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 55963.021723935148,
        "Y": 5394.2210078501857
      },
      {
        "Id": "0e9544eb22e746c3bf906dc404bf1e2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 56233.421723935142,
        "Y": 5297.3935078501863
      },
      {
        "Id": "62a567e7e82f4359addef896b8be2cd5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 55963.021723935148,
        "Y": 5234.3935078501863
      },
      {
        "Id": "646124467d5b476c8ab4c03945e7fe2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 55307.821723935136,
        "Y": 5356.8935078501863
      },
      {
        "Id": "6ae242120c2b4f0684ecd1cde6723846",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DistanceTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 55631.021723935148,
        "Y": 5248.8935078501863
      },
      {
        "Id": "dabad50c2da44713a7206b3380594a1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 55011.821723935136,
        "Y": 5276.1435078501863
      },
      {
        "Id": "5e6259cb0dd54d469838623bba21bf00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 55307.821723935136,
        "Y": 5165.1435078501863
      },
      {
        "Id": "9311f196402445d8a303717ed95f475f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 54688.621723935154,
        "Y": 5343.8931416392488
      },
      {
        "Id": "2bf63c6fe3b04d9a8b023bb8c6592874",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 65222.2217239351,
        "Y": 5369.9926289439363
      },
      {
        "Id": "b11887d14c594bd8b6675d0322903304",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 65510.2217239351,
        "Y": 5432.9926289439363
      },
      {
        "Id": "7b851c886eb541be83506e9b086b936a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 65222.2217239351,
        "Y": 5529.8201289439357
      },
      {
        "Id": "2f735fbdb0114ab59d6237da4e36727b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 65805.4217239351,
        "Y": 5398.9926289439363
      },
      {
        "Id": "a945f4de2683405e9c08f51433db82eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 84597.913884305337,
        "Y": 189.73503458352025
      },
      {
        "Id": "a69bebbe6bda4673a06ece4f0ca5d78b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 5147.6938008189345
      },
      {
        "Id": "cbee4b9445e849319dbf888863b207a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82370.221723935043,
        "Y": 5254.6938008189345
      },
      {
        "Id": "48aaf0ef5497458587603de86b8dd9e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 4797.6938008189363
      },
      {
        "Id": "fbb5507c6a0b4175aba1c8ea9c10dfe4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82370.221723935043,
        "Y": 4803.6938008189363
      },
      {
        "Id": "350457397b6f426dbf78f95a61577f5b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 4446.6938008189363
      },
      {
        "Id": "ecdd4d0bbfb540fc88e9535e4181f617",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82370.221723935043,
        "Y": 4351.6938008189363
      },
      {
        "Id": "b1b816af4e44481191ac21fc336e2ace",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 3936.6938008189368
      },
      {
        "Id": "4018e5c9dabf485798b3c7290c3f4af9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81787.821723935049,
        "Y": 5125.6938008189363
      },
      {
        "Id": "f578867f26f844d89ffca7651cad97e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 5569.1938008189363
      },
      {
        "Id": "6f2c3535433f4be9b893751d08761532",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80357.421723935026,
        "Y": 5585.1938008189363
      },
      {
        "Id": "1f61ef8f9e3746a786afeb7e215bca06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79353.421723935026,
        "Y": 5460.4438008189363
      },
      {
        "Id": "196aff27114e49fd9f9de77902bf9b66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81430.221723935043,
        "Y": 5165.6938008189363
      },
      {
        "Id": "9255f73b83a8478fb92b747edca34297",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79999.82172393502,
        "Y": 5619.1938008189363
      },
      {
        "Id": "2e199f09d663414faf9b359622938f4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79642.221723935014,
        "Y": 5426.4438008189363
      },
      {
        "Id": "bc4506b74ca14e6599bbabb41bb98217",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79083.021723935031,
        "Y": 5460.4438008189363
      },
      {
        "Id": "2aeb0ebec1144378ab7faecc06c7ecb0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 78786.221723935014,
        "Y": 5443.4438008189363
      },
      {
        "Id": "e67ac464ece444a1a9f206bf0a5834e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81072.621723935037,
        "Y": 5231.6938008189363
      },
      {
        "Id": "acd87c12939046e7b15e6fd7c92b1092",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 78463.021723935031,
        "Y": 5531.3188008189363
      },
      {
        "Id": "b6370e2cfd224b92b2c88611b840251c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 5378.6938008189363
      },
      {
        "Id": "de4ad25478ad47008e4f1323f40750db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80357.421723935026,
        "Y": 5394.6938008189363
      },
      {
        "Id": "bdb610bab56f46cead81517d14447432",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 78167.82172393502,
        "Y": 5569.3188008189363
      },
      {
        "Id": "ffa6a828ec1e43459c8b0752051539e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 77812.621723935037,
        "Y": 5714.3188008189363
      },
      {
        "Id": "8e181b0f8d7144078d0c750b4f34fde7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 77812.621723935037,
        "Y": 5394.3338008189357
      },
      {
        "Id": "de484eca01b544b088adc2684daee429",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 78167.82172393502,
        "Y": 5377.5063008189363
      },
      {
        "Id": "caee770c87e1463fb786a2d858afbc62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 77812.621723935037,
        "Y": 5203.5063008189363
      },
      {
        "Id": "7b5a99dc16574a5db06c139a72c94dde",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 77812.621723935037,
        "Y": 5554.0063008189363
      },
      {
        "Id": "050cdace957d49f69fd994097172aff5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 77489.421723935026,
        "Y": 5571.5063008189363
      },
      {
        "Id": "370013e2dd9e49c29fea595486dc34ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 73203.821723935034,
        "Y": 5387.5531758189363
      },
      {
        "Id": "1f472919beab44dcb26a181a595e6452",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81072.621723935037,
        "Y": 4690.6938008189363
      },
      {
        "Id": "05881eadb38b4b1882739354464bb8b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80715.021723935031,
        "Y": 4647.6938008189363
      },
      {
        "Id": "6d1f3a91e8434c88a8296b5224ea1a4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 80357.421723935026,
        "Y": 4664.5213008189357
      },
      {
        "Id": "d2ffeb1a819b4c6e9819ee2642505994",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 72832.621723935052,
        "Y": 5387.5531758189363
      },
      {
        "Id": "07d74aabb67e41f5aa129cc2cb440f0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 72509.42172393504,
        "Y": 5421.5531758189363
      },
      {
        "Id": "c70ffcdec82b4ffaa24bb2422c40a658",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 72219.821723935063,
        "Y": 5455.5531758189363
      },
      {
        "Id": "0ef8d8ba65f54d5fa7d4f8195261e39c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 71626.221723935058,
        "Y": 5586.3806758189357
      },
      {
        "Id": "4330207919624765b40f6ca8ad1b3847",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 71896.621723935052,
        "Y": 5489.5531758189363
      },
      {
        "Id": "7f8b32b92b3249189b136ea800796c35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 71626.221723935058,
        "Y": 5426.5531758189363
      },
      {
        "Id": "be5d2d3ca07c40dfb09caad68e31fdc5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 70971.021723935046,
        "Y": 5549.0531758189363
      },
      {
        "Id": "6f4f1d8703f44f17b7c9afc525c4bca9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DistanceTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 71294.221723935058,
        "Y": 5441.0531758189363
      },
      {
        "Id": "8c64f6c730bb4a599ee61ca46a30d844",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 70675.021723935046,
        "Y": 5468.3031758189363
      },
      {
        "Id": "f16a27bba0e0422f86477de5f4fb939f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 70971.021723935046,
        "Y": 5357.3031758189363
      },
      {
        "Id": "c36e444a954a4a88b54a483ccce2f336",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 70351.821723935063,
        "Y": 5524.2797383189363
      },
      {
        "Id": "62914d6b6eb940de96c3e634292c3757",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 70028.621723935052,
        "Y": 5549.4464570689352
      },
      {
        "Id": "7e8726a95734479b81c57a2f50af8372",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79642.221723935014,
        "Y": 5922.0213008189357
      },
      {
        "Id": "064a42744ce049359263f10b4b6f546f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 70028.621723935052,
        "Y": 5357.7914570689363
      },
      {
        "Id": "e7cb037d78584fe68abe1785e46d9af9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 69474.221723935072,
        "Y": 5610.9926289439363
      },
      {
        "Id": "18f5148fab9348e185259434b799abb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 69151.02172393509,
        "Y": 5760.8201289439357
      },
      {
        "Id": "34033da6768f4bb89d01ee983f68cb0a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 69474.221723935072,
        "Y": 5801.8201289439357
      },
      {
        "Id": "6e7803828083403086edcea6c190bafc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 69733.421723935084,
        "Y": 5640.9926289439363
      },
      {
        "Id": "52faf53087a4449a88d74690caacb53a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 68890.221723935072,
        "Y": 5378.9926289439363
      },
      {
        "Id": "98b526ffecf24310b266ef7ef724547c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 67960.6217239351,
        "Y": 5668.3201289439357
      },
      {
        "Id": "1d8f0c4d950e4bc38edad01ca03b94d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 68299.821723935078,
        "Y": 5603.4926289439363
      },
      {
        "Id": "b13c906d2d3449bbb1ace52b61cd2b00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 68655.02172393509,
        "Y": 5491.4926289439363
      },
      {
        "Id": "5d3c275f44b4448587a041521e838d68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 68299.821723935078,
        "Y": 5413.4926289439363
      },
      {
        "Id": "89032c67c71f4462b2b6b091a4269ad5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81430.221723935043,
        "Y": 4511.6938008189363
      },
      {
        "Id": "4f467dcdbc1440108b9f3eb66ae94c95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81787.821723935049,
        "Y": 4363.6938008189363
      },
      {
        "Id": "5d11f14e06d448dea665cd836bf8bb75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81430.221723935043,
        "Y": 4773.0038008189376
      },
      {
        "Id": "70478537bd8448bd9b7c55640ddc1138",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Boolean",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81787.821723935049,
        "Y": 3859.6938008189368
      },
      {
        "Id": "90f13639dc8a470da0d35a643bfb8036",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81787.821723935049,
        "Y": 4553.6938008189363
      },
      {
        "Id": "28881d480f564a25ad1f88422874cb16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 2814.6938008189368
      },
      {
        "Id": "b279d57a8f1b45beba77433198be7a35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81787.821723935049,
        "Y": 4743.6938008189363
      },
      {
        "Id": "8d3f2259a9a6435d83fd31774bbfd67a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81787.821723935049,
        "Y": 4933.6938008189363
      },
      {
        "Id": "0f02cf88baef4766a9cbd38286fc8b9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Boolean",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81787.821723935049,
        "Y": 5505.6938008189363
      },
      {
        "Id": "ec7ad49a8e2d45d8a54f74f1c764720a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 3004.6938008189368
      },
      {
        "Id": "ed3476acf2254f6f85a64a74a3787ada",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 3194.6938008189368
      },
      {
        "Id": "efd3a53499324d678bdbf308402915b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 3384.6938008189368
      },
      {
        "Id": "35cc69b2a7d14ffcad7a3c2d039f7593",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82370.221723935043,
        "Y": 3776.6938008189368
      },
      {
        "Id": "a9a43c81cf184d4c93783de91b29e2fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 3776.6938008189368
      },
      {
        "Id": "bdf78d96a6144526859a1a6a2a826738",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 3574.6938008189368
      },
      {
        "Id": "8cf1ea1ea95442d7a7c7544444cd4431",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82370.221723935043,
        "Y": 4090.6938008189363
      },
      {
        "Id": "63b8270965ed4278b76beead6e0fdf0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 3764.6938008189368
      },
      {
        "Id": "0a36694eec864da3889938d417756300",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 4126.6938008189363
      },
      {
        "Id": "cd0740ead0e84b16a1ad1be82bcb5bf5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 3954.6938008189359
      },
      {
        "Id": "4e6dfa93f47d40248a0b0677b379fea0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 4144.6938008189363
      },
      {
        "Id": "7e573e96224e4a44baaf79a1a9fe71dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 4334.6938008189363
      },
      {
        "Id": "bf6aa31bf2004e4f981f3d19e58a10c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82370.221723935043,
        "Y": 4542.6938008189363
      },
      {
        "Id": "32b26878486643529b24f6fe24dce017",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 4524.6938008189381
      },
      {
        "Id": "401a8464f1444d32a23da1e0d82e248d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 4637.6938008189363
      },
      {
        "Id": "c7c5f7587ef24fbfbbd28cf76206b720",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 4715.6938008189363
      },
      {
        "Id": "08b1eff5595a49bebd4a4bf22393e9d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 4905.6938008189363
      },
      {
        "Id": "6a82c078a7954c44a735f66ae87c6208",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 5666.6938008189363
      },
      {
        "Id": "556fe60f605a4d69a71ca1bc5e0def83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 5476.6938008189363
      },
      {
        "Id": "34873fdaf659420386ee12ca29922836",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 5286.6938008189363
      },
      {
        "Id": "6f0ffb7a2ed24736982b5670dd37322e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 5096.6938008189363
      },
      {
        "Id": "0ded9bf23a8f40a891fa6d63d4429dbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82370.221723935043,
        "Y": 4993.6938008189363
      },
      {
        "Id": "ef1186f7ac8e4ef68ae5696c345c5d9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 4987.6938008189363
      },
      {
        "Id": "229abfb2855f4db78f4d96fc36e44dc5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 6427.6938008189363
      },
      {
        "Id": "d687fb5008a940e68e6edb8d2292eb00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 6237.6938008189363
      },
      {
        "Id": "d72278645e5e49adb3a16c2f0de0a590",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 6046.6938008189363
      },
      {
        "Id": "9c4f09550e2648e8af9af9e42ead99cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82111.02172393506,
        "Y": 5856.6938008189363
      },
      {
        "Id": "ff3641e083f74f79b129a4c10e5a0304",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82370.221723935043,
        "Y": 5444.6938008189363
      },
      {
        "Id": "08720d94e4d3496a84ae0c13e599b0aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 5337.6938008189363
      },
      {
        "Id": "d7a42158a30b4271a5ee3801c9a458a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Empty",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82625.421723935055,
        "Y": 4286.6938008189363
      },
      {
        "Id": "3be0d78c8e304f50b019e9f339c6a901",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 83231.821723935049,
        "Y": 4415.2113008189381
      },
      {
        "Id": "7358452803b7467a9ea20e3c28f6baa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 83487.02172393506,
        "Y": 4415.2113008189381
      },
      {
        "Id": "6ba084c6f70b4348a0abd8361283fd68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81072.621723935037,
        "Y": 5422.6938008189363
      },
      {
        "Id": "86f2e0ca6f414281b05e33fe8c202d03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81430.221723935043,
        "Y": 5355.6938008189363
      },
      {
        "Id": "466790c55c064eaba1e13cd20a6aefee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81072.621723935037,
        "Y": 5582.5213008189357
      },
      {
        "Id": "95a717f0236c42d9a72e676fad150c43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 81787.821723935049,
        "Y": 5315.6938008189363
      },
      {
        "Id": "ee5fd5dec9424052a7b9a748aaa8360c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 83775.821723935049,
        "Y": 4400.7113008189381
      },
      {
        "Id": "5f314d0cd0fe4e86bc827ff0363bcfa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 84063.821723935049,
        "Y": 4463.7113008189381
      },
      {
        "Id": "f721fe9a76e14a06a8d7856ce4a63dcd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 83775.821723935049,
        "Y": 4560.5388008189375
      },
      {
        "Id": "a6a28cf66c294c93a3f866be369746f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 84359.02172393506,
        "Y": 4429.7113008189381
      },
      {
        "Id": "d12117cf5a3f48248cae4880fcca122c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82914.221723935043,
        "Y": 4466.6938008189363
      },
      {
        "Id": "5c33457af1d242738433cebd1f336e68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82914.221723935043,
        "Y": 4240.6938008189363
      },
      {
        "Id": "0f5c06f7662043a68bffa8bbc71f1a7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82914.221723935043,
        "Y": 4014.6938008189363
      },
      {
        "Id": "4922b5dd473a4edc88b83d58c2dce29e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82914.221723935043,
        "Y": 4692.6938008189363
      },
      {
        "Id": "d0314eb243ed41c38e39869949f3358d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 82914.221723935043,
        "Y": 4918.6938008189363
      },
      {
        "Id": "fc59141ce0344b8481b98c59c0f066f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 59371.021723935119,
        "Y": 5191.4933613658113
      },
      {
        "Id": "836d4112411846528ed3665c049b5a0c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 59718.22172393513,
        "Y": 5157.4933613658113
      },
      {
        "Id": "b8dd97d6e35c4afe8e54551309d263d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 59953.421723935113,
        "Y": 5157.4933613658113
      },
      {
        "Id": "4a0fc9301f0d4c17a4a8314274873d98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 60242.22172393513,
        "Y": 5254.8208613658107
      },
      {
        "Id": "dd93953b02064baf9940e871f49bb00f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 60553.421723935113,
        "Y": 5157.9933613658113
      },
      {
        "Id": "af499c19e12547fbabf20c722a1e2ffc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 60242.22172393513,
        "Y": 5094.9933613658113
      },
      {
        "Id": "62cbf94932df4de7b8f2a19147f361e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 60553.421723935113,
        "Y": 5383.8208613658107
      },
      {
        "Id": "266d578de81f40e197e4ace64344cdce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 60868.621723935124,
        "Y": 5253.9933613658113
      },
      {
        "Id": "8b58eb1d0fe94acea4ef37782a3b107f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 61163.821723935107,
        "Y": 5219.9933613658113
      },
      {
        "Id": "81bcccf982de4dd0b2cf662a3446796a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 61487.021723935119,
        "Y": 5219.9933613658113
      },
      {
        "Id": "f4f9cb4631354068bdf093d8a328fc31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 75034.221723935028,
        "Y": 5359.0063008189363
      },
      {
        "Id": "e36b746bd7454f38b4acf9281fde1871",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 75381.42172393504,
        "Y": 5325.0063008189363
      },
      {
        "Id": "431d033845924ffe9b8b374ac344a903",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 75616.621723935023,
        "Y": 5325.0063008189363
      },
      {
        "Id": "d23112db46154d19ae168ddbc754c8c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 75905.421723935055,
        "Y": 5422.3338008189357
      },
      {
        "Id": "b01829763961407b82fbfd713cebc2fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 76216.621723935037,
        "Y": 5325.5063008189363
      },
      {
        "Id": "af5a7efe3a994e799c306bb00a339c05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 75905.421723935055,
        "Y": 5262.5063008189363
      },
      {
        "Id": "fc9a3453843f4ece97f05bfd85993285",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 76216.621723935037,
        "Y": 5551.3338008189357
      },
      {
        "Id": "c1b72850619e46dd9142fb81f9809793",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 76531.821723935049,
        "Y": 5421.5063008189363
      },
      {
        "Id": "0940e4aefc7e411c90495cf407a1fecc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 76827.021723935031,
        "Y": 5387.5063008189363
      },
      {
        "Id": "cdd007a1a5dc4f7bb7a98a624ac3faff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 77150.221723935043,
        "Y": 5387.5063008189363
      },
      {
        "Id": "c5ff320e73fb446e833e192bd38d5639",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 84602.539377674038,
        "Y": 3.6785512484002538
      },
      {
        "Id": "0a7d5028727e4620beace58abc3e228b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 73492.621723935052,
        "Y": 5382.1000508189363
      },
      {
        "Id": "18694277afd642e9b870563a3d1bced2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 73780.621723935052,
        "Y": 5382.1000508189363
      },
      {
        "Id": "ab52ad4cbe41484598324c0323249f5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.CountTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 74135.821723935034,
        "Y": 5382.1000508189363
      },
      {
        "Id": "e1eaaf7884ac4c3388cd3b14ada334ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 74135.821723935034,
        "Y": 5541.9275508189357
      },
      {
        "Id": "13795b269d304eb4a416989ac0bf068b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 74415.821723935034,
        "Y": 5445.1000508189363
      },
      {
        "Id": "c5138acaa8e648348f1c985d0b1a71f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 74711.021723935046,
        "Y": 5393.0063008189363
      },
      {
        "Id": "02720b19eba34fcab03ea6b040450f63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 77489.421723935026,
        "Y": 5731.3188008189363
      },
      {
        "Id": "1dc7f1ca28d44b8b88aebcf63bf9ad2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 77150.221723935043,
        "Y": 5580.2563008189363
      },
      {
        "Id": "229c801fc9504a448c6db581051a27a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 79999.82172393502,
        "Y": 5429.1938008189363
      },
      {
        "Id": "0c768c59c4cf4d089766c6abab48d09f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 66475.821723935092,
        "Y": 5398.9926289439363
      },
      {
        "Id": "876d429c45b041e9a64d6c0b3c840454",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 66999.821723935078,
        "Y": 5384.4926289439363
      },
      {
        "Id": "a8c31f11bccb47e487ecd83a452bcdf7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 66999.821723935078,
        "Y": 5544.3201289439357
      },
      {
        "Id": "beec01683da2411dba2bb96e0ec0f272",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 66711.02172393509,
        "Y": 5398.9926289439363
      },
      {
        "Id": "9634ca97151041d1b35427436f69c9bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 67311.02172393509,
        "Y": 5447.4926289439363
      },
      {
        "Id": "707ab92987a44b3d8811f2097f899607",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 67626.221723935072,
        "Y": 5413.4926289439363
      },
      {
        "Id": "80552ce0e42a4a80b212e0329a2ef29c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 67960.6217239351,
        "Y": 5477.7426289439363
      },
      {
        "Id": "1af9b7399df747169e7825c71ef1b529",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 66128.6217239351,
        "Y": 5432.9926289439363
      },
      {
        "Id": "18c7c84c3c10443dbab6656e1b994eb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 69151.02172393509,
        "Y": 5188.9926289439363
      },
      {
        "Id": "3250dcbe724c41c08532b70378c54d34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 50465.421723935171,
        "Y": 5239.5054768443269
      },
      {
        "Id": "592557f1fe1d490f8752bd9a61739732",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Map",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 50812.621723935168,
        "Y": 5205.5054768443269
      },
      {
        "Id": "4127c464fdd04428822fa44714f111e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 51336.621723935168,
        "Y": 5191.0054768443269
      },
      {
        "Id": "39ba0329037e4d12b5cd1ce7393ba242",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 51336.621723935168,
        "Y": 5350.8329768443264
      },
      {
        "Id": "11e393c508264e019e0c0a42072265fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 51047.821723935165,
        "Y": 5205.5054768443269
      },
      {
        "Id": "05d3dca482824165a843b007e38d837c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 51647.821723935165,
        "Y": 5254.0054768443269
      },
      {
        "Id": "f9fb22964b054df79343fe6fd34e27af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 51963.021723935162,
        "Y": 5220.0054768443269
      },
      {
        "Id": "d605ec094c514ee5b851bd37c2570c6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 52297.421723935171,
        "Y": 5284.2554768443269
      },
      {
        "Id": "cc2238c7bb304625bf316d1ea073348d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 53487.821723935165,
        "Y": 4995.5054768443269
      },
      {
        "Id": "40357ca2484c4a49a0c0e29b550b489c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 7704.8967358860555,
        "Y": 896.67296572447822
      },
      {
        "Id": "4c811340f6c546f99a2574992941fe57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4706.0873201390459,
        "Y": 860.76709899717821
      },
      {
        "Id": "03eeec9b10e040b584b068abf1d7d6fd",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "KavelEntry_001_input",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4069.0916076323037,
        "Y": -766.84299773998407
      },
      {
        "Id": "0780277211c6450c984031d1a7d92251",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "KavelEntry_002_input",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4069.0916076323037,
        "Y": -575.20850830678546
      },
      {
        "Id": "d28bf6af42e24cac91a15d414a2eb072",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4721.5945467412348,
        "Y": 1184.1554495919456
      },
      {
        "Id": "94a6d4e05d134c49a85377e686781b87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 5345.4947995500388,
        "Y": 1475.4550587740957
      },
      {
        "Id": "d75c40ef2c2348fdba4e23f761b8da0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 5095.9769956830341,
        "Y": 1661.192248090402
      },
      {
        "Id": "33331fe7798b4b0bae605acf7d1a1f5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Shuffle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 5814.7808740790379,
        "Y": 1900.7306675775542
      },
      {
        "Id": "07b1a16747484e0d86f6092c2d7c57a9",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "seed",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4069.0916076323037,
        "Y": -397.17203199453627
      },
      {
        "Id": "00d761bb25c44984861715d831ccd7d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.TakeItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 6122.6892601987311,
        "Y": 1900.5799820494956
      },
      {
        "Id": "ef79868d0a684e16ab331b74fbd2963d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "AantalAansluitingen",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4069.0916076323037,
        "Y": -218.1669989109883
      },
      {
        "Id": "0cd51cf6ca474a4b942be5c369bf2774",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 8018.7899908295876,
        "Y": 1179.7037744719589
      },
      {
        "Id": "4bd12b9b1ba34932a68b838b07f47009",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Hoofdweg_Breedte",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 84708.493180609556,
        "Y": -2039.047085715843
      },
      {
        "Id": "29e766870d8b404c88f18a28d64d6a7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 91237.679082504736,
        "Y": 3614.3610809500715
      },
      {
        "Id": "c355d99d6e8144898d745874ed7df4db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 91592.879082504733,
        "Y": 3693.3610809500715
      },
      {
        "Id": "96ceb1b7feb644e8afeb81869bf10eae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 91237.679082504736,
        "Y": 3806.1885809500718
      },
      {
        "Id": "6b5e425350764c11aa486c35d1713358",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 90880.079082504744,
        "Y": 3688.9704559500715
      },
      {
        "Id": "381719423f3c4260801cc569316bc4a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 91592.879082504733,
        "Y": 3885.1885809500718
      },
      {
        "Id": "9deb6942f91442809dedb64a52747bd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 91871.279082504741,
        "Y": 3772.3610809500715
      },
      {
        "Id": "30aee3c273f74712ad963d18dade68d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 92194.479082504738,
        "Y": 3688.9704559500715
      },
      {
        "Id": "2683f0e7b6b24954b2999a61a58fb94e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 92517.679082504736,
        "Y": 3787.7517059500715
      },
      {
        "Id": "1feb0a05301b4d9b8b9b48323e1f7071",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93183.279082504741,
        "Y": 3040.4542059500718
      },
      {
        "Id": "c9603c76d41a4b4e885759285757b515",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93538.479082504738,
        "Y": 3059.6267059500715
      },
      {
        "Id": "b04cb6f421544e5895cb89f9d23a9266",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93859.279082504741,
        "Y": 3025.6267059500715
      },
      {
        "Id": "2fe0e2fe17d248aba43aa9539202a9f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94196.879082504733,
        "Y": 2945.2517059500715
      },
      {
        "Id": "87030e6d524a46c3bfcce6b59d45fff1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94598.479082504738,
        "Y": 3023.0017059500715
      },
      {
        "Id": "b2df5d341620491f9c613c0782a7ad2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94196.879082504733,
        "Y": 3106.0017059500715
      },
      {
        "Id": "66ee6f6692d74a4f968368b91c76dbad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 92517.679082504736,
        "Y": 4110.0017059500715
      },
      {
        "Id": "ce284535aa9b4ae083e6e9707f47e9a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 92875.279082504741,
        "Y": 4110.0017059500715
      },
      {
        "Id": "86574239c5424714986e774f2e28929d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93183.279082504741,
        "Y": 3830.0017059500715
      },
      {
        "Id": "156eb8280ba046abb6de4b8f9d974bd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93183.279082504741,
        "Y": 3990.0017059500715
      },
      {
        "Id": "8634b15128b04bfb9eec0f6d94aa8952",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 92875.279082504741,
        "Y": 3787.7517059500715
      },
      {
        "Id": "3156b729fadc4fb495c51a490c2af056",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93538.479082504738,
        "Y": 3975.0017059500715
      },
      {
        "Id": "73c1635ee0f3450c8c97e1ee392c0b13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93859.279082504741,
        "Y": 3843.0017059500715
      },
      {
        "Id": "3d4c885f167f48e4bd03503988925740",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93538.479082504738,
        "Y": 3815.8292059500709
      },
      {
        "Id": "e6dc05179bde48a99411c9ab595e0537",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95971.279082504741,
        "Y": 3596.5017059500715
      },
      {
        "Id": "baf9da165736434680c3d1223dbea78d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94196.879082504733,
        "Y": 3939.0017059500715
      },
      {
        "Id": "f38373f1b2b74c6e9760955941bd66ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94598.479082504738,
        "Y": 3939.0017059500715
      },
      {
        "Id": "4f0fb4e6a082454bbb792a92b4e0cc6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94919.279082504741,
        "Y": 3937.0017059500715
      },
      {
        "Id": "05ec6b14020443d28d5c066c021b6bce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94919.279082504741,
        "Y": 3745.5017059500715
      },
      {
        "Id": "457bd0d2f5cb48d6972f2ec76cd9e3ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95320.879082504733,
        "Y": 3712.5017059500715
      },
      {
        "Id": "6d0511d0ca734bc39e72472384581fb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95320.879082504733,
        "Y": 3904.3292059500709
      },
      {
        "Id": "03ec2f997a1a429497fbf5865344527a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.Reverse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87881.679082504736,
        "Y": 3021.4860809500715
      },
      {
        "Id": "a8840281360845d894292e02ba9fc88c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Offset",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87529.679082504736,
        "Y": 2932.9860809500715
      },
      {
        "Id": "602ca54d7ec64eb0bb8e12b5527a61e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87529.679082504736,
        "Y": 3123.4860809500715
      },
      {
        "Id": "27c6f4eb4aa945e48e06a1a31bb5af41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87208.879082504733,
        "Y": 3120.4860809500715
      },
      {
        "Id": "a9ee00c18d8c4ad0bf0da3cea0066fc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87208.879082504733,
        "Y": 2960.4860809500715
      },
      {
        "Id": "7f5f853aee4f48e19ae6c67f15823e76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 86912.879082504733,
        "Y": 3298.7273309500706
      },
      {
        "Id": "41380069bebc4b68a23c553416ac0c2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87529.679082504736,
        "Y": 2774.3135809500709
      },
      {
        "Id": "f7b9489a87954e109ce329ad0fc13461",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87881.679082504736,
        "Y": 2831.4860809500715
      },
      {
        "Id": "b34064c4b731422a939992a8cd549248",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88283.279082504741,
        "Y": 2892.4860809500715
      },
      {
        "Id": "2234df3b0aca48a9bc2ab6b93e94de8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88283.279082504741,
        "Y": 3118.4860809500715
      },
      {
        "Id": "cc31bda3873d42c990697b99fce95bdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88283.279082504741,
        "Y": 3695.4860809500715
      },
      {
        "Id": "947bb69c642d44d1a6788b02edfa0c2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88684.879082504733,
        "Y": 3207.4860809500715
      },
      {
        "Id": "17a1365a0bdd4d1392f76586e1a1c25c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88684.879082504733,
        "Y": 3397.4860809500715
      },
      {
        "Id": "467a3f3329fc48dab8ee645444dc7c6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 89056.079082504744,
        "Y": 3486.4860809500715
      },
      {
        "Id": "885aef59c479462fa91b5600372e41ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 89311.279082504741,
        "Y": 3486.4860809500715
      },
      {
        "Id": "52176e543d514062bbb29d247ff419db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 89620.079082504744,
        "Y": 3486.4860809500715
      },
      {
        "Id": "85892e2e2bb2426884ce28b6765dae12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 90584.879082504733,
        "Y": 3627.4860809500715
      },
      {
        "Id": "5eb94034304c455f81ce25b91b5c3fd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 90314.479082504738,
        "Y": 3724.3135809500718
      },
      {
        "Id": "dc8aaddc90124843b7332f62cb0c9cd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 90314.479082504738,
        "Y": 3564.4860809500715
      },
      {
        "Id": "c0f0a03761464708a681cb273df4d694",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 89959.279082504741,
        "Y": 3564.4860809500715
      },
      {
        "Id": "db79242e004845459317b609012a65dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93183.279082504741,
        "Y": 3198.9392059500715
      },
      {
        "Id": "0e9fbb6c3e82433085d42e4c4da6bb6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 92517.679082504736,
        "Y": 3119.9392059500715
      },
      {
        "Id": "ad38ef7e5d364773a8c7cb55e633e414",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 92875.279082504741,
        "Y": 3198.9392059500715
      },
      {
        "Id": "b535777d9fd24f76a04ad7e09d9eeed8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 92517.679082504736,
        "Y": 3311.7667059500718
      },
      {
        "Id": "ebcb8c28090444218496afb2c978a75e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95676.079082504744,
        "Y": 3232.2517059500715
      },
      {
        "Id": "2a8acc7d2c304f5da3b7cee92a71e13e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95320.879082504733,
        "Y": 3265.0792059500718
      },
      {
        "Id": "8f3a491202724fe0b197bc7dbd485e54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95971.279082504741,
        "Y": 3215.2517059500715
      },
      {
        "Id": "bc03a17c569943fdb42c5b252c1ba501",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94919.279082504741,
        "Y": 2842.0017059500715
      },
      {
        "Id": "4198c721d9e1454d8d242535df6172d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95320.879082504733,
        "Y": 3013.0017059500715
      },
      {
        "Id": "a85fa9d7db144e919bae82e7fade3e3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95676.079082504744,
        "Y": 3013.0017059500715
      },
      {
        "Id": "febfcb3327644de29e7be2e4c1695f17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95971.279082504741,
        "Y": 3013.0017059500715
      },
      {
        "Id": "7d6fe66d59cb41ab98bd59f26ed88833",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DistanceTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96294.479082504738,
        "Y": 2963.7517059500715
      },
      {
        "Id": "1278e0a678da49408aa5d7882256c267",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96626.479082504738,
        "Y": 3023.2517059500715
      },
      {
        "Id": "0ef4b6af89794f6ab95ae3367dd6bf01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94919.279082504741,
        "Y": 3068.0017059500715
      },
      {
        "Id": "ca7c3f07104c48fca7e4d21198654859",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96947.279082504741,
        "Y": 3068.2517059500715
      },
      {
        "Id": "e17e2036a37d4754aac19abd619810f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 97284.879082504747,
        "Y": 3036.2517059500715
      },
      {
        "Id": "01a9805ef15741b38b533a30ba524355",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 97686.479082504738,
        "Y": 3028.2517059500715
      },
      {
        "Id": "0d7c033936504ddc95aa8868a6e2c463",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96294.479082504738,
        "Y": 3154.2517059500715
      },
      {
        "Id": "80e4766ec1514303bde07ce8135de36a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96626.479082504738,
        "Y": 3183.2517059500715
      },
      {
        "Id": "f8fce789e8ca49c7b11df089422eb18e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 97284.879082504747,
        "Y": 3226.2517059500715
      },
      {
        "Id": "441db34fc44e41c8917e16b14fcc9b21",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96294.479082504738,
        "Y": 3314.2517059500715
      },
      {
        "Id": "f19dd066670a4a05900d046a563cc611",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96947.279082504741,
        "Y": 3228.2517059500715
      },
      {
        "Id": "4ef2b3ccc92d43fb8ad4d3fd16560ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96626.479082504738,
        "Y": 3374.0792059500718
      },
      {
        "Id": "ccae1c85898646219a64c800e196408f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 98009.679082504736,
        "Y": 3185.2517059500715
      },
      {
        "Id": "6222d924a527436bac8eee0c9905499b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 97686.479082504738,
        "Y": 3219.2517059500715
      },
      {
        "Id": "77a23132ada94b928a80c9c39f35c5ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95676.079082504744,
        "Y": 3791.5017059500715
      },
      {
        "Id": "dedf8c4e17df4a7982d184e94b1acb7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95971.279082504741,
        "Y": 3757.5017059500715
      },
      {
        "Id": "0442778b4d214085be87fe0c1a2fc4ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DistanceTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96294.479082504738,
        "Y": 3676.7517059500715
      },
      {
        "Id": "a980c55cb70d4d068ef9bdda4c231b8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96626.479082504738,
        "Y": 3693.2517059500715
      },
      {
        "Id": "6d9a1b5253cf43db8390ad4c8630d369",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96947.279082504741,
        "Y": 3678.2517059500715
      },
      {
        "Id": "c4a599049ae54460908601e5e536f42d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 97284.879082504747,
        "Y": 3644.2517059500715
      },
      {
        "Id": "e8c0b6a2ad1a430c921d27c5e88d6d9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 97686.479082504738,
        "Y": 3600.2517059500715
      },
      {
        "Id": "f054c07870eb4f3199f6ce5145ff4cb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 98009.679082504736,
        "Y": 3566.2517059500715
      },
      {
        "Id": "cf7bace5796b45e5938f9f8c83558604",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Offset",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87529.679082504736,
        "Y": 3505.9860809500715
      },
      {
        "Id": "5fe40067ee5640bd9f00a39c3fb5aa25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87208.879082504733,
        "Y": 3630.8135809500709
      },
      {
        "Id": "d7b4359072ff4217bf3f043172ab7723",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87529.679082504736,
        "Y": 3696.3135809500709
      },
      {
        "Id": "4f1d2a08e92246c6823f82ee0247428d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87881.679082504736,
        "Y": 3632.4860809500715
      },
      {
        "Id": "97ffabe6648c443e8ea7fd01ff01ff52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88283.279082504741,
        "Y": 3468.4860809500715
      },
      {
        "Id": "b9a4ea81c34f4ffa90d5d289688d0638",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 91871.279082504741,
        "Y": 3498.0017059500715
      },
      {
        "Id": "93baac87e9674f809029d5bcc6eebef0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94196.879082504733,
        "Y": 3412.0017059500715
      },
      {
        "Id": "e0eba5a094c146a7b9c490a05fe919de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 92194.479082504738,
        "Y": 3498.0017059500715
      },
      {
        "Id": "08589976cc694483beac93170b437b4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DistanceTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96294.479082504738,
        "Y": 3484.7517059500715
      },
      {
        "Id": "0aaf0dca7002423685a6a4c66e456eac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96626.479082504738,
        "Y": 3533.2517059500715
      },
      {
        "Id": "31fc3cec919e47c8b69eb8f79da1e1a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 96947.279082504741,
        "Y": 3486.2517059500715
      },
      {
        "Id": "f5055ee83a7f469f875d8e58b841375b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 97284.879082504747,
        "Y": 3452.2517059500715
      },
      {
        "Id": "6c3489f5385f49dbbef3159238151b23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 98009.679082504736,
        "Y": 2994.2517059500715
      },
      {
        "Id": "24691a31ca6c43b1a5cb3cd16004c2ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87208.879082504733,
        "Y": 3789.0017059500715
      },
      {
        "Id": "0b427c4084154b60aa92c1c993fa954f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 86912.879082504733,
        "Y": 3715.0017059500715
      },
      {
        "Id": "5e69123047c4426d9b0f64cd73faf9d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94196.879082504733,
        "Y": 3572.0017059500715
      },
      {
        "Id": "f19225adb98c44a5a70a67396a222f5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94598.479082504738,
        "Y": 3475.0017059500715
      },
      {
        "Id": "861a3691d74841c5a304763492f5a919",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94919.279082504741,
        "Y": 3294.0017059500715
      },
      {
        "Id": "7540294aa83f4a19893b01a164fd2e9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95320.879082504733,
        "Y": 3424.0017059500715
      },
      {
        "Id": "429e9680ac174070bbbbb8019908e4b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95676.079082504744,
        "Y": 3423.0017059500715
      },
      {
        "Id": "143c234c473b47a6ad34bf2f53ed3d8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 95971.279082504741,
        "Y": 3406.0017059500715
      },
      {
        "Id": "fa2886abe4cb45db868590a6a347207e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 97686.479082504738,
        "Y": 3409.2517059500715
      },
      {
        "Id": "147a944364d24e74a0ac8e85f8d4aa1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 98009.679082504736,
        "Y": 3375.2517059500715
      },
      {
        "Id": "53052c7fcf1f45e7bab17f6d4a85952a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88283.279082504741,
        "Y": 3278.2517059500715
      },
      {
        "Id": "a0d75a64a8cc463b8242695bb657e95f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87881.679082504736,
        "Y": 3181.2517059500715
      },
      {
        "Id": "bf9a286f50a74855905048d9a7322ee2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87208.879082504733,
        "Y": 3472.0792059500709
      },
      {
        "Id": "8f7ed5b67bb34b2fa4d47ed68f1aaa4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87529.679082504736,
        "Y": 3315.2517059500715
      },
      {
        "Id": "55a93269cc384f99b74c459668436371",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Offset",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87208.879082504733,
        "Y": 3280.2517059500715
      },
      {
        "Id": "1e7d44837db24d97a84216fb72f6d42d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 86658.479082504738,
        "Y": 3674.7429559500706
      },
      {
        "Id": "259c90953e02424a8ba3e66d9d4182d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.Reverse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87529.679082504736,
        "Y": 3855.0017059500715
      },
      {
        "Id": "5b6a54c731f541a4be5311ba76fcdd59",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 86912.879082504733,
        "Y": 3875.0017059500715
      },
      {
        "Id": "20e9ea35965241578021782a1cddd79b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88684.879082504733,
        "Y": 3587.4860809500715
      },
      {
        "Id": "82d411bc67e1411fa4f62f271c5caeef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 89056.079082504744,
        "Y": 3676.4860809500715
      },
      {
        "Id": "eb51d0e0772542a7acb215000567dcd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Polygon.ByPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 89311.279082504741,
        "Y": 3676.4860809500715
      },
      {
        "Id": "fb0373a4e7b5435ba472ac979da8510c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 89620.079082504744,
        "Y": 3676.4860809500715
      },
      {
        "Id": "a2a65ba0095345babfe787aa3545e432",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94919.279082504741,
        "Y": 3520.0017059500715
      },
      {
        "Id": "482f3b141f7b4c9082027f94e1d2ae9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 98380.879082504747,
        "Y": 3229.2517059500715
      },
      {
        "Id": "a13dd57b795840e6999815b7a68f1940",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 98636.079082504744,
        "Y": 3229.2517059500715
      },
      {
        "Id": "d93aa7914e524d848042a2423a47f7cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88684.879082504733,
        "Y": 3747.4860809500715
      },
      {
        "Id": "aa8b32fe515e4825803bc8d460f28d7c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88283.279082504741,
        "Y": 3855.7517059500715
      },
      {
        "Id": "4e4a54216edb49aca2a46e3eb004b361",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87881.679082504736,
        "Y": 3822.7517059500715
      },
      {
        "Id": "24c875befa6c45f4b5aa73da44ed50df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87208.879082504733,
        "Y": 4170.5792059500709
      },
      {
        "Id": "ae753eaea1f24e7c8c516abaf1d3f585",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87529.679082504736,
        "Y": 4014.7517059500715
      },
      {
        "Id": "1f06e62cbe2748829eef17a9a4cbf889",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 86912.879082504733,
        "Y": 4035.5792059500709
      },
      {
        "Id": "224b66de689848e098e4c8c3c180946a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Offset",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87208.879082504733,
        "Y": 3979.7517059500715
      },
      {
        "Id": "439bcf88200843b18320ab6bc75bb6a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88684.879082504733,
        "Y": 4068.4860809500715
      },
      {
        "Id": "cf39580d9fd84ab2a18b4baa32d389cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 88684.879082504733,
        "Y": 3908.4860809500715
      },
      {
        "Id": "542ebbde82324f49ae7be2dc1f412243",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 94598.479082504738,
        "Y": 3777.5017059500715
      },
      {
        "Id": "5f65f15b576f42568f7b2f1a0d9a6917",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87881.679082504736,
        "Y": 3407.2517059500715
      },
      {
        "Id": "8db7d55d97784deca86bf8c06d4b4d87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Project",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 87881.679082504736,
        "Y": 4048.7517059500715
      },
      {
        "Id": "d4079a172c814579b51531da37f0a959",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Subwegen_Breedte",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 84714.329816362471,
        "Y": -1877.283106510391
      },
      {
        "Id": "d40866a935fd4077b2bf60b350f0e53a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93183.279082504741,
        "Y": 4151.0017059500715
      },
      {
        "Id": "01b1e213fbbb440e8c4077b703fbeb00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93538.479082504738,
        "Y": 4165.0017059500715
      },
      {
        "Id": "7c5724d4b3e345618c36a39b139990ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93183.279082504741,
        "Y": 4310.8292059500718
      },
      {
        "Id": "960f40fa981f45759de5b2d97db68560",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 93859.279082504741,
        "Y": 4069.0017059500715
      },
      {
        "Id": "75be2cc3542444a39f59298e90a8e40a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 98924.879082504747,
        "Y": 3308.2517059500715
      },
      {
        "Id": "20f7dfd365454e959c1738cf3118d7c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 98636.079082504744,
        "Y": 3421.0792059500709
      },
      {
        "Id": "d367b6ac13d84147a8fe83de4effc956",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 99543.279082504741,
        "Y": 3296.2517059500715
      },
      {
        "Id": "02631555e64b49c09a80fc91460f09ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 99220.079082504744,
        "Y": 3486.2517059500715
      },
      {
        "Id": "89f0cc5e1f8d4814a2f785bda45815a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Reverse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 99543.279082504741,
        "Y": 3486.2517059500715
      },
      {
        "Id": "6906b9a9866f459db02c8075dd99e5e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 98924.879082504747,
        "Y": 3499.9067059500712
      },
      {
        "Id": "8251191e7ec540e89113cb288666d301",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 99866.479082504738,
        "Y": 3374.2517059500715
      },
      {
        "Id": "fd6f6a50c9e24c49ada8fb9f154b1941",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 100121.67908250475,
        "Y": 3374.2517059500715
      },
      {
        "Id": "27b10bddc5fb44bd8485a2e4897cd11b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 100400.87908250475,
        "Y": 3539.2517059500715
      },
      {
        "Id": "724c3bf00c08480ba48004605197842b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 100400.87908250475,
        "Y": 3209.2517059500715
      },
      {
        "Id": "d64f2702732746fa895f8f005b9385a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 101020.07908250474,
        "Y": 3316.2517059500706
      },
      {
        "Id": "fc622c05421e4251a947533d42bc7844",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 101275.27908250474,
        "Y": 3316.2517059500706
      },
      {
        "Id": "2562fe7db5814a23960e1f63466df2d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Polygon.ByPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 101554.47908250475,
        "Y": 3316.2517059500706
      },
      {
        "Id": "6c99642c93eb4118bdf5cc43a91fae9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 100696.87908250475,
        "Y": 3082.2517059500706
      },
      {
        "Id": "b4dd4de8563645a7a26f89789560ebe3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 100696.87908250475,
        "Y": 3462.2517059500706
      },
      {
        "Id": "a0d368865e19445d9166b2b7b59af013",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 100696.87908250475,
        "Y": 3652.2517059500715
      },
      {
        "Id": "5b3ad14cb84e4bb58b1e998d48eea1ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 100696.87908250475,
        "Y": 3272.2517059500706
      },
      {
        "Id": "197a20533c7e4a789ab664e69b0e05ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 100400.87908250475,
        "Y": 3370.7342059500716
      },
      {
        "Id": "f44328dcbef34559b10b437e126096fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 101863.27908250474,
        "Y": 3316.2517059500706
      },
      {
        "Id": "f5cfe10e75ff435aa3a743a110858ae6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByUnion",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 102202.47908250475,
        "Y": 3314.400082649734
      },
      {
        "Id": "07d5c6a37b894dd2867c45b7bd03d869",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Difference",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 102520.87908250475,
        "Y": 3282.2517059500706
      },
      {
        "Id": "3187b9ceaed34b1d9d86a49b61f54537",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Explode",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 102832.87908250475,
        "Y": 3276.6968360490605
      },
      {
        "Id": "04575fab275346f1bf91d53b9181419d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 103205.03614774854,
        "Y": 254.79082776621681
      },
      {
        "Id": "cd5fbf551dcf4b3d865eb8103ec6e191",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "CellDepth",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 136744.73985383104,
        "Y": -1996.9362508130339
      },
      {
        "Id": "323f5745a1bd4a1790a535f23291af5f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "CellWidth",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 136746.07669747862,
        "Y": -1811.4757032841078
      },
      {
        "Id": "69b3ade986924478ba3f3d6cd2bdd178",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "OffsetCell_X",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 136749.80448801786,
        "Y": -1656.6590022473188
      },
      {
        "Id": "e954dc79a0844581a77d6ec912931448",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "OffsetCell_Y",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 136749.79662656749,
        "Y": -1509.8820228712261
      },
      {
        "Id": "d08a8a18158946ae83c4811328486feb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 104316.14276416732,
        "Y": 3256.1472023219076
      },
      {
        "Id": "885f0252847248fe9dc28a9c2a5cdb94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 129782.54276416733,
        "Y": 3417.3597023219081
      },
      {
        "Id": "e526c21a1f7f4769b036cf648f12f7c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 138838.54276416733,
        "Y": 2944.7722023219085
      },
      {
        "Id": "4397d0aedde84d659890cde3aaa59223",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 138838.54276416733,
        "Y": 3102.7722023219085
      },
      {
        "Id": "b6478fd55b1d426bb2db3ec06c6b1c64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Integer Slider",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 114123.34276416732,
        "Y": 3738.7353273219078
      },
      {
        "Id": "b775898512d04141ac07c324407c4aba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 108596.94276416732,
        "Y": 4005.7379835719094
      },
      {
        "Id": "a452ef3e8ac3462e9357eda7b3b6e721",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 107572.94276416732,
        "Y": 4050.8579835719083
      },
      {
        "Id": "3b4a575c182a49c5a13511016a0cbbca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 107861.74276416733,
        "Y": 3942.0304835719071
      },
      {
        "Id": "1c560f07eca848bca7ebc5ec05ca1c8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.ByCoordinates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 108272.14276416732,
        "Y": 3957.2379835719075
      },
      {
        "Id": "48a7a3a85b6f415b82eb09b7bb1820b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 108896.94276416732,
        "Y": 3908.7379835719075
      },
      {
        "Id": "137d968023f84b5cb6a00ddf0fbac298",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 109192.14276416732,
        "Y": 3908.7379835719075
      },
      {
        "Id": "4a160cdb91484e558782f278687318bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 109452.94276416732,
        "Y": 4163.5654835719088
      },
      {
        "Id": "5032a6416e764267985c1a19c251d03d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 109748.14276416732,
        "Y": 4242.5654835719088
      },
      {
        "Id": "d8e992d1c1dc476bb43566c2fe918285",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 105184.14276416732,
        "Y": 3689.3111085719083
      },
      {
        "Id": "77ad84242b2f42a6a63930a4f801d552",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 105480.14276416732,
        "Y": 3689.3111085719083
      },
      {
        "Id": "49048e9657f046578663f04606132a88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 110591.34276416732,
        "Y": 4095.7379835719094
      },
      {
        "Id": "17b775cbbac04accb7494ed490ed7f0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 110591.34276416732,
        "Y": 3905.7379835719075
      },
      {
        "Id": "fc4060fda6754cdba362b4bbf3370084",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 104790.54276416732,
        "Y": 3880.8111085719083
      },
      {
        "Id": "f9efcff1b279496d858d2f30dbf2ab32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 105768.94276416732,
        "Y": 3765.3111085719083
      },
      {
        "Id": "157bc6a378c246bdbda60fbd64918188",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 105480.14276416732,
        "Y": 3880.8111085719083
      },
      {
        "Id": "94af06dc614d495f8ae711a2ad5522fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 106124.14276416732,
        "Y": 3844.3111085719083
      },
      {
        "Id": "2e7d90a3ad204c1e82fb15080248508b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 105768.94276416732,
        "Y": 3957.1386085719078
      },
      {
        "Id": "be6c4319c10a494da7cdc8faa3c30017",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 106419.34276416732,
        "Y": 3810.3111085719083
      },
      {
        "Id": "23af4c8cf21847bd9239f13e657ce345",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 106742.54276416732,
        "Y": 3796.8842335719082
      },
      {
        "Id": "9e2ae7a81ef7425c972b375cefa8ef4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 106742.54276416732,
        "Y": 3956.8842335719073
      },
      {
        "Id": "81652ea1138e43668306aff08a152ed6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 107038.54276416732,
        "Y": 3859.8842335719073
      },
      {
        "Id": "08ae0ee0d55742439ac0f0ba41ec0eaa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 107293.74276416733,
        "Y": 3859.8842335719073
      },
      {
        "Id": "121abbf62f3c40dcad8cdbc35188389a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 107572.94276416732,
        "Y": 3859.8842335719073
      },
      {
        "Id": "3185581453644e9b97b29e31e6127cee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 111544.94276416732,
        "Y": 3927.7379835719075
      },
      {
        "Id": "df072889a9c34fa08e08349b9b800eaa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 112715.34276416732,
        "Y": 4084.7379835719094
      },
      {
        "Id": "448620e1cd36447abd8830700d11e568",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 110914.54276416732,
        "Y": 3983.7379835719094
      },
      {
        "Id": "51e20449983c4cc1af992c898ac70cb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 111272.14276416732,
        "Y": 3983.7379835719094
      },
      {
        "Id": "9701af81234f41e78f9688a03e55d9f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 111544.94276416732,
        "Y": 3737.7379835719084
      },
      {
        "Id": "4c06aea8a2ea428b9f3f3c9d5bae467e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 111272.14276416732,
        "Y": 3663.7379835719084
      },
      {
        "Id": "81cc74636aa24f7598c62ac871a4d845",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 111272.14276416732,
        "Y": 3823.7379835719084
      },
      {
        "Id": "4ef89347f2fb41ff8ac3297208bcbe1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 111892.14276416732,
        "Y": 3815.7379835719084
      },
      {
        "Id": "5f3f5b1885884e3da200c05a768c9d92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 112147.34276416732,
        "Y": 3815.7379835719084
      },
      {
        "Id": "bf71282200534af38fa971e77525acfe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 112426.54276416732,
        "Y": 3815.7379835719084
      },
      {
        "Id": "fd0dd5204e3543eb87ad693409f9645b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 112715.34276416732,
        "Y": 3703.7379835719084
      },
      {
        "Id": "22d041637ceb4cf58b1570855cbd7959",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 113038.54276416732,
        "Y": 4031.7379835719094
      },
      {
        "Id": "4be628bb254b4658b7fa51f147590a3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 112715.34276416732,
        "Y": 3894.7379835719075
      },
      {
        "Id": "6b5203d113734837990c0a81df6ba8db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 112426.54276416732,
        "Y": 4007.5654835719088
      },
      {
        "Id": "0dadaf8225884817b6d02833bb0502e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 113038.54276416732,
        "Y": 3711.7379835719084
      },
      {
        "Id": "5e229627bbb3477ca35c68db92277f44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 114566.54276416732,
        "Y": 3368.7300148219074
      },
      {
        "Id": "6c3b016c7e3a491486b0155fba347d44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 114825.74276416733,
        "Y": 3368.7300148219074
      },
      {
        "Id": "0fd37e4c4bf44b0582747c02dc85e800",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.AngleWithVector",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 114123.34276416732,
        "Y": 3917.7379835719075
      },
      {
        "Id": "1b2aa0bda9cf4818a256191b168030f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 113409.74276416733,
        "Y": 3711.7379835719084
      },
      {
        "Id": "ef8c7726bf994681baec7dbabaea7dd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 113409.74276416733,
        "Y": 3871.7379835719075
      },
      {
        "Id": "33f0d1212c424f609c27151f382b157e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 113802.54276416732,
        "Y": 3839.7379835719075
      },
      {
        "Id": "5742283829ed45d5ab1e9e546fe6eb19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 113409.74276416733,
        "Y": 4031.7379835719094
      },
      {
        "Id": "74e5aed596e24101969bed0980605baa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 113802.54276416732,
        "Y": 4029.7379835719094
      },
      {
        "Id": "18b5154a5e1a4b78b604d7708fcd96a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 113409.74276416733,
        "Y": 4191.7379835719094
      },
      {
        "Id": "06a51a5bc38e4b91989e03dc1fab24bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "<=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 114566.54276416732,
        "Y": 3704.7353273219078
      },
      {
        "Id": "037c036c37bb47f481b35ca437f6630b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 114825.74276416733,
        "Y": 3783.7353273219078
      },
      {
        "Id": "f160aa02d9f844a398dcdcf61dab1101",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 114566.54276416732,
        "Y": 3896.5628273219081
      },
      {
        "Id": "791bfe7e7c0c413b81cf26d6e46f6693",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 115120.94276416732,
        "Y": 3368.7300148219074
      },
      {
        "Id": "31342fa41ccb4499bdf9eebd1bfa8588",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 115887.34276416732,
        "Y": 3375.7300148219074
      },
      {
        "Id": "49452e50a2894bd798e3746179b6c924",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119389.74276416733,
        "Y": 4130.7406398219082
      },
      {
        "Id": "8632d35b07ac492c9502d0185b798e3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119840.14276416732,
        "Y": 4130.7406398219082
      },
      {
        "Id": "c856f2b504424d9ea66f70570e68adb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 115444.14276416732,
        "Y": 3649.2300148219074
      },
      {
        "Id": "a37df4574b794186a2e94709c4cc69d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 115120.94276416732,
        "Y": 3560.2125148219056
      },
      {
        "Id": "2429b6d650904f9ca95c8818cdb16adc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 115887.34276416732,
        "Y": 3727.2300148219074
      },
      {
        "Id": "1616f5fc2e214160b0acdeb49d675444",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Integer Slider",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 115444.14276416732,
        "Y": 3839.2300148219074
      },
      {
        "Id": "48cf1b91fd694c5eb9bfb62331b2676d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 115887.34276416732,
        "Y": 3535.7300148219074
      },
      {
        "Id": "e715b6d22eb84506bd67e57b7a154e7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.ClosestPointTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 116280.94276416732,
        "Y": 3591.7300148219074
      },
      {
        "Id": "31d55cad0b4348048f7880baf9c1a8a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 116641.74276416733,
        "Y": 3630.7300148219074
      },
      {
        "Id": "5f9d4e3403d14990b9ef645b1b3c8dff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117309.74276416733,
        "Y": 3518.7300148219074
      },
      {
        "Id": "1bd2992cc93f4f97a50e0be68e358e0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117012.94276416732,
        "Y": 3615.7300148219074
      },
      {
        "Id": "7a94552aeec34e92a72171ef552e1b3b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 116280.94276416732,
        "Y": 3401.7300148219074
      },
      {
        "Id": "e04f158e703d445a9e2e1b09f093066f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 116641.74276416733,
        "Y": 3440.7300148219074
      },
      {
        "Id": "5782de906434437e999054a12cf8a041",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117012.94276416732,
        "Y": 3455.7300148219074
      },
      {
        "Id": "47b40f2b76f242aab013b5f33123af6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117568.94276416732,
        "Y": 3643.5715773219072
      },
      {
        "Id": "bad3a63bf7f44e738c2675510951021d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117309.74276416733,
        "Y": 3709.3990773219075
      },
      {
        "Id": "8bad04810b764a3d849d07a211c62a99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Cos",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120628.94276416732,
        "Y": 3975.6665773219083
      },
      {
        "Id": "d7c491b0812c4d51a9fb342b45b2b6e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120290.54276416733,
        "Y": 4153.6665773219083
      },
      {
        "Id": "c848bc008f6a4bbfb3c2717a7016c9e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Integer Slider",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 122779.32906593046,
        "Y": -1638.1861905787318
      },
      {
        "Id": "3b278889fb9b43a6a64a4540d6b429f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "/",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120967.34276416732,
        "Y": 3808.6665773219083
      },
      {
        "Id": "578c6f3b786142bc9ac9b579a084e3ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117309.74276416733,
        "Y": 3350.2265773219069
      },
      {
        "Id": "254ba86979da4177960196f68d18d51c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117568.94276416732,
        "Y": 3453.5715773219072
      },
      {
        "Id": "424381bcf6b541e1a9b6f3ea78fea8fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 121241.74276416733,
        "Y": 3668.6665773219083
      },
      {
        "Id": "3e0aab527a0c4945974e4c063b4e0c50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117568.94276416732,
        "Y": 3263.5715773219072
      },
      {
        "Id": "5e6d923c195d41758b5d7b4b62a444db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.ClosestPointTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 121635.34276416732,
        "Y": 3572.6665773219083
      },
      {
        "Id": "d0cc93954d5d459d882a3a59c988e74b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 121996.14276416732,
        "Y": 3572.6665773219083
      },
      {
        "Id": "4541eb6aea8a4a9ab9e11b844b542142",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 122367.34276416732,
        "Y": 3572.6665773219083
      },
      {
        "Id": "cacfedd21496409c83b7eab66033244a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117892.14276416732,
        "Y": 3315.5715773219072
      },
      {
        "Id": "1e6af6500b674c6a9c92028a4f1ccadc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 117892.14276416732,
        "Y": 3505.5715773219072
      },
      {
        "Id": "6ddb398f7b5b4197b3cca7f6a71874c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 135675.34276416735,
        "Y": 2962.4447023219091
      },
      {
        "Id": "ee67bf91c0e043fa95f316c3d4e6d1c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 135970.54276416733,
        "Y": 2962.4447023219091
      },
      {
        "Id": "f9421a42e4644ec592086579d82c20d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 118512.14276416732,
        "Y": 3551.8215773219072
      },
      {
        "Id": "01348905f3044fa2b765fbd8f239b7ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 118215.34276416732,
        "Y": 3648.8215773219072
      },
      {
        "Id": "9c40d51abf1542ec88d535c81138ad83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 118215.34276416732,
        "Y": 3488.8215773219072
      },
      {
        "Id": "bb88b544e8d74570bc8a0c87925e51f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 118771.34276416732,
        "Y": 3630.8215773219072
      },
      {
        "Id": "c81312fa3d8740d5a89a1a1d4a444270",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 118512.14276416732,
        "Y": 3743.6490773219066
      },
      {
        "Id": "ac31940711cb4a7299689d8affdd24de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119066.54276416733,
        "Y": 3773.3215773219072
      },
      {
        "Id": "c705573db3f84da9a1590efd972bf829",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120290.54276416733,
        "Y": 3615.3215773219072
      },
      {
        "Id": "1b1182c4b0f74a36a408f6e4f2323103",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119389.74276416733,
        "Y": 3773.3215773219072
      },
      {
        "Id": "f0411b44c4e140f89d236dbfb3b40847",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120628.94276416732,
        "Y": 3749.4940773219078
      },
      {
        "Id": "5892ebbcca1f407c99aed5fd268a95d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119389.74276416733,
        "Y": 3963.3215773219072
      },
      {
        "Id": "011700611b7a48b2ba313276fbaefdbd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120967.34276416732,
        "Y": 3649.4940773219078
      },
      {
        "Id": "4db2c43fa740428c9fd4a712146cab29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119840.14276416732,
        "Y": 3963.4940773219078
      },
      {
        "Id": "e09e36d58a5746aaa2647180b9ba948c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120290.54276416733,
        "Y": 3963.4940773219078
      },
      {
        "Id": "21974e8e8aa3483fa4099f3f17d1157d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119840.14276416732,
        "Y": 3773.4940773219078
      },
      {
        "Id": "3c819baa78944a5b909767892717543c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120290.54276416733,
        "Y": 3773.4940773219078
      },
      {
        "Id": "08de5bb1c1924f33a5d10d5700a4a305",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 109748.14276416732,
        "Y": 4050.7379835719094
      },
      {
        "Id": "30a1c87e879d44ecb52861b47af4fbca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 109192.14276416732,
        "Y": 4068.7379835719094
      },
      {
        "Id": "53621483a3814026bc94073d88ca01cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 109452.94276416732,
        "Y": 3971.7379835719094
      },
      {
        "Id": "3059075fe65f4a2186f77a6e2135c0ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 110007.34276416732,
        "Y": 4129.7379835719094
      },
      {
        "Id": "7bdbef9503a34abb86e11432150ecd8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 110302.54276416732,
        "Y": 4129.7379835719094
      },
      {
        "Id": "0b3568c642d6472994db46fdbfb23f5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130620.14276416734,
        "Y": 3302.7159523219079
      },
      {
        "Id": "1e88830454ef4137a1da24a0efe62b1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130916.14276416734,
        "Y": 3389.8884523219085
      },
      {
        "Id": "1973a41c6bf5422c880d9a6e9c91fd50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131236.94276416732,
        "Y": 4108.1597023219074
      },
      {
        "Id": "e7937ad909e04ef6b55e0188b406dcda",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Sin",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131934.54276416733,
        "Y": 4003.332202321908
      },
      {
        "Id": "7758dece59dc42bc95654c1215ab9d84",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "/",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 132305.74276416734,
        "Y": 3917.332202321908
      },
      {
        "Id": "f61be3adf32a45789c924044af161607",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131587.34276416735,
        "Y": 3276.7934523219074
      },
      {
        "Id": "7b42bdee556844329ce6b403a704b593",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 132305.74276416734,
        "Y": 3346.3884523219085
      },
      {
        "Id": "cc693739f4704c76b7648ee1de8a1e5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131934.54276416733,
        "Y": 3346.3884523219085
      },
      {
        "Id": "1967320dcbec412497176f161d7b8d5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 132699.34276416735,
        "Y": 3738.332202321908
      },
      {
        "Id": "5233f6e4779c4e45868b1858454696e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 132305.74276416734,
        "Y": 3155.8884523219085
      },
      {
        "Id": "fb1bfb5de68341de90049127e2e63e9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.ClosestPointTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 133092.94276416732,
        "Y": 3695.332202321908
      },
      {
        "Id": "d5c96a8cc5d5445c826b2b4ed344edf3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 133464.14276416734,
        "Y": 3695.332202321908
      },
      {
        "Id": "30dc7db664a249348b45045004b68c8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 132699.34276416735,
        "Y": 3355.8884523219085
      },
      {
        "Id": "badcf8c4767246f7a6e4cecaf9cd27e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131587.34276416735,
        "Y": 4045.1597023219074
      },
      {
        "Id": "13ef8246389d4dbc95bdb03c2d20665c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 135970.54276416733,
        "Y": 3122.4447023219091
      },
      {
        "Id": "076817a1bb8a4b7caf286e23f3c3aa58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 136293.74276416734,
        "Y": 3183.4447023219091
      },
      {
        "Id": "59cf8978ba794f83973efc5277068f56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 136670.54276416733,
        "Y": 3173.4447023219091
      },
      {
        "Id": "775877a83e91448eb0cfdd2b6f8c45a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119389.74276416733,
        "Y": 3294.3215773219072
      },
      {
        "Id": "0a33bbf0c842449a8ab712140f175af2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119840.14276416732,
        "Y": 3294.3215773219072
      },
      {
        "Id": "69f24b8443bc4b829974db3118e7d436",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120290.54276416733,
        "Y": 3294.4940773219078
      },
      {
        "Id": "0879e1dc6a6c4ce4aa7ac31271b300de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120628.94276416732,
        "Y": 3210.3215773219072
      },
      {
        "Id": "f5a8eb9eb4eb44d28a814278e58c0c74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120967.34276416732,
        "Y": 3423.4940773219078
      },
      {
        "Id": "4f6ac9992268490485ee2089ad51362c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 119840.14276416732,
        "Y": 3454.3215773219072
      },
      {
        "Id": "46900992ddb645149a9e5699114bf07f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120290.54276416733,
        "Y": 3454.4940773219078
      },
      {
        "Id": "2d5e62cee15a4c939a78e4c49d68b521",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120628.94276416732,
        "Y": 3559.4940773219078
      },
      {
        "Id": "4b2c681fd4a04afdacab33019df9b32f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 120628.94276416732,
        "Y": 3369.4940773219078
      },
      {
        "Id": "08ecb500de924645a2afc324d67b24c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 121241.74276416733,
        "Y": 3510.4940773219078
      },
      {
        "Id": "6b3f17b1376b425e9cd3aadcaa728337",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 122664.14276416732,
        "Y": 3572.6665773219083
      },
      {
        "Id": "5df3b39993114bcbac6796add2f70297",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 123237.74276416733,
        "Y": 3377.4884523219089
      },
      {
        "Id": "8ca03d337e854f1db8820afd1a0478b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 122978.54276416733,
        "Y": 3490.3159523219083
      },
      {
        "Id": "238d2fb3401d4a5f87efa06096c4aa5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 123532.94276416732,
        "Y": 3693.5322023219087
      },
      {
        "Id": "42948a45640e45d381e4a9b64883ea72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 123532.94276416732,
        "Y": 3884.2822023219087
      },
      {
        "Id": "6f95b7214e6a401d9481e2ea775ecb12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 123904.14276416734,
        "Y": 3767.7822023219087
      },
      {
        "Id": "f10dac5ea96b4d45a8cdd241a899f48d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 124259.34276416733,
        "Y": 3846.7822023219087
      },
      {
        "Id": "13740e79c35e492698221dead7b60a6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 123904.14276416734,
        "Y": 3959.6097023219081
      },
      {
        "Id": "47cd990d3ee14307be5e759c75ff66d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 124554.54276416733,
        "Y": 3846.7822023219087
      },
      {
        "Id": "e686e9378e8542f4ba01eec8bee44ae4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 124843.34276416733,
        "Y": 3812.7822023219087
      },
      {
        "Id": "56b7a6d9cf8c4dacaa4af0062e630763",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Explode",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 125166.54276416733,
        "Y": 3812.7822023219087
      },
      {
        "Id": "3f05f845922f405b9f8476da4b67f118",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 125513.74276416733,
        "Y": 3773.2822023219087
      },
      {
        "Id": "d924eb44dda5472dbc774ea9981b2779",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 125868.94276416732,
        "Y": 3852.2822023219087
      },
      {
        "Id": "8a41bd19e885450f8fe6f2bbd1741247",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 125513.74276416733,
        "Y": 3965.1097023219081
      },
      {
        "Id": "1b3d2489f7594442ab7c95a8d367cdc5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 126164.14276416734,
        "Y": 3818.2822023219087
      },
      {
        "Id": "2b1e581c9abd4d1facc1911f13e9cebc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 126776.14276416734,
        "Y": 3795.7822023219087
      },
      {
        "Id": "8031196abe6c4d35985ae064a0903e2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 126776.14276416734,
        "Y": 3987.6097023219081
      },
      {
        "Id": "1dbcc9e304104272a31db1fad9c51c4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 127131.34276416733,
        "Y": 3874.7822023219087
      },
      {
        "Id": "ac9f317490d6421fb61269c5a8a99f39",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 127426.54276416733,
        "Y": 3840.7822023219087
      },
      {
        "Id": "82c65a3f8593473589fe1e1c12ac5cfa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 127784.14276416734,
        "Y": 3840.7822023219087
      },
      {
        "Id": "35374d772925451a9197ee9bad2652ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 126487.34276416733,
        "Y": 3829.7822023219087
      },
      {
        "Id": "183cc3ca852f4a019106daf48665f379",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 128897.74276416734,
        "Y": 3806.7822023219087
      },
      {
        "Id": "d3b9e9010b454685a096544e616d1a7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 128618.54276416733,
        "Y": 3806.7822023219087
      },
      {
        "Id": "418af46706cb413bbcf59c96aca115ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 128363.34276416732,
        "Y": 3806.7822023219087
      },
      {
        "Id": "95e084a03a2e41738e6c17a47dc55dad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Reverse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 128072.94276416732,
        "Y": 3840.7822023219087
      },
      {
        "Id": "cecad4710b3741699bac73b51d0baf10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Extend",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 129474.54276416733,
        "Y": 3970.0322023219087
      },
      {
        "Id": "5ca129b11932407d9d520acf4f6887c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 129474.54276416733,
        "Y": 3810.2822023219087
      },
      {
        "Id": "80b1e517aa2242ecb789f6783f9e54c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 129186.54276416733,
        "Y": 3999.3597023219081
      },
      {
        "Id": "807bb77c26bf46e2a2edbd450f8bc416",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130264.94276416732,
        "Y": 4100.5322023219087
      },
      {
        "Id": "49500169a04c47e2898a0cb057f3d749",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130264.94276416732,
        "Y": 3779.5322023219087
      },
      {
        "Id": "b8cb2f4bc5d5440dbac49af9931a8439",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 129782.54276416733,
        "Y": 3792.3597023219081
      },
      {
        "Id": "ba39bcda75854b38bf10911ce00a10ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131587.34276416735,
        "Y": 3504.5322023219087
      },
      {
        "Id": "c8da0cb7a585467f9f1d4e85d4c43de0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 132305.74276416734,
        "Y": 3536.5322023219087
      },
      {
        "Id": "4b11cefb164144c5b89e0d6cdf331c3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 136293.74276416734,
        "Y": 2993.4447023219091
      },
      {
        "Id": "5e9a7004c98248a6a408b9aaca90560e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 136670.54276416733,
        "Y": 3013.4447023219091
      },
      {
        "Id": "0be00d6612874a8391ca887782c53a1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 137225.74276416734,
        "Y": 3124.4447023219091
      },
      {
        "Id": "2735a7d893f346bdb0de9b5795bad0da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 136966.54276416733,
        "Y": 3124.4447023219091
      },
      {
        "Id": "7d820e19604d4742b7b9fbd5058be449",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 137560.14276416734,
        "Y": 3141.4447023219091
      },
      {
        "Id": "84d8ea3b0b634b42bb94396a37ae663c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "<=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 122978.54276416733,
        "Y": 3298.4884523219089
      },
      {
        "Id": "9f3f8a3195624d3c8b029dfb76a2cdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 129186.54276416733,
        "Y": 3806.7822023219087
      },
      {
        "Id": "3861e6172a1c4dae8da93d18ef42a016",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Extend",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 129782.54276416733,
        "Y": 3961.0322023219087
      },
      {
        "Id": "2058d3a6dfae4b53896980a7b7edb132",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130264.94276416732,
        "Y": 3461.5322023219087
      },
      {
        "Id": "f1555ebcf06a4fd49bb211ca81fca2f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 129782.54276416733,
        "Y": 3575.5322023219087
      },
      {
        "Id": "eec12cff67d141729417efc518846884",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130620.14276416734,
        "Y": 3461.5322023219087
      },
      {
        "Id": "62d12cff1de14523bea06f5ed4b8ffec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130620.14276416734,
        "Y": 3621.3597023219081
      },
      {
        "Id": "4cea2df110d44c3a9ca3e63eee2f023e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130916.14276416734,
        "Y": 3601.5322023219087
      },
      {
        "Id": "244813b8a61a47d8b5a7ab94fe20fbf3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 135320.14276416734,
        "Y": 3165.6947023219082
      },
      {
        "Id": "f58a3ebc06cf449a8c81b867d3c9f87c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 133835.34276416735,
        "Y": 3319.8197023219082
      },
      {
        "Id": "c614046f447f4d08af89baca6deca5c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 134090.54276416733,
        "Y": 3319.8197023219082
      },
      {
        "Id": "e15e998e86044084bb7dfdee159365f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 135675.34276416735,
        "Y": 3244.6947023219082
      },
      {
        "Id": "e096d4ac472543f4ac626c22b47d5a98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 135320.14276416734,
        "Y": 3357.5222023219085
      },
      {
        "Id": "591550b9ae774830b609f0c3a877916e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 135970.54276416733,
        "Y": 3312.9447023219091
      },
      {
        "Id": "3007125f2aae40c6999e8ae0b1ace800",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Intersection.GeometrySplit",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 136293.74276416734,
        "Y": 3344.9447023219091
      },
      {
        "Id": "8bfc3e202d0f453fac36cd08fa1790e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 135970.54276416733,
        "Y": 3502.9447023219091
      },
      {
        "Id": "dfd2c3abeecd4b7d998cb10a1474a1c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 136670.54276416733,
        "Y": 3334.9447023219091
      },
      {
        "Id": "8a4e88a04f9d479c912e02342c870514",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 136966.54276416733,
        "Y": 3349.9447023219091
      },
      {
        "Id": "7d5645e07e874cbe87b0d55d225504ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 136670.54276416733,
        "Y": 3494.7722023219085
      },
      {
        "Id": "92c80c20eb304e409408869d4f33fb01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 137225.74276416734,
        "Y": 3315.9447023219091
      },
      {
        "Id": "853a007703aa4ed39374ae45dbb6f424",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 140996.94276416732,
        "Y": 3142.4447023219082
      },
      {
        "Id": "88aa44d6beec4df790d2955a0a060e7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131934.54276416733,
        "Y": 3622.5322023219087
      },
      {
        "Id": "9b6774f22ed74a5c88df0abff79b8f8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130620.14276416734,
        "Y": 3779.5322023219087
      },
      {
        "Id": "82aaa32fad04438e9cad6c4de962f8cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130620.14276416734,
        "Y": 3940.5322023219087
      },
      {
        "Id": "be88c60424b04d70aeac7f4079be34dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130620.14276416734,
        "Y": 4260.5322023219087
      },
      {
        "Id": "0f48ef5458084321b63c9578787371e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130620.14276416734,
        "Y": 4100.5322023219087
      },
      {
        "Id": "bed69c1d71b94691adf3a4e784864516",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130916.14276416734,
        "Y": 3839.5322023219087
      },
      {
        "Id": "83adff9bf1d7441189f79c7fa3e41521",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 130916.14276416734,
        "Y": 4029.5322023219087
      },
      {
        "Id": "b386933b5b814c46b37027cb34011a46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.AngleWithVector",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131236.94276416732,
        "Y": 3917.5322023219087
      },
      {
        "Id": "9c3c7c4f1508490ca942623051d2646b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Sin",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131587.34276416735,
        "Y": 3884.5322023219087
      },
      {
        "Id": "0f862df1e9574653b16db6e9b378d681",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "/",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131934.54276416733,
        "Y": 3812.5322023219087
      },
      {
        "Id": "c0754a02a8f046d88317eb24e6eeded9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 132305.74276416734,
        "Y": 3726.5322023219087
      },
      {
        "Id": "9c62c4fa5e994be2b71999a41d4dbaa1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131236.94276416732,
        "Y": 3567.5322023219087
      },
      {
        "Id": "e8f74673179348b694c7e30aae01730d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131587.34276416735,
        "Y": 3694.5322023219087
      },
      {
        "Id": "c24192178ff24fc99055cfbf46aefa97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 131236.94276416732,
        "Y": 3759.3597023219081
      },
      {
        "Id": "da2f0bd77e364bbd91180455cf2bc7cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 134379.34276416735,
        "Y": 3305.3197023219082
      },
      {
        "Id": "45f0dac4c60945bba4ca690057535a21",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 134667.34276416735,
        "Y": 3368.3197023219082
      },
      {
        "Id": "47bd4bacbbaf44c19c5d7b2f11191290",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 134379.34276416735,
        "Y": 3465.1472023219085
      },
      {
        "Id": "3e63e641fa714e5c83adcf3f031549e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 134962.54276416733,
        "Y": 3334.3197023219082
      },
      {
        "Id": "8f1bdefeb8904d77b0d18ec6548565aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Area",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 139256.94276416732,
        "Y": 3229.9447023219091
      },
      {
        "Id": "ad1ab8aa66a14205978438da0e4bd869",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "<=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 139564.94276416732,
        "Y": 3117.9447023219091
      },
      {
        "Id": "94961e3b61bd4bc9943791e205e1fbd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "*",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 139256.94276416732,
        "Y": 3039.9447023219091
      },
      {
        "Id": "2ff772458be34a8ab8737fd603647837",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 139824.14276416734,
        "Y": 3196.9447023219091
      },
      {
        "Id": "313e15e447944d8dad9edbd1b5c64d91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 139564.94276416732,
        "Y": 3309.7722023219085
      },
      {
        "Id": "303085642bec4dc785da70099980123a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 140119.34276416732,
        "Y": 3162.9447023219091
      },
      {
        "Id": "25d686b96b1743b5ad6a0861896b41ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 137899.34276416732,
        "Y": 3217.4447023219091
      },
      {
        "Id": "b89de08325b34e2eb3cdf62cc9de6745",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 137560.14276416734,
        "Y": 3332.9447023219091
      },
      {
        "Id": "60aa2308e2dd44efad395e8fa6c58299",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 138254.54276416733,
        "Y": 3296.4447023219091
      },
      {
        "Id": "93aa3de05ae5420b84344caee148079f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 137899.34276416732,
        "Y": 3409.2722023219085
      },
      {
        "Id": "02ca2095dc424261a643e71d405e1768",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 138549.74276416734,
        "Y": 3296.4447023219091
      },
      {
        "Id": "85467464c7e4498b9bd1220ad53cc3a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 138838.54276416733,
        "Y": 3262.4447023219091
      },
      {
        "Id": "ee9e6e111dc44847a55e73c231bf5fe0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.ClosestPointTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 132699.34276416735,
        "Y": 3547.5322023219087
      },
      {
        "Id": "28ba6a3252c74dfba1212f6f6f26e6be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 133092.94276416732,
        "Y": 3503.5322023219087
      },
      {
        "Id": "43ffc915cb3b4fbe8c5a6b57e7184896",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 133464.14276416734,
        "Y": 3319.8197023219082
      },
      {
        "Id": "1239361c589740e0ad9c3c3da19dc4f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 141285.74276416731,
        "Y": 3108.4447023219082
      },
      {
        "Id": "12f9880cb8e940a588f8c7b4096be975",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 141643.34276416732,
        "Y": 3160.4447023219082
      },
      {
        "Id": "2fd3eaeeab9d4d97a90f1df6bff7ff83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 143033.77579093387,
        "Y": 389.322033412265
      },
      {
        "Id": "9c2e7304971b425288952a197856388b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 140442.54276416733,
        "Y": 3253.4447023219082
      },
      {
        "Id": "ffc8a55901a94753ae628e18f2a45356",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 140701.74276416731,
        "Y": 3332.4447023219082
      },
      {
        "Id": "b71dbcdb4fbe4ba097cfff33454e1cb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 140442.54276416733,
        "Y": 3445.2722023219085
      },
      {
        "Id": "76a4aa70ab034ed6af19d9518848a15e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 140996.94276416732,
        "Y": 3332.4447023219082
      },
      {
        "Id": "5db7efb7835244368c38c08970b92d6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Color.ByARGB",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 141285.74276416731,
        "Y": 3488.4447023219082
      },
      {
        "Id": "f59d4e8df5474d43b44bd47e949ba86d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 140996.94276416732,
        "Y": 3539.9272023219091
      },
      {
        "Id": "cd30ee99a04046faa958dada977a75d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 140119.34276416732,
        "Y": 3353.9447023219082
      },
      {
        "Id": "ff3679963efc4423bd9aacb32878123d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 141285.74276416731,
        "Y": 3298.4447023219082
      },
      {
        "Id": "4e8278b1ca7c43c688d39e6b6c3f2d4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "GeometryColor.ByGeometryColor",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 141643.34276416732,
        "Y": 3350.4447023219082
      },
      {
        "Id": "614ff63293ea43a8addea9e50c8f139c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Area",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 143405.87428536147,
        "Y": 389.46030477913177
      },
      {
        "Id": "65add3d9fbc04affa5c6afa781a37371",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 143777.68915795509,
        "Y": 389.46030477913189
      },
      {
        "Id": "4826d1077deb4d45b4c696b1904f1990",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "UitgeefbaarTerrein",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 144621.34133952513,
        "Y": 396.89864956668873
      },
      {
        "Id": "9b877b244244482abead6a40cd4be0a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Convert By Units",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 144049.08539866813,
        "Y": 388.49449173691164
      },
      {
        "Id": "2bc11223974944dda26e7bdeed58ac6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 144170.99622068708,
        "Y": 3400.5918199878288
      },
      {
        "Id": "fcd6ad72b9554d11ac9f485faa165ea5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Transform",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 146428.59622068709,
        "Y": 3275.1605699878273
      },
      {
        "Id": "7b01bbe569ab458f989200953e7bd4e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "CoordinateSystem.Identity",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 145978.99622068708,
        "Y": 3294.0918199878288
      },
      {
        "Id": "bebaba6fe83c4727b5e2a6e48cf64aa8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "BoundingBox.ByGeometry",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 146857.39622068708,
        "Y": 3275.1605699878273
      },
      {
        "Id": "53ac0547950449e7940774e1c4fba50e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Explode",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 148158.99622068708,
        "Y": 3371.0230699878284
      },
      {
        "Id": "4593355aaee248dab061fe51ad125145",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 148506.1962206871,
        "Y": 3371.0230699878284
      },
      {
        "Id": "6b2277c022ca4e3e8fab1409f9761cda",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 148802.99622068708,
        "Y": 3371.0230699878284
      },
      {
        "Id": "c3834bb16302489b9a8eb38279ab935e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 144528.59622068709,
        "Y": 3426.0918199878288
      },
      {
        "Id": "c386a0fb40e5451daa1ad36a95e3b09c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 144825.39622068708,
        "Y": 3443.0918199878288
      },
      {
        "Id": "a8e1b1f030344be9bec52c20c08cc24d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 145095.79622068707,
        "Y": 3443.0918199878288
      },
      {
        "Id": "87997e99d47f46cbb56a4af68719d292",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 145366.1962206871,
        "Y": 3409.0918199878288
      },
      {
        "Id": "ba03a14fa9bb4eb6ad73b57e8aeea239",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 145655.79622068707,
        "Y": 3375.0918199878288
      },
      {
        "Id": "37e93171a43a4623953e07d845480852",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.CoordinateSystemAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 145978.99622068708,
        "Y": 3454.0918199878288
      },
      {
        "Id": "8a77f54d1cd449a8a67848550851f8fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 145655.79622068707,
        "Y": 3566.9193199878282
      },
      {
        "Id": "4e2c2d64dc4f4c4db48cb8d18f8a07a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 146857.39622068708,
        "Y": 3434.9880699878277
      },
      {
        "Id": "63dee91145b846f4977ceb614afdc0e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Transform",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 147730.1962206871,
        "Y": 3371.0230699878284
      },
      {
        "Id": "4036d0c54c7849bd8add9d2231a18d74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149641.39622068708,
        "Y": 3174.6780699878291
      },
      {
        "Id": "3753a32a4f19430d9f702faf6a2df920",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149964.59622068709,
        "Y": 2906.0230699878284
      },
      {
        "Id": "7a5eac6ff3bf49bdadf0a8698e4e7ce5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149964.59622068709,
        "Y": 3226.0230699878284
      },
      {
        "Id": "2b5e967fcce84bfc8a1026c286fbb1c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149641.39622068708,
        "Y": 2983.0230699878284
      },
      {
        "Id": "0041894c5c2447bf8e0c958480b6cab4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149641.39622068708,
        "Y": 3623.0230699878284
      },
      {
        "Id": "68bf9790d445487caac0fdf983055e27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149073.39622068708,
        "Y": 3691.0230699878248
      },
      {
        "Id": "db1b95abdae14903b69430bda749b185",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149346.1962206871,
        "Y": 3657.0230699878284
      },
      {
        "Id": "a84e3e64e9584b2db15a9f784389eb22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149641.39622068708,
        "Y": 3814.6780699878245
      },
      {
        "Id": "7fd38c36dcf94c4dbd78d361f6169cbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149964.59622068709,
        "Y": 3546.0230699878302
      },
      {
        "Id": "9dcea6c8a7874dec9dbae9ae0afdfb51",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149073.39622068708,
        "Y": 3051.0230699878302
      },
      {
        "Id": "552c66fc24d04e5ea4e0a40df29d81e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149346.1962206871,
        "Y": 3017.0230699878302
      },
      {
        "Id": "103e4ac60df34cf8adbdb5c4438768f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 147226.99622068708,
        "Y": 3338.1605699878273
      },
      {
        "Id": "eb670e6169f74d42890b220199688fee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150287.79622068707,
        "Y": 2826.0230699878284
      },
      {
        "Id": "52436554e93f465a8b79a87339441d96",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150287.79622068707,
        "Y": 2986.0230699878284
      },
      {
        "Id": "407e96dc5d9c40a48d8d4104bcc893d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150583.79622068707,
        "Y": 3077.0230699878284
      },
      {
        "Id": "db31749a742947df95944d41e635e541",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150287.79622068707,
        "Y": 3306.0230699878284
      },
      {
        "Id": "6fd273318a8b4e90a045313330317bee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150583.79622068707,
        "Y": 3267.0230699878284
      },
      {
        "Id": "2ed55bf7e22840fe99d5f1abb12819f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150287.79622068707,
        "Y": 3146.0230699878284
      },
      {
        "Id": "528f03dd9dc34578a509fbbb98511509",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150954.99622068708,
        "Y": 3155.0230699878284
      },
      {
        "Id": "ce27f91ee8a3477f9c95b59026f7b956",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 151210.1962206871,
        "Y": 3155.0230699878284
      },
      {
        "Id": "5905df0708cf4cbeaf5902cd4a351f96",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 151489.39622068708,
        "Y": 3172.0230699878284
      },
      {
        "Id": "1fe8ae37cfab44ecab763d539007427e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150287.79622068707,
        "Y": 3466.0230699878284
      },
      {
        "Id": "0031e1e3385b42fa9e551d94651a6c08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 151841.39622068708,
        "Y": 3363.6780699878291
      },
      {
        "Id": "fe019fb2934b4db3a6f6aed1ed89c8f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150287.79622068707,
        "Y": 3626.0230699878302
      },
      {
        "Id": "5cffdd950261456daef32c76b7ba7800",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150583.79622068707,
        "Y": 3471.0230699878302
      },
      {
        "Id": "3533f3f57dab4e0c89b5167ae09c514e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150954.99622068708,
        "Y": 3549.0230699878302
      },
      {
        "Id": "2d9804d839c84c089d5f14347ac5b994",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 151210.1962206871,
        "Y": 3549.0230699878302
      },
      {
        "Id": "fb5f56be4bca4a96973a13487472c386",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 151841.39622068708,
        "Y": 3757.6780699878245
      },
      {
        "Id": "cf51d190ec0b430e99631185938c036b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 151489.39622068708,
        "Y": 3566.0230699878302
      },
      {
        "Id": "aab3476eedc04fe690bdb6f373d30522",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150287.79622068707,
        "Y": 3946.0230699878248
      },
      {
        "Id": "8031cfeb822d48b2ba97c3bd4425ee4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150583.79622068707,
        "Y": 3661.0230699878248
      },
      {
        "Id": "a07fe82bb73c447a9c509c458f65d270",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 149964.59622068709,
        "Y": 3866.0230699878248
      },
      {
        "Id": "53982a6f548245689b7a7098b90adb73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 150287.79622068707,
        "Y": 3786.0230699878248
      },
      {
        "Id": "fa4afa57939c47aa9b1e214e783ac4b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointsAtSegmentLengthFromPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 151841.39622068708,
        "Y": 3138.0230699878284
      },
      {
        "Id": "d68b7fb887df49489360e097f5ba0f3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 152320.59622068709,
        "Y": 3150.0230699878284
      },
      {
        "Id": "1a662d3c496347aba19d6baf71608896",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 152320.59622068709,
        "Y": 3340.0230699878284
      },
      {
        "Id": "fb00646e6e8b48c498c738d4108bd65a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 152643.79622068707,
        "Y": 3323.0230699878284
      },
      {
        "Id": "59c59e3c31ed4d60b3ee92d26bc90695",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 152320.59622068709,
        "Y": 3530.0230699878284
      },
      {
        "Id": "06eb5264c5154e1087224d6fed7d32a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointsAtSegmentLengthFromPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 151841.39622068708,
        "Y": 3532.0230699878302
      },
      {
        "Id": "e9792ae0a64a4c819cc9ea32755de424",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 152320.59622068709,
        "Y": 3720.0230699878248
      },
      {
        "Id": "4f471372eea1456f8cb8d9ac51bf60bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 152643.79622068707,
        "Y": 3513.0230699878284
      },
      {
        "Id": "e9bd045efa8f41469911204e4b265d57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 153014.99622068708,
        "Y": 3401.0230699878284
      },
      {
        "Id": "8cdefcc760a24039bc95a2617ecfd30f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 153270.1962206871,
        "Y": 3401.0230699878284
      },
      {
        "Id": "ecf25f84d53d4e8382781cb16943b723",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 153549.39622068708,
        "Y": 3401.0230699878284
      },
      {
        "Id": "fb1931c4c60747bdb0045452ba3ff804",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Intersection.GeometrySplit",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 153838.1962206871,
        "Y": 3367.0230699878284
      },
      {
        "Id": "7f7bbf3ea694472ca4ed0a1d4de15302",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 155547.96860392581,
        "Y": 316.60217156463341
      },
      {
        "Id": "9234a16da7254d7388bd4cd6e257e382",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 155209.44504461653,
        "Y": 322.06987468958914
      },
      {
        "Id": "b2def619db2c46e3a02daae5bf2418b3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "ThresholdNumber",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 155302.09196894462,
        "Y": -1538.929115168447
      },
      {
        "Id": "5efbb736511741cea349056dd569f50d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "*",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 163537.43316177084,
        "Y": 3237.6744123477129
      },
      {
        "Id": "8cb18c39746c4807b0031368254a0599",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "/",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 164093.43316177084,
        "Y": 3264.6744123477129
      },
      {
        "Id": "ca7e9eeac23c445ea48b744061e19d49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 163537.43316177084,
        "Y": 3415.5019123477141
      },
      {
        "Id": "32030f0d6f70485eafbd29f5848451ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "*",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 164401.43316177084,
        "Y": 3303.6744123477129
      },
      {
        "Id": "5e4add8f1dc7440799c8dc3be9cb2619",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "*",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 164093.43316177084,
        "Y": 3442.6744123477129
      },
      {
        "Id": "0c56da24bcd44ff0a0ba8818f9dddcd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 164401.43316177084,
        "Y": 3142.6569123477129
      },
      {
        "Id": "2c0bf218613a436b830f6a143e185e47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 165233.43316177084,
        "Y": 3230.1569123477129
      },
      {
        "Id": "4e6b8948ec41446f80a31b0efa819376",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 166140.63316177082,
        "Y": 3208.1569123477129
      },
      {
        "Id": "203562b8961c4ff584d67cf717aa30b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 167307.03316177084,
        "Y": 3116.1569123477129
      },
      {
        "Id": "565327e97f1e44e78aad2bc9d30b801c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 166140.63316177082,
        "Y": 3398.6569123477129
      },
      {
        "Id": "d00ec20338d74f21be009bc78fad0e25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 166463.83316177083,
        "Y": 3492.9844123477124
      },
      {
        "Id": "bdb93cbe9e33452480916481d31bcd1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 166463.83316177083,
        "Y": 3301.1569123477129
      },
      {
        "Id": "284eb6747c1843e4924d0b16471456cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 166723.03316177084,
        "Y": 3380.1569123477129
      },
      {
        "Id": "57552b63460d46a0927464978432652a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 167018.23316177083,
        "Y": 3380.1569123477129
      },
      {
        "Id": "1cb58a534efb45a989dc287fe33c54e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 167307.03316177084,
        "Y": 3346.1569123477129
      },
      {
        "Id": "5bdca94ff4c5499a98c44527dd81b5ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 167664.63316177082,
        "Y": 3197.1569123477129
      },
      {
        "Id": "3a7116c6f2074c71b32b8005abc8026d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 169219.83316177083,
        "Y": 3353.5019123477123
      },
      {
        "Id": "b4034bc4d7b043c09300675a9a6d0e53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 168275.03316177084,
        "Y": 3197.3294123477135
      },
      {
        "Id": "a2b0a3e1023c41b086b0be63966663ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 161952.63316177082,
        "Y": 3147.4844123477124
      },
      {
        "Id": "5553fb6791e843afab52bcecfeb4986f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 163119.03316177084,
        "Y": 3071.9844123477142
      },
      {
        "Id": "c0f2253699b34bf1b6f6b7d81739e979",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "<=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 164679.03316177084,
        "Y": 3185.1569123477129
      },
      {
        "Id": "4e0588b03a99474299814bbbff04f5c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 164938.23316177083,
        "Y": 3264.1569123477129
      },
      {
        "Id": "9981144cbc2a443398853c953170ecf3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 164679.03316177084,
        "Y": 3376.9844123477124
      },
      {
        "Id": "3a9a0a9a0ea849f1bc4202d566a460fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 169508.63316177082,
        "Y": 3241.5019123477123
      },
      {
        "Id": "ab40c0eee3da419eb0bc7000968dba09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 169219.83316177083,
        "Y": 3163.5019123477123
      },
      {
        "Id": "893eaa1362aa4e0badeebb588d0ea46a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 169863.83316177083,
        "Y": 3320.5019123477123
      },
      {
        "Id": "b0cd7f5c07a749c6b88d3c96e223e0d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 169508.63316177082,
        "Y": 3433.3294123477135
      },
      {
        "Id": "26c49ac2f6e840098efa4eed944b0e39",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 170159.03316177084,
        "Y": 3453.5019123477123
      },
      {
        "Id": "96ff9a6e12d149709c8d88add047480d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 176954.23316177086,
        "Y": 3151.5019123477123
      },
      {
        "Id": "e8f12bcf27b84045b80b7cf8a51d4440",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 176596.63316177085,
        "Y": 3153.5019123477123
      },
      {
        "Id": "70e094b0aa9c41cea09786e9852df8d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 170482.23316177083,
        "Y": 3453.5019123477123
      },
      {
        "Id": "f609c6bf92454b67b3425999323dac68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 168571.83316177083,
        "Y": 3197.3294123477135
      },
      {
        "Id": "ea71eb4e14db4559b5a5d75684388675",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 168826.23316177083,
        "Y": 3163.5019123477123
      },
      {
        "Id": "7b9494df720e4efe9b107680cf2c1f61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 161657.43316177084,
        "Y": 2848.7344123477133
      },
      {
        "Id": "afed239fd9f4406abe78b806ceb1c099",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 161398.23316177083,
        "Y": 2961.5619123477136
      },
      {
        "Id": "dad07a79f4ed4a3bb4b2c4a049693b18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 161398.23316177083,
        "Y": 2769.7344123477133
      },
      {
        "Id": "e8ebe74ef6064225a865d34386efd473",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 160751.03316177084,
        "Y": 2774.3594123477133
      },
      {
        "Id": "50710c1f0e1a432fb6758698e4f7f31c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 158475.03316177084,
        "Y": 2901.3356623477139
      },
      {
        "Id": "a5bb27fc65eb4d399e7ebdae303be751",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 161137.43316177084,
        "Y": 2866.5619123477136
      },
      {
        "Id": "0a1bb86acdbe4fc89e47b8a8ab313bca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 161137.43316177084,
        "Y": 2706.7344123477133
      },
      {
        "Id": "4ea574cb6837415da000502481c14a57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 160455.83316177083,
        "Y": 2808.3594123477133
      },
      {
        "Id": "ba566a3acabc4011910ab68e39c9afc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 160100.63316177082,
        "Y": 2729.3594123477133
      },
      {
        "Id": "16a40330c0f94800948431b04f9bbf8f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 160100.63316177082,
        "Y": 2921.1869123477136
      },
      {
        "Id": "e5a24d572e584915b6545a2750df9d4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 158798.23316177083,
        "Y": 2763.1869123477136
      },
      {
        "Id": "3856b19168844304bdeca7e4196efec8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 157824.63316177082,
        "Y": 3048.1631623477151
      },
      {
        "Id": "86a4cdb853494b53ad00df31a8d8da14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 158179.83316177083,
        "Y": 2935.3356623477139
      },
      {
        "Id": "a723e6790d6a4016a465e3947e2b604a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 157824.63316177082,
        "Y": 2856.3356623477139
      },
      {
        "Id": "b27b0fcc94d043448868d588ad727771",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 157453.43316177084,
        "Y": 2809.847537347714
      },
      {
        "Id": "e270085ec9834546ab190ba1bc6b2c25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 157025.43316177084,
        "Y": 2809.847537347714
      },
      {
        "Id": "94ce89799e904fa0bc4a08959100f44a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 157453.43316177084,
        "Y": 3147.3119123477136
      },
      {
        "Id": "61728d7b5c5d4552ae0375228108fd36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 156635.83316177083,
        "Y": 3287.0450373477142
      },
      {
        "Id": "e28d312e31ab49a7af862151e4d7ac9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 163119.03316177084,
        "Y": 2841.9844123477133
      },
      {
        "Id": "9637ddcd2b42471284ecbc80cc4c1ba0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 161657.43316177084,
        "Y": 3039.4844123477124
      },
      {
        "Id": "487b7d047b08463db772b1ed8a81a36a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 161952.63316177082,
        "Y": 2955.4844123477142
      },
      {
        "Id": "e9bc29e50c3e4f2fa760ef3cc6e7cde9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 162275.83316177083,
        "Y": 3026.9844123477124
      },
      {
        "Id": "c2793717fd904c45b06047fb77052723",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 162535.03316177084,
        "Y": 3105.9844123477124
      },
      {
        "Id": "2f52e8311f9b41c68d868201fffa610e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 162275.83316177083,
        "Y": 3218.8119123477136
      },
      {
        "Id": "37e01ef5cef24b3ab16482c3c2ce2bff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 162830.23316177083,
        "Y": 3105.9844123477124
      },
      {
        "Id": "4044ca337faa49e3bd01a0b655da949f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 163537.43316177084,
        "Y": 3011.9844123477124
      },
      {
        "Id": "3f54bc7b765c40768377e8a206d7a5bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Area",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 164093.43316177084,
        "Y": 3103.4069123477129
      },
      {
        "Id": "93b7edc8e5c54a0a9a18f79737feaa97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 165556.63316177082,
        "Y": 3196.1569123477129
      },
      {
        "Id": "ecd88a53b6e94048912c069e2e9161d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 165851.83316177083,
        "Y": 3196.1569123477129
      },
      {
        "Id": "3b75537ff83b448394c00fd351a930f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 170771.03316177084,
        "Y": 3487.5019123477123
      },
      {
        "Id": "6168727becca4fb2831f7e833742dec7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 171071.03316177084,
        "Y": 3453.5019123477123
      },
      {
        "Id": "10158403d2e74b97acca67c5b5890f0f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 171366.23316177083,
        "Y": 3345.5019123477123
      },
      {
        "Id": "fc4bec4edc7241e28309f52cdab4823b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 171366.23316177083,
        "Y": 3505.3294123477135
      },
      {
        "Id": "f1cebf7e9ddd4af8bf4f62ded00b9b90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 171886.23316177083,
        "Y": 3487.5019123477123
      },
      {
        "Id": "e79de5a007b4455883242fd1b2f5d393",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 171627.03316177084,
        "Y": 3600.3294123477135
      },
      {
        "Id": "8c326bb056f84754b63612ec84d46ee3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 172181.43316177084,
        "Y": 3453.5019123477123
      },
      {
        "Id": "d65331bda0fc43529a1fac0b03f3db4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 172504.63316177085,
        "Y": 3453.5019123477123
      },
      {
        "Id": "6f0af0e494a04e9cbc41bf120e39bfea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 172775.03316177084,
        "Y": 3419.5019123477123
      },
      {
        "Id": "291380a39be94f2f80a018f3a4c11c10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 234547.03316177073,
        "Y": 3651.0144123477148
      },
      {
        "Id": "900b7b772e77472ca51756bc9cd39cae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 173098.23316177083,
        "Y": 3332.5019123477123
      },
      {
        "Id": "3660d2f71ff34458a42d93c6aea68e8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllFalse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 173357.43316177084,
        "Y": 3332.5019123477123
      },
      {
        "Id": "9ec903c67d644455a10fc077820dec17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 173357.43316177084,
        "Y": 3492.5019123477123
      },
      {
        "Id": "707f541c814d48f6886e3b9696995104",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 173627.83316177083,
        "Y": 3395.5019123477123
      },
      {
        "Id": "f9faec49b5db41f0b12766eb6c8d4696",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 173923.03316177084,
        "Y": 3474.5019123477123
      },
      {
        "Id": "786b68f0855044c4a647d187cdbfc8c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 173627.83316177083,
        "Y": 3587.3294123477135
      },
      {
        "Id": "7fa55dab4d64467e87fb2a2b1988ad29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 174218.23316177086,
        "Y": 3474.5019123477123
      },
      {
        "Id": "44f36fa6c2eb478c9b6cd89292a9696c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 174507.03316177084,
        "Y": 3537.5019123477123
      },
      {
        "Id": "705dde8e89584e24baf595121a264a9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 176596.63316177085,
        "Y": 3343.5019123477123
      },
      {
        "Id": "8a0f384c885c4ff8b4090f95ad1be910",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByUnion",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 176954.23316177086,
        "Y": 3342.5019123477123
      },
      {
        "Id": "3c623a94be6042ad9d6d447cca44867d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 171627.03316177084,
        "Y": 3408.5019123477123
      },
      {
        "Id": "ce8485ade4a945bcb91fe55fa7de1bd5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 159452.63316177082,
        "Y": 2763.1869123477136
      },
      {
        "Id": "9cd903899f2c4cb4be7b45c7fe2a91b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 159155.83316177083,
        "Y": 2763.1869123477136
      },
      {
        "Id": "78754fe4a27b4a2182764a8bff667e31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 159707.03316177084,
        "Y": 2729.3594123477133
      },
      {
        "Id": "334f9a144c9643f3bb0eee276ae49ba4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 174830.23316177086,
        "Y": 3506.5019123477123
      },
      {
        "Id": "9c4dde00023f4be2b4b0e592da6aa816",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 175089.43316177084,
        "Y": 3586.5019123477123
      },
      {
        "Id": "92ba326bd5b549d09888ebf1cf8e149a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllFalse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 175089.43316177084,
        "Y": 3426.5019123477123
      },
      {
        "Id": "58a23e18349d494d95e74275c0f2ba83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 175359.83316177083,
        "Y": 3681.3294123477135
      },
      {
        "Id": "f3888bfe7c184979b436918d68c70486",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 175359.83316177083,
        "Y": 3489.5019123477123
      },
      {
        "Id": "6e502ed1fb3c4c62a4a077cc47766eed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 175655.03316177084,
        "Y": 3568.5019123477123
      },
      {
        "Id": "8a56295e8e4948e1acdd070be870e760",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 175950.23316177086,
        "Y": 3534.5019123477123
      },
      {
        "Id": "cab041589c294b2c936211d1b46519a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 176307.83316177083,
        "Y": 3534.5019123477123
      },
      {
        "Id": "16a3a3b7c9cf4b9f8f0a2cee0ae3cd71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 177311.83316177083,
        "Y": 3298.5019123477123
      },
      {
        "Id": "bf4f88534708480e9cd027263e8db5bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 177567.03316177084,
        "Y": 3298.5019123477123
      },
      {
        "Id": "9b76d12eec344018b30e25dd31a5c059",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 178796.63316177085,
        "Y": 3273.5019123477123
      },
      {
        "Id": "8d11589d8ba0481d9c7c7728f9f11084",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 179151.83316177083,
        "Y": 3352.5019123477123
      },
      {
        "Id": "89d3c0788a5f41a6b6844f3bc4ef56d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 178796.63316177085,
        "Y": 3465.3294123477135
      },
      {
        "Id": "6caf847c89714e519ce2099686a094df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 179541.43316177084,
        "Y": 3318.5019123477123
      },
      {
        "Id": "34e975ab3cc74e1caf0b4f877bf87c3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 177855.83316177083,
        "Y": 3284.0019123477123
      },
      {
        "Id": "9a902ca096c841f9b30284114718b197",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 178143.83316177083,
        "Y": 3347.0019123477123
      },
      {
        "Id": "602ff68639814e58a43101e8036ede56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 177855.83316177083,
        "Y": 3443.8294123477135
      },
      {
        "Id": "0002f445aa49411c9014d3e8fa6384c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 178439.03316177084,
        "Y": 3313.0019123477123
      },
      {
        "Id": "bf5753b6a66640bba1f424a25ec42529",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByUnion",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 176954.23316177086,
        "Y": 3503.5019123477123
      },
      {
        "Id": "3be73e3792f045baa5ea477e2aa5099b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 176596.63316177085,
        "Y": 3534.5019123477123
      },
      {
        "Id": "533d2b87f34f4d88811574b3e1d8ec6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 163119.03316177084,
        "Y": 3421.0881623477144
      },
      {
        "Id": "bf309f536c644c86983b5c99bf85a862",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 163119.03316177084,
        "Y": 3262.0881623477144
      },
      {
        "Id": "4fa5206215894af3b72516a71c190bb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 163537.43316177084,
        "Y": 3562.5019123477141
      },
      {
        "Id": "d8f962897a974011bcc82ad0e772fc7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 157025.43316177084,
        "Y": 3147.1394123477148
      },
      {
        "Id": "6a3491b8227f4314a1da26dd919ccf63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 156159.83316177083,
        "Y": 3108.7000373477131
      },
      {
        "Id": "4b5f4e038bec43c6b4fb851dd1eb2633",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 181243.83316177083,
        "Y": 3036.7344123477105
      },
      {
        "Id": "a0199336d9324581a4774eeceb869ce2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 180270.23316177083,
        "Y": 3318.1481623477102
      },
      {
        "Id": "3d8dc5db7786435da19feecc9729c527",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 179899.03316177084,
        "Y": 3081.613787347711
      },
      {
        "Id": "ff8a0495a3614b46a1a0217c5c1df201",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 179541.43316177084,
        "Y": 3081.613787347711
      },
      {
        "Id": "4077a74038354dbda6d8cd3f9343d641",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 183196.63316177085,
        "Y": 3047.9069123477111
      },
      {
        "Id": "678016c005b14e09bad71d578d9f04c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 182901.43316177084,
        "Y": 3081.9069123477111
      },
      {
        "Id": "da3d293514ae4780bde39c029058061d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 182546.23316177083,
        "Y": 3002.9069123477111
      },
      {
        "Id": "8a2d5f47da2c441ab0ec2fbe8aeb364c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 182546.23316177083,
        "Y": 3194.7344123477105
      },
      {
        "Id": "84d289509103408ea6ebea49b166e4fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 180625.43316177084,
        "Y": 3205.3206623477108
      },
      {
        "Id": "fdbd32fc396847c1881d0a5074761a2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 180270.23316177083,
        "Y": 3126.3206623477108
      },
      {
        "Id": "47f2ab727416403ea51c321cc2a5d6d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 179151.83316177083,
        "Y": 3081.4412873477104
      },
      {
        "Id": "ddcdeca0242d468494cb9ad491b1aeeb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 185564.63316177085,
        "Y": 3123.9069123477111
      },
      {
        "Id": "593fe6e3b9a04b1bb97f93a3bf53f255",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 184103.03316177084,
        "Y": 3305.9069123477111
      },
      {
        "Id": "713d2b75604d40819fd1b681ba26d51d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 184398.23316177086,
        "Y": 3215.9069123477111
      },
      {
        "Id": "38e22a2759884135a5d07abafd21677d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 184721.43316177084,
        "Y": 3308.9069123477111
      },
      {
        "Id": "e18df5d7a0d94fbfa9e357dd37cff340",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 184721.43316177084,
        "Y": 3500.7344123477105
      },
      {
        "Id": "7d2532e5b2ab415ea3b4a7be1754b5ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 184398.23316177086,
        "Y": 3406.4069123477111
      },
      {
        "Id": "cc5e58ae53d34cfdab39f125486da3f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 184980.63316177085,
        "Y": 3387.9069123477111
      },
      {
        "Id": "81588a8153c5481285f6e271be34aecd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 185275.83316177083,
        "Y": 3387.9069123477111
      },
      {
        "Id": "c6541584a326444697fdbb6a4ec8298e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 185564.63316177085,
        "Y": 3353.9069123477111
      },
      {
        "Id": "e60c18e3df5a4ef1a18b02c4a1487901",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 185922.23316177086,
        "Y": 3204.9069123477111
      },
      {
        "Id": "239a0f54dd8e4718bb76307351b35cad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Area",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 186478.23316177086,
        "Y": 3221.4244123477129
      },
      {
        "Id": "0093e06a910a409785dad517bdc97398",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 186786.23316177086,
        "Y": 3227.1744123477129
      },
      {
        "Id": "c576ccdd96eb403da303fd931d6ab01b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "<=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 187056.63316177085,
        "Y": 3204.6744123477129
      },
      {
        "Id": "fb962ecc00eb4a5498ee0386a334bb1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 187315.83316177083,
        "Y": 3283.6744123477129
      },
      {
        "Id": "2cf62e26f8354941995ddfc7686fd8df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 187056.63316177085,
        "Y": 3396.5019123477123
      },
      {
        "Id": "5558714d795d4059b3adb20ef4560a3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 187611.03316177084,
        "Y": 3249.6744123477129
      },
      {
        "Id": "1d1a1f898a11499f963c4ac3a8b2de1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 187934.23316177086,
        "Y": 3215.6744123477129
      },
      {
        "Id": "fcbb1316d4e44eeab9dfef6e24499d15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 188229.43316177084,
        "Y": 3215.6744123477129
      },
      {
        "Id": "3b20159704224067a61d841daea07174",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 188518.23316177086,
        "Y": 3227.6744123477129
      },
      {
        "Id": "1ea87ed0bd5c405e89cd377efa78d319",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 189684.63316177085,
        "Y": 3135.6744123477129
      },
      {
        "Id": "933eb587493b47b99e6352df0b0067b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 188518.23316177086,
        "Y": 3418.1744123477129
      },
      {
        "Id": "b2ff9d0e66384c22aa79727db1962e90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 188841.43316177084,
        "Y": 3512.5019123477123
      },
      {
        "Id": "08f72c1bda564244a30a746221f64f6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 188841.43316177084,
        "Y": 3320.6744123477129
      },
      {
        "Id": "df0f497e0988466b8d2488ef35f89e82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 180920.63316177085,
        "Y": 3171.3206623477108
      },
      {
        "Id": "a6b2d4cfe25c4e489cc97a722031b11f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 179899.03316177084,
        "Y": 3318.5019123477123
      },
      {
        "Id": "1970dc63f9bf4a0fac5f18287a9f8a0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 189100.63316177085,
        "Y": 3399.6744123477129
      },
      {
        "Id": "1bb4f0ef5d084da588852a33b5231aff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 184103.03316177084,
        "Y": 3113.9069123477111
      },
      {
        "Id": "5b87df91466749b08a7291b46708afaf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 183843.83316177083,
        "Y": 3226.7344123477105
      },
      {
        "Id": "4acd14a6cc8f4efc95cdcbd46d5169f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 183843.83316177083,
        "Y": 3034.9069123477111
      },
      {
        "Id": "c894c5e6ac29422eab5f48d9a46675ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 183583.03316177084,
        "Y": 3131.7344123477105
      },
      {
        "Id": "b344aa2f717240c8aef2537dfb57b77f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 183583.03316177084,
        "Y": 2971.9069123477111
      },
      {
        "Id": "1dd070f678274022b04d3b48a4341a85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 189395.83316177083,
        "Y": 3399.6744123477129
      },
      {
        "Id": "462b523cd197498abd3f9116717eb376",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 189684.63316177085,
        "Y": 3365.6744123477129
      },
      {
        "Id": "822d7c6fabb14c51a7486b758fec2a09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 190042.23316177086,
        "Y": 3216.6744123477129
      },
      {
        "Id": "1aee3b0594204520ba3fb5b2f8f123d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 190652.63316177085,
        "Y": 3216.8469123477134
      },
      {
        "Id": "1ec20268c3e7453b99d48ee4aef61833",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 190949.43316177084,
        "Y": 3216.8469123477134
      },
      {
        "Id": "bf5c4745635d4485a629125dfe2ad980",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 191523.03316177084,
        "Y": 3160.8469123477134
      },
      {
        "Id": "78d1d7c35d024be0969da7177214f138",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 191263.83316177083,
        "Y": 3272.8469123477134
      },
      {
        "Id": "6cb4848a0f22448aa1d4cbdfec79450f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 191523.03316177084,
        "Y": 3351.8469123477134
      },
      {
        "Id": "5d0463187cce4646b74c878eb912e9b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 191818.23316177086,
        "Y": 3197.8469123477134
      },
      {
        "Id": "d0e97494a7b949239738649be601c69a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 191263.83316177083,
        "Y": 3464.6744123477129
      },
      {
        "Id": "c2ce720ae10b438bbee012191f74c62d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 192113.43316177084,
        "Y": 3197.8469123477134
      },
      {
        "Id": "9b5a9718e5694cc49d96b5ce3b3c1881",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IsEmpty",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 191818.23316177086,
        "Y": 3387.8469123477134
      },
      {
        "Id": "c1e9bccdc5224ca1b889728cbdd68b82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 192113.43316177084,
        "Y": 3387.8469123477134
      },
      {
        "Id": "47e0d9902d7d445ba6cd908a4d848a1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 193227.03316177084,
        "Y": 3241.8469123477134
      },
      {
        "Id": "2027f85bc7e644d1b6c510f93fd4a277",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 193515.83316177083,
        "Y": 3241.8469123477134
      },
      {
        "Id": "e5224374109a4e8c93a889f085fe6901",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 193804.63316177085,
        "Y": 3207.8469123477134
      },
      {
        "Id": "dc63374116314018b756dae4ee0707a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 203146.2331617708,
        "Y": 3178.9331623477137
      },
      {
        "Id": "6fa700ac896149a98763fd5324907f6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 196351.03316177084,
        "Y": 3480.9331623477137
      },
      {
        "Id": "61844bd4851449179a0291f959b6e786",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 195700.63316177085,
        "Y": 3460.7606623477132
      },
      {
        "Id": "6ae92845d24344b6a266ee261a4d5da9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 195700.63316177085,
        "Y": 3268.9331623477137
      },
      {
        "Id": "33d00c96dc39477db1f5b7672797c25c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 195072.63316177085,
        "Y": 3190.9331623477137
      },
      {
        "Id": "f0ab62e4fbeb45219b4e960e353cced4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 196055.83316177083,
        "Y": 3347.9331623477137
      },
      {
        "Id": "abc383708df64476b2b7261a7e4f8d4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 195361.43316177084,
        "Y": 3380.9331623477137
      },
      {
        "Id": "9b84286a098e4732ab87c2779fa7aa19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 202788.63316177082,
        "Y": 3180.9331623477137
      },
      {
        "Id": "011832c432ae45f9898f4b041693ad18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 196674.23316177083,
        "Y": 3480.9331623477137
      },
      {
        "Id": "4c0ff715c3c145caa864520cc1fe7547",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 198967.03316177084,
        "Y": 3446.9331623477137
      },
      {
        "Id": "d4038abee2a7408883c1c933501c1795",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 199290.23316177083,
        "Y": 3359.9331623477137
      },
      {
        "Id": "6550c89258a24b6f8ea03ef8624fcbb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllFalse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 199549.43316177081,
        "Y": 3359.9331623477137
      },
      {
        "Id": "64eba6a9a6464bc2a083d5e026483b2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 199549.43316177081,
        "Y": 3519.9331623477137
      },
      {
        "Id": "583f32d16f5e48a2a15e533b9748f318",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 199819.83316177083,
        "Y": 3422.9331623477137
      },
      {
        "Id": "7cea8ce078d1421494dff35779ce16e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 200115.03316177081,
        "Y": 3501.9331623477137
      },
      {
        "Id": "ac2246db92a848be9ebde9154f755814",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 199819.83316177083,
        "Y": 3614.7606623477132
      },
      {
        "Id": "47b2c1096e8b4a0b9a8d5f2860dca706",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 200410.23316177083,
        "Y": 3501.9331623477137
      },
      {
        "Id": "eec2388517fe48b18464ff6428e0f6fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 197263.03316177084,
        "Y": 3480.9331623477137
      },
      {
        "Id": "af68548832464d09b129f002401f5e6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 234547.03316177073,
        "Y": 3850.0144123477148
      },
      {
        "Id": "f2bcf770e96047b888b8028248d04527",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 200699.03316177081,
        "Y": 3564.9331623477137
      },
      {
        "Id": "7eff8e5faa3e47b4b004c8d7c8dd8399",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 202788.63316177082,
        "Y": 3370.9331623477137
      },
      {
        "Id": "0776d6f9ec1f42bf8ee720107141a3fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByUnion",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 203146.2331617708,
        "Y": 3369.9331623477137
      },
      {
        "Id": "5989ee0d0f3949a18f55fc74c68219ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 196963.03316177084,
        "Y": 3514.9331623477137
      },
      {
        "Id": "8ecee48498d043c7ab8902606d309fde",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 197558.23316177083,
        "Y": 3372.9331623477137
      },
      {
        "Id": "fd0f1aa294e44c32a6c8ad269e0f97a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 197558.23316177083,
        "Y": 3532.7606623477132
      },
      {
        "Id": "2ff8156058ef48a6978a6b3055533ac1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 198078.23316177083,
        "Y": 3514.9331623477137
      },
      {
        "Id": "174db3d788cc448cb6ea0f8ab552ec99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 197819.03316177084,
        "Y": 3627.7606623477132
      },
      {
        "Id": "c9d5694880d64d31a0de581a710245bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 198373.43316177084,
        "Y": 3480.9331623477137
      },
      {
        "Id": "1710bc3860504c889da2f878d8f71104",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 198696.63316177082,
        "Y": 3480.9331623477137
      },
      {
        "Id": "7a9e9f349eed4062b26fc7fdebd31eb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 203503.8331617708,
        "Y": 3325.9331623477137
      },
      {
        "Id": "39a1731747e24daf81f3266f8a013521",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 203759.03316177081,
        "Y": 3325.9331623477137
      },
      {
        "Id": "739af60ba1c145509b7e5f16bfcd90b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 195361.43316177084,
        "Y": 3190.9331623477137
      },
      {
        "Id": "0fed6824493d4e8f907dd9d6d37f97e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 197819.03316177084,
        "Y": 3435.9331623477137
      },
      {
        "Id": "917762344c28458a9134e168a78f5d4d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 181898.23316177083,
        "Y": 3036.7344123477105
      },
      {
        "Id": "033c1e2fca9740a78d6a729503deb0a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 181601.43316177084,
        "Y": 3036.7344123477105
      },
      {
        "Id": "d2892af2e86e4d68b11648bd4e77e7c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 182152.63316177085,
        "Y": 3002.9069123477111
      },
      {
        "Id": "bef564eedba74f34816f66366aa549a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 194679.03316177084,
        "Y": 3190.9331623477137
      },
      {
        "Id": "82e6a5a3bbd0481899350cdef658bec8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 194127.83316177083,
        "Y": 3224.7606623477132
      },
      {
        "Id": "0b86d07958894644ae152a8b65687df1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 194424.63316177085,
        "Y": 3224.7606623477132
      },
      {
        "Id": "067b19a86e9e42f3a556b90076704895",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 204047.8331617708,
        "Y": 3311.4331623477137
      },
      {
        "Id": "61d0823933b14369a20d05b4b7b34890",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 204047.8331617708,
        "Y": 3471.2606623477132
      },
      {
        "Id": "c2610663787d4a20b63bc6e73d5dae1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 192952.63316177082,
        "Y": 3241.8469123477134
      },
      {
        "Id": "9fc6ed6a649a45d2a52ace12f25a7f30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 192408.63316177082,
        "Y": 3387.8469123477134
      },
      {
        "Id": "9ea3f5cbbfac4881b650dbd0aa09c89a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 192663.83316177083,
        "Y": 3387.8469123477134
      },
      {
        "Id": "ce986d58154c432a835e89e1b05f7ebc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 192408.63316177082,
        "Y": 3197.8469123477134
      },
      {
        "Id": "9dc8cdc7092d4891846c55a8fc70f239",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 192663.83316177083,
        "Y": 3197.8469123477134
      },
      {
        "Id": "c43b65b5559f41099bd1d354dc675838",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 202142.2331617708,
        "Y": 3561.9331623477137
      },
      {
        "Id": "e4129f13d4604938bdac6dbe2e02e814",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 201551.83316177083,
        "Y": 3708.7606623477132
      },
      {
        "Id": "fb9a869372844f99927c2dd0e6c29992",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 201281.43316177081,
        "Y": 3613.9331623477137
      },
      {
        "Id": "6f1241dbd1c54490bc53dca56aba3363",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 201847.03316177081,
        "Y": 3595.9331623477137
      },
      {
        "Id": "d982d5db1afc4083830e040b6ae0f5dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 201551.83316177083,
        "Y": 3516.9331623477137
      },
      {
        "Id": "0113a2eb95834fb6871ec99a925e2417",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllFalse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 201281.43316177081,
        "Y": 3453.9331623477137
      },
      {
        "Id": "cd8a31f6543943d198b5d566cb76a305",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 201022.23316177083,
        "Y": 3533.9331623477137
      },
      {
        "Id": "34a7299da26848acbb39e1bb7ad6f64b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 202499.8331617708,
        "Y": 3561.9331623477137
      },
      {
        "Id": "fb7f9a6e439a4c9082c1cef48e52ac30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByUnion",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 203146.2331617708,
        "Y": 3530.9331623477137
      },
      {
        "Id": "ef46e0654bea49bc9d4bf7a6b3284080",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 204988.63316177082,
        "Y": 3300.9331623477137
      },
      {
        "Id": "899120c61f0b4e0d824a0298f2ebd0ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 205343.8331617708,
        "Y": 3379.9331623477137
      },
      {
        "Id": "c660fb178a934837be8aefcee2a3e5af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 204988.63316177082,
        "Y": 3492.7606623477132
      },
      {
        "Id": "cd267831aced4f989c2e24bb670b10f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 205733.43316177081,
        "Y": 3345.9331623477137
      },
      {
        "Id": "127817d11a3c42aea49b40d73c11737a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 210035.83316177077,
        "Y": 3254.165662347712
      },
      {
        "Id": "84fb1140db4e42dd903a63660935dc03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 209775.03316177079,
        "Y": 3159.165662347712
      },
      {
        "Id": "64a802acee634771a0b4affbd5fa5585",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 207112.63316177079,
        "Y": 3198.7519123477123
      },
      {
        "Id": "aa1fd19a85dd46a682aeed1a8f7c6d56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 206091.03316177079,
        "Y": 3345.9331623477137
      },
      {
        "Id": "ea7920d272964451a70303b4623c6aea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 207435.83316177077,
        "Y": 3064.165662347712
      },
      {
        "Id": "dc4a8b1b5c274c00b7bff98357dddc5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 206462.2331617708,
        "Y": 3345.5794123477117
      },
      {
        "Id": "ee920dec3c374f2c831a49c2a9c4953f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 210295.03316177079,
        "Y": 3141.3381623477126
      },
      {
        "Id": "f954497958ee4077996147c623f26f9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 210035.83316177077,
        "Y": 3062.3381623477126
      },
      {
        "Id": "14dae9fc853e41089cc873f3b862b8f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 209388.63316177079,
        "Y": 3075.3381623477126
      },
      {
        "Id": "c5c04b164f0544bb970560f907a34297",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 209775.03316177079,
        "Y": 2999.3381623477126
      },
      {
        "Id": "4b22186a388846c0a6943ef53df7ba81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 211756.63316177076,
        "Y": 3151.3381623477126
      },
      {
        "Id": "014d1a76002e4b9d8131f715d8562bab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 206091.03316177079,
        "Y": 3109.0450373477124
      },
      {
        "Id": "4fc12831337b41d8bee039e7841f30db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 205733.43316177081,
        "Y": 3109.0450373477124
      },
      {
        "Id": "df5dad3fbcde4b6397805370d826c3ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 209093.43316177078,
        "Y": 3109.3381623477126
      },
      {
        "Id": "982d9964de094b87be802d896be26003",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 208738.2331617708,
        "Y": 3030.3381623477126
      },
      {
        "Id": "b57d3b8e19794f819e16e99cb3cf9530",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 208738.2331617708,
        "Y": 3222.165662347712
      },
      {
        "Id": "5abfc57319f942a49b80cd215e10a829",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 206817.43316177081,
        "Y": 3232.7519123477123
      },
      {
        "Id": "875139f65a2347cc942c2bc54efb2e34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 206462.2331617708,
        "Y": 3153.7519123477123
      },
      {
        "Id": "c9049369d5b84782ac994e2a3282a2d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 205343.8331617708,
        "Y": 3108.8725373477118
      },
      {
        "Id": "906707b9885742fc8a364555539ab85b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 210295.03316177079,
        "Y": 3333.3381623477126
      },
      {
        "Id": "3b00ec50aa5f43558d11e561d74f177b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 210590.2331617708,
        "Y": 3243.3381623477126
      },
      {
        "Id": "048ffd80167b482297464f100a3af274",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 210913.43316177078,
        "Y": 3336.3381623477126
      },
      {
        "Id": "c6ca22fde485446193c8c6dcce78d043",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 210913.43316177078,
        "Y": 3528.165662347712
      },
      {
        "Id": "11ee4569444449ab88b4e956b12549c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 210590.2331617708,
        "Y": 3433.8381623477126
      },
      {
        "Id": "2ba0f43257064e0f8da82c678deb0ade",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 211172.63316177076,
        "Y": 3415.3381623477126
      },
      {
        "Id": "df4afc4f3fa04918ad5f044af6a189f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 211467.83316177077,
        "Y": 3415.3381623477126
      },
      {
        "Id": "ff1a0ba1d2494248b736c8e484d75dff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 211756.63316177076,
        "Y": 3381.3381623477126
      },
      {
        "Id": "a6d285834d8d443da42841397ea9f1f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 212114.23316177077,
        "Y": 3232.3381623477126
      },
      {
        "Id": "2e883edc9f1c4ab4aa1b932f26c06f1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Area",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 212670.23316177077,
        "Y": 3248.8556623477143
      },
      {
        "Id": "f4c2b615fc544b3f8ca59b82dcfe8d1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 208090.2331617708,
        "Y": 3064.165662347712
      },
      {
        "Id": "773a52387ae0472f88e3ef5a32585c6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 207793.43316177078,
        "Y": 3064.165662347712
      },
      {
        "Id": "eb52782435ab4b2eb3e5236b661051d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 208344.63316177079,
        "Y": 3030.3381623477126
      },
      {
        "Id": "9da4a96e40484a7ea3a577ce1add69bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 204335.8331617708,
        "Y": 3374.4331623477137
      },
      {
        "Id": "0ee129b817d942c88392d3484ed5e069",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 204631.03316177081,
        "Y": 3340.4331623477137
      },
      {
        "Id": "620e0991fbb44440a0e2bbbf19d84d23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "<=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 213248.63316177076,
        "Y": 3232.1056623477143
      },
      {
        "Id": "2f1ba28381bd4baa9a03072370d86d31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 213507.83316177077,
        "Y": 3311.1056623477143
      },
      {
        "Id": "812ae6d55d8c4839bcae27ae7b26a1bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 212978.23316177077,
        "Y": 3254.6056623477143
      },
      {
        "Id": "2141e066c79a493aa947dc5bd864c015",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 213248.63316177076,
        "Y": 3423.9331623477137
      },
      {
        "Id": "6ca7c0fab902468cb9edb100a3d32a25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 213803.03316177079,
        "Y": 3277.1056623477143
      },
      {
        "Id": "46d6c9b235ab48b488d615eee7093ca6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 214126.23316177077,
        "Y": 3243.1056623477143
      },
      {
        "Id": "d6ef0ea0dcc1404b96b3fcb850fb8a06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 214421.43316177075,
        "Y": 3243.1056623477143
      },
      {
        "Id": "00c0f4b0d66e418288dda8b698e42e01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 214710.23316177077,
        "Y": 3255.1056623477143
      },
      {
        "Id": "5dbe511c727f48d189f4147fe5496c17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 215876.63316177076,
        "Y": 3163.1056623477143
      },
      {
        "Id": "7b0c895d986e44c78e85d119986f0672",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 214710.23316177077,
        "Y": 3445.6056623477143
      },
      {
        "Id": "50cba33aaebb4a0e9f1f2249e3c882c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 215033.43316177075,
        "Y": 3539.9331623477137
      },
      {
        "Id": "014792206c6a434aa42cded0bc5fb403",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 215033.43316177075,
        "Y": 3348.1056623477143
      },
      {
        "Id": "2dfb7fdd96a84204a9e93b9306001b2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 215292.63316177076,
        "Y": 3427.1056623477143
      },
      {
        "Id": "f592d3b04d72423db2f3c022fb9fbba5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 215587.83316177077,
        "Y": 3427.1056623477143
      },
      {
        "Id": "16182fd82b804603b319df3a7180cf41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 215876.63316177076,
        "Y": 3393.1056623477143
      },
      {
        "Id": "007c12087bd54df186ef5bc92bebd9b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 216234.23316177077,
        "Y": 3244.1056623477143
      },
      {
        "Id": "c5afe1725fec4e0c94b41c755cb17ca8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 216844.63316177076,
        "Y": 3244.2781623477149
      },
      {
        "Id": "69a5defe6b834b98ab7d3ea810463967",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 217141.43316177075,
        "Y": 3261.2781623477149
      },
      {
        "Id": "dba4b749ee1246e2b9c3b91b6b4d834a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 217411.83316177077,
        "Y": 3261.2781623477149
      },
      {
        "Id": "dd69a7ce502e49d99d816497199be596",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 217682.23316177077,
        "Y": 3227.2781623477149
      },
      {
        "Id": "515cf7fbbfbc47ec952d1727856eabae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 218300.63316177076,
        "Y": 3193.2781623477149
      },
      {
        "Id": "2b4fb4ac9e9046f595474d73a0b7dce6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 202788.63316177082,
        "Y": 3561.9331623477137
      },
      {
        "Id": "a88eb806fb6f4dcfa133e6fcf9f5c3bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 217977.43316177075,
        "Y": 3193.2781623477149
      },
      {
        "Id": "d788ae2507d74d2187cc897fa6886475",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 220435.03316177079,
        "Y": 3446.1919123477146
      },
      {
        "Id": "0549d4854fe14db5a89d661c8f62aaf5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 221085.43316177075,
        "Y": 3491.1144123477152
      },
      {
        "Id": "688d058c44e74cccb01e83e76fef096a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 232349.43316177069,
        "Y": 3154.6144123477152
      },
      {
        "Id": "bd8e1293eb204491b73f526433735cef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 220435.03316177079,
        "Y": 3254.3644123477152
      },
      {
        "Id": "135612e0410a4db9b56bd1855bda845a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 220790.23316177077,
        "Y": 3333.3644123477152
      },
      {
        "Id": "17f6f0e9bcb344ad8f3472cf51be2650",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 220095.83316177077,
        "Y": 3366.3644123477152
      },
      {
        "Id": "f1095bda3b1c4350836f14c7c1e8ebf5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 231991.83316177072,
        "Y": 3141.6144123477152
      },
      {
        "Id": "844de5b1d94749649cf27c7d2a8eb236",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 219807.03316177079,
        "Y": 3176.3644123477152
      },
      {
        "Id": "4c7429d5beda463bac56085a692608aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 224024.63316177076,
        "Y": 3331.1144123477152
      },
      {
        "Id": "1450492ec6a045c9a309aa306d0177c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllFalse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 224283.83316177074,
        "Y": 3331.1144123477152
      },
      {
        "Id": "384d7c9f0f8e47f783d11b790c08dbff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 224283.83316177074,
        "Y": 3491.1144123477152
      },
      {
        "Id": "867d1683b81d44f0b3b7417c74af83a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 224554.23316177074,
        "Y": 3394.1144123477152
      },
      {
        "Id": "ecb0be2af687432395c3d1518799c3b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 224849.43316177075,
        "Y": 3473.1144123477152
      },
      {
        "Id": "319da91ba9d148afb622097b714590b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 224554.23316177074,
        "Y": 3585.9419123477146
      },
      {
        "Id": "011e5254e7584bb38c7510c94ef3c83b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 221408.63316177076,
        "Y": 3549.6144123477152
      },
      {
        "Id": "f1b214eb3c3b4075916633e2cf3ae5f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 223701.43316177075,
        "Y": 3515.6144123477152
      },
      {
        "Id": "fa86ded83cca401399a5a33d24f58ee0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 225144.63316177073,
        "Y": 3473.1144123477152
      },
      {
        "Id": "478bce69c6e84ab187b06940423bfa43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 221997.43316177075,
        "Y": 3549.6144123477152
      },
      {
        "Id": "14088e2c6ea94319b8ef003bdea7602a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 234547.03316177073,
        "Y": 4049.0144123477148
      },
      {
        "Id": "ca816d8648654778ba0223cb848ff032",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 223107.83316177077,
        "Y": 3549.6144123477152
      },
      {
        "Id": "0b12d5bc8f2642a7882b944b6890492a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 223431.03316177076,
        "Y": 3549.6144123477152
      },
      {
        "Id": "10e31a3c5f2b4956a6476abb2470c8af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 222553.43316177075,
        "Y": 3696.4419123477146
      },
      {
        "Id": "8963d1da7dd740f08a2b1fb8ddeba949",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 221697.43316177075,
        "Y": 3583.6144123477152
      },
      {
        "Id": "7d86a7c275fb44dfa57ebec7ddb686fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 222292.63316177076,
        "Y": 3441.6144123477152
      },
      {
        "Id": "60d1fcd1c5b14da5b0900a89b8bf521f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 222812.63316177076,
        "Y": 3583.6144123477152
      },
      {
        "Id": "74c71c65d42a4acf943b2ce53e05f007",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 222292.63316177076,
        "Y": 3601.4419123477146
      },
      {
        "Id": "288f7b13c6b44a6ca2367b2f794ce2fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 220095.83316177077,
        "Y": 3176.3644123477152
      },
      {
        "Id": "bbca81f6fa704d4e9af24f390d12d982",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 222553.43316177075,
        "Y": 3504.6144123477152
      },
      {
        "Id": "d42ffbf81a7b4d809c8bb95742255340",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 219159.03316177079,
        "Y": 3210.1919123477146
      },
      {
        "Id": "0d06367fd55a491a8e888617aa01717a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 218862.23316177077,
        "Y": 3210.1919123477146
      },
      {
        "Id": "387ec73e40a34f898989b67c493b96c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 219413.43316177078,
        "Y": 3176.3644123477152
      },
      {
        "Id": "af36c860f2954e7394930ed55325a495",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 218573.43316177075,
        "Y": 3193.2781623477149
      },
      {
        "Id": "13b7b6531cb4435f8dcad54d12b51ce1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 225433.43316177075,
        "Y": 3546.6144123477152
      },
      {
        "Id": "20629481b2034306b4a7662b3c2fe624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 231991.83316177072,
        "Y": 3331.6144123477152
      },
      {
        "Id": "d6893ff7426e47a1b8b409e002533ff4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByUnion",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 232349.43316177069,
        "Y": 3346.6144123477152
      },
      {
        "Id": "31e5b3ac038f47c9b53d64c7e02cf951",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 232707.03316177073,
        "Y": 3367.6144123477152
      },
      {
        "Id": "e50031b03b88421c861e887f1296967c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 232962.23316177071,
        "Y": 3367.6144123477152
      },
      {
        "Id": "585d6e602e2d4c8da574021574d27473",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 234191.83316177072,
        "Y": 3342.6144123477152
      },
      {
        "Id": "4188b90293a2428f86a8ce58c3bba52d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 234547.03316177073,
        "Y": 3421.6144123477152
      },
      {
        "Id": "b3d83bdf3cb44a11ab85751f022b363f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 234191.83316177072,
        "Y": 3534.4419123477146
      },
      {
        "Id": "1f7420024967430187b33e1328238e44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 235553.14279693324,
        "Y": 102.85963661271649
      },
      {
        "Id": "0df39cd4e95b42e4afbe84c06b65fbfa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 233251.03316177073,
        "Y": 3353.1144123477152
      },
      {
        "Id": "38a042ff4ff848d0999cd751d29cb8bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 233539.03316177073,
        "Y": 3416.1144123477152
      },
      {
        "Id": "24e7e2847cfd4d30a3f6c30c3c1da28f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 233251.03316177073,
        "Y": 3512.9419123477146
      },
      {
        "Id": "819fe753d2114b9b873a6fcc56910e8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 233834.23316177071,
        "Y": 3382.1144123477152
      },
      {
        "Id": "d8b248a28c6f472eb7dde6e83902f5a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 225756.63316177073,
        "Y": 3515.6144123477152
      },
      {
        "Id": "03522d6397a04513bb12c76c4c02ae8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 226015.83316177072,
        "Y": 3595.6144123477152
      },
      {
        "Id": "cc1f8ed872a04a4db240d8b5a682d4b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllFalse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 226015.83316177072,
        "Y": 3435.6144123477152
      },
      {
        "Id": "0c75fd57814049cfb1c604276239c235",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 226286.23316177074,
        "Y": 3690.4419123477146
      },
      {
        "Id": "479e7c51e0f4486a855ffdc9a716aaea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 226286.23316177074,
        "Y": 3498.6144123477152
      },
      {
        "Id": "82a98b53226845189199a78658a18b66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 226581.43316177072,
        "Y": 3577.6144123477152
      },
      {
        "Id": "5aab67d5e2ec43868084048dab1b9269",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 226876.6331617707,
        "Y": 3543.6144123477152
      },
      {
        "Id": "911d6ff44c0e4be2a29648212bfdfb36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 227234.23316177074,
        "Y": 3543.6144123477152
      },
      {
        "Id": "9c3dd5a07ed1406185e4003252902d0c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByUnion",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 232349.43316177069,
        "Y": 3506.6144123477152
      },
      {
        "Id": "ec752c60710b442d9faa2915d3bf13a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 227523.03316177073,
        "Y": 3543.6144123477152
      },
      {
        "Id": "1ab28a43e530426b85e3aac3bdfc61aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 227823.03316177073,
        "Y": 3509.6144123477152
      },
      {
        "Id": "ca994dd7c38a443b846175dd299d44f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.CountTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 228082.23316177074,
        "Y": 3509.6144123477152
      },
      {
        "Id": "dfc5b16054214485ab74a07918f823c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 228362.23316177074,
        "Y": 3572.6144123477152
      },
      {
        "Id": "f069f0f14e6a40fb875f4e2c0ec116dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 228082.23316177074,
        "Y": 3669.4419123477146
      },
      {
        "Id": "363f2c2aeecd4f78806fb584bf659aac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 228621.43316177072,
        "Y": 3651.6144123477152
      },
      {
        "Id": "1219221fdade486e9d8d0a2779ed4dce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 228362.23316177074,
        "Y": 3764.4419123477146
      },
      {
        "Id": "15ea498e5aac42b99172f5a4acea02b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 228916.6331617707,
        "Y": 3712.6144123477152
      },
      {
        "Id": "1e88a800bfce461e8868f161c0c59d0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 231991.83316177072,
        "Y": 3522.6144123477152
      },
      {
        "Id": "b3d5b88f022644d380a6015bcd86ae3b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 229528.6331617707,
        "Y": 3712.6144123477152
      },
      {
        "Id": "202e5318b7d14c9481af052343b20808",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 229239.83316177072,
        "Y": 3712.6144123477152
      },
      {
        "Id": "fa8df60133ea49cdbb7e478068bff721",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 229828.6331617707,
        "Y": 3963.6144123477152
      },
      {
        "Id": "dca27957af5d4ce297c925a77410aba9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 231018.23316177071,
        "Y": 3667.6144123477152
      },
      {
        "Id": "414b0234d346410b8f6ce9493b276c6a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 234547.03316177073,
        "Y": 4208.6144123477152
      },
      {
        "Id": "59bab92db28d405b9f41d5dc8caa756d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 230723.03316177073,
        "Y": 3701.6144123477152
      },
      {
        "Id": "c08ec883e6ea4e6696babf23ae47d5ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 230463.83316177072,
        "Y": 3814.4419123477146
      },
      {
        "Id": "8f0a3b97ceb34bdaae38409511275cce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 231341.43316177069,
        "Y": 3667.6144123477152
      },
      {
        "Id": "02e2a8a219404b8faaae59a4b7498429",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 231696.6331617707,
        "Y": 3746.6144123477152
      },
      {
        "Id": "6780b82a658d445091ab3c6fa42d1054",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 231341.43316177069,
        "Y": 3859.4419123477146
      },
      {
        "Id": "ae2fcf91f3c84ff6b640e89f5a30e882",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByUnion",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 232349.43316177069,
        "Y": 3666.6144123477152
      },
      {
        "Id": "6c6550830c52440b93e63aea023353d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 231991.83316177072,
        "Y": 3712.6144123477152
      },
      {
        "Id": "f25a6ddb98ff4d1284f6d188f2af58ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.CountTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 230183.83316177072,
        "Y": 3718.6144123477152
      },
      {
        "Id": "5ed65d9604a643e19aff303c69f5d81b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 230463.83316177072,
        "Y": 3622.6144123477152
      },
      {
        "Id": "1a99ace4243749588e1f8015af0d302f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 230183.83316177072,
        "Y": 3560.4419123477146
      },
      {
        "Id": "4c2df434b61a4a54b02f62ce905cc27c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 235870.1579068756,
        "Y": 99.529067914849065
      },
      {
        "Id": "5a63d115aaec4dbc90b9cc0eb76c65ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 235895.11625241343,
        "Y": 404.90176625985782
      },
      {
        "Id": "5331836b7c5e497fa67fafbe4f21909d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Area",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 236140.29529387309,
        "Y": 401.96549031423251
      },
      {
        "Id": "9e60fdea8fb84265a67dfaef30c35897",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Sum",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 236397.21943911526,
        "Y": 413.71059409673376
      },
      {
        "Id": "70ca96c298124d0ba25724e9cd217f35",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "ControleM2",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 236742.83882291141,
        "Y": 315.59615094793458
      },
      {
        "Id": "6f69d47772194174afc15de9eca40dea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 240643.42846896878,
        "Y": 4697.7023429497394
      },
      {
        "Id": "b0faadd85d614dee8bffe0b92057f621",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 241437.59421197965,
        "Y": 4697.6004911694108
      },
      {
        "Id": "69974953c31e4b71b07cf0206392d14a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 241061.37643331775,
        "Y": 4697.0059302617665
      },
      {
        "Id": "776092cffc5a42cf99bf779b8aafb461",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 241383.83493786023,
        "Y": 6113.0668755149
      },
      {
        "Id": "f838b49c98874bb5bb4dc74f3f7caea1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "-",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 241567.09867495071,
        "Y": 6004.4737236916808
      },
      {
        "Id": "444e9f0e0e744d73a1310cfaab026f5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 242584.70312271043,
        "Y": 6165.80684833293
      },
      {
        "Id": "794b46630454451a915688ea1a4033fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 242023.28177111901,
        "Y": 6282.230959465991
      },
      {
        "Id": "b6d79f53cb5c4dd68b82cf20478134c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 242321.36605794833,
        "Y": 6421.7483885336105
      },
      {
        "Id": "542fcf0ddd58424dbe107be57cbb198e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.IsNull",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 242018.85955779263,
        "Y": 6420.9088079520106
      },
      {
        "Id": "766c2e72985d4ea9b7d074cec4952f2c",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "Offset_Cells",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 240605.54675512589,
        "Y": 4373.5304766088639
      },
      {
        "Id": "3d053fd8b20f47c29fae4955acde512d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "Treshold_BiggestRectangle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 240610.93306040834,
        "Y": 3965.2996012638305
      },
      {
        "Id": "4b367229e98547bcaf7b59b6df49d626",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 239794.32633364492,
        "Y": 6013.8238287636605
      },
      {
        "Id": "84822a67f5bd4703940d6474f36225ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 239724.96302910076,
        "Y": 4715.3504298270582
      },
      {
        "Id": "017bc2d4a98b4b4e99acb71cd0f470db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 241433.94316904453,
        "Y": 6770.54234409393
      },
      {
        "Id": "a33500bd6bfc48a6a2aadc2101cf86c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 241052.10732495211,
        "Y": 6663.1212012136
      },
      {
        "Id": "42eb689486484cfdb02dd69850518db1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Offset",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 241701.878896895,
        "Y": 6657.4908931442405
      },
      {
        "Id": "c1a466b93c094f2ebcc84486d6099a23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 240395.90727639452,
        "Y": 6817.4960685429005
      },
      {
        "Id": "c461c0d0a0b84034b5edaabf099cd0d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 240653.39327570531,
        "Y": 6684.7143388514905
      },
      {
        "Id": "e14f374564ea4f48851c42ad05d1a6e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 239754.93119830225,
        "Y": 6823.310928551
      },
      {
        "Id": "b5b59729b1d64c90932061f06e0775b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 243545.07298762733,
        "Y": 7628.3072690796507
      },
      {
        "Id": "2a38c9767c7a4698936c50f40b835486",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 244193.12859016703,
        "Y": 7628.6256829352405
      },
      {
        "Id": "0488b46cfba14813a5e22d726a9cb13f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266115.76723504625,
        "Y": 9442.6164519821214
      },
      {
        "Id": "9c374d82a4924a0b92f1e7cc5687d119",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 265832.76358173625,
        "Y": 9443.14489288092
      },
      {
        "Id": "a0e2864297ab45cd983d563ec71819b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 243008.09205683993,
        "Y": 7630.58047042908
      },
      {
        "Id": "be782d4ab79b4d93a3033dafe725add5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 265217.95053609757,
        "Y": 9444.2205924887712
      },
      {
        "Id": "01258a7c2f3547fab1ba05c323545e91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266413.07614956005,
        "Y": 9110.93112383196
      },
      {
        "Id": "fc148574bd4f400f90b33f52072fb228",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 265843.86848726188,
        "Y": 9303.78637552906
      },
      {
        "Id": "2aa88f9042bb48538bdc6439f1a35060",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 265597.27384912537,
        "Y": 9298.04057581224
      },
      {
        "Id": "d72e0ee3efab488f909798ffa1a3b8e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 265586.43992787827,
        "Y": 9441.50720754053
      },
      {
        "Id": "66d1976b2bdb4299a390ee5870acc488",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 244443.12859016703,
        "Y": 7840.03239748226
      },
      {
        "Id": "957eca0bd4b54386a8eda4de4f0afb98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 245011.55752142885,
        "Y": 8312.5130522364816
      },
      {
        "Id": "10350bc1bf3143cf8a23c77cd65722de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 250342.43858988796,
        "Y": 8228.61910723065
      },
      {
        "Id": "023bc9f2dadf412ba658d14d80a60161",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 251013.22062807265,
        "Y": 8240.34807717058
      },
      {
        "Id": "16768b45a73f4badb86a16a782a44f0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 251383.40605134467,
        "Y": 7989.63669848754
      },
      {
        "Id": "4ce26db0ae9d476cb3dbb1dba677561b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 251805.10025618036,
        "Y": 8294.83700105063
      },
      {
        "Id": "5ce9719e8edb43e3b9e9792d324be505",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 251419.43688242626,
        "Y": 7780.4624925920607
      },
      {
        "Id": "8558666257414477a726291b101d4e68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 250838.96664893476,
        "Y": 8390.41790150202
      },
      {
        "Id": "57f1007f36db4a6e99729df84ce4b624",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 246941.73962444917,
        "Y": 8445.67706167528
      },
      {
        "Id": "34605c820eff49609a82091457540630",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 245647.14642144387,
        "Y": 8440.2473409008817
      },
      {
        "Id": "388860716a9a4e2ea46a9cf7a3c037ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 246314.81031320526,
        "Y": 8572.34236705738
      },
      {
        "Id": "d6b9eba4b3db47f5b9c79965f9ee0081",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 246633.06790203077,
        "Y": 8713.44743283137
      },
      {
        "Id": "ac7b67b3275e45949b767d6885ded251",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 246227.40811962337,
        "Y": 8714.1848445733813
      },
      {
        "Id": "9bc2c495b3f147f38164d6588ea1eae5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.Direction",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 247371.9427468658,
        "Y": 8448.37450533171
      },
      {
        "Id": "edf0db12c258455eb16ee2c23e49e8c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.AngleAboutAxis",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 248036.500867727,
        "Y": 8396.38915446934
      },
      {
        "Id": "4ce0b7c8b9a0454b8411897137d5956a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 247739.08390994577,
        "Y": 8397.94631131636
      },
      {
        "Id": "bba54c042ba246c7b2aec95c6d5c41d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 247749.98400787491,
        "Y": 8564.56209394773
      },
      {
        "Id": "a5c032dbabf04b80b292bb37c0e8e168",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ZAxis",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 247765.55557634516,
        "Y": 8709.37768072079
      },
      {
        "Id": "27fcadc89faa45229712618cb0617c58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 248516.12273496998,
        "Y": 8704.2328141944417
      },
      {
        "Id": "2211a278f4864441a0baa3b989a72b4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 248787.44787652523,
        "Y": 8703.13433183996
      },
      {
        "Id": "4ebef9c147e14fe18f2713edb41ce0f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 248519.63633603544,
        "Y": 8559.4061517355512
      },
      {
        "Id": "63989635985d4a9e86ecc7e21b4dcf10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 249081.76240701077,
        "Y": 8499.70019914493
      },
      {
        "Id": "2f0a08982a24452aace84a520aed7233",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 249383.7779315995,
        "Y": 8497.77498499071
      },
      {
        "Id": "ba1f47cf53004172836aad52bf635a67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 250046.74252697686,
        "Y": 8388.86447898166
      },
      {
        "Id": "b76efed60b4842e8a49e40b23db121af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 250288.77219110337,
        "Y": 8386.68127455021
      },
      {
        "Id": "ef84c7c765984dbf849786ec5bd27938",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 250582.89465696795,
        "Y": 8386.9247120433211
      },
      {
        "Id": "8fe8da5340944619837a399c91d8ee41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 251201.05463936867,
        "Y": 8392.06790201087
      },
      {
        "Id": "58e5b514aa6f42128d42d2036ad23bd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendStart",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 253005.42097236775,
        "Y": 8290.9697075596814
      },
      {
        "Id": "55038b2f19f2449ba49a99957e55909a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 253269.07663746848,
        "Y": 8295.68004706522
      },
      {
        "Id": "7439c09c45034c6cb085d14cd9220705",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 252198.18492670837,
        "Y": 8493.16650029362
      },
      {
        "Id": "d85ffeb8546942f9955bef3e8b33b311",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 252463.45143649925,
        "Y": 8487.9206602025915
      },
      {
        "Id": "81131c01b17e4ca78c074b291f8befbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 252692.45740236258,
        "Y": 8485.52269197365
      },
      {
        "Id": "5841858bdffa49c79b1c050ba009e833",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Intersection.GeometrySplit",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 253498.09252269578,
        "Y": 7987.0678697183012
      },
      {
        "Id": "fb991323a07a4c9eba8ec8d38b64afc1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 245994.32418636416,
        "Y": 9044.44951016787
      },
      {
        "Id": "3edb6bbde22c42739b867a2fb7d53358",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 245638.23419565446,
        "Y": 9042.37397811268
      },
      {
        "Id": "218d0b7fe83545a29011a31a605af8e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 248332.80294783387,
        "Y": 8892.16365766083
      },
      {
        "Id": "055b3edffe6e4d4aa7b7840e292faabd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 246001.14078838268,
        "Y": 9326.1747197703116
      },
      {
        "Id": "f30f47ace07a40f189aa519f271b309e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 254046.88828866876,
        "Y": 7919.4035050416305
      },
      {
        "Id": "e3b50d0339c14601b5d95a093004660c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 254348.46577284546,
        "Y": 8534.8463864235709
      },
      {
        "Id": "6bd4258ab7b645cd9c65d265cede2291",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 254681.35908604215,
        "Y": 8536.760773999551
      },
      {
        "Id": "6737c0c9100440a28c1abf99674503d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Offset",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 255022.34673984666,
        "Y": 8536.760773999551
      },
      {
        "Id": "6958eb12c3e54cb9847213e471c21260",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 254769.12859016706,
        "Y": 8368.03239748226
      },
      {
        "Id": "054be7a466a342738d2fe7f17b7b906f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 255896.39520360017,
        "Y": 8434.63807766503
      },
      {
        "Id": "a5e2ac130f1841128025c1ba48f92e7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 256534.18800261916,
        "Y": 8680.39181087236
      },
      {
        "Id": "5758b86253fa40b2b9e670eeb30637e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 257169.77690263416,
        "Y": 8808.12609953676
      },
      {
        "Id": "5651c9d21790456f83df394439b276c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 257837.44079439557,
        "Y": 8940.22112569326
      },
      {
        "Id": "6c741ec549704160a38080ab348e3962",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 258155.69838322105,
        "Y": 9081.3261914672512
      },
      {
        "Id": "981547fcb4164fcba947ddd6b7147200",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 257750.03860081366,
        "Y": 9082.06360320926
      },
      {
        "Id": "241712c8b750415fb127b095192a69b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 257160.86467684477,
        "Y": 9410.25273674856
      },
      {
        "Id": "c2b2298929f842fe8cdbcb47ac88c0e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 257516.95466755447,
        "Y": 9412.32826880375
      },
      {
        "Id": "fedd78ef322c484984dbf226e5d6c57e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.Direction",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 258894.57322805616,
        "Y": 8816.2532639676
      },
      {
        "Id": "8a5b6f3374dd41e0b1a0be3d599d64c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 258464.37010563945,
        "Y": 8813.55582031115
      },
      {
        "Id": "89737c4245234c048b3860fe710d9b00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.AngleAboutAxis",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 259559.13134891738,
        "Y": 8764.2679131052209
      },
      {
        "Id": "f4986b1bcc22477da86d438a48be104a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 259261.71439113608,
        "Y": 8765.82506995223
      },
      {
        "Id": "33b91d7062204005bee4933b2b4d55d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 259272.61448906525,
        "Y": 8932.4408525836116
      },
      {
        "Id": "0e6c0ad27d4d4f1d82bab84cb0f51add",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ZAxis",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 259288.18605753547,
        "Y": 9077.2564393566718
      },
      {
        "Id": "5bb1c1c63de94d1c9ef5ba746809522c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 260038.75321616026,
        "Y": 9072.11157283032
      },
      {
        "Id": "06537230153649f386922dcb0146d451",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 260042.26681722575,
        "Y": 8927.2849103714216
      },
      {
        "Id": "41797d55c7c74980a7304b36c11b8f3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 259855.43342902427,
        "Y": 9260.04241629671
      },
      {
        "Id": "fe9c02f4219d4420a70625912e0125e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 260310.07835771557,
        "Y": 9071.01309047584
      },
      {
        "Id": "def514f7f3cb4fa28870dadaaa457e15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 260604.39288820105,
        "Y": 8867.57895778081
      },
      {
        "Id": "0321647c556a41ee9ed76a77e90c9122",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 260906.40841278987,
        "Y": 8865.65374362658
      },
      {
        "Id": "8fd6673990174768bb8f55f391c2619d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 261569.37300816725,
        "Y": 8756.74323761755
      },
      {
        "Id": "1cad847ab6334bb89b557a57c95a1e4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 261811.40267229377,
        "Y": 8754.56003318608
      },
      {
        "Id": "188bdb8442094c6f9b644768491046fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 262105.52513815826,
        "Y": 8754.8034706792
      },
      {
        "Id": "3af32125224a49c5a35c367143ae4485",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 261865.06907107827,
        "Y": 8596.49786586654
      },
      {
        "Id": "9470202ab5d54b05934d84853815a851",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 262361.59713012504,
        "Y": 8758.2966601379012
      },
      {
        "Id": "45080f352e5e462daa54ee34d136c117",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 262723.68512055895,
        "Y": 8759.9466606467613
      },
      {
        "Id": "d511a56abde84412bcc0f89d5d8eea80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 262535.85110926296,
        "Y": 8608.2268358064612
      },
      {
        "Id": "4755d57806284e7784993e0ff160e1a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 262874.07388213574,
        "Y": 8018.71136289097
      },
      {
        "Id": "adc8f6fadf8f477e9296dc066fe00a38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 262885.567109557,
        "Y": 7801.5835411102307
      },
      {
        "Id": "3b2e0151ab5346d9bff8f5a8325777fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 263202.98516798386,
        "Y": 7631.51491308666
      },
      {
        "Id": "15cbd1b1f9de458391992b87a7c198d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 263459.74159388366,
        "Y": 7628.6256829352405
      },
      {
        "Id": "e6603521b7214a1c836e0aa6acd08d02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 257523.77126957296,
        "Y": 9694.05347840619
      },
      {
        "Id": "99f4dd3d66384f5ab4f7d44386800165",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 264312.23729754775,
        "Y": 9141.28438605112
      },
      {
        "Id": "45d764bc8a4e423f95bf2f671e258ae3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266403.36579419905,
        "Y": 9398.95483389948
      },
      {
        "Id": "cc8ac0eb32804cf699627a66ec49c1c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266819.29742868629,
        "Y": 9416.78035296253
      },
      {
        "Id": "871534ca59084375848f782832c41a14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 249705.88469255736,
        "Y": 8392.22612472807
      },
      {
        "Id": "75f0c6cf21ea442f84f8a563de0fcb4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 261206.40728723176,
        "Y": 8760.942401314951
      },
      {
        "Id": "11519445649346deacb2ae5b25d6b1cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266422.71662909875,
        "Y": 13773.092828593361
      },
      {
        "Id": "c90bd219361b43c190ead8463039e9e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280259.40908475686,
        "Y": 14757.110896773431
      },
      {
        "Id": "3455ce2b11df4ec39ade80187e90e9f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280792.15052538266,
        "Y": 14747.01969450873
      },
      {
        "Id": "4b8ce7f92a9041d492f8d9053342c3ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Reverse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280806.30579058977,
        "Y": 14942.69541942933
      },
      {
        "Id": "5674da4a05524188afad840a01999f67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281080.59893756226,
        "Y": 14941.78846042073
      },
      {
        "Id": "eeadf635cc5f438fb3bfd810e5b42718",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281484.51152633654,
        "Y": 14739.26412986743
      },
      {
        "Id": "54caa1474c214e49b6e2d04fb0550a67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280814.13617597829,
        "Y": 15260.96224923903
      },
      {
        "Id": "d38fe44e46474baf9d4d0d9f52c558d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281506.49717693217,
        "Y": 15253.20668459783
      },
      {
        "Id": "97972747b9824bebb371069758665569",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Reverse",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280828.29144118534,
        "Y": 15456.63797415963
      },
      {
        "Id": "f1a2596d87e5475bbd7799788fcad175",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281102.58458815794,
        "Y": 15455.73101515113
      },
      {
        "Id": "638dece9926f4cfca2347744259e6ada",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281910.797145543,
        "Y": 14735.07638598783
      },
      {
        "Id": "0ef0e0980bbd4243810f14054edea21c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 272783.22366398119,
        "Y": 15613.94983875843
      },
      {
        "Id": "baf5747ba9784c46b509a159ec597ae4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270351.26227402024,
        "Y": 14999.729940969031
      },
      {
        "Id": "cee313634b68497ebb0189b7c167a357",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270831.14211080846,
        "Y": 14860.86106525763
      },
      {
        "Id": "04dcd6ef891143b3a07f099d52a4e96e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 272178.22529278777,
        "Y": 15809.607372415931
      },
      {
        "Id": "2bb028ef679a4f509284a99da0bdf80a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270795.04948601534,
        "Y": 15410.13852469503
      },
      {
        "Id": "a6512d78c5ac4fd0ba8fabd2c05bacc3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270572.06349895388,
        "Y": 14861.818728297631
      },
      {
        "Id": "81e63c4f53a2409aa6e0d5a7e0bc998f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270069.63708237384,
        "Y": 14887.57945199413
      },
      {
        "Id": "b1581748bf864a83b6bde4aa35704b6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270521.18771762575,
        "Y": 15410.096443384731
      },
      {
        "Id": "997423cd8ecf4f5cbe26fc7eff1911b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270266.95413614856,
        "Y": 15283.03189500283
      },
      {
        "Id": "ca236f71238443429c0e5d9cf1190d91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 269518.55457270914,
        "Y": 15623.69702431853
      },
      {
        "Id": "2e05453666844e1f9b08bb17c547b54b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 268812.88282767445,
        "Y": 15273.31547846783
      },
      {
        "Id": "f2b891bcb4f14628b3939e17b6d96428",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 268931.75349816628,
        "Y": 16196.49356679493
      },
      {
        "Id": "bfd949cc40b24a68b768367ea758a814",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 268415.88887839246,
        "Y": 15271.523484414231
      },
      {
        "Id": "c4c5752719194275816a1aa780d97285",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 268037.773391852,
        "Y": 15752.76226373313
      },
      {
        "Id": "6fb3945265d54fa3b4769af412e1eab5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 268464.94649029529,
        "Y": 16197.29378386443
      },
      {
        "Id": "39a34b6cd1c44d27a072130b86939d33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 269278.57836170174,
        "Y": 16195.36201793603
      },
      {
        "Id": "3f5180dbdaf84c92b7e18356209743ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 268338.365791538,
        "Y": 14978.85188278143
      },
      {
        "Id": "8cf53a28dd344168b2a232e542978232",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 267756.74222518597,
        "Y": 14980.71902344153
      },
      {
        "Id": "8002b55d8da1492bb15d6c741ad4c894",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 267464.96682941687,
        "Y": 14978.544264827731
      },
      {
        "Id": "d8541b7c297b4772b71236aa99952c5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 267220.60834731656,
        "Y": 14980.827988959531
      },
      {
        "Id": "36a25c9aa04041b78f7e728412b59d90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266952.18223315926,
        "Y": 15138.530800233331
      },
      {
        "Id": "a453d8e760d046ba88116e376fc7b08f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266412.98056138458,
        "Y": 14972.311586233731
      },
      {
        "Id": "dc637b90186f40ff8c59f0220b93ff52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Range",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266703.37632411683,
        "Y": 14981.70111114863
      },
      {
        "Id": "5cd02cec77c54f1b892614954aaf22ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ZAxis",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 269229.75363118097,
        "Y": 15508.087720774631
      },
      {
        "Id": "6e9930c6100f49d09ea4bc122e414a9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Rotate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270489.17273273435,
        "Y": 16174.62167041783
      },
      {
        "Id": "d7ffad46def44c84bc3f0aa218d3d831",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270819.58985736285,
        "Y": 16303.518461357431
      },
      {
        "Id": "572e10152a9a4114922653ed6e33290c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266420.32299709908,
        "Y": 16023.72012463383
      },
      {
        "Id": "9f9093ee72f541c9bdf0a1fe048c9a9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Transform",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 273441.80634913227,
        "Y": 16081.99244500173
      },
      {
        "Id": "df6938c7a9f34d11bf624ae1ae4643d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 273030.76879935007,
        "Y": 15800.38855571923
      },
      {
        "Id": "ce565b56eafb4b728b5f7d9f4ee8f890",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.CoordinateSystemAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 271072.15608199657,
        "Y": 16178.14231208433
      },
      {
        "Id": "0794300dd65845368bd8af413f34c06b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 272787.51100434095,
        "Y": 15958.70172141353
      },
      {
        "Id": "7c06f928666e4f2d98a782356ba041ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "BoundingBox.ByGeometry",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 272485.87905110425,
        "Y": 15809.210079265831
      },
      {
        "Id": "ef8452d8fbd34c2db06e6fdd5f354a3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Transform",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 271737.44552713115,
        "Y": 15806.384475306431
      },
      {
        "Id": "7e9ff32156554ce3b1d1deb0b8211ad6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "CoordinateSystem.Identity",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 269709.25028876844,
        "Y": 14779.643107221831
      },
      {
        "Id": "0ca8adda245c4c38ad32466888389b0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 266878.16587422654,
        "Y": 16201.98350311313
      },
      {
        "Id": "159f2e5dd8354f12b192728ca3a888cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 267122.29067831306,
        "Y": 16398.27500811993
      },
      {
        "Id": "389a8d28d9444c3cbb9830afa4e13e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 267356.74119968934,
        "Y": 16398.090848237531
      },
      {
        "Id": "88a4c60f1d174fc3b1969a5b4893f450",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 267582.66829321667,
        "Y": 16200.402051927431
      },
      {
        "Id": "f5ee9f00a0ee4e54ab688fb45a557204",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 267798.774451428,
        "Y": 16004.00080327073
      },
      {
        "Id": "2d2c16716d0846a1ac7b466c8ad70e91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 269827.15454854746,
        "Y": 15688.052569135631
      },
      {
        "Id": "1bf192f1f5604af0a02e682845039c74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270116.02664048795,
        "Y": 15687.063197054131
      },
      {
        "Id": "91b9c450ac5b41f5a08b2341d03e2031",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.Curves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 274582.61498402804,
        "Y": 14784.190948854031
      },
      {
        "Id": "151c5d3e5def41fc86b32f19a91a42ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 275270.65081452066,
        "Y": 14989.344838648831
      },
      {
        "Id": "676aaa08e0d34243bc78ec81aaea8886",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 275003.312279003,
        "Y": 14779.65283346153
      },
      {
        "Id": "cfc315de802442fdbc7d5d11f39be907",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 275535.74956915824,
        "Y": 15149.68962784143
      },
      {
        "Id": "9aa11dd990934b2cb45640a7c2b701fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 275945.89095239504,
        "Y": 15283.57301286923
      },
      {
        "Id": "4856b6606f3442e8ac66949c1e5aa602",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 275949.85470832785,
        "Y": 15581.558231293431
      },
      {
        "Id": "df8a7a5db16c4310b3769a353956bfd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 276196.36075467808,
        "Y": 14999.29795397763
      },
      {
        "Id": "4abc77d96fb54213b3e22bbd82294b82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 276219.94400597049,
        "Y": 15480.786572265231
      },
      {
        "Id": "57de089d46a144439c8e44373526fe74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 276575.54469773639,
        "Y": 14742.80990440463
      },
      {
        "Id": "567ad64d71a84412ad5e88837e7ec5e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 276563.85951088078,
        "Y": 16181.324771480531
      },
      {
        "Id": "71dcdb1da9194bc48a4f4873674c2672",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.NormalAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277063.31505880714,
        "Y": 14941.85801354953
      },
      {
        "Id": "a1daf903ffe04564bb3fa15b54a6a486",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 276845.48819331359,
        "Y": 15079.00238703873
      },
      {
        "Id": "0a9e954d7f184559b500458b928c3203",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277743.90134551667,
        "Y": 15300.76655532603
      },
      {
        "Id": "7e11d326db75404ea767eda8157b386f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.X",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277427.31690199755,
        "Y": 15146.21060241403
      },
      {
        "Id": "19fd0496d5d2485ca64d377769c3f4d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278264.16650706925,
        "Y": 15145.388772020231
      },
      {
        "Id": "702b041802954375ba2058a7924f23f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277998.03802725964,
        "Y": 15317.24979317593
      },
      {
        "Id": "b8289b2aac204d74b8947994ccf1f4b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278587.66307610087,
        "Y": 14739.561390550631
      },
      {
        "Id": "fa5583e2540844cd92a2c4a657ae0ee4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278279.73599468637,
        "Y": 15385.75895645233
      },
      {
        "Id": "0ec649efebfe42d5a6a26073dec50bba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278595.44198647415,
        "Y": 14943.92853047413
      },
      {
        "Id": "c80384ddd6d74c598ed50edec0501a81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278007.99359029427,
        "Y": 15546.51783317933
      },
      {
        "Id": "9cb052f125924f6db2ce442c7b86ccf9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278199.82166460378,
        "Y": 16990.934771268432
      },
      {
        "Id": "95d85c45ec5a4a7c884a2bd0fba4ab18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278787.27006078366,
        "Y": 16389.657208729528
      },
      {
        "Id": "bc78afd781964cbba07155d07a1b7afc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278471.56406899588,
        "Y": 16830.175894541331
      },
      {
        "Id": "77100ddaa470401dbe022599f59e32ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278779.49115041038,
        "Y": 16187.164195755531
      },
      {
        "Id": "18d7c227c61646f28cdb30560e07588a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278455.99458137888,
        "Y": 16589.805710109329
      },
      {
        "Id": "c5e28bc6821944669c16f3a7d1a0ff07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278189.86610156915,
        "Y": 16761.66673126493
      },
      {
        "Id": "3a2b4c97ab584bb69a1bd0ed3e659ec7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277935.72941982618,
        "Y": 16745.183493415032
      },
      {
        "Id": "324f64d1cfa6473484726caf21a89f65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277037.31626762316,
        "Y": 16523.41932512783
      },
      {
        "Id": "1659cc4fc7f941568e8e45cfb4845fdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.NormalAtParameter",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277255.14313311665,
        "Y": 16386.274951638632
      },
      {
        "Id": "22bd822d310a4bc58d17056e7db02382",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.Y",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277619.85258333286,
        "Y": 16586.050429580733
      },
      {
        "Id": "d146605fd8a14b37b68712387a9ddcf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279043.65169896296,
        "Y": 14733.595754672131
      },
      {
        "Id": "15c47579b33f4c098f4a779fbdccc1fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279036.86897811905,
        "Y": 14946.768166507931
      },
      {
        "Id": "a08a4b801e60463abeba09479e149f71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279195.46319869906,
        "Y": 16199.812345933131
      },
      {
        "Id": "662b6adb32094af7b4097720bed2b04f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279188.68047785514,
        "Y": 16412.984757769031
      },
      {
        "Id": "0801228401ba450597b82335d8372f7c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279386.86902688828,
        "Y": 14740.529959276531
      },
      {
        "Id": "1e04f28bb09f49d19a3b40d849fafe0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279397.15567368118,
        "Y": 14947.23150838463
      },
      {
        "Id": "1c349c708d754eebb837dd2c45724b3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279510.71735377109,
        "Y": 16204.82752140833
      },
      {
        "Id": "709819a5a1194b2abdb19297dcb205d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279529.65135160048,
        "Y": 16411.199900075932
      },
      {
        "Id": "4f7f5df5d7084874a36548175a1d1c50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 269484.64727135206,
        "Y": 16654.374881699929
      },
      {
        "Id": "42f9e7ac747446f299779b9ce7c98e11",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 269928.73710596177,
        "Y": 16831.986181933033
      },
      {
        "Id": "1262e782b0494b949e2866cdb5cec890",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 269733.97419753409,
        "Y": 16832.126065984732
      },
      {
        "Id": "b0a36302d35d4438b137f5f0e698b278",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.PointAtSegmentLength",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 270139.96567552577,
        "Y": 16658.29463725763
      },
      {
        "Id": "b31cebb357f44766b3831530f9a6098d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279568.01761930005,
        "Y": 18911.67543012663
      },
      {
        "Id": "ba28c49370b7418ba0b1b3578cc5f8dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278098.90834145824,
        "Y": 18949.642876338832
      },
      {
        "Id": "004306ae550b4e5c8b0af3f5fbe0ffb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278113.30615053134,
        "Y": 18780.74391453003
      },
      {
        "Id": "4c1b6c6a2c454643befef01d9fb71f95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278466.24097628245,
        "Y": 18950.283506543732
      },
      {
        "Id": "f2572a99e9994f5bb4693bd5298618a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279912.85737891978,
        "Y": 18915.029389128729
      },
      {
        "Id": "47335987899d439994421eba7a74c797",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280222.67926887376,
        "Y": 18913.83776647503
      },
      {
        "Id": "bc4f8fdf91c6435999bbf37bc5ad92ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280456.23730899295,
        "Y": 18912.646143821432
      },
      {
        "Id": "163ac1579172434fb39176663d745cb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280755.88919842226,
        "Y": 18914.918212807032
      },
      {
        "Id": "96a0807bb6ad46cca2d6386ae498b88f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281676.82301805337,
        "Y": 18915.101163283231
      },
      {
        "Id": "8e5e8907a4c34c0283b0cb37d3a4f563",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281005.51532282267,
        "Y": 18914.807338633233
      },
      {
        "Id": "9e9326de976c4bbc9723d9d7c3221025",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281302.30396848149,
        "Y": 18913.90967891863
      },
      {
        "Id": "a75b1556b73b4a75a5bb57b951e2b125",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281995.73234544694,
        "Y": 18917.993802878031
      },
      {
        "Id": "2aff4ff0ffff415f976c6906a7d17e45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290537.72001257783,
        "Y": 15713.366061190831
      },
      {
        "Id": "a42765a8880e470f943f28531d7dbb3b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290306.65020718868,
        "Y": 15546.911722555931
      },
      {
        "Id": "b9bb6bd58c664a5d9ab3d7bd4172c3cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290539.52987949626,
        "Y": 15914.193251462131
      },
      {
        "Id": "11b38b9c07c742e1992ce053bceabf38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292055.06729134527,
        "Y": 16652.691289225033
      },
      {
        "Id": "8852f24ccbd3402fad2c81a52e05f2f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292551.65233527444,
        "Y": 16648.27606913403
      },
      {
        "Id": "1847ebb60d9e43dc8f7f8c9c10926769",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.CountTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292910.95632175205,
        "Y": 16642.67575178693
      },
      {
        "Id": "9cfe01dc8d7745ba832988e15d3d54d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295748.93819099036,
        "Y": 15223.251196197531
      },
      {
        "Id": "aa7de5b717b04acbaf36ff4765025b3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DistanceTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295863.97548772587,
        "Y": 15947.389534929531
      },
      {
        "Id": "ddaf008676894e4d99bc47b38ea47240",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295824.50153289305,
        "Y": 16220.801295365531
      },
      {
        "Id": "af633f2a0a23463fb036b9f10f9439fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295293.88687281759,
        "Y": 16696.796576579429
      },
      {
        "Id": "3423f70998044dd481f0a312c8e2054e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 296208.21715301857,
        "Y": 15220.314479675131
      },
      {
        "Id": "54af2ae98c654fe59b6ce1f0c6619010",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 296257.16076820169,
        "Y": 16087.44506625123
      },
      {
        "Id": "33fdccd7a14d46e2aae08e9d5cff996c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 296495.59462848888,
        "Y": 15948.58105511883
      },
      {
        "Id": "1e4d5c3f94ff45e0bcf66194ab68db99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292060.82301094814,
        "Y": 16961.549244653528
      },
      {
        "Id": "511d35692b0a4e33ad9ecba3bf8b0fbd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.CountTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 296584.93931024929,
        "Y": 15221.245976360431
      },
      {
        "Id": "11a278183d884fc8b99b34ebe3f804be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 294846.61569783743,
        "Y": 16959.77550027363
      },
      {
        "Id": "04dfb0e349df42a898ab687f5963cf30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 296769.63156779535,
        "Y": 15949.35706445733
      },
      {
        "Id": "ae3e4541a1e94f1b90167b0c2fbc4914",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DistanceTo",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292331.07917543716,
        "Y": 17152.056005049628
      },
      {
        "Id": "8dfe3ad55ab94fbf998d3db6ae0f01ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293147.19010600029,
        "Y": 17154.353224655832
      },
      {
        "Id": "0992d23612734c109e932f3c1ee66618",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293434.62876887014,
        "Y": 17159.45593972913
      },
      {
        "Id": "543f200726a64b7da177fc9ff17f8bf4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293707.51257273077,
        "Y": 17160.50147154463
      },
      {
        "Id": "e3e0955dd9ad461fb73b1be133087b07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 294047.83700497757,
        "Y": 17153.37898158843
      },
      {
        "Id": "5f5cc42869114c648da3d9694e6cd4f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 294321.37882084108,
        "Y": 17151.117298995232
      },
      {
        "Id": "113487f0143e4b06b42be7154c36f6aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 294569.97689277923,
        "Y": 17148.414654280932
      },
      {
        "Id": "30119a5b9eab4028b8bc0cad463a03db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292618.01803594828,
        "Y": 17153.584983249231
      },
      {
        "Id": "9693b372a5d343949d5ba189e085f68e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 297009.63923351129,
        "Y": 16697.600989050829
      },
      {
        "Id": "0f71ea6bc57d4a5ba18cd56beb756f5b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292871.81563572568,
        "Y": 17336.166149923032
      },
      {
        "Id": "79231bc2986a44c390f41dc32045dc99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 297325.96605566685,
        "Y": 16204.21010945023
      },
      {
        "Id": "5a242afb1467415d88a161890e2365df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 297609.19757261046,
        "Y": 16205.24872351283
      },
      {
        "Id": "e4d83314d3d34dcc9800683e57f84e2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290834.21968250023,
        "Y": 15710.701135722431
      },
      {
        "Id": "9607b03e34f642a6b52dc7bff8b72245",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290734.75632807554,
        "Y": 15257.05244403653
      },
      {
        "Id": "cc05cf1a232d45858b7f8a117bea8fd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 291031.25599799794,
        "Y": 15254.38751856813
      },
      {
        "Id": "8279b7f3ab394aec9039c93ad56a2fc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298314.93680610455,
        "Y": 16668.734488567628
      },
      {
        "Id": "cc4ab8e803574d709081b0475fdd2a83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290560.63563961774,
        "Y": 16406.940448174631
      },
      {
        "Id": "2aac0fbca23b4e5780749eb8c1968377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290857.13530954014,
        "Y": 16404.27552270623
      },
      {
        "Id": "c292e8183c3e45a687fa6dbb22da08f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 289893.329485391,
        "Y": 16243.76000081283
      },
      {
        "Id": "f9a9039d4f324ac7985a071e2c1da819",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 276970.97722933994,
        "Y": 20283.346845009932
      },
      {
        "Id": "2cac93bb986a4ab9b7f71da4ca949036",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277332.98417563469,
        "Y": 20283.191216329931
      },
      {
        "Id": "676fc94471804bdebf79a657f9511366",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280217.38386847079,
        "Y": 19732.170789501928
      },
      {
        "Id": "a7f3a2121907447981ce314d75c4440a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278300.57897080778,
        "Y": 19655.435948732629
      },
      {
        "Id": "1f574aadde824e028d159d12016829e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280204.71004558745,
        "Y": 20120.84967306583
      },
      {
        "Id": "8ac5b80639ac458699113b6789c19c48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277679.27712276217,
        "Y": 20283.061066239432
      },
      {
        "Id": "346355ec89894a88aa5559b1a86ad4a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278015.25361733238,
        "Y": 20134.09084425143
      },
      {
        "Id": "7aec9a33c9e84066bb802e547d501509",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278024.47823831125,
        "Y": 19986.719435694031
      },
      {
        "Id": "d3cd509b900c4ad7b81314bd4194fafd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278315.38595183467,
        "Y": 20132.927401085031
      },
      {
        "Id": "6c81965592714f6a8bd8c7da88e042ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 277774.83251851809,
        "Y": 19877.79139692663
      },
      {
        "Id": "730e97e243454746bf00da871acdc169",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278612.17459749337,
        "Y": 20132.029741370432
      },
      {
        "Id": "9806f1f8813949758aea6c2e0d7ffbfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278986.69364706526,
        "Y": 20133.221225734931
      },
      {
        "Id": "8f3002e52d404090b385529164d1876b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279305.60297445889,
        "Y": 20136.113865329833
      },
      {
        "Id": "a2944eea4bcc4e90ba1162179de86d38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278106.25422876445,
        "Y": 19237.51356676493
      },
      {
        "Id": "c81bc2910ee14dc183a93d576a2a6f88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278270.234382607,
        "Y": 19844.619931189231
      },
      {
        "Id": "9f351cc733aa4f23b4d0c2e33f738c5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278573.65498001844,
        "Y": 19802.767790086131
      },
      {
        "Id": "c9b3d425d9ff4d71941a77e65b5da441",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279494.58879964944,
        "Y": 19802.95074056233
      },
      {
        "Id": "e2d1a8451df84a8793a07598fe30b45d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278823.28110441874,
        "Y": 19802.656915912332
      },
      {
        "Id": "6ade09ad61b64f45add6936c896c0745",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279120.06975007756,
        "Y": 19801.759256197729
      },
      {
        "Id": "1b65f1adcfad4912abb9ab6936fc6ae4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 279813.49812704307,
        "Y": 19805.84338015713
      },
      {
        "Id": "768919758e8c4333b082925ace364469",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 278483.42480995785,
        "Y": 19255.100134763328
      },
      {
        "Id": "592cff2d825c45318f252f2338c609fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280591.35959391354,
        "Y": 19571.177312276028
      },
      {
        "Id": "a88f9ce4e08e4772844061717c5e3ee2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 280588.94112162926,
        "Y": 19942.804417122228
      },
      {
        "Id": "f14c52b9c1df4fe99ceac28519f99c34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281270.12382370437,
        "Y": 19589.476906658128
      },
      {
        "Id": "ed620258bb1a483186d77c0bd272c862",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendStart",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281664.797558398,
        "Y": 19592.391258423333
      },
      {
        "Id": "466e28ff767f478781684d387ccc717f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281280.30214326724,
        "Y": 20100.100475895131
      },
      {
        "Id": "6faba3f145d340cfba8bbf17a88508a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendStart",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 281592.91140614485,
        "Y": 20100.617750786929
      },
      {
        "Id": "570b072dfa5d47c984fc0dcf67d32332",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 282019.68206439179,
        "Y": 19589.515814211631
      },
      {
        "Id": "479d967e83804a12b90cefc5754bfd5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 282030.75700271886,
        "Y": 20092.571084307332
      },
      {
        "Id": "ce57d2d4193147f1b6314ee64dfc3356",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 282358.24546961137,
        "Y": 19589.272263620831
      },
      {
        "Id": "806e7ef4d48b4c5baabd9c4967a82da3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 282597.65116159455,
        "Y": 19589.515814211729
      },
      {
        "Id": "9b88ca9198764ab49f6d23fb0e91ec3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 282869.62232347479,
        "Y": 19589.955034934632
      },
      {
        "Id": "c0e60e0d29f84442a22ebfe3d012b6e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 283175.810915294,
        "Y": 19606.656564456131
      },
      {
        "Id": "ac7623250ad84e61a5380527f6275cc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 283458.58760204376,
        "Y": 19605.296209479733
      },
      {
        "Id": "01ac341a919148ee8b75fadc3452fd54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 283696.49482772639,
        "Y": 19604.155391031229
      },
      {
        "Id": "dd20b7ddd1b24d4aa2c8d32ae8ff2b57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 283997.30883683579,
        "Y": 19595.08236517433
      },
      {
        "Id": "96283d1d9b7144b98ee6e020f4ad4afa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 284321.00965630857,
        "Y": 20054.75297225493
      },
      {
        "Id": "57dbd372bcca4d8a8ec276742d95b78c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 284291.73650063446,
        "Y": 20590.357517207733
      },
      {
        "Id": "6295cd04273a4568851f135c5a8aaab0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Intersection.GeometrySplit",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 285050.62591927976,
        "Y": 20573.311593721031
      },
      {
        "Id": "946827a38874418185eb3c3503c1a251",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 284639.06406819116,
        "Y": 20059.348812847529
      },
      {
        "Id": "578c4bc1812140aca02122adfc43e410",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 284638.86242322525,
        "Y": 20584.325074969631
      },
      {
        "Id": "2b52be6b4dcf4ed99787f221aa87e2e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 284673.53749379585,
        "Y": 20318.300816818228
      },
      {
        "Id": "a26eef1ce2f54e69936507649fd69daa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 285512.56537806673,
        "Y": 20579.873838109233
      },
      {
        "Id": "7766f07b125646979af299758757f63d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 284220.81053784315,
        "Y": 21134.287822883729
      },
      {
        "Id": "6fa50e4bf47841c08d5b6f381f78008c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 284889.88529454824,
        "Y": 21140.355748306727
      },
      {
        "Id": "21a114b3266344d4b918274c6428fadc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 285220.96708962938,
        "Y": 21141.870388400428
      },
      {
        "Id": "0456f3a6c1034a119684371ffce4d311",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 284567.99863919005,
        "Y": 20994.043632234832
      },
      {
        "Id": "4ab4db12aca34e5dbea117186a4ef2cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 285533.65860526467,
        "Y": 21141.981438485331
      },
      {
        "Id": "9c98055fcd0e481ea520ae57b702cf57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 285853.99615859374,
        "Y": 19912.117055708732
      },
      {
        "Id": "89ddc9dc69ee4cbeb377e6ef0a555b57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 285832.93894221954,
        "Y": 20576.26079191803
      },
      {
        "Id": "a4f9965e43584075ab535f285b721862",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 285834.53843505506,
        "Y": 21140.628117166234
      },
      {
        "Id": "fc735e487a464219bf70b6096407a503",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 287038.62093784235,
        "Y": 20548.059175306829
      },
      {
        "Id": "8fb44fc2dd7746b49dced82917199e0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 286078.63799501129,
        "Y": 21138.428677222131
      },
      {
        "Id": "a7d6a5fc54c94f408956893ddbe84bb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 286304.97329743556,
        "Y": 19911.810106464731
      },
      {
        "Id": "823dedbdeabf436b8b617105608b470c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 286625.29493793438,
        "Y": 19908.82104014053
      },
      {
        "Id": "0daec23e7b744649bea94c039ca2853a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 286303.27222984785,
        "Y": 20110.989742233833
      },
      {
        "Id": "3a6fa6622f774487b51d252c9dafa320",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 286623.59387034667,
        "Y": 20108.000675909629
      },
      {
        "Id": "381da0d1e4654c6eb1b0cb331af24e4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300794.86315057287,
        "Y": 17357.840374729232
      },
      {
        "Id": "c87ac979e65c4f4cbdf270a756e968e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300796.711424333,
        "Y": 17486.076798757731
      },
      {
        "Id": "7c2e383de5bb422c8cc3946c168700aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 301132.09879314067,
        "Y": 17448.51341345123
      },
      {
        "Id": "d792de49d0624cd1aadfacb1a86db3d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 301904.40223575116,
        "Y": 17440.354842722631
      },
      {
        "Id": "4c632c831603491f8643854b12598e86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 303117.07336658094,
        "Y": 17454.730263466328
      },
      {
        "Id": "231c4994d51a4dac9dd474752c282eed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 302373.47544716514,
        "Y": 17739.142113933733
      },
      {
        "Id": "646ac919488a4ef3b6521d57f211522f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 302889.38342499454,
        "Y": 17742.78446722863
      },
      {
        "Id": "1101fb9fdaf24c8b99feb385b1401626",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 302653.15080957249,
        "Y": 17742.262871093728
      },
      {
        "Id": "945980a7c82d49949f1113cd9201b4ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300155.95557637268,
        "Y": 17868.765288231232
      },
      {
        "Id": "2358c7fc1af048cd908ebfab7ecb05df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300629.59126902645,
        "Y": 17946.025431572532
      },
      {
        "Id": "7e51a5a6ade74238aa1888a21df17fec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 301237.65563772287,
        "Y": 18093.56871752183
      },
      {
        "Id": "236da7d52fc54d7c9eeda27a3e2c142b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 302161.22936486406,
        "Y": 17859.00085590623
      },
      {
        "Id": "d875420d2d58414d87d2b8ef65354017",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 302659.22286653728,
        "Y": 17924.68723660133
      },
      {
        "Id": "4e70b83851614b11a9b432aeae526719",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 303609.76695710176,
        "Y": 17708.875163518431
      },
      {
        "Id": "82319ad83d3c4dd4ae0bb094fe091257",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 303889.44231950917,
        "Y": 17713.334888271831
      },
      {
        "Id": "b557c77fb6b546c3bf05d9e8bf3ff0e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 303397.52087480068,
        "Y": 17830.072873084333
      },
      {
        "Id": "e02eade58cdf46db9d809ccf83554d8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 303895.51437647379,
        "Y": 17895.75925377943
      },
      {
        "Id": "7cee4fcb571840c792b53fbbaeb8368f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299748.98527932854,
        "Y": 18099.577026248331
      },
      {
        "Id": "979bdc316c4c4ed3ac61b74bedd2d90a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300630.54673633474,
        "Y": 18097.926015991929
      },
      {
        "Id": "c80a110b94a64c28b82ad21e9d4f3073",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300943.00738826126,
        "Y": 18095.155784294329
      },
      {
        "Id": "9586089e6f17403e871771cb8b980cf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 301577.57280571194,
        "Y": 18737.91735509703
      },
      {
        "Id": "96962ad669ea48b0b5cf69737610d104",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 301841.48495562875,
        "Y": 18701.89676566223
      },
      {
        "Id": "8e6276584f5544f796405808e20b3b9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 301580.36717309325,
        "Y": 18593.814182573733
      },
      {
        "Id": "78ad9399044d4dc0a89eb29b17700e36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 288372.51255519839,
        "Y": 21629.102508204931
      },
      {
        "Id": "4856bda51cdf4fcbb4c294b8eb747ff5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 288562.06982191536,
        "Y": 21460.126455740829
      },
      {
        "Id": "ee5504001716467f9728244cee98a166",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 288793.13962730468,
        "Y": 21626.580794375732
      },
      {
        "Id": "e9dc9b5543f3439eaf8883f2ea4478a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 289159.31554553728,
        "Y": 21634.273149061533
      },
      {
        "Id": "3b785069fd34440eba82cd80f7a6486a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 288794.949494223,
        "Y": 21827.407984646932
      },
      {
        "Id": "247ebd7fd8354c2aa4040d10a3c2f9aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 289445.33671506005,
        "Y": 21632.906584295532
      },
      {
        "Id": "2d3033f427b747729e242d44cb8b614b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 289782.72319282574,
        "Y": 21633.760934028731
      },
      {
        "Id": "ede83ee17fe54f8fad8037fed3bfa90e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 289184.24148552795,
        "Y": 22000.459348880933
      },
      {
        "Id": "b2e92c79b9b44141ab2a3b53f574c11c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 289579.20406002254,
        "Y": 21999.26387016943
      },
      {
        "Id": "426d1ed233b94aecb23f55a5a0158759",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290184.29068736319,
        "Y": 21957.883389080431
      },
      {
        "Id": "da6c166538234da89990967cdc3350cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290551.87052692665,
        "Y": 21958.600332150629
      },
      {
        "Id": "0bb88797223d414eb5ffbc084440219d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290986.68493406894,
        "Y": 22509.842125725329
      },
      {
        "Id": "5c01edfbfc704e3f8bcc144fe209d65e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 291241.70610282436,
        "Y": 22333.813188759734
      },
      {
        "Id": "dfa1f3d1a4d348f09179e2a42856154a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 290974.89021533204,
        "Y": 22333.813188759734
      },
      {
        "Id": "394315c2dd7b4525adde59a6e4a783c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 291603.71760846709,
        "Y": 22333.813188759734
      },
      {
        "Id": "9ab6f15e6d77453483e5ad9262003d9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 291039.36672118504,
        "Y": 22178.400877292734
      },
      {
        "Id": "05d97713e1d149a688fd2fcdd1bf017b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 291300.757516671,
        "Y": 22197.775075537233
      },
      {
        "Id": "581d282db07c458597a4ee481c895b80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 291743.15907730709,
        "Y": 21961.075416283231
      },
      {
        "Id": "73eef8ed1378447ca8d26b7bbee6bdca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292104.97704084334,
        "Y": 21958.054486886533
      },
      {
        "Id": "78d48edc13f24c4aaeb9561c9451033d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292321.9785666992,
        "Y": 21568.228272058128
      },
      {
        "Id": "4a1cfda38dd34b69be8af718a57c49b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 291848.11697023886,
        "Y": 20930.937790518932
      },
      {
        "Id": "e5ac0471ee4845198366065192ed417c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292590.24331885367,
        "Y": 21430.092934324828
      },
      {
        "Id": "e065716666794f77a28aab68fb23ae47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292280.97668464028,
        "Y": 20772.040268879733
      },
      {
        "Id": "344b3e5b1bd1483da9a0ac8f6d602e92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292642.44895472587,
        "Y": 20768.576564608433
      },
      {
        "Id": "48843d6bd9d04e8f86432def204f5ae8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292994.70443924,
        "Y": 20767.713254925729
      },
      {
        "Id": "bdcc9542dd1d497bb97f22c203485d33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292280.350306261,
        "Y": 21093.331783987931
      },
      {
        "Id": "3980307ef3a9407f84070e456f63b3eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292641.82257634669,
        "Y": 21089.868079716529
      },
      {
        "Id": "05ff947c5868496fb666c9dbaf61656a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292994.07806086075,
        "Y": 21090.44403057103
      },
      {
        "Id": "143d056f62a843a9a23279ed0aa186fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292116.71359419526,
        "Y": 20398.460453487831
      },
      {
        "Id": "e6eec743ae2d48a2b696354ad374aba8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292499.63121279317,
        "Y": 20397.59882558653
      },
      {
        "Id": "598b8bfb3ce740f5a1c1ed75e03f2f44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292353.75458487048,
        "Y": 20602.246382067431
      },
      {
        "Id": "78acf781e7d441a38d6cf29614cf772e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292860.81078386778,
        "Y": 20393.206220214634
      },
      {
        "Id": "fdffcfbd68e6453da2f2d81b4080a663",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293213.0662683819,
        "Y": 20392.34291053193
      },
      {
        "Id": "035d5686fd1d4e9da0761910efe5545d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292101.42167401756,
        "Y": 19802.452829936432
      },
      {
        "Id": "d3b086466eec44979dda7bf4e937ce73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292446.26143363724,
        "Y": 19805.806788938531
      },
      {
        "Id": "23b74485d0b745199b8ed1d827aacccd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292756.08332359127,
        "Y": 19804.615166284828
      },
      {
        "Id": "f58ae06d5dda4cc0858836aa1962a385",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 292989.64136371046,
        "Y": 19803.42354363123
      },
      {
        "Id": "d68886c2d4d44e2788d38b1eeda53e10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293283.96575314127,
        "Y": 19799.317848489933
      },
      {
        "Id": "5a98856223c04f52865277a227aa6f5b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293645.14532421588,
        "Y": 19794.925243118028
      },
      {
        "Id": "37a94ad58322462083bb6f623288850a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293997.40080873,
        "Y": 19794.061933435332
      },
      {
        "Id": "a8de750ee99f40a48377dee9b1e65e9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293311.92725024035,
        "Y": 21097.623750882631
      },
      {
        "Id": "6a46498712f3417a934c518a94da6d2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293293.94743161916,
        "Y": 20765.545311875328
      },
      {
        "Id": "1785fa4b23cb4c639d0813dc56319f20",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 293469.48052649049,
        "Y": 20389.130901129131
      },
      {
        "Id": "654e67bdd57e41babfcd050c5367f4b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 294187.60049331846,
        "Y": 21125.836424320929
      },
      {
        "Id": "f40f9939a9284eb482e9d5e6247fa24e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 294561.57621876115,
        "Y": 20964.842947095029
      },
      {
        "Id": "9127aa3f3b814c82afe66ba65b85684b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 294559.15774647694,
        "Y": 21336.470051941331
      },
      {
        "Id": "401efb31c2774e32ae1588570a71b3d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 294174.92667043518,
        "Y": 21514.515307884831
      },
      {
        "Id": "72715426b0f84e54846762e28b83d13a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295199.18505554338,
        "Y": 20957.141585314232
      },
      {
        "Id": "96704159d6d54f5785751fc5d0fc2195",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendStart",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295593.858790237,
        "Y": 20960.055937079429
      },
      {
        "Id": "1361e92fb339477c84df83d13996e4d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295948.74329623079,
        "Y": 20957.180492867832
      },
      {
        "Id": "d9030a764d474e338cd0c6e588071758",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 296287.30670145038,
        "Y": 20956.93694227693
      },
      {
        "Id": "01b7c9b261b24aa69b506585469f831e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 296526.71239343355,
        "Y": 20957.180492867832
      },
      {
        "Id": "589a7e0ebbe548558eecd22894e4a4e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 296798.68355531374,
        "Y": 20957.61971359083
      },
      {
        "Id": "4a13550fba024ce4895a6a420acf7f6a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295209.36337510624,
        "Y": 21467.765154551227
      },
      {
        "Id": "7c2d21dbb38f4866a753d9f0a333c79f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.ExtendStart",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295521.97263798385,
        "Y": 21468.282429443134
      },
      {
        "Id": "9a7158ef1fab47faa48df5fb8968331b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 295959.81823455787,
        "Y": 21460.23576296353
      },
      {
        "Id": "6adeed88b80648529ac43dd8e02555f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 294282.95537925127,
        "Y": 19795.252697141332
      },
      {
        "Id": "72b93f6011e44ec3a665cc2d49090dde",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 297151.19594750705,
        "Y": 20982.820086177831
      },
      {
        "Id": "fcc5c251d4d946e2bf3789bc864bdc1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 297453.08440398227,
        "Y": 20819.671489830929
      },
      {
        "Id": "18e7524319864d2f95e88836af7942b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 297807.47824626637,
        "Y": 20829.633881034228
      },
      {
        "Id": "c2f243a742734fbb8cc21498bfc0c90d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298264.90287120489,
        "Y": 21098.000591007731
      },
      {
        "Id": "1c1856c5c4b041d882e4cad725d9a057",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298582.95728308748,
        "Y": 21102.59643160033
      },
      {
        "Id": "830db1b6f04c4f28a0f9568394467a77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298235.62971553078,
        "Y": 21633.605135960628
      },
      {
        "Id": "d00cc8c6eeb243ec8130db08d6baf1ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Intersection.GeometrySplit",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298994.51913417608,
        "Y": 21616.559212473832
      },
      {
        "Id": "7e218ee50a1142438a34a4a1d9df62d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298751.43783440883,
        "Y": 21614.185217826627
      },
      {
        "Id": "16052f43be6749079a0d4f6286f5e358",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298760.23787686077,
        "Y": 21330.464075438431
      },
      {
        "Id": "00148f95a0454db1844c56b1f795a43d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299402.03671145986,
        "Y": 21589.595910523531
      },
      {
        "Id": "bae5b1f07a5441f5b1734796435d0885",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299722.41027561278,
        "Y": 21585.982864332429
      },
      {
        "Id": "d999e55b81464db0abdacb1909cd7ccc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298069.67317884078,
        "Y": 22210.26223892883
      },
      {
        "Id": "d444247bd50e4907b1ecce6f5641e7ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298738.74793554586,
        "Y": 22216.330164351828
      },
      {
        "Id": "280cf5b5e90c4c759f9aa6f46427b8c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299069.82973062695,
        "Y": 22217.844804445529
      },
      {
        "Id": "1e9e6038af5e4704aecfe2267ff783c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298416.86128018767,
        "Y": 22070.018048279933
      },
      {
        "Id": "a97fc8c0ea2948c392a3717f2be2c7fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299382.52124626224,
        "Y": 22217.955854530432
      },
      {
        "Id": "ac6113e487394600900740b6bbf5308d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299683.40107605269,
        "Y": 22216.60253321143
      },
      {
        "Id": "8eeb2e44844b40deaf697b428f30b212",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299927.50063600886,
        "Y": 22214.403093267232
      },
      {
        "Id": "e42bda631c674129b8b3895e54eb8353",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300152.13487084548,
        "Y": 21186.964158279028
      },
      {
        "Id": "7fcbf0189c0d4e409bd2d53a84ad529a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299702.85879959137,
        "Y": 20988.091471753833
      },
      {
        "Id": "f8618bb8b4a9424d9ca3320f8d132f5f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300153.83593843319,
        "Y": 20987.78452250993
      },
      {
        "Id": "73226ef2a0294424bc2fbe1af56c1a78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300474.15757893195,
        "Y": 20984.795456185733
      },
      {
        "Id": "17623e88a3c64e26a1ea47a9385de1fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300472.45651134429,
        "Y": 21183.975091954831
      },
      {
        "Id": "5771d5adfe7241cc919ccc76f531579e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 300887.48357884,
        "Y": 21624.03359135193
      },
      {
        "Id": "65c3e1e79c4542e6a2df3bf18e20deb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 289246.53567448416,
        "Y": 16209.447730050131
      },
      {
        "Id": "bcb4800490b0471c8cfbfa09a292c52a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Scale",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298249.37663624517,
        "Y": 17508.397263370629
      },
      {
        "Id": "9b4bdd99202a42c482a3f2d787fc0411",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Scale",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298267.733137641,
        "Y": 17775.001176495229
      },
      {
        "Id": "f8835841b86c428fb4f44ef4876bad40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 297981.02702215227,
        "Y": 17363.524962402633
      },
      {
        "Id": "0cc85196291b461cb2c164e1aae8d0f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299556.17491923657,
        "Y": 17504.97896541093
      },
      {
        "Id": "f670b2b644f94ef19afd196e929d3c23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299548.34529865108,
        "Y": 17352.35081206643
      },
      {
        "Id": "bfce1670e41649038d12ae066506406e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299215.76287962479,
        "Y": 17508.413513864929
      },
      {
        "Id": "3f21e69c277b4bcd8ac689ce8a78b439",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 299843.76061910519,
        "Y": 17505.389111905628
      },
      {
        "Id": "73c5f0d1f2eb4265b854884e879743cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298635.57993628265,
        "Y": 17766.96852185313
      },
      {
        "Id": "d179f6ce2f6a4b6d87f9acc9d2b29787",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 298951.20866115537,
        "Y": 17767.486030721033
      },
      {
        "Id": "98ad769095a2437a96da91e618a5535a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 304387.07172925514,
        "Y": 17454.688880247031
      },
      {
        "Id": "b30a10c13a9b420e8cc9501626857953",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 304397.38692945178,
        "Y": 17292.792252440031
      },
      {
        "Id": "a87ac7e9879c4bae814c7c72c6ac3a43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 304712.4396096553,
        "Y": 17455.864769684733
      },
      {
        "Id": "b45a758cd41b4800a5122a6443077ba8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 305067.59289265936,
        "Y": 17457.61379530673
      },
      {
        "Id": "73823241e51345aa8e07f182bc871676",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Cycle",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 304125.67493493104,
        "Y": 17713.85648440673
      },
      {
        "Id": "ecd8010b215344248e02071d6b24fc27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 306497.22577045747,
        "Y": 17298.664483156128
      },
      {
        "Id": "a08231ecab5e4c90a2545db137f4392d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 306829.15746072645,
        "Y": 17166.03112936403
      },
      {
        "Id": "decf95c100474e47a4ab3662923a9cdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307156.49118899484,
        "Y": 17126.60547702853
      },
      {
        "Id": "761efde2c7834a729d2f193c8b71eabf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.ToNumber",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 308115.55812849948,
        "Y": 17113.018228390931
      },
      {
        "Id": "3088c7866fac4e649f7e9c6529487400",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307783.77746546303,
        "Y": 17114.967775805431
      },
      {
        "Id": "40e1f84e8df14eb4ab985f246e9520bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 306759.48537181976,
        "Y": 17425.67325485433
      },
      {
        "Id": "ae873fa5488242d0bb53eba53b64f055",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.ToNumber",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 308108.29240124446,
        "Y": 17320.028523425732
      },
      {
        "Id": "f4e5a6f0913a491899ce817b344c390e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307768.57549288438,
        "Y": 17321.592991186029
      },
      {
        "Id": "97f8c48621134da7807e0d6d5dcb21ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307157.47212123626,
        "Y": 17331.35519247573
      },
      {
        "Id": "a3ce1f47f46943e1ae1b31a3c0a3c24e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307159.96494638023,
        "Y": 17524.046718027028
      },
      {
        "Id": "f2bb48467c6143ea81dba14b37c90d5f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307771.06831802835,
        "Y": 17514.284516737433
      },
      {
        "Id": "825571e7466d41df942244665c7e0862",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.ToNumber",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 308110.78522638849,
        "Y": 17512.720048977033
      },
      {
        "Id": "19ff095ce72643f7878c04a2b295967f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307162.44221566018,
        "Y": 17734.652870563528
      },
      {
        "Id": "eada62fd253643dea8d15752a1af82d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307773.54558730824,
        "Y": 17724.890669273933
      },
      {
        "Id": "9b3cf041b1144e8a94c5bf873f9b61de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.ToNumber",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 308108.58644877875,
        "Y": 17737.354342182633
      },
      {
        "Id": "a4a7cb30af90491a88d4b0f2b0c753ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307451.74781079148,
        "Y": 17124.672597982928
      },
      {
        "Id": "5510335e57cf4dc5b37d37c154683b3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307459.44192632317,
        "Y": 17324.930063156229
      },
      {
        "Id": "808a23cf08be4481a90c2dee02448678",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307457.11550332588,
        "Y": 17525.191209679331
      },
      {
        "Id": "8864259bfd844025b17adcd45ebc768f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 307456.27667249605,
        "Y": 17737.214384273728
      },
      {
        "Id": "251b8dd36b7741e98b99735d48d782d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 305824.66870140505,
        "Y": 17427.498020679428
      },
      {
        "Id": "a8a4163c6693446bae5b34527362ae5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 309677.43607116176,
        "Y": 17105.99707379593
      },
      {
        "Id": "993d91e4f4e34c988d91ac9faeb1511d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 309333.76614236657,
        "Y": 17111.99016755413
      },
      {
        "Id": "043e067ad77543bc91d29141bf2632e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 309355.03586847987,
        "Y": 16798.759446258631
      },
      {
        "Id": "0869c7b67a054bf9bb5b32d879f83132",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "+",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 309213.41369536263,
        "Y": 17477.498655956431
      },
      {
        "Id": "754c07125a2545628aa22c2c81bc9ef7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 308861.97686785238,
        "Y": 17507.12924438293
      },
      {
        "Id": "46dce0a9878b45e6890541542add99ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "+",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 309237.75376825209,
        "Y": 17711.07838349673
      },
      {
        "Id": "9266180b23c34b02bca7031d7f2f755d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 308886.31694074173,
        "Y": 17740.708971923232
      },
      {
        "Id": "afe0e68b592a44389aeb77527228d443",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 308995.55315535358,
        "Y": 16800.595734195733
      },
      {
        "Id": "a2b529f653b3423685b2433b6a90bc4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 308562.87996554008,
        "Y": 16574.38980158473
      },
      {
        "Id": "d7d59fe238474402906dc2448026c70a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 330099.66250149306,
        "Y": 6778.8108023806108
      },
      {
        "Id": "1e65fb99aa8d40d8b8970152e81266a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Color.ByARGB",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 330561.72253100877,
        "Y": 6990.78584602326
      },
      {
        "Id": "3e6a4526298742f08458c06df7993ec2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 330352.85276956687,
        "Y": 7043.132476987781
      },
      {
        "Id": "304c38d67d0d42d286389152e01eadca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 330533.27754774445,
        "Y": 6781.7022234249307
      },
      {
        "Id": "1b9755a862664e4882a46222a03c1dc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Transform",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 311637.89945282554,
        "Y": 16109.413787312131
      },
      {
        "Id": "641fface36574638ac9bf806b0daa445",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 310857.36835695338,
        "Y": 16794.745738308531
      },
      {
        "Id": "b5fd6f61dbcf4a8ca575f006fcc8ab92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 311042.04567377927,
        "Y": 16026.92114420643
      },
      {
        "Id": "d31c577805624a4cb42fa026f9a4b228",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 311036.42688222585,
        "Y": 15803.41285218663
      },
      {
        "Id": "e22d805c9e494c9a87fc8e890c9cb82d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 312234.11719609116,
        "Y": 16000.479234244431
      },
      {
        "Id": "d0f955c7ede04cee8a38605013551c9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "BoundingBox.ByGeometry",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 312082.63362836593,
        "Y": 16118.28774653933
      },
      {
        "Id": "94175b5a01d84ee3b71a2df0b0259672",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 312746.016677595,
        "Y": 16078.519649750031
      },
      {
        "Id": "4964372c9b1f4ca0a6a7a060ca5322dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Transform",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 313125.17356123804,
        "Y": 16489.11386863923
      },
      {
        "Id": "870ee68f7db64b70a0214273b4011bb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 312437.83410136966,
        "Y": 16116.964272640231
      },
      {
        "Id": "641f42a98a5744e2992acbdbee5bfc3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 312443.13790210395,
        "Y": 16344.347551206731
      },
      {
        "Id": "49ffbb415d4d4ffbb374ff2fe6b5fc67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 312451.39230003225,
        "Y": 16514.25797434483
      },
      {
        "Id": "d383a69d09c04a16acb39318b3380ec8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 313646.82286825666,
        "Y": 16494.746183858129
      },
      {
        "Id": "6e45d8d0942c49848cfde262c3052fad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 313921.61656334955,
        "Y": 16498.25335044603
      },
      {
        "Id": "11478e4165974215a3dc0cd877d0f378",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Area",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 314165.42060718639,
        "Y": 16671.099500927332
      },
      {
        "Id": "6941bad8a98547439124466cc921a26a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 314452.8910469343,
        "Y": 16790.27237310123
      },
      {
        "Id": "652cb955175a493fb8aa4e14666c6893",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 314686.68820837478,
        "Y": 16793.001522845731
      },
      {
        "Id": "ad67cbcabd73497cb020be107a0d6905",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 314906.83962109307,
        "Y": 16668.370351182828
      },
      {
        "Id": "02790ef505a34c2084b6eebf7711cd55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 315182.00312238705,
        "Y": 16501.576100908031
      },
      {
        "Id": "84d7baf790ab43829c03e8b4211c6dd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Intersection.GeometrySplit",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 316688.65325076319,
        "Y": 13839.62136327776
      },
      {
        "Id": "f210dbc8760744529448f56bf360d822",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 316066.09997748781,
        "Y": 9696.0181263971481
      },
      {
        "Id": "ae8b40b2aada493683fbf2625ada5e28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 310286.52318726119,
        "Y": 16800.370565776131
      },
      {
        "Id": "e386d5e920a14aa28d4a0be6b4a0bf8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 310017.71924218419,
        "Y": 16799.080237859132
      },
      {
        "Id": "2862d95a63e0456a8d5fc0ab8a6e5e22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 315900.01824743941,
        "Y": 9499.2582232938566
      },
      {
        "Id": "b6329f7c46ea4ecdad82b4f855abf3bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 318413.37395443663,
        "Y": 10156.545090326968
      },
      {
        "Id": "1376c79f7aa54d339b940dc5b9642120",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 318981.80288569845,
        "Y": 10629.025745081188
      },
      {
        "Id": "4bf21c0125a9472bb00b07099f864ecd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 324312.68395415752,
        "Y": 10545.131800075358
      },
      {
        "Id": "6fbfaccf46e848b988c293e7436f7521",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 324259.01755537291,
        "Y": 10703.193967394907
      },
      {
        "Id": "dc910d58dbf24211baae9d99fb6928a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 321709.32927421533,
        "Y": 10714.459004161057
      },
      {
        "Id": "6899887b9be94f52bce5119da9307d39",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 324016.98789124639,
        "Y": 10705.377171826367
      },
      {
        "Id": "a7199b4447c040e3bf8e66567f17d9b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 324553.14002123749,
        "Y": 10703.437404888027
      },
      {
        "Id": "a056a5ed233c497ea4c9528901756d3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.Direction",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 321342.18811113533,
        "Y": 10764.887198176419
      },
      {
        "Id": "680b0d82dded44daaa351feb4b86d3ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.AngleAboutAxis",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 322006.74623199663,
        "Y": 10712.901847314037
      },
      {
        "Id": "bcfd1ff1ecfc4af897aebbd62de1179f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 323676.13005682692,
        "Y": 10708.738817572766
      },
      {
        "Id": "487be2cbb67243e591847a31807fb89c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllTrue",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 324809.21201320429,
        "Y": 10706.930594346717
      },
      {
        "Id": "a96ce8febd9e4c3d89ee5e898f268ae0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 320911.9849887187,
        "Y": 10762.189754519977
      },
      {
        "Id": "a9f7121d78304bcfb25d5b56c3bbf0f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 319617.39178571344,
        "Y": 10756.760033745588
      },
      {
        "Id": "edb92f3a00214743bffba9ef040210d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 323354.02329586912,
        "Y": 10814.287677835408
      },
      {
        "Id": "b3fb7736cf6f4b32858ddabca2b4b044",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 323052.0077712803,
        "Y": 10816.212891989637
      },
      {
        "Id": "225d6c7ec240406ebc602e0d63407bdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 324983.46599234222,
        "Y": 10556.860770015277
      },
      {
        "Id": "10730c7dcf684c83bd63f8a918d15c9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 321720.2293721445,
        "Y": 10881.074786792438
      },
      {
        "Id": "c69002ddad7c4e6587427e5460ee5390",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 322489.88170030504,
        "Y": 10875.918844580248
      },
      {
        "Id": "85b3e470c3d84769893440a8cd3f5ff0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 320285.05567747483,
        "Y": 10888.855059902087
      },
      {
        "Id": "84a681ceba594ff196d734349495680a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 320603.31326630031,
        "Y": 11029.960125676078
      },
      {
        "Id": "b7a97c512c5a47b9a2537bafcabe94f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 320197.65348389291,
        "Y": 11030.697537418087
      },
      {
        "Id": "4996c980405c446bbaf1fe55c9c199ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ZAxis",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 321735.80094061472,
        "Y": 11025.890373565499
      },
      {
        "Id": "84f850b810ca4e79816c18f09046a358",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": ">=",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 322486.36809923948,
        "Y": 11020.745507039146
      },
      {
        "Id": "a1c6d3553990432a827beea1d0794888",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 322757.69324079482,
        "Y": 11019.647024684667
      },
      {
        "Id": "521772b9e97c4d4fbe89b63136b1213c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 325171.3000036382,
        "Y": 10708.580594855577
      },
      {
        "Id": "e7965ded87314edf95bb601837e975bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 322303.04831210343,
        "Y": 11208.676350505537
      },
      {
        "Id": "5f3f2de9229f4e2986ff9c1904d186cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 319608.47955992405,
        "Y": 11358.886670957387
      },
      {
        "Id": "58ec23850033487ea57d99a08635522c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 319964.56955063372,
        "Y": 11360.962203012577
      },
      {
        "Id": "a639cac5e3b84135a18c47df4bbb4ea2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 319971.38615265221,
        "Y": 11642.687412615018
      },
      {
        "Id": "c93edfb078f74ff38d522954945a707d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 325353.65141561429,
        "Y": 10306.149391332247
      },
      {
        "Id": "9389babdcdf74f28b6fbfe4ab2dc1648",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 325389.6822466958,
        "Y": 10096.975185436759
      },
      {
        "Id": "a0b9865789d6459887dc3af4e6183f71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 316790.75975019805,
        "Y": 10194.247937445309
      },
      {
        "Id": "49ca0d50a2a440fea9ac826e6c28aa6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 317170.06390434952,
        "Y": 10325.223020048988
      },
      {
        "Id": "e725381d5ac24d18a0834bd12cb92fd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "==",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 317453.53325273743,
        "Y": 10323.934523010868
      },
      {
        "Id": "c2360a9dda88426caff7f2712176fbf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 317169.48863027763,
        "Y": 10198.587499996438
      },
      {
        "Id": "53f7676e83bf4f79976875014b8fda54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 317664.8467669902,
        "Y": 10325.223020048988
      },
      {
        "Id": "5865aff975d84393b0d98d90003a6e36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 317456.61564931553,
        "Y": 10183.154091552298
      },
      {
        "Id": "049cb0ad0c134bfc8182600156fa6f60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 317897.09295214491,
        "Y": 9969.1402912116573
      },
      {
        "Id": "2f3707f0319541a3aa689993b1017faf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 317880.825675367,
        "Y": 9665.3732783128071
      },
      {
        "Id": "00c2aa152649471986362404e096c928",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 327046.576379055,
        "Y": 10616.644619748176
      },
      {
        "Id": "8551a08ede8b46109b1d27f819c8db96",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Curve.Length",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 327493.39896310272,
        "Y": 10635.363885109118
      },
      {
        "Id": "cfef5828738a46ca9ff53e1b4204401d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 327750.6763405042,
        "Y": 10825.761717146997
      },
      {
        "Id": "aa053067525642439692ec086eb42c4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 327998.2306363465,
        "Y": 10822.601449540498
      },
      {
        "Id": "bf026a85daa74b108c67650b164877a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 328232.66506605491,
        "Y": 10823.285474110928
      },
      {
        "Id": "3200946e67b74628a4633e981d285daf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 328755.31830337341,
        "Y": 10817.882722974948
      },
      {
        "Id": "1b4c23dafaae4a2da98fbe4cf225867a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 328523.53821199544,
        "Y": 10681.238057605768
      },
      {
        "Id": "e2755ef17f7940fd9735bcda93e1534f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 326640.0142840264,
        "Y": 10174.444255775206
      },
      {
        "Id": "56ca8e957f364280802ca1fd13803a1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 328901.95076882158,
        "Y": 10339.184327052577
      },
      {
        "Id": "f584733b8a184db1b83a59c9fc74ca6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 328910.91851021833,
        "Y": 10156.242402559708
      },
      {
        "Id": "1d36a38d786842b790dd224cfe559079",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "GeometryColor.ByGeometryColor",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 330834.93210629548,
        "Y": 6775.4531795886505
      },
      {
        "Id": "a975403396d541699d66c49a2db5c1ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 330975.63312483078,
        "Y": 7354.191686472981
      },
      {
        "Id": "e39a9d3b5b654374be47c86845c7c323",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "<",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 328513.62136301666,
        "Y": 10909.81874711769
      },
      {
        "Id": "c5bc65f693124246867f712ffe85f64a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 331330.87350468832,
        "Y": 7365.9246264608082
      },
      {
        "Id": "0bc7a78e898443d88b0cf711325aa8bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 305397.80422427622,
        "Y": 17858.608311671574
      },
      {
        "Id": "906b1747dc9e4f73abc8d368b463298b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 306054.59119219647,
        "Y": 17818.669039748715
      },
      {
        "Id": "d2671cc337f14baba1e30938824f3c74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 305633.69187118119,
        "Y": 17907.252189094233
      },
      {
        "Id": "e771692bc62e4320b047bc99a9d2d07b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 306744.7327757586,
        "Y": 18541.786475469478
      },
      {
        "Id": "b933859834fb41bd9ce853a399281970",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "Test_BR_001",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 305492.90427899029,
        "Y": 18187.433436919702
      },
      {
        "Id": "ad0f4931b5da426f939811cc0036e169",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "Test_BR_002",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 306986.64156598912,
        "Y": 18453.990612887828
      },
      {
        "Id": "3d01c43b6a894e55a643695e1a3ec472",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 306454.0128475001,
        "Y": 18528.978859166727
      },
      {
        "Id": "812984b5aa8c49bcaa218e797d3e1a62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String from Object",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 306249.31746255071,
        "Y": 18373.5937520403
      },
      {
        "Id": "0b76416f90c04c3487e2b6f1b7f588dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 8401.70447925626,
        "Y": 1685.3561465968505
      },
      {
        "Id": "378ba2ffaf7b4c48ade5a7368cbd326f",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "Testpunt_001",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 8686.45612478826,
        "Y": 1691.7714342466506
      },
      {
        "Id": "82e9b08a6026460e9b75f50920523f60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 8028.04517404165,
        "Y": 1678.4985877815961
      },
      {
        "Id": "e8bb3a166a1d473ab783b220357fb24a",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "Testpunt_002",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 11246.963585661995,
        "Y": 6730.2130220579247
      },
      {
        "Id": "84dc811288904859b124cf57d47026bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 10962.211940129995,
        "Y": 6723.7977344081246
      },
      {
        "Id": "bad93817507d4c3fbb8aee667cb8e69a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 10588.552634915386,
        "Y": 6716.9401755928748
      },
      {
        "Id": "c53474c86a4e4c058991917b35e81894",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "Testpunt_003",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 85819.938301001152,
        "Y": 1113.5932705198102
      },
      {
        "Id": "30f62fc88306488bbaaaeebe2d602456",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 85535.186655469151,
        "Y": 1107.17798287001
      },
      {
        "Id": "63e3c99445004293b9fae8175f78da59",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 85161.527350254546,
        "Y": 1100.3204240547602
      },
      {
        "Id": "3b61d640094b4e9a93a4c2cdb3c6cbed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 103765.19940808583,
        "Y": 1226.2042710699652
      },
      {
        "Id": "68fc97d9f0944e8cab1f76ac65a0c0a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 103391.54010287113,
        "Y": 1219.3467122547152
      },
      {
        "Id": "ade213c6f09d4f6f885d2bca19f4f4d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "Testpunt_004",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 104049.95105361783,
        "Y": 1232.6195587197651
      },
      {
        "Id": "1d282dc8f9a84d6ead6ebfeedf89c8de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 143155.06684580323,
        "Y": 1128.5876566094657
      },
      {
        "Id": "7d28cd90087a4160ba5a22dad815efa2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 142781.40754058852,
        "Y": 1121.7300977942157
      },
      {
        "Id": "363405c413e14ca38b21fdedb37616d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "Testpunt_005",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 143439.8184913352,
        "Y": 1135.0029442592656
      },
      {
        "Id": "76eefcc36bce4fb9bf6b535ca62939cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 994.00444587785751,
        "Y": 1374.8125711834148
      },
      {
        "Id": "ffcd54014f9143c2a61241764445d7ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 620.34514066316478,
        "Y": 1367.9550123681647
      },
      {
        "Id": "844e76c43f3e49ec9735193a91fdd086",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "Testpunt_006",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1278.7560914098576,
        "Y": 1381.2278588332147
      },
      {
        "Id": "b7222456bf0c49c2a11ddb3984c91247",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1449.7382950909951,
        "Y": 946.07759893769332
      },
      {
        "Id": "3a0d36d84f784aab877be74e658c4d4d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1076.0789898763019,
        "Y": 939.22004012244327
      },
      {
        "Id": "9458800e80a74ca0abb3334621d90299",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Name": "Testpunt_007",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1734.489940622997,
        "Y": 952.49288658749322
      },
      {
        "Id": "b3dd47a6cadf4e2ea8a7b0a510f71874",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Data.Remember",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 554.20928180770045,
        "Y": 306.57119671441342
      },
      {
        "Id": "3506b703d51c451897bacab0a3074c80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 586.554177428914,
        "Y": 136.292572295311
      },
      {
        "Id": "7284e476f0304950b971d8c127beff6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Data.Remember",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1127.5465931584829,
        "Y": 544.66801860597741
      }
    ],
    "Annotations": [
      {
        "Id": "1ca24067fe44439591e9c54f671c025b",
        "Title": "BackwardsRecursive",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "094cbeaece2349e2b3388c490f65256a",
          "316b7971661e4a8e87df7a79a181effc",
          "c4b0ab193ee54ef7bcdcd3a28ddce405",
          "dbbff9e5d6c84958989c36722e4ca73b",
          "859f1d8f449243e69d6b633b4b49cb6b",
          "cf84f1b9e59f426586c721d18dec3afa",
          "de25c7fab1cf4881b0291b1b2b8f8144",
          "eeee196f1aa24e5b805a7470cd7663d6",
          "d86296ce55bc4abc93eb7f2a6962889d",
          "7a9d1eb0ebe64100bc52e9ccbb19bd89",
          "872d66e58b924ba199f79f62de7d3c30",
          "de969e9ff2c943c88b8dee5d795c56c1",
          "64e7bb83cdf14b338d426670125cf00f",
          "a604878c57dc4764ab1e7b690ffcd52a",
          "6d776083caa04a2b84fb1cd8a4a6c451",
          "6f5a93e0bd144d2389d57e905cb7b199",
          "e7a84959628545d6af055ae37cbdd104",
          "a43acb0f487c4ed28c95704e3c722370",
          "8921bbe933bc453b9eb6f22146fa8e79",
          "dac845c82f214a9891d5f85314d6b924",
          "bc8f554e32b14dadb2d7bb06ca7871a0",
          "35cd6269d5654c32a1b507a2e793e8a5",
          "70b1e2b4ef614c2faec8c77d4daa5785",
          "b2fad91f25944442b8b300c456de134d",
          "e2c1b129d987473d813d2824cdb5210d",
          "7da7fb917c71400cba87d13bf1f21594",
          "843c7e3669ed42668fe8c46a427ae6a9",
          "38d6d9e316f94e2fb1112d21f65e25b8",
          "5ca133eaa781425f8394b7a22fcc8b80",
          "4c06886c3fdc45bc813f39b3edb05878",
          "334df44163cc4d60908b88a81d0c9646",
          "1fbdce3ccb734b52aa77f67fe93dd9f6",
          "84b24c2c99ac4c54a34e48ae93827a22",
          "6a7ff1f5faae4a35874138f9bc522cb2",
          "d0a28d16f1784fcc9cbefb406fd05601",
          "770fbce93420479d84e9649d3abccf4c",
          "4ff37ecfcb8044afafa9635f38955e93",
          "8e51e22974254aed9479cc0f16e88518",
          "1124d375da204fa1abdd8eaee8664deb",
          "4b6bf154e6b6479caf77cc574d4d16c6",
          "1aacc98d5bfc40a39c494b12de7a54cc",
          "fe5f9185e3544ce19b6bd583e7e262f7",
          "910889a43c0744d7859a3a543a013472",
          "3448e0fc65ef44168167092b46faeb7a",
          "34407abd2ee8488892e6248b3e3cc4c4",
          "38fe647eb63d45feb712fac3600d0f81",
          "b8e79952d7f74006b2ebb45b9eb6c8b0",
          "d2de2646cabc4771a149a8cb50c6aa7f",
          "fb5fe8e3488d470b91168b6ff0c7b001",
          "1f182afd44784e229881a5d5043c1d13",
          "f44eab1294a64f3b9db6cc339471eb07",
          "6f8c6e84123d43c9857fcadbc909494f",
          "39a1c1b5b8fe4b9aa5fe4f8c45efee7a",
          "92e0285d5cb14f3a875e888d75d11948",
          "64178a3cf9324f0f8c15c452835b02e4",
          "5b7505197bb247fbad9b7124acc9e01b",
          "8397891a82514c90ac1cc4ff20945944",
          "d1796507ccbc4f74be97a99698bb87b6",
          "c1c1283cb7da46239a0e129cf2c702a8",
          "d1d6f3ba311548838719e3001d620ef3",
          "2289485f22eb4e6184ac812c07c6d8f2",
          "d4ea6d5c6d5943358bd8aa43724a313c",
          "1fb3c8a1003c4f17b7723d53e91ed395",
          "adbc16a7778943bcbbb90eb5e825c632",
          "d0f3fd66dca141079c9f00fb7bcdb46c",
          "c5dd673411a84e28b4a3dfc0517187dc",
          "ac7e3710ab514c42a761d29b6bc0e9ab",
          "0519f441614040058eb6aa6f15012066",
          "dd45d4f4923544068f540a9b9d0093f9",
          "93b9882ee78c47728426af7347e7bc19",
          "b996bfa5c581406aacb10fd14bb75f81",
          "a95b5489ee894138beb569616c274e1d",
          "6ec82ee12a334da7b9a8adef54eacb83",
          "d110168d89cd4307a75ae9e391d9413b",
          "cbcb8343cc9e47c9bf25ba14aca9177c",
          "32fccbba12994ac489d07f06da8b5ac1",
          "343e18e4038d4555b001d74a703a487b",
          "c6c97da8c7d844e2a5f068182682eabd",
          "b312ce0901dd4eddab5007c6ce215a40",
          "246c05ca6b93411595a3e41ad37ffca1",
          "a49d81b6f9424e22882ae3b4c83c254d",
          "cb5367ee713d40ef9c69ff269b9ab72f",
          "2e210134e80f4eaa99ed0e3d21026906",
          "fe7d4a66e3fe47b4b35ff069db4b9bfd",
          "c8c8646404444d68a95313d7051df54d",
          "e67cb05bbd0f4ca58930efa5fdcb0b0a",
          "35e6d9df2aa849c39812afeca6610362",
          "26489c7945f940f48bcc3b42ce17a2ce",
          "d22b2032e23444a2a89dcc794f5bbb62",
          "a17a5c0e5b5447e8a49c12289f9997f3",
          "7ef9f7c8e23046e2926c675eefa2f47e",
          "54fcd0e03d7a442e824da61b775a335e",
          "71c03bfc208546779f0192631acc1c86",
          "99eddc713c6c437286bc894bf17c118a",
          "60ddba8664734b4f87418a4780784626",
          "2876d8655c7d4d6a98fba3bcbc0742ec",
          "97dafe772aa5408a82ff5d70a13d426b",
          "8c1c45082c14415e9fe9298f7cb7baed",
          "30ae04055d56466da5f2d26fa6e15629",
          "b98b7680cd77437e8b3b24408399f9dd",
          "e9af60cc01fe406385444f4ce8b43882",
          "5a8b7ba8d5834c78bd7aaf1978fd7f4e",
          "ebcb84b1040844ec810caa07b0fe5f7b",
          "8f6aad720cb84e6483315ddd091107e9",
          "032ca287ed8a4bcea94f0c6daf7bca3c",
          "39b9b1cb38914521a1719d5049353842",
          "f8d5d64d9e994ae9af3ee8fc3c49a209",
          "40412fea99f745268fb03009b425c080",
          "fa9d203157044b21a2732f12b8c68c50",
          "44fe160f57a742bfb022a7d7f2f7c5d2",
          "d09001cd7b184ee69f63179deb2bdc6e",
          "89470d8409104871a406de1d7a86bed0",
          "d2e3d2c9f502430795bad4e269508968",
          "e5d2788322184d8d85b58abb5f7f10dc",
          "261cb84be1b14e8c908109d47ab29c99",
          "f4884cade5994d3ea61b75071e6392d8",
          "19bf9025a47f49de9956bb08bd2fa0b5",
          "12cdff4f3d8741e59f58924ce97e34c2",
          "be1b21d35f184b648dfc9c8a9a1ed93d",
          "89b09ce888044f43b69e37e94939a194",
          "1c1e0e6f7b9946bb9ed593d3a77adc36",
          "9cd39846ab6e45aa982caada5fdc5639",
          "3f2b240cff10479f89f5f37793f4c353",
          "f490f5f68f8d4036b61825754fbb017f",
          "a1fd0870f0094d98911b6368b6db70d4",
          "b3bbeb2bd8a540809592494d562e3566",
          "6a0539528863431582d3e6c09646489d",
          "ee269d1a193649b9b953a09065402bf7",
          "339d9f82033c45a5ba8951db4685badb",
          "24b65244582d40f295ff3bc397c37e74",
          "6a06b2e2fbfb44ceaa164dc970107cd6",
          "4f60413db7e645c19c27f9bdb4442a52",
          "0b9c5b62f9c54366811ed21bac974196",
          "a801d9a64f3f4b589abbd99eaf09a07a",
          "ad74026a59874eee8cabec7eda8dda2f",
          "6bf9b130eb274903bf5d517c09219857",
          "9453bb0772c74b7ba215b4130672bfc7",
          "ccc444e5a42b461197f9d5c62569fabd",
          "c67b34b080a64ca1a9ed4bf158a9e013",
          "50363477491c4fb1a0c47e1d30a99e7d",
          "ed30409e18dc47a9974e14b08cae2f9b",
          "0b38fc39b20648df93d5dde03d8a8fe5",
          "61c62d3ede8644e4a5e9295a2eb99587",
          "61ce9dfccbee45b786a1d3e1fad24f88",
          "19896675fc6b4cbba0406ca88e5afbe3",
          "37d6e545b9264e97aa78e3afe324b74a",
          "037a3061765c47bdbcd41c9bbd694903",
          "66b4a53a494544a685373d219b079ce9",
          "e19349c552224dde977c3907333ecd5d",
          "c3bb7231e4744fec985748d8668311f5",
          "7172df7d82684fcb86b6bf39e9a82dfc",
          "14e5f940a01d42b8b55b8678f5c507b2",
          "c0ad703d7d2944f1abdd10f7337ea58e",
          "5dc31788439b4f61ab06a16750c1b735",
          "72d47a6f12994d7ba1ce05241c831e05",
          "a68f6eb5742443f39853d7449b8034b2",
          "7c415d26e85149b1980306885f892f2c",
          "65c50ecf7dfa4c1f903a0ecd173e8920",
          "f08b23a88c63495c9132cec7635c540a",
          "b8fcb539c1fe4d1f968058e95c7b4b6e",
          "d1cf030fb0214bb5a67d7fe324178458",
          "97edbf0b99c34e5e9e4b5e109a8ff7ef",
          "b4dababe28c046a8bd6e0c70ced7d3be",
          "74c19ecfbdcb481989f21df7bf193174",
          "f5690e0ceec64be89cec41558af6e3b6",
          "6aa903355e4544dc8b053a16d7694af3",
          "7a217366648b4aa5a1b712f84ffc86f6",
          "2cc6595be67a47fb933276f4bf01b563",
          "e99766de795148a19a1ad702eb12095e",
          "4d3c9010ee0b4c1e8df90085e1abb0cf",
          "b01244e81cdc457f846a893de36f916b",
          "a9e82b1079e047ffab6f3cd42c3826f3",
          "367c722c5da9494dac85078fb9368b0c",
          "d45a8638ec084b68a5e58214a7ca9155",
          "19c43ade2ad243958476a5392f228a84",
          "239849e5914a472c8611795df998b929",
          "814135e11b2948a48adc4e69ba4a3b0c",
          "935bdb63b07a4f9ba0f9138ac08aff88",
          "f67392ad94ff4152a4121fb5b05a2e10",
          "b43dea033fa846349fbcb566956a8adb",
          "47460ece24af45e7a453285d90775cd8",
          "4b700da853274808bc7a11eef2817b9f",
          "6f752e370a2848a29c0206ff25405eb6",
          "88dce6f4b0a940f1b00fb5265e093c18",
          "2f8816a2af184b3a9382e179a4d17c2c",
          "2df335f3d9644656a10447e4a6fdc74e",
          "bc2e08e7496447a2b3aab17599a45233",
          "813f30c9a9814ee180329b311caaf6da",
          "d494506d4846471999a8017e17541f12",
          "d15858fb44c74c3c9270e2d2c46405b5",
          "1259f1d9907f40cd9d59c843080f0d5c",
          "3575812e893247e8a918fa11cbaa76fd",
          "9024c8c52a7044e58ad6c3e85103fffd",
          "b01c28e7a71c452fad73b10237ee6b5e",
          "09ae3d337ced4d2cbdb2eb249502b000",
          "12d10cfc3efe42778fd8f62a62778f38",
          "9424a4e28ac34e4f81694a3d7eb4b0cc",
          "1ea759d1df54489eb7c1456bb5377c22",
          "9221affaa44e4cec8ef72ae2e42481d7",
          "552769d0859e4bd997c06bd90a76f1c9",
          "a962f1c49f3a49f4a88e5d6a4276c319",
          "9070259638d94494bd45bc401fca2fe9",
          "d59507916a544c449391d61e2360bbec",
          "cc522c70aab34d78ac8f241e731b55af",
          "f8e54511861a462d8bce5d17caceaadd",
          "b70f170edc684b02b4816744ec5ca9b4",
          "b3c99f8622004b0aad8c0f1843a60131",
          "545d968efaca470d80fc8fc897f82039",
          "948563fa491146f68e941509ae53dfd3",
          "68c816353dea4078b4c6bd34c65c9f1b",
          "a31da3b246334222b6f7429ac0fa27b9",
          "43400f11d5134214999fead9bd2a2dec",
          "422fd25761ea43d984a8ea02062bec95",
          "96ea33f867fa458ea201960e3dd7be60",
          "b182fbf572c24ce3a009f8908889f124",
          "92377479d7944cf290e1d4295bb33285",
          "d0c62da7652e4e96a683961cbb11cea2",
          "d4a872557e0b41a59b5ba992f6728fb9",
          "5e82b9368d214b66a11c0021ea7886cf",
          "b4b9784d38814521912d75a7f5ea1651",
          "4b6181b28ee44359b67d5e035b1055a7",
          "5089953226c249568ec86d6f8084299a",
          "39301a8c68ec4546a1fa9b0e8e7ca7be",
          "60d71e5e1c2d4e47bbb1e09d5cbaaf4d",
          "cccaa5bf11bf4986b9239d9f10544641",
          "6733cfbca87947508fb421402c543df7",
          "01f2c512b2514b8aa27a58b6c44930d9",
          "60ee4e737adb49028a95e3579666c1c5",
          "0b77575cc72e4a86b8330a24b14fe8f0",
          "f7582d962f1e4d1393240c58d9b175f3",
          "2b961f42bc2540d697db32fc144440f8",
          "8bb7795453ed4aac8a9d318afbf78c1e",
          "9b549a8962814dd98cd6e92cb3813df1",
          "9deef2b2c48240f3859b7f10ca74688b",
          "fd10822be23c437781e214578712adfe",
          "341467036a524281bdeffcbee10a97f4",
          "6dbb4a096e1240be9c0c956c9acd6c99",
          "ae6db74e43df41389183a6f3193a1201",
          "32e2ce209e29468a8e1883022a5fcf01",
          "489303116186478e9700778fc54efacb",
          "d4d810866b1842109adccf752a23c07d",
          "55fae366dc10442999c779b41b9f58bf",
          "2675eda8667b432eae06ffa8321072e5",
          "8f62a9a8d9124cf19313926ce1820362",
          "db2dc2f42ee744129e5bc984402629c9",
          "0a9fb078d90942d7ace421c23c480fb8",
          "7e699d92d83e4ab68b890ab0bcb4339b",
          "478fa0c359b845529cc1ef9c424b5cef",
          "be02f64a33ce4f1cbfaf930bb178948f",
          "19636cc28c1c41568f5cdb533a808896",
          "056dcf4dc15d4becad6d7705b112c770",
          "35ba10ba63d643f493faa8e253ed9a49",
          "7dc642d6bcb0411883082eae1a4514dd",
          "a81500493e41428f92dde8b530452713",
          "0bd82bfde34348d8ad5ec689d17f8e6f",
          "edc07693e3494048959b43be984b19c1",
          "48bc066cf6554b9b826eb093dc0de856",
          "8d50f6b900704193b0524805c1cdd8f6",
          "4f5ada85112f4a29802a8c42919a1580",
          "3bb83b1fd22d4579806b4483aec710c7",
          "15cb2ee21a1c4be190a6d2825ea72aee",
          "78e038fe5edd4795bd0e8afcada697d2",
          "106b520b153949eab4acb38bc2c7534b",
          "aa2709ffa17040228ff6e01630452821",
          "3249135edfc24f49ad287a95c3053f94",
          "52820104dcaa43d3a26ae0bc1f61239b",
          "17234024546045fc807e1835680a6b92",
          "48e1fe8e4d4e4aa9945c8a1b820e9492",
          "095e05fdd73f4f7fb3802bb0bbf52bf9",
          "9a391672755b45d18f299ec47d40d637",
          "886ffc00d2e34ee7bed109c5d2afc0a2",
          "c2cea56d3cc9409a8b42b647f98ebd56",
          "6bc5b2377abd411b91e8776bba3511d0",
          "9ac18d3943a04e06ab1d02d0bda7abec",
          "cadb8893f3b442a88a930406583615dc",
          "745ce91ba924468eac5a7fc5acdb352c",
          "0e9544eb22e746c3bf906dc404bf1e2e",
          "62a567e7e82f4359addef896b8be2cd5",
          "646124467d5b476c8ab4c03945e7fe2c",
          "6ae242120c2b4f0684ecd1cde6723846",
          "dabad50c2da44713a7206b3380594a1b",
          "5e6259cb0dd54d469838623bba21bf00",
          "9311f196402445d8a303717ed95f475f",
          "2bf63c6fe3b04d9a8b023bb8c6592874",
          "b11887d14c594bd8b6675d0322903304",
          "7b851c886eb541be83506e9b086b936a",
          "2f735fbdb0114ab59d6237da4e36727b",
          "a69bebbe6bda4673a06ece4f0ca5d78b",
          "cbee4b9445e849319dbf888863b207a3",
          "48aaf0ef5497458587603de86b8dd9e8",
          "fbb5507c6a0b4175aba1c8ea9c10dfe4",
          "350457397b6f426dbf78f95a61577f5b",
          "ecdd4d0bbfb540fc88e9535e4181f617",
          "b1b816af4e44481191ac21fc336e2ace",
          "4018e5c9dabf485798b3c7290c3f4af9",
          "f578867f26f844d89ffca7651cad97e7",
          "6f2c3535433f4be9b893751d08761532",
          "1f61ef8f9e3746a786afeb7e215bca06",
          "196aff27114e49fd9f9de77902bf9b66",
          "9255f73b83a8478fb92b747edca34297",
          "2e199f09d663414faf9b359622938f4c",
          "bc4506b74ca14e6599bbabb41bb98217",
          "2aeb0ebec1144378ab7faecc06c7ecb0",
          "e67ac464ece444a1a9f206bf0a5834e3",
          "acd87c12939046e7b15e6fd7c92b1092",
          "b6370e2cfd224b92b2c88611b840251c",
          "de4ad25478ad47008e4f1323f40750db",
          "bdb610bab56f46cead81517d14447432",
          "ffa6a828ec1e43459c8b0752051539e0",
          "8e181b0f8d7144078d0c750b4f34fde7",
          "de484eca01b544b088adc2684daee429",
          "caee770c87e1463fb786a2d858afbc62",
          "7b5a99dc16574a5db06c139a72c94dde",
          "050cdace957d49f69fd994097172aff5",
          "370013e2dd9e49c29fea595486dc34ca",
          "1f472919beab44dcb26a181a595e6452",
          "05881eadb38b4b1882739354464bb8b6",
          "6d1f3a91e8434c88a8296b5224ea1a4a",
          "d2ffeb1a819b4c6e9819ee2642505994",
          "07d74aabb67e41f5aa129cc2cb440f0e",
          "c70ffcdec82b4ffaa24bb2422c40a658",
          "0ef8d8ba65f54d5fa7d4f8195261e39c",
          "4330207919624765b40f6ca8ad1b3847",
          "7f8b32b92b3249189b136ea800796c35",
          "be5d2d3ca07c40dfb09caad68e31fdc5",
          "6f4f1d8703f44f17b7c9afc525c4bca9",
          "8c64f6c730bb4a599ee61ca46a30d844",
          "f16a27bba0e0422f86477de5f4fb939f",
          "c36e444a954a4a88b54a483ccce2f336",
          "62914d6b6eb940de96c3e634292c3757",
          "7e8726a95734479b81c57a2f50af8372",
          "064a42744ce049359263f10b4b6f546f",
          "e7cb037d78584fe68abe1785e46d9af9",
          "18f5148fab9348e185259434b799abb2",
          "34033da6768f4bb89d01ee983f68cb0a",
          "6e7803828083403086edcea6c190bafc",
          "52faf53087a4449a88d74690caacb53a",
          "98b526ffecf24310b266ef7ef724547c",
          "1d8f0c4d950e4bc38edad01ca03b94d9",
          "b13c906d2d3449bbb1ace52b61cd2b00",
          "5d3c275f44b4448587a041521e838d68",
          "89032c67c71f4462b2b6b091a4269ad5",
          "4f467dcdbc1440108b9f3eb66ae94c95",
          "5d11f14e06d448dea665cd836bf8bb75",
          "70478537bd8448bd9b7c55640ddc1138",
          "90f13639dc8a470da0d35a643bfb8036",
          "28881d480f564a25ad1f88422874cb16",
          "b279d57a8f1b45beba77433198be7a35",
          "8d3f2259a9a6435d83fd31774bbfd67a",
          "0f02cf88baef4766a9cbd38286fc8b9d",
          "ec7ad49a8e2d45d8a54f74f1c764720a",
          "ed3476acf2254f6f85a64a74a3787ada",
          "efd3a53499324d678bdbf308402915b3",
          "35cc69b2a7d14ffcad7a3c2d039f7593",
          "a9a43c81cf184d4c93783de91b29e2fb",
          "bdf78d96a6144526859a1a6a2a826738",
          "8cf1ea1ea95442d7a7c7544444cd4431",
          "63b8270965ed4278b76beead6e0fdf0d",
          "0a36694eec864da3889938d417756300",
          "cd0740ead0e84b16a1ad1be82bcb5bf5",
          "4e6dfa93f47d40248a0b0677b379fea0",
          "7e573e96224e4a44baaf79a1a9fe71dc",
          "bf6aa31bf2004e4f981f3d19e58a10c8",
          "32b26878486643529b24f6fe24dce017",
          "401a8464f1444d32a23da1e0d82e248d",
          "c7c5f7587ef24fbfbbd28cf76206b720",
          "08b1eff5595a49bebd4a4bf22393e9d4",
          "6a82c078a7954c44a735f66ae87c6208",
          "556fe60f605a4d69a71ca1bc5e0def83",
          "34873fdaf659420386ee12ca29922836",
          "6f0ffb7a2ed24736982b5670dd37322e",
          "0ded9bf23a8f40a891fa6d63d4429dbb",
          "ef1186f7ac8e4ef68ae5696c345c5d9f",
          "229abfb2855f4db78f4d96fc36e44dc5",
          "d687fb5008a940e68e6edb8d2292eb00",
          "d72278645e5e49adb3a16c2f0de0a590",
          "9c4f09550e2648e8af9af9e42ead99cd",
          "ff3641e083f74f79b129a4c10e5a0304",
          "08720d94e4d3496a84ae0c13e599b0aa",
          "d7a42158a30b4271a5ee3801c9a458a3",
          "3be0d78c8e304f50b019e9f339c6a901",
          "7358452803b7467a9ea20e3c28f6baa7",
          "6ba084c6f70b4348a0abd8361283fd68",
          "86f2e0ca6f414281b05e33fe8c202d03",
          "466790c55c064eaba1e13cd20a6aefee",
          "95a717f0236c42d9a72e676fad150c43",
          "ee5fd5dec9424052a7b9a748aaa8360c",
          "5f314d0cd0fe4e86bc827ff0363bcfa7",
          "f721fe9a76e14a06a8d7856ce4a63dcd",
          "a6a28cf66c294c93a3f866be369746f6",
          "d12117cf5a3f48248cae4880fcca122c",
          "5c33457af1d242738433cebd1f336e68",
          "0f5c06f7662043a68bffa8bbc71f1a7f",
          "4922b5dd473a4edc88b83d58c2dce29e",
          "d0314eb243ed41c38e39869949f3358d",
          "fc59141ce0344b8481b98c59c0f066f4",
          "836d4112411846528ed3665c049b5a0c",
          "b8dd97d6e35c4afe8e54551309d263d6",
          "4a0fc9301f0d4c17a4a8314274873d98",
          "dd93953b02064baf9940e871f49bb00f",
          "af499c19e12547fbabf20c722a1e2ffc",
          "62cbf94932df4de7b8f2a19147f361e5",
          "266d578de81f40e197e4ace64344cdce",
          "8b58eb1d0fe94acea4ef37782a3b107f",
          "81bcccf982de4dd0b2cf662a3446796a",
          "f4f9cb4631354068bdf093d8a328fc31",
          "e36b746bd7454f38b4acf9281fde1871",
          "431d033845924ffe9b8b374ac344a903",
          "d23112db46154d19ae168ddbc754c8c9",
          "b01829763961407b82fbfd713cebc2fc",
          "af5a7efe3a994e799c306bb00a339c05",
          "fc9a3453843f4ece97f05bfd85993285",
          "c1b72850619e46dd9142fb81f9809793",
          "0940e4aefc7e411c90495cf407a1fecc",
          "cdd007a1a5dc4f7bb7a98a624ac3faff",
          "0a7d5028727e4620beace58abc3e228b",
          "18694277afd642e9b870563a3d1bced2",
          "ab52ad4cbe41484598324c0323249f5c",
          "e1eaaf7884ac4c3388cd3b14ada334ca",
          "13795b269d304eb4a416989ac0bf068b",
          "c5138acaa8e648348f1c985d0b1a71f6",
          "02720b19eba34fcab03ea6b040450f63",
          "1dc7f1ca28d44b8b88aebcf63bf9ad2c",
          "229c801fc9504a448c6db581051a27a2",
          "0c768c59c4cf4d089766c6abab48d09f",
          "876d429c45b041e9a64d6c0b3c840454",
          "a8c31f11bccb47e487ecd83a452bcdf7",
          "beec01683da2411dba2bb96e0ec0f272",
          "9634ca97151041d1b35427436f69c9bc",
          "707ab92987a44b3d8811f2097f899607",
          "80552ce0e42a4a80b212e0329a2ef29c",
          "1af9b7399df747169e7825c71ef1b529",
          "18c7c84c3c10443dbab6656e1b994eb2",
          "3250dcbe724c41c08532b70378c54d34",
          "592557f1fe1d490f8752bd9a61739732",
          "4127c464fdd04428822fa44714f111e9",
          "39ba0329037e4d12b5cd1ce7393ba242",
          "11e393c508264e019e0c0a42072265fd",
          "05d3dca482824165a843b007e38d837c",
          "f9fb22964b054df79343fe6fd34e27af",
          "d605ec094c514ee5b851bd37c2570c6e",
          "cc2238c7bb304625bf316d1ea073348d",
          "dcaef47bfd1a439aaeb128e95297bc37"
        ],
        "HasNestedGroups": false,
        "Left": 9680.22172393518,
        "Top": 2669.3604674856033,
        "Width": 74912.133333333215,
        "Height": 3931.333333333333,
        "FontSize": 96.0,
        "InitialTop": 2814.6938008189368,
        "InitialHeight": 3757.9999999999995,
        "TextblockHeight": 135.33333333333331,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "d1c8d4836f6741bb9891575d2bc0c8ca",
        "Title": "OffsetWegen",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "29e766870d8b404c88f18a28d64d6a7f",
          "c355d99d6e8144898d745874ed7df4db",
          "96ceb1b7feb644e8afeb81869bf10eae",
          "6b5e425350764c11aa486c35d1713358",
          "381719423f3c4260801cc569316bc4a4",
          "9deb6942f91442809dedb64a52747bd8",
          "30aee3c273f74712ad963d18dade68d9",
          "2683f0e7b6b24954b2999a61a58fb94e",
          "1feb0a05301b4d9b8b9b48323e1f7071",
          "c9603c76d41a4b4e885759285757b515",
          "b04cb6f421544e5895cb89f9d23a9266",
          "2fe0e2fe17d248aba43aa9539202a9f4",
          "87030e6d524a46c3bfcce6b59d45fff1",
          "b2df5d341620491f9c613c0782a7ad2a",
          "66ee6f6692d74a4f968368b91c76dbad",
          "ce284535aa9b4ae083e6e9707f47e9a2",
          "86574239c5424714986e774f2e28929d",
          "156eb8280ba046abb6de4b8f9d974bd1",
          "8634b15128b04bfb9eec0f6d94aa8952",
          "3156b729fadc4fb495c51a490c2af056",
          "73c1635ee0f3450c8c97e1ee392c0b13",
          "3d4c885f167f48e4bd03503988925740",
          "e6dc05179bde48a99411c9ab595e0537",
          "baf9da165736434680c3d1223dbea78d",
          "f38373f1b2b74c6e9760955941bd66ec",
          "4f0fb4e6a082454bbb792a92b4e0cc6b",
          "05ec6b14020443d28d5c066c021b6bce",
          "457bd0d2f5cb48d6972f2ec76cd9e3ce",
          "6d0511d0ca734bc39e72472384581fb8",
          "03ec2f997a1a429497fbf5865344527a",
          "a8840281360845d894292e02ba9fc88c",
          "602ca54d7ec64eb0bb8e12b5527a61e4",
          "27c6f4eb4aa945e48e06a1a31bb5af41",
          "a9ee00c18d8c4ad0bf0da3cea0066fc2",
          "7f5f853aee4f48e19ae6c67f15823e76",
          "41380069bebc4b68a23c553416ac0c2e",
          "f7b9489a87954e109ce329ad0fc13461",
          "b34064c4b731422a939992a8cd549248",
          "2234df3b0aca48a9bc2ab6b93e94de8a",
          "cc31bda3873d42c990697b99fce95bdb",
          "947bb69c642d44d1a6788b02edfa0c2a",
          "17a1365a0bdd4d1392f76586e1a1c25c",
          "467a3f3329fc48dab8ee645444dc7c6b",
          "885aef59c479462fa91b5600372e41ee",
          "52176e543d514062bbb29d247ff419db",
          "85892e2e2bb2426884ce28b6765dae12",
          "5eb94034304c455f81ce25b91b5c3fd8",
          "dc8aaddc90124843b7332f62cb0c9cd6",
          "c0f0a03761464708a681cb273df4d694",
          "db79242e004845459317b609012a65dc",
          "0e9fbb6c3e82433085d42e4c4da6bb6e",
          "ad38ef7e5d364773a8c7cb55e633e414",
          "b535777d9fd24f76a04ad7e09d9eeed8",
          "ebcb8c28090444218496afb2c978a75e",
          "2a8acc7d2c304f5da3b7cee92a71e13e",
          "8f3a491202724fe0b197bc7dbd485e54",
          "bc03a17c569943fdb42c5b252c1ba501",
          "4198c721d9e1454d8d242535df6172d0",
          "a85fa9d7db144e919bae82e7fade3e3c",
          "febfcb3327644de29e7be2e4c1695f17",
          "7d6fe66d59cb41ab98bd59f26ed88833",
          "1278e0a678da49408aa5d7882256c267",
          "0ef4b6af89794f6ab95ae3367dd6bf01",
          "ca7c3f07104c48fca7e4d21198654859",
          "e17e2036a37d4754aac19abd619810f0",
          "01a9805ef15741b38b533a30ba524355",
          "0d7c033936504ddc95aa8868a6e2c463",
          "80e4766ec1514303bde07ce8135de36a",
          "f8fce789e8ca49c7b11df089422eb18e",
          "441db34fc44e41c8917e16b14fcc9b21",
          "f19dd066670a4a05900d046a563cc611",
          "4ef2b3ccc92d43fb8ad4d3fd16560ec3",
          "ccae1c85898646219a64c800e196408f",
          "6222d924a527436bac8eee0c9905499b",
          "77a23132ada94b928a80c9c39f35c5ae",
          "dedf8c4e17df4a7982d184e94b1acb7e",
          "0442778b4d214085be87fe0c1a2fc4ac",
          "a980c55cb70d4d068ef9bdda4c231b8c",
          "6d9a1b5253cf43db8390ad4c8630d369",
          "c4a599049ae54460908601e5e536f42d",
          "e8c0b6a2ad1a430c921d27c5e88d6d9f",
          "f054c07870eb4f3199f6ce5145ff4cb6",
          "cf7bace5796b45e5938f9f8c83558604",
          "5fe40067ee5640bd9f00a39c3fb5aa25",
          "d7b4359072ff4217bf3f043172ab7723",
          "4f1d2a08e92246c6823f82ee0247428d",
          "97ffabe6648c443e8ea7fd01ff01ff52",
          "b9a4ea81c34f4ffa90d5d289688d0638",
          "93baac87e9674f809029d5bcc6eebef0",
          "e0eba5a094c146a7b9c490a05fe919de",
          "08589976cc694483beac93170b437b4e",
          "0aaf0dca7002423685a6a4c66e456eac",
          "31fc3cec919e47c8b69eb8f79da1e1a3",
          "f5055ee83a7f469f875d8e58b841375b",
          "6c3489f5385f49dbbef3159238151b23",
          "24691a31ca6c43b1a5cb3cd16004c2ea",
          "0b427c4084154b60aa92c1c993fa954f",
          "5e69123047c4426d9b0f64cd73faf9d7",
          "f19225adb98c44a5a70a67396a222f5c",
          "861a3691d74841c5a304763492f5a919",
          "7540294aa83f4a19893b01a164fd2e9e",
          "429e9680ac174070bbbbb8019908e4b1",
          "143c234c473b47a6ad34bf2f53ed3d8c",
          "fa2886abe4cb45db868590a6a347207e",
          "147a944364d24e74a0ac8e85f8d4aa1c",
          "53052c7fcf1f45e7bab17f6d4a85952a",
          "a0d75a64a8cc463b8242695bb657e95f",
          "bf9a286f50a74855905048d9a7322ee2",
          "8f7ed5b67bb34b2fa4d47ed68f1aaa4c",
          "55a93269cc384f99b74c459668436371",
          "1e7d44837db24d97a84216fb72f6d42d",
          "259c90953e02424a8ba3e66d9d4182d2",
          "5b6a54c731f541a4be5311ba76fcdd59",
          "20e9ea35965241578021782a1cddd79b",
          "82d411bc67e1411fa4f62f271c5caeef",
          "eb51d0e0772542a7acb215000567dcd8",
          "fb0373a4e7b5435ba472ac979da8510c",
          "a2a65ba0095345babfe787aa3545e432",
          "482f3b141f7b4c9082027f94e1d2ae9d",
          "a13dd57b795840e6999815b7a68f1940",
          "d93aa7914e524d848042a2423a47f7cb",
          "aa8b32fe515e4825803bc8d460f28d7c",
          "4e4a54216edb49aca2a46e3eb004b361",
          "24c875befa6c45f4b5aa73da44ed50df",
          "ae753eaea1f24e7c8c516abaf1d3f585",
          "1f06e62cbe2748829eef17a9a4cbf889",
          "224b66de689848e098e4c8c3c180946a",
          "439bcf88200843b18320ab6bc75bb6a4",
          "cf39580d9fd84ab2a18b4baa32d389cc",
          "542ebbde82324f49ae7be2dc1f412243",
          "5f65f15b576f42568f7b2f1a0d9a6917",
          "8db7d55d97784deca86bf8c06d4b4d87",
          "d40866a935fd4077b2bf60b350f0e53a",
          "01b1e213fbbb440e8c4077b703fbeb00",
          "7c5724d4b3e345618c36a39b139990ed",
          "960f40fa981f45759de5b2d97db68560",
          "75be2cc3542444a39f59298e90a8e40a",
          "20f7dfd365454e959c1738cf3118d7c9",
          "d367b6ac13d84147a8fe83de4effc956",
          "02631555e64b49c09a80fc91460f09ae",
          "89f0cc5e1f8d4814a2f785bda45815a0",
          "6906b9a9866f459db02c8075dd99e5e9",
          "8251191e7ec540e89113cb288666d301",
          "fd6f6a50c9e24c49ada8fb9f154b1941",
          "27b10bddc5fb44bd8485a2e4897cd11b",
          "724c3bf00c08480ba48004605197842b",
          "d64f2702732746fa895f8f005b9385a2",
          "fc622c05421e4251a947533d42bc7844",
          "2562fe7db5814a23960e1f63466df2d3",
          "6c99642c93eb4118bdf5cc43a91fae9f",
          "b4dd4de8563645a7a26f89789560ebe3",
          "a0d368865e19445d9166b2b7b59af013",
          "5b3ad14cb84e4bb58b1e998d48eea1ee",
          "197a20533c7e4a789ab664e69b0e05ee",
          "f44328dcbef34559b10b437e126096fc",
          "f5cfe10e75ff435aa3a743a110858ae6",
          "07d5c6a37b894dd2867c45b7bd03d869",
          "3187b9ceaed34b1d9d86a49b61f54537"
        ],
        "HasNestedGroups": false,
        "Left": 86648.479082504738,
        "Top": 2628.9802476167374,
        "Width": 16442.400000000009,
        "Height": 1825.5156250000014,
        "FontSize": 96.0,
        "InitialTop": 2774.3135809500709,
        "InitialHeight": 1681.5156250000009,
        "TextblockHeight": 135.33333333333331,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "078f0d9c816c40bdbbfe4a1b5b2d5fe1",
        "Title": "ScherpeHoeken",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d08a8a18158946ae83c4811328486feb",
          "885f0252847248fe9dc28a9c2a5cdb94",
          "e526c21a1f7f4769b036cf648f12f7c2",
          "4397d0aedde84d659890cde3aaa59223",
          "b6478fd55b1d426bb2db3ec06c6b1c64",
          "b775898512d04141ac07c324407c4aba",
          "a452ef3e8ac3462e9357eda7b3b6e721",
          "3b4a575c182a49c5a13511016a0cbbca",
          "1c560f07eca848bca7ebc5ec05ca1c8c",
          "48a7a3a85b6f415b82eb09b7bb1820b6",
          "137d968023f84b5cb6a00ddf0fbac298",
          "4a160cdb91484e558782f278687318bc",
          "5032a6416e764267985c1a19c251d03d",
          "d8e992d1c1dc476bb43566c2fe918285",
          "77ad84242b2f42a6a63930a4f801d552",
          "49048e9657f046578663f04606132a88",
          "17b775cbbac04accb7494ed490ed7f0e",
          "fc4060fda6754cdba362b4bbf3370084",
          "f9efcff1b279496d858d2f30dbf2ab32",
          "157bc6a378c246bdbda60fbd64918188",
          "94af06dc614d495f8ae711a2ad5522fe",
          "2e7d90a3ad204c1e82fb15080248508b",
          "be6c4319c10a494da7cdc8faa3c30017",
          "23af4c8cf21847bd9239f13e657ce345",
          "9e2ae7a81ef7425c972b375cefa8ef4b",
          "81652ea1138e43668306aff08a152ed6",
          "08ae0ee0d55742439ac0f0ba41ec0eaa",
          "121abbf62f3c40dcad8cdbc35188389a",
          "3185581453644e9b97b29e31e6127cee",
          "df072889a9c34fa08e08349b9b800eaa",
          "448620e1cd36447abd8830700d11e568",
          "51e20449983c4cc1af992c898ac70cb5",
          "9701af81234f41e78f9688a03e55d9f5",
          "4c06aea8a2ea428b9f3f3c9d5bae467e",
          "81cc74636aa24f7598c62ac871a4d845",
          "4ef89347f2fb41ff8ac3297208bcbe1e",
          "5f3f5b1885884e3da200c05a768c9d92",
          "bf71282200534af38fa971e77525acfe",
          "fd0dd5204e3543eb87ad693409f9645b",
          "22d041637ceb4cf58b1570855cbd7959",
          "4be628bb254b4658b7fa51f147590a3c",
          "6b5203d113734837990c0a81df6ba8db",
          "0dadaf8225884817b6d02833bb0502e9",
          "5e229627bbb3477ca35c68db92277f44",
          "6c3b016c7e3a491486b0155fba347d44",
          "0fd37e4c4bf44b0582747c02dc85e800",
          "1b2aa0bda9cf4818a256191b168030f0",
          "ef8c7726bf994681baec7dbabaea7dd4",
          "33f0d1212c424f609c27151f382b157e",
          "5742283829ed45d5ab1e9e546fe6eb19",
          "74e5aed596e24101969bed0980605baa",
          "18b5154a5e1a4b78b604d7708fcd96a6",
          "06a51a5bc38e4b91989e03dc1fab24bb",
          "037c036c37bb47f481b35ca437f6630b",
          "f160aa02d9f844a398dcdcf61dab1101",
          "791bfe7e7c0c413b81cf26d6e46f6693",
          "31342fa41ccb4499bdf9eebd1bfa8588",
          "49452e50a2894bd798e3746179b6c924",
          "8632d35b07ac492c9502d0185b798e3d",
          "c856f2b504424d9ea66f70570e68adb8",
          "a37df4574b794186a2e94709c4cc69d5",
          "2429b6d650904f9ca95c8818cdb16adc",
          "1616f5fc2e214160b0acdeb49d675444",
          "48cf1b91fd694c5eb9bfb62331b2676d",
          "e715b6d22eb84506bd67e57b7a154e7e",
          "31d55cad0b4348048f7880baf9c1a8a7",
          "5f9d4e3403d14990b9ef645b1b3c8dff",
          "1bd2992cc93f4f97a50e0be68e358e0b",
          "7a94552aeec34e92a72171ef552e1b3b",
          "e04f158e703d445a9e2e1b09f093066f",
          "5782de906434437e999054a12cf8a041",
          "47b40f2b76f242aab013b5f33123af6c",
          "bad3a63bf7f44e738c2675510951021d",
          "8bad04810b764a3d849d07a211c62a99",
          "d7c491b0812c4d51a9fb342b45b2b6e0",
          "3b278889fb9b43a6a64a4540d6b429f1",
          "578c6f3b786142bc9ac9b579a084e3ea",
          "254ba86979da4177960196f68d18d51c",
          "424381bcf6b541e1a9b6f3ea78fea8fa",
          "3e0aab527a0c4945974e4c063b4e0c50",
          "5e6d923c195d41758b5d7b4b62a444db",
          "d0cc93954d5d459d882a3a59c988e74b",
          "4541eb6aea8a4a9ab9e11b844b542142",
          "cacfedd21496409c83b7eab66033244a",
          "1e6af6500b674c6a9c92028a4f1ccadc",
          "6ddb398f7b5b4197b3cca7f6a71874c6",
          "ee67bf91c0e043fa95f316c3d4e6d1c5",
          "f9421a42e4644ec592086579d82c20d9",
          "01348905f3044fa2b765fbd8f239b7ee",
          "9c40d51abf1542ec88d535c81138ad83",
          "bb88b544e8d74570bc8a0c87925e51f6",
          "c81312fa3d8740d5a89a1a1d4a444270",
          "ac31940711cb4a7299689d8affdd24de",
          "c705573db3f84da9a1590efd972bf829",
          "1b1182c4b0f74a36a408f6e4f2323103",
          "f0411b44c4e140f89d236dbfb3b40847",
          "5892ebbcca1f407c99aed5fd268a95d8",
          "011700611b7a48b2ba313276fbaefdbd",
          "4db2c43fa740428c9fd4a712146cab29",
          "e09e36d58a5746aaa2647180b9ba948c",
          "21974e8e8aa3483fa4099f3f17d1157d",
          "3c819baa78944a5b909767892717543c",
          "08de5bb1c1924f33a5d10d5700a4a305",
          "30a1c87e879d44ecb52861b47af4fbca",
          "53621483a3814026bc94073d88ca01cb",
          "3059075fe65f4a2186f77a6e2135c0ce",
          "7bdbef9503a34abb86e11432150ecd8c",
          "0b3568c642d6472994db46fdbfb23f5e",
          "1e88830454ef4137a1da24a0efe62b1d",
          "1973a41c6bf5422c880d9a6e9c91fd50",
          "e7937ad909e04ef6b55e0188b406dcda",
          "7758dece59dc42bc95654c1215ab9d84",
          "f61be3adf32a45789c924044af161607",
          "7b42bdee556844329ce6b403a704b593",
          "cc693739f4704c76b7648ee1de8a1e5d",
          "1967320dcbec412497176f161d7b8d5d",
          "5233f6e4779c4e45868b1858454696e9",
          "fb1bfb5de68341de90049127e2e63e9e",
          "d5c96a8cc5d5445c826b2b4ed344edf3",
          "30dc7db664a249348b45045004b68c8e",
          "badcf8c4767246f7a6e4cecaf9cd27e8",
          "13ef8246389d4dbc95bdb03c2d20665c",
          "076817a1bb8a4b7caf286e23f3c3aa58",
          "59cf8978ba794f83973efc5277068f56",
          "775877a83e91448eb0cfdd2b6f8c45a7",
          "0a33bbf0c842449a8ab712140f175af2",
          "69f24b8443bc4b829974db3118e7d436",
          "0879e1dc6a6c4ce4aa7ac31271b300de",
          "f5a8eb9eb4eb44d28a814278e58c0c74",
          "4f6ac9992268490485ee2089ad51362c",
          "46900992ddb645149a9e5699114bf07f",
          "2d5e62cee15a4c939a78e4c49d68b521",
          "4b2c681fd4a04afdacab33019df9b32f",
          "08ecb500de924645a2afc324d67b24c9",
          "6b3f17b1376b425e9cd3aadcaa728337",
          "5df3b39993114bcbac6796add2f70297",
          "8ca03d337e854f1db8820afd1a0478b9",
          "238d2fb3401d4a5f87efa06096c4aa5c",
          "42948a45640e45d381e4a9b64883ea72",
          "6f95b7214e6a401d9481e2ea775ecb12",
          "f10dac5ea96b4d45a8cdd241a899f48d",
          "13740e79c35e492698221dead7b60a6c",
          "47cd990d3ee14307be5e759c75ff66d0",
          "e686e9378e8542f4ba01eec8bee44ae4",
          "56b7a6d9cf8c4dacaa4af0062e630763",
          "3f05f845922f405b9f8476da4b67f118",
          "d924eb44dda5472dbc774ea9981b2779",
          "8a41bd19e885450f8fe6f2bbd1741247",
          "1b3d2489f7594442ab7c95a8d367cdc5",
          "2b1e581c9abd4d1facc1911f13e9cebc",
          "8031196abe6c4d35985ae064a0903e2e",
          "1dbcc9e304104272a31db1fad9c51c4a",
          "ac9f317490d6421fb61269c5a8a99f39",
          "82c65a3f8593473589fe1e1c12ac5cfa",
          "35374d772925451a9197ee9bad2652ac",
          "183cc3ca852f4a019106daf48665f379",
          "d3b9e9010b454685a096544e616d1a7b",
          "418af46706cb413bbcf59c96aca115ff",
          "95e084a03a2e41738e6c17a47dc55dad",
          "cecad4710b3741699bac73b51d0baf10",
          "5ca129b11932407d9d520acf4f6887c1",
          "80b1e517aa2242ecb789f6783f9e54c9",
          "807bb77c26bf46e2a2edbd450f8bc416",
          "49500169a04c47e2898a0cb057f3d749",
          "b8cb2f4bc5d5440dbac49af9931a8439",
          "ba39bcda75854b38bf10911ce00a10ac",
          "c8da0cb7a585467f9f1d4e85d4c43de0",
          "4b11cefb164144c5b89e0d6cdf331c3e",
          "5e9a7004c98248a6a408b9aaca90560e",
          "0be00d6612874a8391ca887782c53a1b",
          "2735a7d893f346bdb0de9b5795bad0da",
          "7d820e19604d4742b7b9fbd5058be449",
          "84d8ea3b0b634b42bb94396a37ae663c",
          "9f3f8a3195624d3c8b029dfb76a2cdbc",
          "3861e6172a1c4dae8da93d18ef42a016",
          "2058d3a6dfae4b53896980a7b7edb132",
          "f1555ebcf06a4fd49bb211ca81fca2f4",
          "eec12cff67d141729417efc518846884",
          "62d12cff1de14523bea06f5ed4b8ffec",
          "4cea2df110d44c3a9ca3e63eee2f023e",
          "244813b8a61a47d8b5a7ab94fe20fbf3",
          "f58a3ebc06cf449a8c81b867d3c9f87c",
          "c614046f447f4d08af89baca6deca5c9",
          "e15e998e86044084bb7dfdee159365f6",
          "e096d4ac472543f4ac626c22b47d5a98",
          "591550b9ae774830b609f0c3a877916e",
          "3007125f2aae40c6999e8ae0b1ace800",
          "8bfc3e202d0f453fac36cd08fa1790e6",
          "dfd2c3abeecd4b7d998cb10a1474a1c5",
          "8a4e88a04f9d479c912e02342c870514",
          "7d5645e07e874cbe87b0d55d225504ef",
          "92c80c20eb304e409408869d4f33fb01",
          "853a007703aa4ed39374ae45dbb6f424",
          "88aa44d6beec4df790d2955a0a060e7f",
          "9b6774f22ed74a5c88df0abff79b8f8c",
          "82aaa32fad04438e9cad6c4de962f8cc",
          "be88c60424b04d70aeac7f4079be34dc",
          "0f48ef5458084321b63c9578787371e0",
          "bed69c1d71b94691adf3a4e784864516",
          "83adff9bf1d7441189f79c7fa3e41521",
          "b386933b5b814c46b37027cb34011a46",
          "9c3c7c4f1508490ca942623051d2646b",
          "0f862df1e9574653b16db6e9b378d681",
          "c0754a02a8f046d88317eb24e6eeded9",
          "9c62c4fa5e994be2b71999a41d4dbaa1",
          "e8f74673179348b694c7e30aae01730d",
          "c24192178ff24fc99055cfbf46aefa97",
          "da2f0bd77e364bbd91180455cf2bc7cd",
          "45f0dac4c60945bba4ca690057535a21",
          "47bd4bacbbaf44c19c5d7b2f11191290",
          "3e63e641fa714e5c83adcf3f031549e4",
          "8f1bdefeb8904d77b0d18ec6548565aa",
          "ad1ab8aa66a14205978438da0e4bd869",
          "94961e3b61bd4bc9943791e205e1fbd0",
          "2ff772458be34a8ab8737fd603647837",
          "313e15e447944d8dad9edbd1b5c64d91",
          "303085642bec4dc785da70099980123a",
          "25d686b96b1743b5ad6a0861896b41ad",
          "b89de08325b34e2eb3cdf62cc9de6745",
          "60aa2308e2dd44efad395e8fa6c58299",
          "93aa3de05ae5420b84344caee148079f",
          "02ca2095dc424261a643e71d405e1768",
          "85467464c7e4498b9bd1220ad53cc3a3",
          "ee9e6e111dc44847a55e73c231bf5fe0",
          "28ba6a3252c74dfba1212f6f6f26e6be",
          "43ffc915cb3b4fbe8c5a6b57e7184896",
          "1239361c589740e0ad9c3c3da19dc4f3",
          "12f9880cb8e940a588f8c7b4096be975",
          "9c2e7304971b425288952a197856388b",
          "ffc8a55901a94753ae628e18f2a45356",
          "b71dbcdb4fbe4ba097cfff33454e1cb3",
          "76a4aa70ab034ed6af19d9518848a15e",
          "5db7efb7835244368c38c08970b92d6c",
          "f59d4e8df5474d43b44bd47e949ba86d",
          "cd30ee99a04046faa958dada977a75d3",
          "ff3679963efc4423bd9aacb32878123d",
          "4e8278b1ca7c43c688d39e6b6c3f2d4b",
          "bf74beb6c73e48c9b9b25774f5006c45",
          "d6662a1eef65491aba73eeb03061f15e",
          "16cf1b21ea2645f3a55df30b9764b7a2"
        ],
        "HasNestedGroups": false,
        "Left": 104306.14276416732,
        "Top": 2799.438868988575,
        "Width": 37666.53333333334,
        "Height": 1604.7600000000007,
        "FontSize": 96.0,
        "InitialTop": 2944.7722023219085,
        "InitialHeight": 1460.7600000000002,
        "TextblockHeight": 135.33333333333331,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "268aa473a2f14ef7b10ba3361806bfce",
        "Title": "Gridsurfaces",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2bc11223974944dda26e7bdeed58ac6b",
          "c3834bb16302489b9a8eb38279ab935e",
          "c386a0fb40e5451daa1ad36a95e3b09c",
          "a8e1b1f030344be9bec52c20c08cc24d",
          "87997e99d47f46cbb56a4af68719d292",
          "ba03a14fa9bb4eb6ad73b57e8aeea239",
          "37e93171a43a4623953e07d845480852",
          "8a77f54d1cd449a8a67848550851f8fa",
          "fcd6ad72b9554d11ac9f485faa165ea5",
          "7b01bbe569ab458f989200953e7bd4e1",
          "bebaba6fe83c4727b5e2a6e48cf64aa8",
          "4e2c2d64dc4f4c4db48cb8d18f8a07a8",
          "63dee91145b846f4977ceb614afdc0e0",
          "4036d0c54c7849bd8add9d2231a18d74",
          "3753a32a4f19430d9f702faf6a2df920",
          "eb670e6169f74d42890b220199688fee",
          "52436554e93f465a8b79a87339441d96",
          "407e96dc5d9c40a48d8d4104bcc893d7",
          "db31749a742947df95944d41e635e541",
          "7a5eac6ff3bf49bdadf0a8698e4e7ce5",
          "6fd273318a8b4e90a045313330317bee",
          "53ac0547950449e7940774e1c4fba50e",
          "2b5e967fcce84bfc8a1026c286fbb1c5",
          "2ed55bf7e22840fe99d5f1abb12819f4",
          "528f03dd9dc34578a509fbbb98511509",
          "ce27f91ee8a3477f9c95b59026f7b956",
          "0041894c5c2447bf8e0c958480b6cab4",
          "5905df0708cf4cbeaf5902cd4a351f96",
          "4593355aaee248dab061fe51ad125145",
          "68bf9790d445487caac0fdf983055e27",
          "db1b95abdae14903b69430bda749b185",
          "a84e3e64e9584b2db15a9f784389eb22",
          "1fe8ae37cfab44ecab763d539007427e",
          "0031e1e3385b42fa9e551d94651a6c08",
          "6b2277c022ca4e3e8fab1409f9761cda",
          "7fd38c36dcf94c4dbd78d361f6169cbe",
          "fe019fb2934b4db3a6f6aed1ed89c8f2",
          "5cffdd950261456daef32c76b7ba7800",
          "3533f3f57dab4e0c89b5167ae09c514e",
          "2d9804d839c84c089d5f14347ac5b994",
          "fb5f56be4bca4a96973a13487472c386",
          "cf51d190ec0b430e99631185938c036b",
          "9dcea6c8a7874dec9dbae9ae0afdfb51",
          "552c66fc24d04e5ea4e0a40df29d81e1",
          "aab3476eedc04fe690bdb6f373d30522",
          "8031cfeb822d48b2ba97c3bd4425ee4f",
          "a07fe82bb73c447a9c509c458f65d270",
          "53982a6f548245689b7a7098b90adb73",
          "103e4ac60df34cf8adbdb5c4438768f1",
          "fa4afa57939c47aa9b1e214e783ac4b3",
          "d68b7fb887df49489360e097f5ba0f3f",
          "1a662d3c496347aba19d6baf71608896",
          "fb00646e6e8b48c498c738d4108bd65a",
          "59c59e3c31ed4d60b3ee92d26bc90695",
          "06eb5264c5154e1087224d6fed7d32a9",
          "e9792ae0a64a4c819cc9ea32755de424",
          "4f471372eea1456f8cb8d9ac51bf60bb",
          "e9bd045efa8f41469911204e4b265d57",
          "8cdefcc760a24039bc95a2617ecfd30f",
          "ecf25f84d53d4e8382781cb16943b723",
          "fb1931c4c60747bdb0045452ba3ff804"
        ],
        "HasNestedGroups": false,
        "Left": 144160.99622068708,
        "Top": 2680.6897366544949,
        "Width": 9964.5333333333547,
        "Height": 1408.9999999999964,
        "FontSize": 96.0,
        "InitialTop": 2826.0230699878284,
        "InitialHeight": 1264.9999999999964,
        "TextblockHeight": 135.33333333333331,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "19318c63b17344e5974c2423bd0fe81e",
        "Title": "CellCleanUP",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5efbb736511741cea349056dd569f50d",
          "8cb18c39746c4807b0031368254a0599",
          "ca7e9eeac23c445ea48b744061e19d49",
          "32030f0d6f70485eafbd29f5848451ed",
          "5e4add8f1dc7440799c8dc3be9cb2619",
          "0c56da24bcd44ff0a0ba8818f9dddcd6",
          "2c0bf218613a436b830f6a143e185e47",
          "4e6b8948ec41446f80a31b0efa819376",
          "203562b8961c4ff584d67cf717aa30b3",
          "565327e97f1e44e78aad2bc9d30b801c",
          "d00ec20338d74f21be009bc78fad0e25",
          "bdb93cbe9e33452480916481d31bcd1b",
          "284eb6747c1843e4924d0b16471456cd",
          "57552b63460d46a0927464978432652a",
          "1cb58a534efb45a989dc287fe33c54e0",
          "5bdca94ff4c5499a98c44527dd81b5ba",
          "3a7116c6f2074c71b32b8005abc8026d",
          "b4034bc4d7b043c09300675a9a6d0e53",
          "a2b0a3e1023c41b086b0be63966663ad",
          "5553fb6791e843afab52bcecfeb4986f",
          "c0f2253699b34bf1b6f6b7d81739e979",
          "4e0588b03a99474299814bbbff04f5c4",
          "9981144cbc2a443398853c953170ecf3",
          "3a9a0a9a0ea849f1bc4202d566a460fc",
          "ab40c0eee3da419eb0bc7000968dba09",
          "893eaa1362aa4e0badeebb588d0ea46a",
          "b0cd7f5c07a749c6b88d3c96e223e0d0",
          "26c49ac2f6e840098efa4eed944b0e39",
          "96ff9a6e12d149709c8d88add047480d",
          "e8f12bcf27b84045b80b7cf8a51d4440",
          "70e094b0aa9c41cea09786e9852df8d9",
          "f609c6bf92454b67b3425999323dac68",
          "ea71eb4e14db4559b5a5d75684388675",
          "7b9494df720e4efe9b107680cf2c1f61",
          "afed239fd9f4406abe78b806ceb1c099",
          "dad07a79f4ed4a3bb4b2c4a049693b18",
          "e8ebe74ef6064225a865d34386efd473",
          "50710c1f0e1a432fb6758698e4f7f31c",
          "a5bb27fc65eb4d399e7ebdae303be751",
          "0a1bb86acdbe4fc89e47b8a8ab313bca",
          "4ea574cb6837415da000502481c14a57",
          "ba566a3acabc4011910ab68e39c9afc6",
          "16a40330c0f94800948431b04f9bbf8f",
          "e5a24d572e584915b6545a2750df9d4c",
          "3856b19168844304bdeca7e4196efec8",
          "86a4cdb853494b53ad00df31a8d8da14",
          "a723e6790d6a4016a465e3947e2b604a",
          "b27b0fcc94d043448868d588ad727771",
          "e270085ec9834546ab190ba1bc6b2c25",
          "94ce89799e904fa0bc4a08959100f44a",
          "61728d7b5c5d4552ae0375228108fd36",
          "e28d312e31ab49a7af862151e4d7ac9e",
          "9637ddcd2b42471284ecbc80cc4c1ba0",
          "487b7d047b08463db772b1ed8a81a36a",
          "e9bc29e50c3e4f2fa760ef3cc6e7cde9",
          "c2793717fd904c45b06047fb77052723",
          "2f52e8311f9b41c68d868201fffa610e",
          "37e01ef5cef24b3ab16482c3c2ce2bff",
          "4044ca337faa49e3bd01a0b655da949f",
          "3f54bc7b765c40768377e8a206d7a5bf",
          "93b7edc8e5c54a0a9a18f79737feaa97",
          "ecd88a53b6e94048912c069e2e9161d4",
          "3b75537ff83b448394c00fd351a930f5",
          "6168727becca4fb2831f7e833742dec7",
          "10158403d2e74b97acca67c5b5890f0f",
          "fc4bec4edc7241e28309f52cdab4823b",
          "f1cebf7e9ddd4af8bf4f62ded00b9b90",
          "e79de5a007b4455883242fd1b2f5d393",
          "8c326bb056f84754b63612ec84d46ee3",
          "d65331bda0fc43529a1fac0b03f3db4e",
          "6f0af0e494a04e9cbc41bf120e39bfea",
          "291380a39be94f2f80a018f3a4c11c10",
          "900b7b772e77472ca51756bc9cd39cae",
          "3660d2f71ff34458a42d93c6aea68e8d",
          "9ec903c67d644455a10fc077820dec17",
          "707f541c814d48f6886e3b9696995104",
          "f9faec49b5db41f0b12766eb6c8d4696",
          "786b68f0855044c4a647d187cdbfc8c9",
          "7fa55dab4d64467e87fb2a2b1988ad29",
          "44f36fa6c2eb478c9b6cd89292a9696c",
          "705dde8e89584e24baf595121a264a9c",
          "8a0f384c885c4ff8b4090f95ad1be910",
          "3c623a94be6042ad9d6d447cca44867d",
          "ce8485ade4a945bcb91fe55fa7de1bd5",
          "9cd903899f2c4cb4be7b45c7fe2a91b6",
          "78754fe4a27b4a2182764a8bff667e31",
          "334f9a144c9643f3bb0eee276ae49ba4",
          "9c4dde00023f4be2b4b0e592da6aa816",
          "92ba326bd5b549d09888ebf1cf8e149a",
          "58a23e18349d494d95e74275c0f2ba83",
          "f3888bfe7c184979b436918d68c70486",
          "6e502ed1fb3c4c62a4a077cc47766eed",
          "8a56295e8e4948e1acdd070be870e760",
          "cab041589c294b2c936211d1b46519a6",
          "16a3a3b7c9cf4b9f8f0a2cee0ae3cd71",
          "bf4f88534708480e9cd027263e8db5bc",
          "9b76d12eec344018b30e25dd31a5c059",
          "8d11589d8ba0481d9c7c7728f9f11084",
          "89d3c0788a5f41a6b6844f3bc4ef56d5",
          "6caf847c89714e519ce2099686a094df",
          "34e975ab3cc74e1caf0b4f877bf87c3a",
          "9a902ca096c841f9b30284114718b197",
          "602ff68639814e58a43101e8036ede56",
          "0002f445aa49411c9014d3e8fa6384c8",
          "bf5753b6a66640bba1f424a25ec42529",
          "3be73e3792f045baa5ea477e2aa5099b",
          "533d2b87f34f4d88811574b3e1d8ec6f",
          "bf309f536c644c86983b5c99bf85a862",
          "4fa5206215894af3b72516a71c190bb2",
          "d8f962897a974011bcc82ad0e772fc7a",
          "6a3491b8227f4314a1da26dd919ccf63",
          "4b5f4e038bec43c6b4fb851dd1eb2633",
          "a0199336d9324581a4774eeceb869ce2",
          "3d8dc5db7786435da19feecc9729c527",
          "ff8a0495a3614b46a1a0217c5c1df201",
          "4077a74038354dbda6d8cd3f9343d641",
          "678016c005b14e09bad71d578d9f04c0",
          "da3d293514ae4780bde39c029058061d",
          "8a2d5f47da2c441ab0ec2fbe8aeb364c",
          "84d289509103408ea6ebea49b166e4fc",
          "fdbd32fc396847c1881d0a5074761a2f",
          "47f2ab727416403ea51c321cc2a5d6d8",
          "ddcdeca0242d468494cb9ad491b1aeeb",
          "593fe6e3b9a04b1bb97f93a3bf53f255",
          "713d2b75604d40819fd1b681ba26d51d",
          "38e22a2759884135a5d07abafd21677d",
          "e18df5d7a0d94fbfa9e357dd37cff340",
          "7d2532e5b2ab415ea3b4a7be1754b5ce",
          "cc5e58ae53d34cfdab39f125486da3f0",
          "81588a8153c5481285f6e271be34aecd",
          "c6541584a326444697fdbb6a4ec8298e",
          "e60c18e3df5a4ef1a18b02c4a1487901",
          "239a0f54dd8e4718bb76307351b35cad",
          "0093e06a910a409785dad517bdc97398",
          "c576ccdd96eb403da303fd931d6ab01b",
          "fb962ecc00eb4a5498ee0386a334bb1a",
          "2cf62e26f8354941995ddfc7686fd8df",
          "5558714d795d4059b3adb20ef4560a3c",
          "1d1a1f898a11499f963c4ac3a8b2de1e",
          "fcbb1316d4e44eeab9dfef6e24499d15",
          "3b20159704224067a61d841daea07174",
          "1ea87ed0bd5c405e89cd377efa78d319",
          "933eb587493b47b99e6352df0b0067b9",
          "b2ff9d0e66384c22aa79727db1962e90",
          "08f72c1bda564244a30a746221f64f6e",
          "df0f497e0988466b8d2488ef35f89e82",
          "a6b2d4cfe25c4e489cc97a722031b11f",
          "1970dc63f9bf4a0fac5f18287a9f8a0b",
          "1bb4f0ef5d084da588852a33b5231aff",
          "5b87df91466749b08a7291b46708afaf",
          "4acd14a6cc8f4efc95cdcbd46d5169f9",
          "c894c5e6ac29422eab5f48d9a46675ad",
          "b344aa2f717240c8aef2537dfb57b77f",
          "1dd070f678274022b04d3b48a4341a85",
          "462b523cd197498abd3f9116717eb376",
          "822d7c6fabb14c51a7486b758fec2a09",
          "1aee3b0594204520ba3fb5b2f8f123d0",
          "1ec20268c3e7453b99d48ee4aef61833",
          "bf5c4745635d4485a629125dfe2ad980",
          "78d1d7c35d024be0969da7177214f138",
          "6cb4848a0f22448aa1d4cbdfec79450f",
          "5d0463187cce4646b74c878eb912e9b4",
          "d0e97494a7b949239738649be601c69a",
          "c2ce720ae10b438bbee012191f74c62d",
          "9b5a9718e5694cc49d96b5ce3b3c1881",
          "c1e9bccdc5224ca1b889728cbdd68b82",
          "47e0d9902d7d445ba6cd908a4d848a1e",
          "2027f85bc7e644d1b6c510f93fd4a277",
          "e5224374109a4e8c93a889f085fe6901",
          "dc63374116314018b756dae4ee0707a4",
          "6fa700ac896149a98763fd5324907f6f",
          "61844bd4851449179a0291f959b6e786",
          "6ae92845d24344b6a266ee261a4d5da9",
          "33d00c96dc39477db1f5b7672797c25c",
          "f0ab62e4fbeb45219b4e960e353cced4",
          "abc383708df64476b2b7261a7e4f8d4c",
          "9b84286a098e4732ab87c2779fa7aa19",
          "011832c432ae45f9898f4b041693ad18",
          "4c0ff715c3c145caa864520cc1fe7547",
          "d4038abee2a7408883c1c933501c1795",
          "6550c89258a24b6f8ea03ef8624fcbb1",
          "64eba6a9a6464bc2a083d5e026483b2c",
          "583f32d16f5e48a2a15e533b9748f318",
          "7cea8ce078d1421494dff35779ce16e3",
          "ac2246db92a848be9ebde9154f755814",
          "47b2c1096e8b4a0b9a8d5f2860dca706",
          "eec2388517fe48b18464ff6428e0f6fa",
          "af68548832464d09b129f002401f5e6f",
          "f2bcf770e96047b888b8028248d04527",
          "7eff8e5faa3e47b4b004c8d7c8dd8399",
          "0776d6f9ec1f42bf8ee720107141a3fc",
          "5989ee0d0f3949a18f55fc74c68219ed",
          "8ecee48498d043c7ab8902606d309fde",
          "fd0f1aa294e44c32a6c8ad269e0f97a3",
          "2ff8156058ef48a6978a6b3055533ac1",
          "174db3d788cc448cb6ea0f8ab552ec99",
          "c9d5694880d64d31a0de581a710245bc",
          "1710bc3860504c889da2f878d8f71104",
          "7a9e9f349eed4062b26fc7fdebd31eb5",
          "39a1731747e24daf81f3266f8a013521",
          "739af60ba1c145509b7e5f16bfcd90b4",
          "0fed6824493d4e8f907dd9d6d37f97e8",
          "917762344c28458a9134e168a78f5d4d",
          "033c1e2fca9740a78d6a729503deb0a3",
          "d2892af2e86e4d68b11648bd4e77e7c7",
          "bef564eedba74f34816f66366aa549a8",
          "82e6a5a3bbd0481899350cdef658bec8",
          "0b86d07958894644ae152a8b65687df1",
          "067b19a86e9e42f3a556b90076704895",
          "61d0823933b14369a20d05b4b7b34890",
          "c2610663787d4a20b63bc6e73d5dae1c",
          "9fc6ed6a649a45d2a52ace12f25a7f30",
          "9ea3f5cbbfac4881b650dbd0aa09c89a",
          "ce986d58154c432a835e89e1b05f7ebc",
          "9dc8cdc7092d4891846c55a8fc70f239",
          "c43b65b5559f41099bd1d354dc675838",
          "e4129f13d4604938bdac6dbe2e02e814",
          "fb9a869372844f99927c2dd0e6c29992",
          "6f1241dbd1c54490bc53dca56aba3363",
          "d982d5db1afc4083830e040b6ae0f5dd",
          "0113a2eb95834fb6871ec99a925e2417",
          "cd8a31f6543943d198b5d566cb76a305",
          "34a7299da26848acbb39e1bb7ad6f64b",
          "fb7f9a6e439a4c9082c1cef48e52ac30",
          "ef46e0654bea49bc9d4bf7a6b3284080",
          "899120c61f0b4e0d824a0298f2ebd0ce",
          "c660fb178a934837be8aefcee2a3e5af",
          "cd267831aced4f989c2e24bb670b10f0",
          "127817d11a3c42aea49b40d73c11737a",
          "84fb1140db4e42dd903a63660935dc03",
          "64a802acee634771a0b4affbd5fa5585",
          "aa1fd19a85dd46a682aeed1a8f7c6d56",
          "ea7920d272964451a70303b4623c6aea",
          "dc4a8b1b5c274c00b7bff98357dddc5a",
          "ee920dec3c374f2c831a49c2a9c4953f",
          "f954497958ee4077996147c623f26f9d",
          "14dae9fc853e41089cc873f3b862b8f2",
          "c5c04b164f0544bb970560f907a34297",
          "4b22186a388846c0a6943ef53df7ba81",
          "014d1a76002e4b9d8131f715d8562bab",
          "4fc12831337b41d8bee039e7841f30db",
          "df5dad3fbcde4b6397805370d826c3ea",
          "982d9964de094b87be802d896be26003",
          "b57d3b8e19794f819e16e99cb3cf9530",
          "5abfc57319f942a49b80cd215e10a829",
          "875139f65a2347cc942c2bc54efb2e34",
          "c9049369d5b84782ac994e2a3282a2d6",
          "906707b9885742fc8a364555539ab85b",
          "3b00ec50aa5f43558d11e561d74f177b",
          "048ffd80167b482297464f100a3af274",
          "c6ca22fde485446193c8c6dcce78d043",
          "11ee4569444449ab88b4e956b12549c7",
          "2ba0f43257064e0f8da82c678deb0ade",
          "df4afc4f3fa04918ad5f044af6a189f0",
          "ff1a0ba1d2494248b736c8e484d75dff",
          "a6d285834d8d443da42841397ea9f1f3",
          "2e883edc9f1c4ab4aa1b932f26c06f1f",
          "f4c2b615fc544b3f8ca59b82dcfe8d1d",
          "773a52387ae0472f88e3ef5a32585c6b",
          "eb52782435ab4b2eb3e5236b661051d2",
          "9da4a96e40484a7ea3a577ce1add69bf",
          "0ee129b817d942c88392d3484ed5e069",
          "620e0991fbb44440a0e2bbbf19d84d23",
          "2f1ba28381bd4baa9a03072370d86d31",
          "812ae6d55d8c4839bcae27ae7b26a1bc",
          "2141e066c79a493aa947dc5bd864c015",
          "6ca7c0fab902468cb9edb100a3d32a25",
          "46d6c9b235ab48b488d615eee7093ca6",
          "d6ef0ea0dcc1404b96b3fcb850fb8a06",
          "00c0f4b0d66e418288dda8b698e42e01",
          "5dbe511c727f48d189f4147fe5496c17",
          "7b0c895d986e44c78e85d119986f0672",
          "50cba33aaebb4a0e9f1f2249e3c882c6",
          "014792206c6a434aa42cded0bc5fb403",
          "2dfb7fdd96a84204a9e93b9306001b2e",
          "f592d3b04d72423db2f3c022fb9fbba5",
          "16182fd82b804603b319df3a7180cf41",
          "007c12087bd54df186ef5bc92bebd9b0",
          "c5afe1725fec4e0c94b41c755cb17ca8",
          "69a5defe6b834b98ab7d3ea810463967",
          "dba4b749ee1246e2b9c3b91b6b4d834a",
          "dd69a7ce502e49d99d816497199be596",
          "515cf7fbbfbc47ec952d1727856eabae",
          "2b4fb4ac9e9046f595474d73a0b7dce6",
          "a88eb806fb6f4dcfa133e6fcf9f5c3bd",
          "d788ae2507d74d2187cc897fa6886475",
          "0549d4854fe14db5a89d661c8f62aaf5",
          "688d058c44e74cccb01e83e76fef096a",
          "bd8e1293eb204491b73f526433735cef",
          "135612e0410a4db9b56bd1855bda845a",
          "17f6f0e9bcb344ad8f3472cf51be2650",
          "f1095bda3b1c4350836f14c7c1e8ebf5",
          "844de5b1d94749649cf27c7d2a8eb236",
          "4c7429d5beda463bac56085a692608aa",
          "1450492ec6a045c9a309aa306d0177c7",
          "384d7c9f0f8e47f783d11b790c08dbff",
          "867d1683b81d44f0b3b7417c74af83a3",
          "ecb0be2af687432395c3d1518799c3b3",
          "319da91ba9d148afb622097b714590b7",
          "011e5254e7584bb38c7510c94ef3c83b",
          "f1b214eb3c3b4075916633e2cf3ae5f8",
          "fa86ded83cca401399a5a33d24f58ee0",
          "478bce69c6e84ab187b06940423bfa43",
          "14088e2c6ea94319b8ef003bdea7602a",
          "ca816d8648654778ba0223cb848ff032",
          "0b12d5bc8f2642a7882b944b6890492a",
          "10e31a3c5f2b4956a6476abb2470c8af",
          "8963d1da7dd740f08a2b1fb8ddeba949",
          "7d86a7c275fb44dfa57ebec7ddb686fd",
          "60d1fcd1c5b14da5b0900a89b8bf521f",
          "74c71c65d42a4acf943b2ce53e05f007",
          "288f7b13c6b44a6ca2367b2f794ce2fb",
          "bbca81f6fa704d4e9af24f390d12d982",
          "d42ffbf81a7b4d809c8bb95742255340",
          "0d06367fd55a491a8e888617aa01717a",
          "387ec73e40a34f898989b67c493b96c4",
          "af36c860f2954e7394930ed55325a495",
          "13b7b6531cb4435f8dcad54d12b51ce1",
          "20629481b2034306b4a7662b3c2fe624",
          "d6893ff7426e47a1b8b409e002533ff4",
          "31e5b3ac038f47c9b53d64c7e02cf951",
          "e50031b03b88421c861e887f1296967c",
          "585d6e602e2d4c8da574021574d27473",
          "4188b90293a2428f86a8ce58c3bba52d",
          "b3d83bdf3cb44a11ab85751f022b363f",
          "0df39cd4e95b42e4afbe84c06b65fbfa",
          "38a042ff4ff848d0999cd751d29cb8bd",
          "24e7e2847cfd4d30a3f6c30c3c1da28f",
          "819fe753d2114b9b873a6fcc56910e8e",
          "d8b248a28c6f472eb7dde6e83902f5a2",
          "03522d6397a04513bb12c76c4c02ae8c",
          "cc1f8ed872a04a4db240d8b5a682d4b5",
          "0c75fd57814049cfb1c604276239c235",
          "479e7c51e0f4486a855ffdc9a716aaea",
          "82a98b53226845189199a78658a18b66",
          "5aab67d5e2ec43868084048dab1b9269",
          "911d6ff44c0e4be2a29648212bfdfb36",
          "9c3dd5a07ed1406185e4003252902d0c",
          "ec752c60710b442d9faa2915d3bf13a7",
          "1ab28a43e530426b85e3aac3bdfc61aa",
          "ca994dd7c38a443b846175dd299d44f2",
          "dfc5b16054214485ab74a07918f823c3",
          "f069f0f14e6a40fb875f4e2c0ec116dd",
          "363f2c2aeecd4f78806fb584bf659aac",
          "1219221fdade486e9d8d0a2779ed4dce",
          "15ea498e5aac42b99172f5a4acea02b1",
          "1e88a800bfce461e8868f161c0c59d0d",
          "b3d5b88f022644d380a6015bcd86ae3b",
          "202e5318b7d14c9481af052343b20808",
          "fa8df60133ea49cdbb7e478068bff721",
          "dca27957af5d4ce297c925a77410aba9",
          "414b0234d346410b8f6ce9493b276c6a",
          "59bab92db28d405b9f41d5dc8caa756d",
          "c08ec883e6ea4e6696babf23ae47d5ac",
          "8f0a3b97ceb34bdaae38409511275cce",
          "02e2a8a219404b8faaae59a4b7498429",
          "6780b82a658d445091ab3c6fa42d1054",
          "ae2fcf91f3c84ff6b640e89f5a30e882",
          "6c6550830c52440b93e63aea023353d7",
          "f25a6ddb98ff4d1284f6d188f2af58ec",
          "5ed65d9604a643e19aff303c69f5d81b",
          "1a99ace4243749588e1f8015af0d302f",
          "18585b6f25354c3e988526334eec7707",
          "325b630cdb6b48ae899b34a7ce3bd15a",
          "262be915304d4828891528d23ed7326b",
          "7b5e92ba35c446afba18b1de97c2e9f6",
          "19b7af95b19e4b1eb131a24c8fe314e5",
          "6651bcd5d0134a959c449d63e8ec6eb4",
          "17314e57b9be4119bbfe585a326f2190",
          "a981d542d13f493ca9a4352a77eb1e36",
          "dceb457afeaa40759b3e6ab78e20708b",
          "e557fcf678734274924a60be632fbde4",
          "384721e2429b49c2aea05ae44826b8d9",
          "8a15b378df93416d9bd009f43a7d8a9d",
          "eb5c342677e24aedbfac5c34031d69da",
          "697c13640e3f4f8988505a14905ab371",
          "220d6b9ec2b54c15b181dd85767b0641",
          "01f67e934f19483396a9d4bb160757bf",
          "9aa24416891e4be79806fd079fb67a3a",
          "36cd92f186ff4ebb9dae8fba1c478d15",
          "86c2c6898a4247f9aa20c47252ce48c6",
          "99f3ecf1f06643f8bbee28dbbe2d6f2e",
          "1aca6fa66f6f4f518a212f442a4475a3",
          "0fb0d788afc8457eb9d5fc68d1542902",
          "4997926a75f94bccac3c2eb94a4a8bca",
          "e809a2c45596408c900999ddcba346b0",
          "93064950c3a040ac83e028a239aabda6",
          "c31843bf2531413ca66cb2a6b37fe77f",
          "3e6039d2f4b049bfab9bf50db7f0dbcc",
          "a587a2b434f043ccac938f18fe30447e",
          "94e8e14bc3084af9b3f35284d41e647d",
          "4435ba30c608427381e14d58ce5a0127",
          "f7cbc57be3034cbc936d3f39a24ce0f0",
          "ab8a78ce50304a0e921d9c7b1005b035",
          "ecf876b835f747329f4d48487370d2f4",
          "85807417580f4a489f03017e2eced21e",
          "191fa5a9d128445aba52be99e5f61d31",
          "8026e907082c4ac0af67541df43c5b3a",
          "e04ce59f40aa4572af4662c3af840555",
          "f69b8abea20143418ead546c00a1509a",
          "c335583ac1a04ed5a2396adfe445c120"
        ],
        "HasNestedGroups": false,
        "Left": 156149.83316177083,
        "Top": 2561.40107901438,
        "Width": 78602.533333333238,
        "Height": 1790.8800000000024,
        "FontSize": 96.0,
        "InitialTop": 2706.7344123477133,
        "InitialHeight": 1646.8800000000019,
        "TextblockHeight": 135.33333333333331,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "3cc29ec0d874466ca502a64d12a0eca2",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4bd12b9b1ba34932a68b838b07f47009",
          "d4079a172c814579b51531da37f0a959",
          "cd5fbf551dcf4b3d865eb8103ec6e191",
          "323f5745a1bd4a1790a535f23291af5f",
          "69b3ade986924478ba3f3d6cd2bdd178",
          "e954dc79a0844581a77d6ec912931448",
          "c848bc008f6a4bbfb3c2717a7016c9e1",
          "b2def619db2c46e3a02daae5bf2418b3"
        ],
        "HasNestedGroups": false,
        "Left": 84698.493180609556,
        "Top": -2112.3804190491765,
        "Width": 70956.265455001718,
        "Height": 734.16506284461707,
        "FontSize": 36.0,
        "InitialTop": -2039.047085715843,
        "InitialHeight": 674.16506284461684,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "f322e81bae37427dabe62b64cec5702d",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a945f4de2683405e9c08f51433db82eb",
          "c5ff320e73fb446e833e192bd38d5639",
          "04575fab275346f1bf91d53b9181419d",
          "2fd3eaeeab9d4d97a90f1df6bff7ff83",
          "614ff63293ea43a8addea9e50c8f139c",
          "65add3d9fbc04affa5c6afa781a37371",
          "4826d1077deb4d45b4c696b1904f1990",
          "9b877b244244482abead6a40cd4be0a3",
          "7f7bbf3ea694472ca4ed0a1d4de15302",
          "9234a16da7254d7388bd4cd6e257e382",
          "1f7420024967430187b33e1328238e44",
          "4c2df434b61a4a54b02f62ce905cc27c",
          "5a63d115aaec4dbc90b9cc0eb76c65ea",
          "5331836b7c5e497fa67fafbe4f21909d",
          "9e60fdea8fb84265a67dfaef30c35897",
          "70ca96c298124d0ba25724e9cd217f35"
        ],
        "HasNestedGroups": false,
        "Left": 84587.913884305337,
        "Top": -69.654782084933089,
        "Width": 152436.92493860607,
        "Height": 764.88676498495522,
        "FontSize": 36.0,
        "InitialTop": 3.6785512484002538,
        "InitialHeight": 555.0320428483335,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "5b9b58a5298f47588fcce3a928c56614",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6f69d47772194174afc15de9eca40dea",
          "b0faadd85d614dee8bffe0b92057f621",
          "69974953c31e4b71b07cf0206392d14a"
        ],
        "HasNestedGroups": false,
        "Left": 240633.42846896878,
        "Top": 4623.6725969284334,
        "Width": 1052.8324096775323,
        "Height": 246.33333333333303,
        "FontSize": 36.0,
        "InitialTop": 4697.0059302617665,
        "InitialHeight": 145.69641268797295,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "25b28d7c020b498ba8e2ed98e02c59c1",
        "Title": "Offset de kavels naar binnen",
        "DescriptionText": "Zorgt ervoor dat als de kavels niet meer maakbaar zijn met de gekozen offset afstand, dat deze kavels toegevoegd worden aan het groen",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "776092cffc5a42cf99bf779b8aafb461",
          "f838b49c98874bb5bb4dc74f3f7caea1",
          "444e9f0e0e744d73a1310cfaab026f5e",
          "794b46630454451a915688ea1a4033fe",
          "b6d79f53cb5c4dd68b82cf20478134c2",
          "542fcf0ddd58424dbe107be57cbb198e",
          "017bc2d4a98b4b4e99acb71cd0f470db",
          "a33500bd6bfc48a6a2aadc2101cf86c6",
          "42eb689486484cfdb02dd69850518db1",
          "c1a466b93c094f2ebcc84486d6099a23",
          "c461c0d0a0b84034b5edaabf099cd0d5"
        ],
        "HasNestedGroups": false,
        "Left": 240385.90727639452,
        "Top": 5859.1403903583478,
        "Width": 2432.1291796492587,
        "Height": 1131.3556781845527,
        "FontSize": 96.0,
        "InitialTop": 6004.4737236916808,
        "InitialHeight": 958.02234485121971,
        "TextblockHeight": 135.33333333333331,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "18c85ad649124b70b9931bf9095cdb5b",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4b367229e98547bcaf7b59b6df49d626",
          "84822a67f5bd4703940d6474f36225ff",
          "e14f374564ea4f48851c42ad05d1a6e7"
        ],
        "HasNestedGroups": false,
        "Left": 239714.96302910076,
        "Top": 4598.6837631603912,
        "Width": 436.63483586814255,
        "Height": 2368.2938320572757,
        "FontSize": 36.0,
        "InitialTop": 4715.3504298270582,
        "InitialHeight": 2252.9604987239418,
        "TextblockHeight": 106.66666666666667,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "6a509ccf2b294e63b0545edf2667af75",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0488b46cfba14813a5e22d726a9cb13f",
          "9c374d82a4924a0b92f1e7cc5687d119",
          "be782d4ab79b4d93a3033dafe725add5",
          "01258a7c2f3547fab1ba05c323545e91",
          "fc148574bd4f400f90b33f52072fb228",
          "2aa88f9042bb48538bdc6439f1a35060",
          "d72e0ee3efab488f909798ffa1a3b8e4",
          "99f4dd3d66384f5ab4f7d44386800165",
          "45d764bc8a4e423f95bf2f671e258ae3",
          "cc8ac0eb32804cf699627a66ec49c1c7"
        ],
        "HasNestedGroups": false,
        "Left": 264302.23729754775,
        "Top": 9037.5977904986266,
        "Width": 2816.3934644718538,
        "Height": 578.54710238229382,
        "FontSize": 36.0,
        "InitialTop": 9110.93112383196,
        "InitialHeight": 478.28946865681064,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "21e3c891f9e04264b1a1661c40ae5ae5",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b5b59729b1d64c90932061f06e0775b4",
          "a0e2864297ab45cd983d563ec71819b5",
          "66d1976b2bdb4299a390ee5870acc488",
          "957eca0bd4b54386a8eda4de4f0afb98",
          "10350bc1bf3143cf8a23c77cd65722de",
          "023bc9f2dadf412ba658d14d80a60161",
          "16768b45a73f4badb86a16a782a44f0e",
          "4ce26db0ae9d476cb3dbb1dba677561b",
          "5ce9719e8edb43e3b9e9792d324be505",
          "8558666257414477a726291b101d4e68",
          "57f1007f36db4a6e99729df84ce4b624",
          "34605c820eff49609a82091457540630",
          "388860716a9a4e2ea46a9cf7a3c037ce",
          "d6b9eba4b3db47f5b9c79965f9ee0081",
          "ac7b67b3275e45949b767d6885ded251",
          "9bc2c495b3f147f38164d6588ea1eae5",
          "edf0db12c258455eb16ee2c23e49e8c7",
          "4ce0b7c8b9a0454b8411897137d5956a",
          "bba54c042ba246c7b2aec95c6d5c41d9",
          "a5c032dbabf04b80b292bb37c0e8e168",
          "27fcadc89faa45229712618cb0617c58",
          "2211a278f4864441a0baa3b989a72b4c",
          "4ebef9c147e14fe18f2713edb41ce0f1",
          "63989635985d4a9e86ecc7e21b4dcf10",
          "2f0a08982a24452aace84a520aed7233",
          "ba1f47cf53004172836aad52bf635a67",
          "b76efed60b4842e8a49e40b23db121af",
          "ef84c7c765984dbf849786ec5bd27938",
          "8fe8da5340944619837a399c91d8ee41",
          "58e5b514aa6f42128d42d2036ad23bd3",
          "55038b2f19f2449ba49a99957e55909a",
          "7439c09c45034c6cb085d14cd9220705",
          "d85ffeb8546942f9955bef3e8b33b311",
          "81131c01b17e4ca78c074b291f8befbf",
          "5841858bdffa49c79b1c050ba009e833",
          "fb991323a07a4c9eba8ec8d38b64afc1",
          "3edb6bbde22c42739b867a2fb7d53358",
          "218d0b7fe83545a29011a31a605af8e2",
          "055b3edffe6e4d4aa7b7840e292faabd",
          "f30f47ace07a40f189aa519f271b309e",
          "e3b50d0339c14601b5d95a093004660c",
          "6bd4258ab7b645cd9c65d265cede2291",
          "6737c0c9100440a28c1abf99674503d4",
          "6958eb12c3e54cb9847213e471c21260",
          "054be7a466a342738d2fe7f17b7b906f",
          "a5e2ac130f1841128025c1ba48f92e7a",
          "5758b86253fa40b2b9e670eeb30637e9",
          "5651c9d21790456f83df394439b276c6",
          "6c741ec549704160a38080ab348e3962",
          "981547fcb4164fcba947ddd6b7147200",
          "241712c8b750415fb127b095192a69b1",
          "c2b2298929f842fe8cdbcb47ac88c0e9",
          "fedd78ef322c484984dbf226e5d6c57e",
          "8a5b6f3374dd41e0b1a0be3d599d64c5",
          "89737c4245234c048b3860fe710d9b00",
          "f4986b1bcc22477da86d438a48be104a",
          "33b91d7062204005bee4933b2b4d55d3",
          "0e6c0ad27d4d4f1d82bab84cb0f51add",
          "5bb1c1c63de94d1c9ef5ba746809522c",
          "06537230153649f386922dcb0146d451",
          "41797d55c7c74980a7304b36c11b8f3d",
          "fe9c02f4219d4420a70625912e0125e9",
          "def514f7f3cb4fa28870dadaaa457e15",
          "0321647c556a41ee9ed76a77e90c9122",
          "2a38c9767c7a4698936c50f40b835486",
          "8fd6673990174768bb8f55f391c2619d",
          "1cad847ab6334bb89b557a57c95a1e4f",
          "188bdb8442094c6f9b644768491046fe",
          "3af32125224a49c5a35c367143ae4485",
          "9470202ab5d54b05934d84853815a851",
          "45080f352e5e462daa54ee34d136c117",
          "d511a56abde84412bcc0f89d5d8eea80",
          "4755d57806284e7784993e0ff160e1a6",
          "adc8f6fadf8f477e9296dc066fe00a38",
          "3b2e0151ab5346d9bff8f5a8325777fd",
          "15cbd1b1f9de458391992b87a7c198d8",
          "e6603521b7214a1c836e0aa6acd08d02",
          "871534ca59084375848f782832c41a14",
          "75f0c6cf21ea442f84f8a563de0fcb4a"
        ],
        "HasNestedGroups": false,
        "Left": 242998.09205683993,
        "Top": 7554.9739357463177,
        "Width": 20660.982870377047,
        "Height": 2282.7462093265376,
        "FontSize": 36.0,
        "InitialTop": 7628.3072690796507,
        "InitialHeight": 2210.7462093265385,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "459459f8bfce47148dcb2e5f3b5dc4b0",
        "Title": "Gecontroleerd",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0ef0e0980bbd4243810f14054edea21c",
          "baf5747ba9784c46b509a159ec597ae4",
          "cee313634b68497ebb0189b7c167a357",
          "04dcd6ef891143b3a07f099d52a4e96e",
          "2bb028ef679a4f509284a99da0bdf80a",
          "a6512d78c5ac4fd0ba8fabd2c05bacc3",
          "81e63c4f53a2409aa6e0d5a7e0bc998f",
          "b1581748bf864a83b6bde4aa35704b6f",
          "997423cd8ecf4f5cbe26fc7eff1911b7",
          "ca236f71238443429c0e5d9cf1190d91",
          "2e05453666844e1f9b08bb17c547b54b",
          "f2b891bcb4f14628b3939e17b6d96428",
          "bfd949cc40b24a68b768367ea758a814",
          "c4c5752719194275816a1aa780d97285",
          "6fb3945265d54fa3b4769af412e1eab5",
          "39a34b6cd1c44d27a072130b86939d33",
          "3f5180dbdaf84c92b7e18356209743ef",
          "8cf53a28dd344168b2a232e542978232",
          "8002b55d8da1492bb15d6c741ad4c894",
          "d8541b7c297b4772b71236aa99952c5c",
          "36a25c9aa04041b78f7e728412b59d90",
          "a453d8e760d046ba88116e376fc7b08f",
          "dc637b90186f40ff8c59f0220b93ff52",
          "5cd02cec77c54f1b892614954aaf22ee",
          "6e9930c6100f49d09ea4bc122e414a9d",
          "d7ffad46def44c84bc3f0aa218d3d831",
          "572e10152a9a4114922653ed6e33290c",
          "9f9093ee72f541c9bdf0a1fe048c9a9c",
          "df6938c7a9f34d11bf624ae1ae4643d6",
          "ce565b56eafb4b728b5f7d9f4ee8f890",
          "0794300dd65845368bd8af413f34c06b",
          "7c06f928666e4f2d98a782356ba041ff",
          "ef8452d8fbd34c2db06e6fdd5f354a3e",
          "7e9ff32156554ce3b1d1deb0b8211ad6",
          "0ca8adda245c4c38ad32466888389b0b",
          "159f2e5dd8354f12b192728ca3a888cf",
          "389a8d28d9444c3cbb9830afa4e13e77",
          "88a4c60f1d174fc3b1969a5b4893f450",
          "f5ee9f00a0ee4e54ab688fb45a557204",
          "2d2c16716d0846a1ac7b466c8ad70e91",
          "1bf192f1f5604af0a02e682845039c74"
        ],
        "HasNestedGroups": false,
        "Left": 266402.98056138458,
        "Top": 14634.309773888497,
        "Width": 7376.8257877476863,
        "Height": 1907.6319008981009,
        "FontSize": 96.0,
        "InitialTop": 14779.643107221831,
        "InitialHeight": 1763.631900898099,
        "TextblockHeight": 135.33333333333331,
        "Background": "#FFFFC999"
      },
      {
        "Id": "f7272e653b9d4be386cc7ab8f26ff699",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "91b9c450ac5b41f5a08b2341d03e2031",
          "151c5d3e5def41fc86b32f19a91a42ab",
          "676aaa08e0d34243bc78ec81aaea8886",
          "cfc315de802442fdbc7d5d11f39be907",
          "9aa11dd990934b2cb45640a7c2b701fa",
          "4856b6606f3442e8ac66949c1e5aa602",
          "df8a7a5db16c4310b3769a353956bfd4",
          "4abc77d96fb54213b3e22bbd82294b82",
          "57de089d46a144439c8e44373526fe74",
          "567ad64d71a84412ad5e88837e7ec5e8",
          "71dcdb1da9194bc48a4f4873674c2672",
          "a1daf903ffe04564bb3fa15b54a6a486",
          "0a9e954d7f184559b500458b928c3203",
          "7e11d326db75404ea767eda8157b386f",
          "19fd0496d5d2485ca64d377769c3f4d1",
          "702b041802954375ba2058a7924f23f3",
          "b8289b2aac204d74b8947994ccf1f4b9",
          "fa5583e2540844cd92a2c4a657ae0ee4",
          "0ec649efebfe42d5a6a26073dec50bba",
          "c80384ddd6d74c598ed50edec0501a81",
          "9cb052f125924f6db2ce442c7b86ccf9",
          "95d85c45ec5a4a7c884a2bd0fba4ab18",
          "bc78afd781964cbba07155d07a1b7afc",
          "77100ddaa470401dbe022599f59e32ad",
          "18d7c227c61646f28cdb30560e07588a",
          "c5e28bc6821944669c16f3a7d1a0ff07",
          "3a2b4c97ab584bb69a1bd0ed3e659ec7",
          "324f64d1cfa6473484726caf21a89f65",
          "1659cc4fc7f941568e8e45cfb4845fdd",
          "22bd822d310a4bc58d17056e7db02382",
          "d146605fd8a14b37b68712387a9ddcf1",
          "15c47579b33f4c098f4a779fbdccc1fd",
          "a08a4b801e60463abeba09479e149f71",
          "662b6adb32094af7b4097720bed2b04f",
          "0801228401ba450597b82335d8372f7c",
          "1e04f28bb09f49d19a3b40d849fafe0b",
          "1c349c708d754eebb837dd2c45724b3c",
          "709819a5a1194b2abdb19297dcb205d7"
        ],
        "HasNestedGroups": false,
        "Left": 274572.61498402804,
        "Top": 14660.262421338797,
        "Width": 5161.0363675724366,
        "Height": 2474.3390165963028,
        "FontSize": 36.0,
        "InitialTop": 14733.595754672131,
        "InitialHeight": 2402.339016596301,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "a03c2ad14dd749f6ac0bcf077c9cb084",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c90bd219361b43c190ead8463039e9e2",
          "3455ce2b11df4ec39ade80187e90e9f9",
          "4b8ce7f92a9041d492f8d9053342c3ab",
          "5674da4a05524188afad840a01999f67",
          "eeadf635cc5f438fb3bfd810e5b42718",
          "54caa1474c214e49b6e2d04fb0550a67",
          "d38fe44e46474baf9d4d0d9f52c558d8",
          "97972747b9824bebb371069758665569",
          "f1a2596d87e5475bbd7799788fcad175",
          "638dece9926f4cfca2347744259e6ada"
        ],
        "HasNestedGroups": false,
        "Left": 280249.40908475686,
        "Top": 14661.743052654496,
        "Width": 2029.3880607861211,
        "Height": 938.56158817180039,
        "FontSize": 36.0,
        "InitialTop": 14735.07638598783,
        "InitialHeight": 866.56158817180039,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "4985f612c4db4d7997cbf5f1c1f92788",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9cfe01dc8d7745ba832988e15d3d54d3",
          "3423f70998044dd481f0a312c8e2054e",
          "511d35692b0a4e33ad9ecba3bf8b0fbd"
        ],
        "HasNestedGroups": false,
        "Left": 295738.93819099036,
        "Top": 15146.981146341797,
        "Width": 1036.00111925893,
        "Height": 246.33333333333394,
        "FontSize": 36.0,
        "InitialTop": 15220.314479675131,
        "InitialHeight": 147.93671652239937,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "71c67506e0e14adaac13984dbb92161b",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "11b38b9c07c742e1992ce053bceabf38",
          "8852f24ccbd3402fad2c81a52e05f2f3",
          "1847ebb60d9e43dc8f7f8c9c10926769",
          "1e4d5c3f94ff45e0bcf66194ab68db99",
          "11a278183d884fc8b99b34ebe3f804be",
          "ae3e4541a1e94f1b90167b0c2fbc4914",
          "8dfe3ad55ab94fbf998d3db6ae0f01ef",
          "0992d23612734c109e932f3c1ee66618",
          "543f200726a64b7da177fc9ff17f8bf4",
          "e3e0955dd9ad461fb73b1be133087b07",
          "5f5cc42869114c648da3d9694e6cd4f2",
          "113487f0143e4b06b42be7154c36f6aa",
          "30119a5b9eab4028b8bc0cad463a03db",
          "0f71ea6bc57d4a5ba18cd56beb756f5b"
        ],
        "HasNestedGroups": false,
        "Left": 292045.06729134527,
        "Top": 16569.342418453598,
        "Width": 3034.881739825476,
        "Height": 910.49039813610216,
        "FontSize": 36.0,
        "InitialTop": 16642.67575178693,
        "InitialHeight": 838.49039813610216,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "04a0b862614243afac89b88b709acbaf",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "aa7de5b717b04acbaf36ff4765025b3e",
          "ddaf008676894e4d99bc47b38ea47240",
          "af633f2a0a23463fb036b9f10f9439fa",
          "54af2ae98c654fe59b6ce1f0c6619010",
          "33fdccd7a14d46e2aae08e9d5cff996c",
          "04dfb0e349df42a898ab687f5963cf30",
          "9693b372a5d343949d5ba189e085f68e",
          "79231bc2986a44c390f41dc32045dc99",
          "5a242afb1467415d88a161890e2365df"
        ],
        "HasNestedGroups": false,
        "Left": 295283.88687281759,
        "Top": 15874.056201596197,
        "Width": 2514.6440331261838,
        "Height": 996.54478745463166,
        "FontSize": 36.0,
        "InitialTop": 15947.389534929531,
        "InitialHeight": 895.21145412129772,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "bbfd8695163640e494d2ae1f959d297a",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2aff4ff0ffff415f976c6906a7d17e45",
          "a42765a8880e470f943f28531d7dbb3b",
          "b9bb6bd58c664a5d9ab3d7bd4172c3cc",
          "e4d83314d3d34dcc9800683e57f84e2c",
          "9607b03e34f642a6b52dc7bff8b72245",
          "cc05cf1a232d45858b7f8a117bea8fd3",
          "cc4ab8e803574d709081b0475fdd2a83",
          "2aac0fbca23b4e5780749eb8c1968377",
          "c292e8183c3e45a687fa6dbb22da08f2"
        ],
        "HasNestedGroups": false,
        "Left": 289883.329485391,
        "Top": 15181.054185234796,
        "Width": 1347.2598459402798,
        "Height": 1398.8862629398354,
        "FontSize": 36.0,
        "InitialTop": 15254.38751856813,
        "InitialHeight": 1297.5529296065015,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "9efc7999909f4721a351f6e0969a0c4a",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "381da0d1e4654c6eb1b0cb331af24e4f",
          "c87ac979e65c4f4cbdf270a756e968e5",
          "7c2e383de5bb422c8cc3946c168700aa"
        ],
        "HasNestedGroups": false,
        "Left": 300784.86315057287,
        "Top": 17241.173708062564,
        "Width": 546.56897590111475,
        "Height": 388.56975736183449,
        "FontSize": 36.0,
        "InitialTop": 17357.840374729232,
        "InitialHeight": 273.23642402849873,
        "TextblockHeight": 106.66666666666667,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "c91e2e087ff149efa87ef5201ca720b4",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2358c7fc1af048cd908ebfab7ecb05df",
          "7e51a5a6ade74238aa1888a21df17fec",
          "979bdc316c4c4ed3ac61b74bedd2d90a",
          "c80a110b94a64c28b82ad21e9d4f3073"
        ],
        "HasNestedGroups": false,
        "Left": 300619.59126902645,
        "Top": 17872.6920982392,
        "Width": 817.39770202973159,
        "Height": 398.2339177527283,
        "FontSize": 36.0,
        "InitialTop": 17946.025431572532,
        "InitialHeight": 296.90058441939618,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "b7da16395f9d403db50b2b2157ad749d",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9586089e6f17403e871771cb8b980cf8",
          "96962ad669ea48b0b5cf69737610d104",
          "8e6276584f5544f796405808e20b3b9d"
        ],
        "HasNestedGroups": false,
        "Left": 301567.57280571194,
        "Top": 18477.147515907065,
        "Width": 473.24548325012438,
        "Height": 404.43650585663272,
        "FontSize": 36.0,
        "InitialTop": 18593.814182573733,
        "InitialHeight": 289.10317252329696,
        "TextblockHeight": 106.66666666666667,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "2ca07ef3195e4aca951cb7cc1087f441",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b31cebb357f44766b3831530f9a6098d",
          "ba28c49370b7418ba0b1b3578cc5f8dc",
          "004306ae550b4e5c8b0af3f5fbe0ffb5",
          "4c1b6c6a2c454643befef01d9fb71f95",
          "f2572a99e9994f5bb4693bd5298618a0",
          "47335987899d439994421eba7a74c797",
          "bc4f8fdf91c6435999bbf37bc5ad92ee",
          "163ac1579172434fb39176663d745cb8",
          "96a0807bb6ad46cca2d6386ae498b88f",
          "8e5e8907a4c34c0283b0cb37d3a4f563",
          "9e9326de976c4bbc9723d9d7c3221025",
          "a75b1556b73b4a75a5bb57b951e2b125",
          "f9a9039d4f324ac7985a071e2c1da819",
          "2cac93bb986a4ab9b7f71da4ca949036",
          "676fc94471804bdebf79a657f9511366",
          "a7f3a2121907447981ce314d75c4440a",
          "1f574aadde824e028d159d12016829e4",
          "8ac5b80639ac458699113b6789c19c48",
          "346355ec89894a88aa5559b1a86ad4a3",
          "7aec9a33c9e84066bb802e547d501509",
          "d3cd509b900c4ad7b81314bd4194fafd",
          "6c81965592714f6a8bd8c7da88e042ba",
          "730e97e243454746bf00da871acdc169",
          "9806f1f8813949758aea6c2e0d7ffbfd",
          "8f3002e52d404090b385529164d1876b",
          "a2944eea4bcc4e90ba1162179de86d38",
          "c81bc2910ee14dc183a93d576a2a6f88",
          "9f351cc733aa4f23b4d0c2e33f738c5a",
          "c9b3d425d9ff4d71941a77e65b5da441",
          "e2d1a8451df84a8793a07598fe30b45d",
          "6ade09ad61b64f45add6936c896c0745",
          "1b65f1adcfad4912abb9ab6936fc6ae4",
          "768919758e8c4333b082925ace364469",
          "592cff2d825c45318f252f2338c609fd",
          "a88f9ce4e08e4772844061717c5e3ee2",
          "f14c52b9c1df4fe99ceac28519f99c34",
          "ed620258bb1a483186d77c0bd272c862",
          "466e28ff767f478781684d387ccc717f",
          "6faba3f145d340cfba8bbf17a88508a9",
          "570b072dfa5d47c984fc0dcf67d32332",
          "479d967e83804a12b90cefc5754bfd5e",
          "ce57d2d4193147f1b6314ee64dfc3356",
          "806e7ef4d48b4c5baabd9c4967a82da3",
          "9b88ca9198764ab49f6d23fb0e91ec3c",
          "c0e60e0d29f84442a22ebfe3d012b6e2",
          "ac7623250ad84e61a5380527f6275cc6",
          "01ac341a919148ee8b75fadc3452fd54",
          "dd20b7ddd1b24d4aa2c8d32ae8ff2b57",
          "96283d1d9b7144b98ee6e020f4ad4afa",
          "57dbd372bcca4d8a8ec276742d95b78c",
          "6295cd04273a4568851f135c5a8aaab0",
          "946827a38874418185eb3c3503c1a251",
          "578c4bc1812140aca02122adfc43e410",
          "2b52be6b4dcf4ed99787f221aa87e2e9",
          "a26eef1ce2f54e69936507649fd69daa",
          "7766f07b125646979af299758757f63d",
          "6fa50e4bf47841c08d5b6f381f78008c",
          "21a114b3266344d4b918274c6428fadc",
          "0456f3a6c1034a119684371ffce4d311",
          "4ab4db12aca34e5dbea117186a4ef2cb",
          "9c98055fcd0e481ea520ae57b702cf57",
          "89ddc9dc69ee4cbeb377e6ef0a555b57",
          "a4f9965e43584075ab535f285b721862",
          "fc735e487a464219bf70b6096407a503",
          "8fb44fc2dd7746b49dced82917199e0b",
          "a7d6a5fc54c94f408956893ddbe84bb2",
          "823dedbdeabf436b8b617105608b470c",
          "0daec23e7b744649bea94c039ca2853a",
          "3a6fa6622f774487b51d252c9dafa320"
        ],
        "HasNestedGroups": false,
        "Left": 276960.97722933994,
        "Top": 18707.4105811967,
        "Width": 10240.977041835722,
        "Height": 2607.4598072037297,
        "FontSize": 36.0,
        "InitialTop": 18780.74391453003,
        "InitialHeight": 2506.2375239553003,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "0eee5a8fa7bf4e6bb117e08c3006cfaa",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "78ad9399044d4dc0a89eb29b17700e36",
          "4856bda51cdf4fcbb4c294b8eb747ff5",
          "ee5504001716467f9728244cee98a166",
          "e9dc9b5543f3439eaf8883f2ea4478a9",
          "3b785069fd34440eba82cd80f7a6486a",
          "247ebd7fd8354c2aa4040d10a3c2f9aa",
          "2d3033f427b747729e242d44cb8b614b",
          "ede83ee17fe54f8fad8037fed3bfa90e",
          "b2e92c79b9b44141ab2a3b53f574c11c",
          "426d1ed233b94aecb23f55a5a0158759",
          "da6c166538234da89990967cdc3350cd",
          "0bb88797223d414eb5ffbc084440219d",
          "5c01edfbfc704e3f8bcc144fe209d65e",
          "dfa1f3d1a4d348f09179e2a42856154a",
          "394315c2dd7b4525adde59a6e4a783c1",
          "9ab6f15e6d77453483e5ad9262003d9a",
          "05d97713e1d149a688fd2fcdd1bf017b",
          "581d282db07c458597a4ee481c895b80",
          "73eef8ed1378447ca8d26b7bbee6bdca",
          "78d48edc13f24c4aaeb9561c9451033d",
          "4a1cfda38dd34b69be8af718a57c49b8",
          "e5ac0471ee4845198366065192ed417c",
          "e065716666794f77a28aab68fb23ae47",
          "344b3e5b1bd1483da9a0ac8f6d602e92",
          "48843d6bd9d04e8f86432def204f5ae8",
          "bdcc9542dd1d497bb97f22c203485d33",
          "3980307ef3a9407f84070e456f63b3eb",
          "05ff947c5868496fb666c9dbaf61656a",
          "143d056f62a843a9a23279ed0aa186fe",
          "e6eec743ae2d48a2b696354ad374aba8",
          "598b8bfb3ce740f5a1c1ed75e03f2f44",
          "78acf781e7d441a38d6cf29614cf772e",
          "fdffcfbd68e6453da2f2d81b4080a663",
          "035d5686fd1d4e9da0761910efe5545d",
          "d3b086466eec44979dda7bf4e937ce73",
          "23b74485d0b745199b8ed1d827aacccd",
          "f58ae06d5dda4cc0858836aa1962a385",
          "d68886c2d4d44e2788d38b1eeda53e10",
          "5a98856223c04f52865277a227aa6f5b",
          "37a94ad58322462083bb6f623288850a",
          "a8de750ee99f40a48377dee9b1e65e9b",
          "6a46498712f3417a934c518a94da6d2e",
          "1785fa4b23cb4c639d0813dc56319f20",
          "654e67bdd57e41babfcd050c5367f4b9",
          "f40f9939a9284eb482e9d5e6247fa24e",
          "9127aa3f3b814c82afe66ba65b85684b",
          "401efb31c2774e32ae1588570a71b3d1",
          "72715426b0f84e54846762e28b83d13a",
          "96704159d6d54f5785751fc5d0fc2195",
          "1361e92fb339477c84df83d13996e4d5",
          "d9030a764d474e338cd0c6e588071758",
          "01b7c9b261b24aa69b506585469f831e",
          "589a7e0ebbe548558eecd22894e4a4e8",
          "4a13550fba024ce4895a6a420acf7f6a",
          "7c2d21dbb38f4866a753d9f0a333c79f",
          "9a7158ef1fab47faa48df5fb8968331b",
          "6adeed88b80648529ac43dd8e02555f2",
          "72b93f6011e44ec3a665cc2d49090dde",
          "fcc5c251d4d946e2bf3789bc864bdc1b",
          "18e7524319864d2f95e88836af7942b1",
          "c2f243a742734fbb8cc21498bfc0c90d",
          "1c1856c5c4b041d882e4cad725d9a057",
          "830db1b6f04c4f28a0f9568394467a77",
          "d00cc8c6eeb243ec8130db08d6baf1ab",
          "7e218ee50a1142438a34a4a1d9df62d0",
          "16052f43be6749079a0d4f6286f5e358",
          "00148f95a0454db1844c56b1f795a43d",
          "bae5b1f07a5441f5b1734796435d0885",
          "d999e55b81464db0abdacb1909cd7ccc",
          "d444247bd50e4907b1ecce6f5641e7ef",
          "280cf5b5e90c4c759f9aa6f46427b8c8",
          "1e9e6038af5e4704aecfe2267ff783c3",
          "a97fc8c0ea2948c392a3717f2be2c7fd",
          "ac6113e487394600900740b6bbf5308d",
          "8eeb2e44844b40deaf697b428f30b212",
          "e42bda631c674129b8b3895e54eb8353",
          "7fcbf0189c0d4e409bd2d53a84ad529a",
          "f8618bb8b4a9424d9ca3320f8d132f5f",
          "73226ef2a0294424bc2fbe1af56c1a78",
          "17623e88a3c64e26a1ea47a9385de1fc",
          "5771d5adfe7241cc919ccc76f531579e"
        ],
        "HasNestedGroups": false,
        "Left": 288362.51255519839,
        "Top": 19720.728600102,
        "Width": 12688.304356974899,
        "Height": 2932.7801922899962,
        "FontSize": 36.0,
        "InitialTop": 19794.061933435332,
        "InitialHeight": 2860.7801922899962,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "7c74ba05f0b14b1ba8a6c26aac394008",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "945980a7c82d49949f1113cd9201b4ac",
          "7cee4fcb571840c792b53fbbaeb8368f",
          "bcb4800490b0471c8cfbfa09a292c52a",
          "9b4bdd99202a42c482a3f2d787fc0411",
          "f8835841b86c428fb4f44ef4876bad40",
          "0cc85196291b461cb2c164e1aae8d0f3",
          "f670b2b644f94ef19afd196e929d3c23",
          "bfce1670e41649038d12ae066506406e",
          "3f21e69c277b4bcd8ac689ce8a78b439",
          "73c5f0d1f2eb4265b854884e879743cb",
          "d179f6ce2f6a4b6d87f9acc9d2b29787"
        ],
        "HasNestedGroups": false,
        "Left": 297971.02702215227,
        "Top": 17279.017478733098,
        "Width": 2418.26188755373,
        "Height": 993.55954751523313,
        "FontSize": 36.0,
        "InitialTop": 17352.35081206643,
        "InitialHeight": 892.226214181901,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "fffdf5c64fa94edbb6d6d12eda258e18",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d792de49d0624cd1aadfacb1a86db3d9",
          "4c632c831603491f8643854b12598e86",
          "98ad769095a2437a96da91e618a5535a",
          "b30a10c13a9b420e8cc9501626857953",
          "a87ac7e9879c4bae814c7c72c6ac3a43",
          "b45a758cd41b4800a5122a6443077ba8",
          "231c4994d51a4dac9dd474752c282eed",
          "646ac919488a4ef3b6521d57f211522f",
          "1101fb9fdaf24c8b99feb385b1401626",
          "236da7d52fc54d7c9eeda27a3e2c142b",
          "d875420d2d58414d87d2b8ef65354017",
          "4e70b83851614b11a9b432aeae526719",
          "82319ad83d3c4dd4ae0bb094fe091257",
          "b557c77fb6b546c3bf05d9e8bf3ff0e2",
          "e02eade58cdf46db9d809ccf83554d8d",
          "73823241e51345aa8e07f182bc871676"
        ],
        "HasNestedGroups": false,
        "Left": 301894.40223575116,
        "Top": 17219.4589191067,
        "Width": 3377.1906569082057,
        "Height": 848.89498416129936,
        "FontSize": 36.0,
        "InitialTop": 17292.792252440031,
        "InitialHeight": 776.89498416129936,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "81cc500534144ae4aa4afbecf7d8ba61",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ecd8010b215344248e02071d6b24fc27",
          "a08231ecab5e4c90a2545db137f4392d",
          "decf95c100474e47a4ab3662923a9cdb",
          "761efde2c7834a729d2f193c8b71eabf",
          "3088c7866fac4e649f7e9c6529487400",
          "40e1f84e8df14eb4ab985f246e9520bf",
          "ae873fa5488242d0bb53eba53b64f055",
          "f4e5a6f0913a491899ce817b344c390e",
          "97f8c48621134da7807e0d6d5dcb21ea",
          "a3ce1f47f46943e1ae1b31a3c0a3c24e",
          "f2bb48467c6143ea81dba14b37c90d5f",
          "825571e7466d41df942244665c7e0862",
          "19ff095ce72643f7878c04a2b295967f",
          "eada62fd253643dea8d15752a1af82d9",
          "9b3cf041b1144e8a94c5bf873f9b61de",
          "a4a7cb30af90491a88d4b0f2b0c753ca",
          "5510335e57cf4dc5b37d37c154683b3e",
          "808a23cf08be4481a90c2dee02448678",
          "8864259bfd844025b17adcd45ebc768f"
        ],
        "HasNestedGroups": false,
        "Left": 306487.22577045747,
        "Top": 17039.6848950576,
        "Width": 1843.665691375325,
        "Height": 870.52948921612915,
        "FontSize": 36.0,
        "InitialTop": 17113.018228390931,
        "InitialHeight": 769.33611379170179,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "16322d0054f948fa8f9e9eddba1285ad",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1b9755a862664e4882a46222a03c1dc2",
          "641fface36574638ac9bf806b0daa445",
          "b5fd6f61dbcf4a8ca575f006fcc8ab92",
          "d31c577805624a4cb42fa026f9a4b228",
          "e22d805c9e494c9a87fc8e890c9cb82d",
          "d0f955c7ede04cee8a38605013551c9e",
          "94175b5a01d84ee3b71a2df0b0259672",
          "4964372c9b1f4ca0a6a7a060ca5322dd",
          "870ee68f7db64b70a0214273b4011bb7",
          "641f42a98a5744e2992acbdbee5bfc3f",
          "49ffbb415d4d4ffbb374ff2fe6b5fc67",
          "d383a69d09c04a16acb39318b3380ec8",
          "6e45d8d0942c49848cfde262c3052fad",
          "11478e4165974215a3dc0cd877d0f378",
          "6941bad8a98547439124466cc921a26a",
          "652cb955175a493fb8aa4e14666c6893",
          "ad67cbcabd73497cb020be107a0d6905",
          "02790ef505a34c2084b6eebf7711cd55"
        ],
        "HasNestedGroups": false,
        "Left": 310847.36835695338,
        "Top": 15730.079518853296,
        "Width": 4567.9680987669853,
        "Height": 1237.6662194552355,
        "FontSize": 36.0,
        "InitialTop": 15803.41285218663,
        "InitialHeight": 1136.3328861219015,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "6682c0d62c6b4e49a02dc4c70ed8718f",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ae8b40b2aada493683fbf2625ada5e28",
          "e386d5e920a14aa28d4a0be6b4a0bf8a",
          "a8a4163c6693446bae5b34527362ae5e",
          "993d91e4f4e34c988d91ac9faeb1511d",
          "043e067ad77543bc91d29141bf2632e7",
          "0869c7b67a054bf9bb5b32d879f83132",
          "754c07125a2545628aa22c2c81bc9ef7",
          "46dce0a9878b45e6890541542add99ab",
          "9266180b23c34b02bca7031d7f2f755d",
          "afe0e68b592a44389aeb77527228d443",
          "a2b529f653b3423685b2433b6a90bc4e"
        ],
        "HasNestedGroups": false,
        "Left": 308552.87996554008,
        "Top": 16501.056468251398,
        "Width": 1922.9765550544253,
        "Height": 1383.3191703385019,
        "FontSize": 36.0,
        "InitialTop": 16574.38980158473,
        "InitialHeight": 1311.3191703385019,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "758862902aee4ff3a2c27365e7966912",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f210dbc8760744529448f56bf360d822",
          "2862d95a63e0456a8d5fc0ab8a6e5e22",
          "b6329f7c46ea4ecdad82b4f855abf3bc",
          "1376c79f7aa54d339b940dc5b9642120",
          "4bf21c0125a9472bb00b07099f864ecd",
          "6fbfaccf46e848b988c293e7436f7521",
          "dc910d58dbf24211baae9d99fb6928a5",
          "6899887b9be94f52bce5119da9307d39",
          "a7199b4447c040e3bf8e66567f17d9b3",
          "a056a5ed233c497ea4c9528901756d3d",
          "680b0d82dded44daaa351feb4b86d3ce",
          "bcfd1ff1ecfc4af897aebbd62de1179f",
          "487be2cbb67243e591847a31807fb89c",
          "a96ce8febd9e4c3d89ee5e898f268ae0",
          "a9f7121d78304bcfb25d5b56c3bbf0f7",
          "edb92f3a00214743bffba9ef040210d5",
          "b3fb7736cf6f4b32858ddabca2b4b044",
          "225d6c7ec240406ebc602e0d63407bdb",
          "10730c7dcf684c83bd63f8a918d15c9d",
          "c69002ddad7c4e6587427e5460ee5390",
          "85b3e470c3d84769893440a8cd3f5ff0",
          "84a681ceba594ff196d734349495680a",
          "b7a97c512c5a47b9a2537bafcabe94f7",
          "4996c980405c446bbaf1fe55c9c199ce",
          "84f850b810ca4e79816c18f09046a358",
          "a1c6d3553990432a827beea1d0794888",
          "521772b9e97c4d4fbe89b63136b1213c",
          "e7965ded87314edf95bb601837e975bb",
          "5f3f2de9229f4e2986ff9c1904d186cf",
          "58ec23850033487ea57d99a08635522c",
          "a639cac5e3b84135a18c47df4bbb4ea2",
          "c93edfb078f74ff38d522954945a707d",
          "9389babdcdf74f28b6fbfe4ab2dc1648",
          "a0b9865789d6459887dc3af4e6183f71",
          "49ca0d50a2a440fea9ac826e6c28aa6f",
          "e725381d5ac24d18a0834bd12cb92fd3",
          "c2360a9dda88426caff7f2712176fbf1",
          "53f7676e83bf4f79976875014b8fda54",
          "5865aff975d84393b0d98d90003a6e36",
          "049cb0ad0c134bfc8182600156fa6f60",
          "2f3707f0319541a3aa689993b1017faf",
          "00c2aa152649471986362404e096c928",
          "8551a08ede8b46109b1d27f819c8db96",
          "cfef5828738a46ca9ff53e1b4204401d",
          "aa053067525642439692ec086eb42c4f",
          "bf026a85daa74b108c67650b164877a2",
          "3200946e67b74628a4633e981d285daf",
          "1b4c23dafaae4a2da98fbe4cf225867a",
          "e2755ef17f7940fd9735bcda93e1534f",
          "56ca8e957f364280802ca1fd13803a1c",
          "f584733b8a184db1b83a59c9fc74ca6c",
          "e39a9d3b5b654374be47c86845c7c323"
        ],
        "HasNestedGroups": false,
        "Left": 315890.01824743941,
        "Top": 9425.9248899605227,
        "Width": 13288.900262778916,
        "Height": 2360.4291893211612,
        "FontSize": 36.0,
        "InitialTop": 9499.2582232938566,
        "InitialHeight": 2288.4291893211612,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "c0f06bc584df4f63b765bcb012f435f4",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "11519445649346deacb2ae5b25d6b1cd",
          "84d7baf790ab43829c03e8b4211c6dd2"
        ],
        "HasNestedGroups": false,
        "Left": 266412.71662909875,
        "Top": 13699.759495260027,
        "Width": 50563.269954997755,
        "Height": 312.86186801773329,
        "FontSize": 36.0,
        "InitialTop": 13773.092828593361,
        "InitialHeight": 211.52853468439935,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "a0653ba7a50c410bb62661fcc9040d7a",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d7d59fe238474402906dc2448026c70a",
          "1e65fb99aa8d40d8b8970152e81266a1",
          "3e6a4526298742f08458c06df7993ec2",
          "304c38d67d0d42d286389152e01eadca",
          "1d36a38d786842b790dd224cfe559079"
        ],
        "HasNestedGroups": false,
        "Left": 330089.66250149306,
        "Top": 6702.1198462553175,
        "Width": 1074.6029381357366,
        "Height": 530.99933310127562,
        "FontSize": 36.0,
        "InitialTop": 6775.4531795886505,
        "InitialHeight": 412.67929739913052,
        "TextblockHeight": 63.333333333333336,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "dcaef47bfd1a439aaeb128e95297bc37",
        "Title": "Vindt alle kruispunten",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 19481.421723935186,
        "Top": 4892.4238162909614,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bf74beb6c73e48c9b9b25774f5006c45",
        "Title": "Paart alle hoeken bij elkaar in setjes van twee lijnen",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 104790.54276416732,
        "Top": 3841.4111085719087,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d6662a1eef65491aba73eeb03061f15e",
        "Title": "Achterhaalt de hoeken in graden. Filtert de hoeken kleiner dan threshold ui de lijst",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 113409.74276416733,
        "Top": 3657.9379835719083,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "16cf1b21ea2645f3a55df30b9764b7a2",
        "Title": "•  trekt een lijn tussen de twee zijden van de hoek\n•  kijkt of dit de korte zijde of de lange zijde van de driekhoek is",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 115887.34276416732,
        "Top": 3307.5300148219076,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "18585b6f25354c3e988526334eec7707",
        "Title": "1PerimetercurveCells.Cells.Filter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 166140.63316177082,
        "Top": 3168.7569123477133,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "325b630cdb6b48ae899b34a7ce3bd15a",
        "Title": "1PerimetercurveCells.Curves.Filter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 167307.03316177084,
        "Top": 3076.7569123477133,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "262be915304d4828891528d23ed7326b",
        "Title": "OvergeblevenCellen.Filter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 167307.03316177084,
        "Top": 3306.7569123477133,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7b5e92ba35c446afba18b1de97c2e9f6",
        "Title": "OvergeblevenCellen",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 163119.03316177084,
        "Top": 3032.5844123477145,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "19b7af95b19e4b1eb131a24c8fe314e5",
        "Title": "CellenGepaard",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 170159.03316177084,
        "Top": 3414.1019123477126,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6651bcd5d0134a959c449d63e8ec6eb4",
        "Title": "Cellen.Overgebleven",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 176954.23316177086,
        "Top": 3112.1019123477126,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "17314e57b9be4119bbfe585a326f2190",
        "Title": "1PerimetercurveCells.Indices",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 161657.43316177084,
        "Top": 2809.3344123477136,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a981d542d13f493ca9a4352a77eb1e36",
        "Title": "Perimetercurves niet clashend met kavelboundary",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 160751.03316177084,
        "Top": 2734.9594123477136,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dceb457afeaa40759b3e6ab78e20708b",
        "Title": "Aangrenzende cellen",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 158475.03316177084,
        "Top": 2861.9356623477142,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e557fcf678734274924a60be632fbde4",
        "Title": "1PerimetercurveCells.Curves",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 163119.03316177084,
        "Top": 2802.5844123477136,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "384721e2429b49c2aea05ae44826b8d9",
        "Title": "1PerimetercurveCells.Cells",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 161952.63316177082,
        "Top": 2916.0844123477145,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8a15b378df93416d9bd009f43a7d8a9d",
        "Title": "UniqueIndices",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 234547.03316177073,
        "Top": 3611.6144123477152,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "eb5c342677e24aedbfac5c34031d69da",
        "Title": "DuplicateIndices",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 172504.63316177085,
        "Top": 3414.1019123477126,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "697c13640e3f4f8988505a14905ab371",
        "Title": "Aangrenzende cellen",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 180920.63316177085,
        "Top": 3131.9206623477112,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "220d6b9ec2b54c15b181dd85767b0641",
        "Title": "Perimetercurves niet clashend met kavelboundary",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 183196.63316177085,
        "Top": 3008.5069123477115,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "01f67e934f19483396a9d4bb160757bf",
        "Title": "3PerimetercurveCells.Curves",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 185564.63316177085,
        "Top": 3084.5069123477115,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9aa24416891e4be79806fd079fb67a3a",
        "Title": "3PerimetercurveCells.Cells",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 184398.23316177086,
        "Top": 3176.5069123477115,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "36cd92f186ff4ebb9dae8fba1c478d15",
        "Title": "OvergeblevenCellen",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 185564.63316177085,
        "Top": 3314.5069123477115,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "86c2c6898a4247f9aa20c47252ce48c6",
        "Title": "1PerimetercurveCells.Cells.Filter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 188518.23316177086,
        "Top": 3188.2744123477132,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "99f3ecf1f06643f8bbee28dbbe2d6f2e",
        "Title": "1PerimetercurveCells.Curves.Filter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 189684.63316177085,
        "Top": 3096.2744123477132,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1aca6fa66f6f4f518a212f442a4475a3",
        "Title": "3PerimetercurveCells.Indices",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 184103.03316177084,
        "Top": 3074.5069123477115,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0fb0d788afc8457eb9d5fc68d1542902",
        "Title": "OvergeblevenCellen.Filter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 189684.63316177085,
        "Top": 3326.2744123477132,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4997926a75f94bccac3c2eb94a4a8bca",
        "Title": "Cellen.Overgebleven",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 203146.2331617708,
        "Top": 3139.5331623477141,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e809a2c45596408c900999ddcba346b0",
        "Title": "CellenGepaard",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 196351.03316177084,
        "Top": 3441.5331623477141,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "93064950c3a040ac83e028a239aabda6",
        "Title": "UniqueIndices",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 234547.03316177073,
        "Top": 3810.6144123477152,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c31843bf2531413ca66cb2a6b37fe77f",
        "Title": "DuplicateIndices",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 198696.63316177082,
        "Top": 3441.5331623477141,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3e6039d2f4b049bfab9bf50db7f0dbcc",
        "Title": "Aangrenzende cellen",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 207112.63316177079,
        "Top": 3159.3519123477126,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a587a2b434f043ccac938f18fe30447e",
        "Title": "3PerimetercurveCells.Indices",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 210295.03316177079,
        "Top": 3101.9381623477129,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "94e8e14bc3084af9b3f35284d41e647d",
        "Title": "Perimetercurves niet clashend met kavelboundary",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 209388.63316177079,
        "Top": 3035.9381623477129,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4435ba30c608427381e14d58ce5a0127",
        "Title": "3PerimetercurveCells.Curves",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 211756.63316177076,
        "Top": 3111.9381623477129,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f7cbc57be3034cbc936d3f39a24ce0f0",
        "Title": "3PerimetercurveCells.Cells",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 210590.2331617708,
        "Top": 3203.9381623477129,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ab8a78ce50304a0e921d9c7b1005b035",
        "Title": "OvergeblevenCellen",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 211756.63316177076,
        "Top": 3341.9381623477129,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ecf876b835f747329f4d48487370d2f4",
        "Title": "1PerimetercurveCells.Cells.Filter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 214710.23316177077,
        "Top": 3215.7056623477147,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "85807417580f4a489f03017e2eced21e",
        "Title": "1PerimetercurveCells.Curves.Filter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 215876.63316177076,
        "Top": 3123.7056623477147,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "191fa5a9d128445aba52be99e5f61d31",
        "Title": "OvergeblevenCellen.Filter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 215876.63316177076,
        "Top": 3353.7056623477147,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8026e907082c4ac0af67541df43c5b3a",
        "Title": "CellenGepaard",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 221085.43316177075,
        "Top": 3451.7144123477156,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e04ce59f40aa4572af4662c3af840555",
        "Title": "Cellen.Overgebleven",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 232349.43316177069,
        "Top": 3115.2144123477156,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f69b8abea20143418ead546c00a1509a",
        "Title": "UniqueIndices",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 234547.03316177073,
        "Top": 4009.6144123477152,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c335583ac1a04ed5a2396adfe445c120",
        "Title": "DuplicateIndices",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 223431.03316177076,
        "Top": 3510.2144123477156,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "39c407f7301049a48315caf969658915",
        "Title": "rij",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 308238.79937336268,
        "Top": 17275.708663648184,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d7c5c37bb0d44237be34eb39c4733cd8",
        "Title": "Indice",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 308238.75190148869,
        "Top": 17060.108261370449,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 598.94379710722546,
    "Y": 405.88209516055161,
    "Zoom": 0.27081195930302904
  }
}