{
  "Uuid": "eb54394a-490b-4007-8941-8d228baf80f3",
  "IsCustomNode": false,
  "Description": null,
  "Name": "InvalidSheet_OpenXml",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\t_misom\\dev\\github\\Dynamo\\test\\core\\excel\\Hammersmith_Copy.xlsx",
      "InputValue": ".\\Hammersmith_Copy.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "5368ed3c61184116a8fbf31bf086a5dc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "06048d82698d478aa634f9050267c675",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"NotAWorksheet\";",
      "Id": "97e7c7bd46e240c0a74201a3ec5249aa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "02d31af318b24177bd6e933f9ca11a0c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.OpenXMLImportExcel@string,string,int,int,bool",
      "Id": "d01b3f01cec84fbba98653fb17ffc85a",
      "Inputs": [
        {
          "Id": "76355c1dfe8944e4bda4734a4135d9eb",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ad6e743fa21483c9f1cc7eb485d38b6",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6d1d2b950a74525a95fbe394d45f3c6",
          "Name": "startRow",
          "Description": "Start row for reading data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b48ff17f3b0493ab81c6897c650a186",
          "Name": "startColumn",
          "Description": "Start column for reading data. Enter 0 for Column A, 1 for Column B, etc.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48f23f3d3ba641c2ab26cc4b330ba57d",
          "Name": "readAsString",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "baf946f6246640eaa3f4435c93df12ef",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0].\n\nData.OpenXMLImportExcel (filePath: string, sheetName: string, startRow: int = 0, startColumn: int = 0, readAsString: bool = false): var[][]"
    }
  ],
  "Connectors": [
    {
      "Start": "06048d82698d478aa634f9050267c675",
      "End": "76355c1dfe8944e4bda4734a4135d9eb",
      "Id": "a4ca12dd05aa4222b72e5ac2dd16db18"
    },
    {
      "Start": "02d31af318b24177bd6e933f9ca11a0c",
      "End": "4ad6e743fa21483c9f1cc7eb485d38b6",
      "Id": "dba406b9ce32408c83e43d663eef6c3c"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "ExtensionWorkspaceData": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.4556",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "5368ed3c61184116a8fbf31bf086a5dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 66.800000000000011,
        "Y": 103.59999999999998
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "97e7c7bd46e240c0a74201a3ec5249aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 60.800000000000011,
        "Y": 227.40000000000003
      },
      {
        "ShowGeometry": true,
        "Name": "Data.OpenXMLImportExcel",
        "Id": "d01b3f01cec84fbba98653fb17ffc85a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 351.20000000000005,
        "Y": 118.39999999999998
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}