<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MeshToolkit</name>
    </assembly>
    <members>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.ImportFile(System.String)">
            <summary>
            Imports a file, parsing it into a number of Meshes.
            Currently supported formats are:
            .mix -- Meshmixer
            .obj -- Wavefront
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.ByGeometry(Autodesk.DesignScript.Geometry.Geometry,System.Double,System.Int32)">
            <summary>
            Convert a Geometry object such as a Solid or Surface into a Mesh.
            The resolution of the mesh is determined by the Dynamo render precision
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.ByVerticesAndIndices(System.Collections.Generic.IEnumerable{Autodesk.DesignScript.Geometry.Point},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Create a new Mesh from supplied vertices and indices. Vertices should 
            not overlap. Indices should be sets of three integers 
            indicating the three locations in the virtices array
            of the three points of a triangle
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Vertices">
            <summary>
            Converts the Mesh vertices to Points, and returns them
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Edges">
            <summary>
            Converts the Mesh edges to Lines, and returns them
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Triangles">
            <summary>
            Converts the Mesh faces to Surface patches, and returns them. Note:
            this method can generate A LOT of heavy Surfaces, and may
            slow down Dynamo with large meshes.
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Tessellate(Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <notranslation>true</notranslation>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Repair">
            <summary>
            Returns a new Mesh with the following defects repaired:
            Small components: if the Mesh contains a very small, disconnected
                segments, relative to the overall Mesh size, they will be
                discarded.
            Holes: holes in the mesh are filled in
            Non-manifold regions: if a vertex is connected to more than
                two *boundary* edges, or an edge is connected to more than
                two triangles then the vertex / edge is non-manifold. The
                mesh toolkit will remove geometry until the mesh is manifold
            
            This method tries to preserve as much of the original mesh as 
            possible, as opposed to MakeWatertight, which resamples the Mesh
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.CloseCracks">
            <summary>
            Removes internal boundaries of a Mesh. An internal boundary occurs
            when there are coincident vertices, such as if Mesh had separate
            triangle groups for the lid of a pot and the body of the pot.
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.MakeWatertight">
            <summary>
            Returns a new Mesh that is watertight and 3D printable. As a result of
            making a Mesh watertight, self-intersections, overlaps, and non-manifold
            geometry is removed from the mesh. The method computes a thin-band distance 
            field and generates a new Mesh using marching cubes but doesn't project 
            back onto the original Mesh.
            
            Basically the Mesh is filled with a bunch of tiny boxes, and a new 
            mesh is created around this.
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.ExportMeshes(System.String,System.Collections.Generic.IEnumerable{Autodesk.Dynamo.MeshToolkit.Mesh})">
            <summary>
            Exports meshes to a format determined by file name:
            .mix -- Meshmixer
            .obj -- Wavefront
            .stl -- STL format
            .dae -- COLLADA
            .ply -- Polygon File Format
            This function returns the filename of the output file, which may
            need to be changed if it contains non-ascii characters
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Intersect(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Intersects input Plane with the Mesh, producing a PolyCurve
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Mirror(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Reflect the Mesh across the input Plane
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Rotate(Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Rotate the Mesh around the input axis by input degrees. Rotation
            is centered at the origin 
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Scale(System.Double)">
            <summary>
            Scale the Mesh by the input amount
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Scale Mesh non-uniformally by scale factors
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Translate(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Translate a Mesh in the direction of input Vector by the length of the Vector
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Translate(Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Translate the Mesh in the direction of the input Vector by the input distance
            </summary>
        </member>
        <member name="M:Autodesk.Dynamo.MeshToolkit.Mesh.Translate(System.Double,System.Double,System.Double)">
            <summary>
            Translates the Mesh by the input distances
            </summary>
        </member>
        <member name="P:Autodesk.Dynamo.MeshToolkit.Mesh.VertexCount">
            <summary>
            Returns the number of vertices in the Mesh
            </summary>
        </member>
        <member name="P:Autodesk.Dynamo.MeshToolkit.Mesh.EdgeCount">
            <summary>
            Returns the number of edges in the Mesh
            </summary>
        </member>
        <member name="P:Autodesk.Dynamo.MeshToolkit.Mesh.TriangleCount">
            <summary>
            Returns the number of triangles in the Mesh
            </summary>
        </member>
        <member name="P:Autodesk.Dynamo.MeshToolkit.Mesh.VerticesAsThreeNumbers">
            <summary>
            Returns raw vertices of this mesh as a list of numbers. Each set of
            three consecutive numbers represents a point.
            </summary>
        </member>
        <member name="P:Autodesk.Dynamo.MeshToolkit.Mesh.EdgesAsSixNumbers">
            <summary>
            Returns raw vertices of this mesh as a list of numbers. Each set of
            six consecutive numbers represents two points
            </summary>
        </member>
        <member name="P:Autodesk.Dynamo.MeshToolkit.Mesh.TrianglesAsNineNumbers">
            <summary>
            Returns raw vertices of this mesh as a list of numbers. Each set of
            nine consecutive numbers represents three points of a triangle
            </summary>
        </member>
        <member name="P:Autodesk.Dynamo.MeshToolkit.RenderPackage.ItemsCount">
            <summary>
            Store the number of items stored in the RenderPackage
            </summary>
        </member>
    </members>
</doc>
