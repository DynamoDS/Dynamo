<Workspace Version="1.0.1.1743" X="-1055.5150153235" Y="-88.5063378733044" zoom="0.390383839011271" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="False">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="7183a2fe-9a6a-4eeb-b223-3525a80ab2f2" type="PythonNodeModels.PythonNode" nickname="Python Script" x="3215.13835438171" y="846.688270498232" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <Script># Python script to find add or subtract a series of numbers. 

# Boiler-plate import statments included out-of-the-box
import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# The inputs to this node will be stored as a list in the IN variable.
sign = IN[0]  # -1 for subtract all, 0 for do nothing, 1 for add all
nums = IN[1]  # List of numbers to subtract or add

partials = [] # Empty array to contain partial sums or differences
result = 0    # Initialize the sum or difference to 0

# Loop through each item and add it or subtract it from the result.
for index in range(len(nums)):
	if sign &gt; 0:
		result = result + nums[index]
		partials.append(result)
	elif sign == 0:
		partials.append(result)
		continue
	else:
		result = result - nums[index]
		partials.append(result)

# Assign the output to the OUT variable
#OUT = results  # Use this to output only the result.
OUT = []
OUT.append(result)
OUT.append(partials)</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.IntegerSlider guid="9e561a4f-9f86-4d4e-ac53-e30110ffb406" type="CoreNodeModels.Input.IntegerSlider" nickname="Integer Slider" x="2871.40422094826" y="828.642616909402" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Int32>1</System.Int32>
      <Range min="-1" max="1" step="1" />
    </CoreNodeModels.Input.IntegerSlider>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="fb28178d-f0ca-4db0-8510-5202c26f64cf" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2872.28054522067" y="1012.27636998279" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="0..10;" ShouldFocus="false" />
    <CoreNodeModels.Watch guid="041d63bf-1838-4c6b-b45d-fa9a7a549434" type="CoreNodeModels.Watch" nickname="Watch" x="2980.4241065753" y="1012.48464529326" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" />
    <CoreNodeModels.Watch guid="ecc8630f-a9b0-4061-9046-b47ce8ba4f2c" type="CoreNodeModels.Watch" nickname="Watch" x="3845.01662316494" y="969.304297020235" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="b1be50ed-f93c-4d9c-b7c4-55d97e820672" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.GetItemAtIndex" x="3624.32630503776" y="795.593371986507" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="DSCoreNodes.dll" function="DSCore.List.GetItemAtIndex@var[]..[],int" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="340d812d-3963-4fff-bb4e-cfadea6b01ca" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="3508.59019600975" y="742.687521788591" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="0;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="e14a4953-9115-4344-ac65-e7243e4975e3" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.GetItemAtIndex" x="3617.86575489773" y="969.473453628049" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="DSCoreNodes.dll" function="DSCore.List.GetItemAtIndex@var[]..[],int" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="e9ae05b8-9942-4d33-a193-6e955dedaf77" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="3502.12964586972" y="916.567603430133" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="1;" ShouldFocus="false" />
    <CoreNodeModels.Watch guid="c44ca111-4bbf-48cc-9b35-8b339af6c19e" type="CoreNodeModels.Watch" nickname="Watch" x="3847.38013703903" y="789.874626772135" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" />
    <PythonNodeModels.PythonNode guid="9094d23b-3338-4e5c-af7b-7d08e547cc25" type="PythonNodeModels.PythonNode" nickname="Python Script" x="2857.99246696516" y="1613.78092016405" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false" inputcount="0">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

p1 = Point.ByCoordinates(0, 0, 0);
p2 = Point.ByCoordinates(-10, -10, -10);

l = Line.ByStartPointEndPoint(p1, p2);

pts = [
	Point.ByCoordinates(0, 0, 0),
	Point.ByCoordinates(10, 10, 0),
	Point.ByCoordinates(20, 0, 0),
	Point.ByCoordinates(30, 10, 0),
	Point.ByCoordinates(40, 0, 0) ]
	
spline = NurbsCurve.ByPoints(pts)

surf = spline.Extrude(Vector.ByCoordinates(0, 0, 1), 10)

#Assign your output to the OUT variable
OUT = [l, spline, surf]</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="b643c0d1-43e4-4370-9bdf-07f448fb8195" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="3021.88800084094" y="1618.06470456089" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="output[0];&#xA;output[1];&#xA;output[2];" ShouldFocus="false" />
    <CoreNodeModels.Watch guid="df5d88d2-dfc5-42d4-b5dd-2ded5c79980c" type="CoreNodeModels.Watch" nickname="Watch" x="3258.81832186869" y="1833.9730134222" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" />
    <CoreNodeModels.Watch guid="516af144-3b9d-45b3-9f0f-4864055cf9e0" type="CoreNodeModels.Watch" nickname="Watch" x="3258.81832186869" y="1619.23536177896" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" />
    <CoreNodeModels.Watch guid="6d21b7b3-7073-42ed-8927-34d225a90f1a" type="CoreNodeModels.Watch" nickname="Watch" x="3258.81832186869" y="1736.97083285232" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7183a2fe-9a6a-4eeb-b223-3525a80ab2f2" start_index="0" end="b1be50ed-f93c-4d9c-b7c4-55d97e820672" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7183a2fe-9a6a-4eeb-b223-3525a80ab2f2" start_index="0" end="e14a4953-9115-4344-ac65-e7243e4975e3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9e561a4f-9f86-4d4e-ac53-e30110ffb406" start_index="0" end="7183a2fe-9a6a-4eeb-b223-3525a80ab2f2" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fb28178d-f0ca-4db0-8510-5202c26f64cf" start_index="0" end="041d63bf-1838-4c6b-b45d-fa9a7a549434" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="041d63bf-1838-4c6b-b45d-fa9a7a549434" start_index="0" end="7183a2fe-9a6a-4eeb-b223-3525a80ab2f2" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b1be50ed-f93c-4d9c-b7c4-55d97e820672" start_index="0" end="c44ca111-4bbf-48cc-9b35-8b339af6c19e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="340d812d-3963-4fff-bb4e-cfadea6b01ca" start_index="0" end="b1be50ed-f93c-4d9c-b7c4-55d97e820672" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e14a4953-9115-4344-ac65-e7243e4975e3" start_index="0" end="ecc8630f-a9b0-4061-9046-b47ce8ba4f2c" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e9ae05b8-9942-4d33-a193-6e955dedaf77" start_index="0" end="e14a4953-9115-4344-ac65-e7243e4975e3" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9094d23b-3338-4e5c-af7b-7d08e547cc25" start_index="0" end="b643c0d1-43e4-4370-9bdf-07f448fb8195" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b643c0d1-43e4-4370-9bdf-07f448fb8195" start_index="0" end="516af144-3b9d-45b3-9f0f-4864055cf9e0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b643c0d1-43e4-4370-9bdf-07f448fb8195" start_index="1" end="6d21b7b3-7073-42ed-8927-34d225a90f1a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b643c0d1-43e4-4370-9bdf-07f448fb8195" start_index="2" end="df5d88d2-dfc5-42d4-b5dd-2ded5c79980c" end_index="0" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="a9747f6a-7ec5-4dc8-9563-b3b5db4ca3f8" text="Choose the sign for the operation&#xD;&#xA;    number &lt; 0      subtract each&#xD;&#xA;    number = 0      0&#xD;&#xA;    number &gt; 0      add each" x="2873.0012257937" y="738.742301001746" />
    <Dynamo.Graph.Notes.NoteModel guid="15e6f0b9-4f4b-4b2b-99a5-a183e93b2bb4" text="Create any list" x="2922.19540784441" y="967.126374113737" />
    <Dynamo.Graph.Notes.NoteModel guid="3020e1e7-9e7c-4b6c-95ff-3103fca7485c" text="The total result." x="3842.61997028563" y="750.757472727614" />
    <Dynamo.Graph.Notes.NoteModel guid="cc4003c4-254a-4a28-8f22-a60435a8665d" text="The series of partial results." x="3829.01437238512" y="931.517559120053" />
    <Dynamo.Graph.Notes.NoteModel guid="156769b0-3990-4c54-b829-ca0d34471993" text="PYTHON&#xD;&#xA;&#xD;&#xA;Dynamo supports Iron Python through one of two types of Python nodes. (A second type of Python node, not shown here, can read a script from an external file to be executed.)&#xD;&#xA;&#xD;&#xA;Double click on the Python node to see the script it contains.&#xD;&#xA;&#xD;&#xA;Input is contained in the IN array.  Output must be assigned to the OUT variable.  The output can be a single value or an array itself." x="2875.2220283401" y="259.980710432507" />
    <Dynamo.Graph.Notes.NoteModel guid="fa51a48b-68ba-4c7a-8391-a895f5dadcf8" text="The output from OUT is an array, where the first item is a single value and the second item is a list of values.  This data structure was specified in the Python definition itself.  Specifying an array allows you to send any number of outputs to the Dynamo graph." x="3484.07180339376" y="606.071235830205" />
    <Dynamo.Graph.Notes.NoteModel guid="d33c14e7-61ce-458b-a48d-18e2bc0b2491" text="This example will add or subtract all of the items in a list.  It's inputs are a number, whose sign determines whether addition or subtraction is used, and a list of numbers." x="2875.17380386808" y="514.018309662917" />
    <Dynamo.Graph.Notes.NoteModel guid="f2dafca0-3d4f-402a-9f5e-d526d94aacf5" text="Tip: Use a Code Block to&#xD;&#xA;access certain items in a list." x="3019.9464365139" y="1777.00590063342" />
    <Dynamo.Graph.Notes.NoteModel guid="9f8b82a7-bbf9-42e1-9d90-06472af8c656" text="This Python example has no inputs.  It demonstrates how to create geometry using Dynamo's protogeometry library.  Since the Python node creates visible geometry, selecting it, just like any other node, will cause the geometry to be highlighted." x="2862.52940949118" y="1481.93740825619" />
  </Notes>
  <Annotations />
  <Presets />
</Workspace>