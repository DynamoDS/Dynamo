{
  "Uuid": "14c319da-a8e5-4861-8c68-f58eca2d791e",
  "IsCustomNode": false,
  "Description": "",
  "Name": "TestMigration_Core_Strings",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "Id": "0000b8720c37431ab46ae7e5c413b38f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bef1b8daed774091ac60a44e91a3bfd2",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcc9f449dda64cbea33abe8881c900ac",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f3e0cdf55da458bb47ea876f461d002",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "15c27a5a0f9e4975b1fbba7766b059a5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0dd1f9cbe3aa46b0ac6ad27ee827dd4a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df2dc1ace8484c168b2cbf2dab9e8cfb",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccb05c1c445b45b2a847e66675950976",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Disabled",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "Id": "65cc1da3683f469b92e02d1c4a2ee55d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f41f10cbe5aa49d6a41b2a73a38b57ff",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4e40ceb3f614f4186892d0de2c77716",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3b12c528d5b44e281d03c98bb109c70",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "09ce2b76b4e94bcdb4b2fcb542dbc3ff",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "26e8046602b94ed8b93abcefe51298f0",
          "Name": "integer",
          "Description": "0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "Id": "4ecf294a4dc946dd8c3aeb80b56e56d0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8b5521360f36430ea6fdcbd6da8bc84e",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da39f234bae5448598b0d7e746d5df7c",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89e90e58188341a1845cc7af4dc1aaed",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ae2c8988d03c4994b953dbfebd7e8d8f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "69d4f59494714903848de4c5670101e8",
          "Name": "string",
          "Description": "String to be made uppercase or lowercase.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5ecdcc0278a426591ce81cc3734c06a",
          "Name": "upper",
          "Description": "True to convert to uppercase, false to convert to lowercase.\n\nbool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d032244f8fc44b398a188c040530f06",
          "Name": "string",
          "Description": "String with converted case.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.ChangeCase@string,bool",
      "Replication": "Disabled",
      "Description": "Converts the given string to all uppercase characters or all lowercase characters based on a boolean parameter.\n\nString.ChangeCase (string: string, upper: bool): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d04c5d420fc74ecb8a105bdb8e544154",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f7862faf2399403cb32cffd0615b34e1",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea97a947e9e74517a9ebd80fe6815311",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Length@string",
      "Replication": "Disabled",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "623aa4e8a6e44ba598f4b0ee3abe5104",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e8faa9d93dbb46bda775c157afe3b484",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e2f85c1c5924437b4258eae7460ac37",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Replication": "Longest",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7f42f1242d5d45a48f751b5d362c83b9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b45a371a236a45e1af6a91a154d3afb7",
          "Name": "string",
          "Description": "String to take substring of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b70988a2431474e9ceb1fc2db64a0f9",
          "Name": "startIndex",
          "Description": "Starting character position of the substring in the original string\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47e8e6df7ccc45119c647c44286ade58",
          "Name": "length",
          "Description": "Number of characters in the substring\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b840146fe90414cac9cb62e6bc901da",
          "Name": "string",
          "Description": "Substring made from the original string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Substring@string,int,int",
      "Replication": "Disabled",
      "Description": "Retrieves a substring from the given string. The substring starts at the given character position and has the given length.\n\nString.Substring (string: string, startIndex: int, length: int): string"
    }
  ],
  "Connectors": [
    {
      "Start": "b3b12c528d5b44e281d03c98bb109c70",
      "End": "0dd1f9cbe3aa46b0ac6ad27ee827dd4a",
      "Id": "dcbd2d274ff24743944d87613a7d84cd",
      "IsHidden": "False"
    },
    {
      "Start": "26e8046602b94ed8b93abcefe51298f0",
      "End": "df2dc1ace8484c168b2cbf2dab9e8cfb",
      "Id": "7699808c3d184e299b40b1229d053b19",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "EnableLegacyPolyCurveBehavior": null,
  "Thumbnail": null,
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "4.0.0.2016",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "0000b8720c37431ab46ae7e5c413b38f",
        "Name": "String.Concat",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -181.0,
        "Y": 205.5
      },
      {
        "Id": "15c27a5a0f9e4975b1fbba7766b059a5",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -181.0,
        "Y": 436.5
      },
      {
        "Id": "65cc1da3683f469b92e02d1c4a2ee55d",
        "Name": "String.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -331.0,
        "Y": 536.5
      },
      {
        "Id": "09ce2b76b4e94bcdb4b2fcb542dbc3ff",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -331.0,
        "Y": 636.5
      },
      {
        "Id": "34c0a191c49040c2af9e8ca80f50b59e",
        "Name": "String.FromObject",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 234.0,
        "Y": 278.166666666667
      },
      {
        "Id": "4ecf294a4dc946dd8c3aeb80b56e56d0",
        "Name": "String.Split",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 234.0,
        "Y": 428.5
      },
      {
        "Id": "ae2c8988d03c4994b953dbfebd7e8d8f",
        "Name": "String.ChangeCase",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -181.0,
        "Y": -25.5
      },
      {
        "Id": "d04c5d420fc74ecb8a105bdb8e544154",
        "Name": "String.Length",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -181.0,
        "Y": 90.0
      },
      {
        "Id": "623aa4e8a6e44ba598f4b0ee3abe5104",
        "Name": "String.ToNumber",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -181.0,
        "Y": 321.0
      },
      {
        "Id": "7f42f1242d5d45a48f751b5d362c83b9",
        "Name": "String.Substring",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 234.0,
        "Y": 127.833333333333
      },
      {
        "Id": "138c352ab09643f2a302e2d855bcded4",
        "Name": "String.FromObject",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 234.0,
        "Y": -22.5
      }
    ],
    "Annotations": [],
    "X": 572.0,
    "Y": 213.0,
    "Zoom": 1.0
  }
}