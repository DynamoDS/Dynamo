; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#define Major
#define Minor
#define Rev
#define Build
#expr ParseVersion("temp\bin\DynamoCore.dll", Major, Minor, Rev, Build)
#define ProductName "Dynamo"
#define ProductVersion Str(Major) + "." + Str(Minor) + "." + Str(Rev)
#define FullVersion GetFileVersion("temp\bin\DynamoCore.dll")

[Setup]
AppName={#ProductName}
AppPublisher={#ProductName}
AppID={{24113174-8C13-4FA5-8010-772C9144AC41}
AppCopyright=
AppPublisherURL=http://www.dynamobim.org
AppSupportURL=http://www.dynamobim.org
AppUpdatesURL=http://www.dynamobim.org
AppVersion={#ProductVersion}
VersionInfoVersion={#ProductVersion}
VersionInfoCompany={#ProductName}
VersionInfoDescription={#ProductName} {#ProductVersion}
VersionInfoTextVersion={#ProductName} {#ProductVersion}
VersionInfoCopyright=
DefaultDirName={pf64}\{#ProductName} {#Major}.{#Minor}
DefaultGroupName=Dynamo
OutputDir=Installers
OutputBaseFilename=InstallDynamo{#ProductVersion}
SetupIconFile=Extra\DynamoInstaller.ico
Compression=lzma
SolidCompression=true
RestartIfNeededByRun=false
FlatComponentsList=false
ShowLanguageDialog=auto
DirExistsWarning=no
UninstallFilesDir={app}\Uninstall
UninstallDisplayIcon={app}\DynamoInstaller.ico
UninstallDisplayName={#ProductName} {#ProductVersion}
UsePreviousAppDir=no

[Dirs]
Name: "{app}\libg_219"
Name: "{app}\libg_220"
Name: "{app}\libg_221"
Name: "{app}\libg_locale"
Name: "{app}\nodes"
Name: "{app}\extensions"
Name: "{app}\viewExtensions"
Name: "{userappdata}\Dynamo\{#Major}.{#Minor}\definitions"
Name: "{userappdata}\Dynamo\{#Major}.{#Minor}\Logs"
Name: "{userappdata}\Dynamo\{#Major}.{#Minor}\packages"


[Components]
Name: "DynamoCore"; Description: "Dynamo Core Functionality"; Types: full compact custom; Flags: fixed
Name: "DynamoForRevit2014"; Description: "Dynamo For Revit 2014"; Types: full compact custom;
Name: "DynamoForRevit2015"; Description: "Dynamo For Revit 2015"; Types: full compact custom;
Name: "DynamoForRevit2016"; Description: "Dynamo For Revit 2016"; Types: full compact custom;
Name: "DynamoTrainingFiles"; Description: "Dynamo Training Files"; Types: full

[Files]
;Needed before installation guaranteed to be complete
Source: "Extra\RevitInstallDetective.exe"; Flags: dontcopy
Source: "Extra\RevitAddinUtility.dll"; Flags: dontcopy
Source: "Extra\DynamoAddinGenerator.exe"; Flags: dontcopy

;Core Files
Source: temp\bin\*; DestDir: {app}; Flags: ignoreversion overwritereadonly; Components: DynamoCore
Source: temp\bin\nodes\*; DestDir: {app}\nodes; Flags: ignoreversion overwritereadonly recursesubdirs; Components: DynamoCore
Source: temp\bin\extensions\*; DestDir: {app}\extensions; Flags: ignoreversion overwritereadonly; Components: DynamoCore
Source: temp\bin\viewExtensions\*; DestDir: {app}\viewExtensions; Flags: ignoreversion overwritereadonly recursesubdirs skipifsourcedoesntexist; Components: DynamoCore
Source: temp\bin\lang\*; DestDir: {app}\; Flags:skipifsourcedoesntexist ignoreversion overwritereadonly recursesubdirs; Components: DynamoCore
Source: Extra\IronPython-2.7.3.msi; DestDir: {tmp}; Flags: deleteafterinstall;
Source: temp\bin\README.txt; DestDir: {app}\; Flags: onlyifdoesntexist isreadme ignoreversion; Components: DynamoCore

;Revit 2014
Source: temp\bin\Revit_2014\*; DestDir: {app}\Revit_2014; Flags:skipifsourcedoesntexist ignoreversion overwritereadonly recursesubdirs; Components: DynamoForRevit2014
Source: temp\bin\Revit_2014\nodes\*; DestDir: {app}\Revit_2014\nodes; Flags:skipifsourcedoesntexist ignoreversion overwritereadonly recursesubdirs; Components: DynamoForRevit2014

;Revit 2015
Source: temp\bin\Revit_2015\*; DestDir: {app}\Revit_2015; Flags:skipifsourcedoesntexist ignoreversion overwritereadonly recursesubdirs; Components: DynamoForRevit2015 
Source: temp\bin\Revit_2015\nodes\*; DestDir: {app}\Revit_2015\nodes; Flags:skipifsourcedoesntexist ignoreversion overwritereadonly recursesubdirs; Components: DynamoForRevit2015 

;Revit 2016
Source: temp\bin\Revit_2016\*; DestDir: {app}\Revit_2016; Flags:skipifsourcedoesntexist ignoreversion overwritereadonly recursesubdirs; Components:  DynamoForRevit2016
Source: temp\bin\Revit_2016\nodes\*; DestDir: {app}\Revit_2016\nodes; Flags:skipifsourcedoesntexist ignoreversion overwritereadonly recursesubdirs; Components: DynamoForRevit2016

;AddinGenerator
Source: Extra\DynamoAddinGenerator.exe; DestDir: {app}; Flags: ignoreversion overwritereadonly uninsneveruninstall; Components: DynamoCore
Source: Extra\RevitAddinUtility.dll; DestDir: {app}; Flags: ignoreversion overwritereadonly uninsneveruninstall; Components: DynamoForRevit2015 DynamoForRevit2014 DynamoForRevit2016

;LibG
Source: temp\bin\LibG_219\*; DestDir: {app}\libg_219; Flags: ignoreversion overwritereadonly; Components: DynamoCore
Source: temp\bin\LibG_220\*; DestDir: {app}\libg_220; Flags: ignoreversion overwritereadonly; Components: DynamoCore
Source: temp\bin\LibG_221\*; DestDir: {app}\libg_221; Flags: ignoreversion overwritereadonly; Components: DynamoCore
Source: temp\bin\LibG_locale\*; DestDir: {app}\libg_locale; Flags: ignoreversion overwritereadonly recursesubdirs; Components: DynamoCore

;Icon
Source: Extra\DynamoInstaller.ico; DestDir: {app}; Flags: ignoreversion overwritereadonly;

;UI
Source: temp\bin\UI\*; DestDir: {app}\UI; Flags: ignoreversion overwritereadonly recursesubdirs; Components: DynamoCore

;Samples
Source: temp\samples\*.*; DestDir: {commonappdata}\Dynamo\{#Major}.{#Minor}\samples; Flags: ignoreversion overwritereadonly recursesubdirs; Components: DynamoTrainingFiles

;Other Custom Nodes
Source: temp\definitions\*; DestDir: {commonappdata}\Dynamo\{#Major}.{#Minor}\definitions; Flags: ignoreversion overwritereadonly recursesubdirs; Components: DynamoCore

;DirectX
Source: temp\DirectX\*.*; DestDir: {tmp}\DirectX;

;Gallery
Source: temp\gallery\*; DestDir: "{commonappdata}\Dynamo\{#Major}.{#Minor}\gallery"; Flags: ignoreversion overwritereadonly recursesubdirs; Components: DynamoCore

[Registry]
Root: HKCU64; Subkey: "Software\{#ProductName}\{#Major}.{#Minor}"; Flags: uninsdeletekey
Root: HKCU64; Subkey: "Software\{#ProductName}\{#Major}.{#Minor}"; ValueType: dword; ValueName: "installed"; ValueData: "1"

Root: HKLM64; Subkey: "Software\Microsoft\Windows\CurrentVersion\Uninstall\{#ProductName} {#Major}.{#Minor}"; Flags: uninsdeletekey
Root: HKLM64; Subkey: "Software\Microsoft\Windows\CurrentVersion\Uninstall\{#ProductName} {#Major}.{#Minor}"; ValueType: string; ValueName: "InstallLocation"; ValueData: "{app}\"
Root: HKLM64; Subkey: "Software\Microsoft\Windows\CurrentVersion\Uninstall\{#ProductName} {#Major}.{#Minor}"; ValueType: string; ValueName: "UninstallString"; ValueData: "{app}\Uninstall\unins000.exe"
Root: HKLM64; Subkey: "Software\Microsoft\Windows\CurrentVersion\Uninstall\{#ProductName} {#Major}.{#Minor}"; ValueType: string; ValueName: "UninstallParam"; ValueData: "/VERYSILENT /NORESTART /SUPPRESSMSGBOXES /UPDATE"
Root: HKLM64; Subkey: "Software\Microsoft\Windows\CurrentVersion\Uninstall\{#ProductName} {#Major}.{#Minor}"; ValueType: string; ValueName: "Version"; ValueData: "{#FullVersion}"
Root: HKLM64; Subkey: "Software\Microsoft\Windows\CurrentVersion\Uninstall\{#ProductName} {#Major}.{#Minor}"; ValueType: dword; ValueName: "RevVersion"; ValueData: "{#Rev}"


[UninstallDelete]
Type: files; Name: "{commonappdata}\Autodesk\Revit\Addins\2014\Dynamo071.addin"
Type: files; Name: "{commonappdata}\Autodesk\Revit\Addins\2015\Dynamo071.addin"
Type: files; Name: "{commonappdata}\Autodesk\Revit\Addins\2014\DynamoVersionSelector.addin"
Type: files; Name: "{app}\DynamoAddinGenerator.exe"
Type: files; Name: "{app}\RevitAddinUtility.dll"
Type: filesandordirs; Name: {app}\libg_219
Type: filesandordirs; Name: {app}\libg_220
Type: filesandordirs; Name: {app}\libg_221
Type: filesandordirs; Name: {app}\libg_locale

[Run]
Filename: "msiexec.exe"; Parameters: "/i ""{tmp}\IronPython-2.7.3.msi"" /qn"; WorkingDir: {tmp};
Filename: "{tmp}\DynamoAddinGenerator.exe"; Parameters: """{app}"""; Flags: runhidden;
Filename: "{tmp}\DirectX\dxsetup.exe"; Parameters: "/silent"

[UninstallRun]
Filename: "{app}\DynamoAddinGenerator.exe"; Parameters: "/uninstall ""{app}"""; Flags: runhidden;

[Icons]
Name: "{group}\{#ProductName} {#ProductVersion}"; Filename: "{app}\DynamoSandbox.exe"

[Code]
var
silentFlag : String;
updateFlag : String;

{ HANDLE INSTALL PROCESS STEPS }

// added custom uninstall trigger based on http://stackoverflow.com/questions/2000296/innosetup-how-to-automatically-uninstall-previous-installed-version
/////////////////////////////////////////////////////////////////////
function RevitInstallationExists(Version: String): Boolean;
var 
  ResultCode: Integer;
begin
  if Exec(ExpandConstant('{tmp}\RevitInstallDetective.exe'), Version, '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then
    Result := (ResultCode = 0)
  else
    MsgBox('RevitInstallDetective failed!' + #13#10 + SysErrorMessage(ResultCode), mbError, MB_OK);
end;

function InitializeSetup(): Boolean;
var
  j: Cardinal;
  sUnInstPath: String;
  sUninstallString: String;
  revision: Cardinal;
  iResultCode: Integer;
  exeVersion: String;
  sMsg: String;
  sMsg2: String;
begin
  silentFlag := ''
  updateFlag := ''
  for j := 1 to ParamCount do
    begin
      if (CompareText(ParamStr(j),'/verysilent') = 0)  then
        silentFlag := '/VERYSILENT'
      else if (CompareText(ParamStr(j),'/silent') = 0)  then
          silentFlag := '/SILENT'
      else if (CompareText(ParamStr(j),'/UPDATE') = 0) then
          updateFlag := '/UPDATE'
    end;

  // we'll need these files to check for a revit installation
  ExtractTemporaryFile('RevitInstallDetective.exe');
  ExtractTemporaryFile('RevitAddinUtility.dll');
  ExtractTemporaryFile('DynamoInstallDetective.dll');
  ExtractTemporaryFile('DynamoAddinGenerator.exe');

  result := true
  // check if there is a valid revit installation on this machine, if not - fail
  if not (RevitInstallationExists('Revit2016') or RevitInstallationExists('Revit2015') or RevitInstallationExists('Revit2014')) then
    begin
	  MsgBox('Dynamo requires an installation of Revit 2014, Revit 2015 or Revit 2016 in order to proceed!', mbCriticalError, MB_OK);
      result := false;
    end;

  // if old EXE version of 0.8.0 is installed, uninstall it
  sUnInstPath := 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{6B5FA6CA-9D69-46CF-B517-1F90C64F7C0B}_is1'
  sUnInstallString := ''
  exeVersion := ''
  RegQueryStringValue(HKLM, sUnInstPath, 'UnInstallString', sUninstallString)
  RegQueryStringValue(HKLM, sUnInstPath, 'DisplayVersion', exeVersion)
  if (sUnInstallString <> '') and (exeVersion = '0.8.0') then
	Exec(RemoveQuotes(sUnInstallString), '/VERYSILENT /NORESTART /SUPPRESSMSGBOXES /UPDATE', '', SW_HIDE, ewWaitUntilTerminated, iResultCode);


  sUnInstPath := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{#ProductName} {#Major}.{#Minor}');
  sUninstallString := '';
  RegQueryStringValue(HKLM64, sUnInstPath, 'UnInstallString', sUninstallString);
    if (sUninstallString <> '') then
	begin
		if not RegQueryDWordValue(HKLM64, sUnInstPath, 'RevVersion', revision) then
			begin
				sMsg := ExpandConstant('Could not determine the revision number for already installed {#ProductName} {#Major}.{#Minor}.')
				sMsg2 := ExpandConstant('Please uninstall {#ProductName} {#Major}.{#Minor} manually, before proceeding with the installation.')
				MsgBox(sMsg + #13#10#13#10 + sMsg2, mbInformation, MB_OK);
				result := false
			end
		else if (revision > {#Rev}) then
			begin
				sMsg := ExpandConstant('A newer version of {#ProductName} {#ProductVersion} is already installed.')
				sMsg2 := ExpandConstant('Please uninstall {#ProductName} {#Major}.{#Minor}.' + IntToStr(revision) + ' manually, before proceeding with the installation.')
				MsgBox(sMsg + #13#10#13#10 + sMsg2, mbInformation, MB_OK);
				result := false
			end
	end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var 
  sUnInstPath: String;
  sUninstallString: String;
  sUnInstallParam: String;
  iResultCode: Integer;
begin
  if (CurStep=ssInstall) then
    begin
        sUnInstPath := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{#ProductName} {#Major}.{#Minor}');
        RegQueryStringValue(HKLM64, sUnInstPath, 'UnInstallString', sUninstallString);
        RegQueryStringValue(HKLM64, sUnInstPath, 'UnInstallParam', sUninstallParam);
        Exec(sUnInstallString, sUnInstallParam, '', SW_HIDE, ewWaitUntilTerminated, iResultCode);
    end;
end;

// check if the components exists, if they do enable the component for installation
procedure CurPageChanged(CurPageID: Integer);
begin
  if CurPageID = wpSelectComponents then
	if not RevitInstallationExists('Revit2014') then
    begin
      WizardForm.ComponentsList.Checked[1] := False;
      WizardForm.ComponentsList.ItemEnabled[1] := False;
    end;
  if not RevitInstallationExists('Revit2015') then
    begin
      WizardForm.ComponentsList.Checked[2] := False;
      WizardForm.ComponentsList.ItemEnabled[2] := False;
    end;
  if not RevitInstallationExists('Revit2016') then
    begin
      WizardForm.ComponentsList.Checked[3] := False;
      WizardForm.ComponentsList.ItemEnabled[3] := False;
    end;
end;

function UpdateAddins() : Integer;
var
    iResultCode: Integer;
begin
  Result := 0;
  if Exec(ExpandConstant('{tmp}\DynamoAddinGenerator.exe'), '', '', SW_HIDE, ewWaitUntilTerminated, iResultCode) then
    Result := 0
  else
    Result := 1
end;

// Note this procedure is run in a different process and doesn't share
// global state with the rest of this file.
procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
    var
    j: Cardinal;
    updateFlag : String;
begin
   if (CurUninstallStep=usPostUninstall) then
    begin
        UpdateAddins();
        updateFlag := '';


		//If this was a manual uninstall we should discard the settings file
      for j := 1 to ParamCount do
        begin
          if (CompareText(ParamStr(j),'/UPDATE') = 0)  then
            updateFlag := '/UPDATE'
        end;

		if (updateFlag = '') then
        begin
		      DeleteFile(ExpandConstant('{userappdata}\Dynamo\{#Major}.{#Minor}\DynamoSettings.xml'));
        end;
    end;
end;
