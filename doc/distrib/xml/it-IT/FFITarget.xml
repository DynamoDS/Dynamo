<?xml version="1.0"?><doc>
    <assembly>
        <name>FFITarget</name>
    </assembly>
    <members>
        <member name="T:FFITarget.ClassFunctionality">
            <summary>Verifica il funzionamento di base delle implementazioni di FFI.</summary>
        </member>
        <member name="T:FFITarget.ClassFunctionalityMirror">
            <summary>Una classe che contiene lo stesso membro IntVal di ClassFunctionality</summary>
        </member>
        <member name="T:FFITarget.CodeCompletionClass">
            <summary>Verifica il completamento del codice nel nodo Code Block.</summary>
        </member>
        <member name="T:FFITarget.InstanceableClass">
            <summary>Una classe di test che crea una piramide utilizzando istanze.</summary>
        </member>
        <member name="T:FFITarget.InstanceableLineClass">
            <summary>Una classe di test che crea una piramide utilizzando istanze.</summary>
        </member>
        <member name="T:FFITarget.InstanceableClass_NoInstanceData">
            <summary>È possibile creare un'istanza di questa classe, ma viene restituito false per instanceInfoAvailable, pertanto si utilizzerà la tassellatura regolare.</summary>
        </member>
        <member name="T:FFITarget.ElementIDLifecycleManager`1">
            <summary>Classe per gestire la durata degli elementi dai relativi ID</summary>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.GetInstance">
            <summary>Restituisce LifecycleManager per il tipo specifico.
            AVVISO: questo è solo un singleton per un determinato TypeArg.</summary>
            <returns/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.RegisterAsssociation(`0,System.Object)">
            <summary>Registra una nuova dipendenza tra un ID elemento e un wrapper.</summary>
            <param name="elementID"/>
            <param name="wrapper"/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.UnRegisterAssociation(`0,System.Object)">
            <summary>Rimuove un'associazione tra un ID elemento e</summary>
            <param name="elementID"/>
            <param name="wrapper"/>
            <returns>Il numero di associazioni rimanenti</returns>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.GetRegisteredCount(`0)">
            <summary>Restituisce il numero di wrapper registrati.</summary>
            <param name="id"/>
            <returns/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.IsRevitDeleted(`0)">
            <summary>Verifica se un elemento è stato eliminato in Revit</summary>
            <param name="id"/>
            <returns/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.NotifyOfRevitDeletion(`0)">
            <summary>Imposta lo stato di eliminazione elemento di Revit.</summary>
            <param name="id">L'elemento che deve essere eliminato&gt;</param>
        </member>
        <member name="M:FFITarget.IncrementerTracedClass.#ctor(System.Int32)">
            <summary>Si noti che x qui è una variabile fittizia che ha lo scopo di forzare l'invio replicato.
            Non viene effettivamente utilizzata.</summary>
            <param name="x"/>
        </member>
        <member name="M:FFITarget.IncrementerTracedClass.#ctor(System.Int32,System.Boolean)">
            <summary>Si noti che x qui è una variabile fittizia che ha lo scopo di forzare l'invio replicato.
            Non viene effettivamente utilizzata.</summary>
            <param name="x">Variabile fittizia utilizzata per forzare l'invio replicato</param>
            <param name="failWithException">Invio non riuscito con un'eccezione anziché</param>
        </member>
        <member name="T:FFITarget.OverloadTarget">
            <summary>Verifica nella destinazione l'eventuale presenza di per metodi in overload.</summary>
        </member>
        <member name="M:FFITarget.TestData.ReturnNestedDictionary">
            <summary>Restituisce un dizionario nidificato.</summary>
            <returns name="col">column</returns>
            <returns name="dict">dictionary</returns>
            <returns name="num">number</returns>
            <returns name="wt">weight</returns>
            <returns name="ok">okay</returns>
        </member>
    </members>
</doc>