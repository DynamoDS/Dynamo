<?xml version="1.0"?><doc>
    <assembly>
        <name>FFITarget</name>
    </assembly>
    <members>
        <member name="T:FFITarget.ClassFunctionality">
            <summary>Testes para verificações funcionais básicas das implementações FFI</summary>
        </member>
        <member name="T:FFITarget.ClassFunctionalityMirror">
            <summary>Uma classe que contém o mesmo membro IntVal que ClassFunctionality</summary>
        </member>
        <member name="T:FFITarget.CodeCompletionClass">
            <summary>Testes para conclusão de código no nó codeblock</summary>
        </member>
        <member name="T:FFITarget.InstanceableClass">
            <summary>Uma classe de teste que cria uma pirâmide usando instâncias.</summary>
        </member>
        <member name="T:FFITarget.InstanceableLineClass">
            <summary>Uma classe de teste que cria uma pirâmide usando instâncias.</summary>
        </member>
        <member name="T:FFITarget.InstanceableClass_NoInstanceData">
            <summary>Essa classe é instanciável, mas retorna false para instanceInfoAvailable, portanto, ela usará a suavização de serrilhado regular.</summary>
        </member>
        <member name="T:FFITarget.ElementIDLifecycleManager`1">
            <summary>Classe para manipular a vida útil dos elementos de suas IDs</summary>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.GetInstance">
            <summary>Retorna o LifecycleManager para o tipo específico
            AVISO: Este é apenas um singleton para um determinado TypeArg</summary>
            <returns/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.RegisterAsssociation(`0,System.Object)">
            <summary>Registrar uma nova dependência entre uma ID de elemento e um wrapper</summary>
            <param name="elementID"/>
            <param name="wrapper"/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.UnRegisterAssociation(`0,System.Object)">
            <summary>Remover uma associação entre uma ID de elemento e</summary>
            <param name="elementID"/>
            <param name="wrapper"/>
            <returns>O número de associações restantes</returns>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.GetRegisteredCount(`0)">
            <summary>Retorna o número de wrappers registrados</summary>
            <param name="id"/>
            <returns/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.IsRevitDeleted(`0)">
            <summary>Verifica se um elemento foi excluído no Revit</summary>
            <param name="id"/>
            <returns/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.NotifyOfRevitDeletion(`0)">
            <summary>Definir estado de exclusão do elemento do Revit</summary>
            <param name="id">O elemento que precisa ser excluído&gt;</param>
        </member>
        <member name="M:FFITarget.IncrementerTracedClass.#ctor(System.Int32)">
            <summary>Observe que x é uma variável fictícia aqui que se destina a forçar o envio replicado
            Na verdade, não é usada</summary>
            <param name="x"/>
        </member>
        <member name="M:FFITarget.IncrementerTracedClass.#ctor(System.Int32,System.Boolean)">
            <summary>Observe que x é uma variável fictícia aqui que se destina a forçar o envio replicado
            Na verdade, ela não é usada</summary>
            <param name="x">Variável fictícia usada para forçar o envio replicado</param>
            <param name="failWithException">Falha no envio com uma exceção em vez de</param>
        </member>
        <member name="T:FFITarget.OverloadTarget">
            <summary>Testar destino de métodos sobrecarregados</summary>
        </member>
        <member name="M:FFITarget.TestData.ReturnNestedDictionary">
            <summary>Retornar dicionário aninhado.</summary>
            <returns name="col">column</returns>
            <returns name="dict">dictionary</returns>
            <returns name="num">number</returns>
            <returns name="wt">weight</returns>
            <returns name="ok">okay</returns>
        </member>
    </members>
</doc>