<?xml version="1.0"?><doc>
    <assembly>
        <name>FFITarget</name>
    </assembly>
    <members>
        <member name="T:FFITarget.ClassFunctionality">
            <summary>用于 FFI 实施的基本功能测试的测试</summary>
        </member>
        <member name="T:FFITarget.ClassFunctionalityMirror">
            <summary>包含与 ClassFunctionality 相同的 IntVal 成员的类</summary>
        </member>
        <member name="T:FFITarget.CodeCompletionClass">
            <summary>用于 codeblock 节点中代码完成的测试</summary>
        </member>
        <member name="T:FFITarget.InstanceableClass">
            <summary>使用实例化创建棱锥的测试类。</summary>
        </member>
        <member name="T:FFITarget.InstanceableLineClass">
            <summary>使用实例化创建棱锥的测试类。</summary>
        </member>
        <member name="T:FFITarget.InstanceableClass_NoInstanceData">
            <summary>此类是可实例化的，但对于 instanceInfoAvailable，它返回 false，因此它将使用常规细分。</summary>
        </member>
        <member name="T:FFITarget.ElementIDLifecycleManager`1">
            <summary>用于根据图元的 ID 处理图元使用寿命的类</summary>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.GetInstance">
            <summary>返回特定类型的 LifecycleManager
            警告: 这只是给定 TypeArg 的单例</summary>
            <returns/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.RegisterAsssociation(`0,System.Object)">
            <summary>注册元素 ID 和包装器之间的新从属关系</summary>
            <param name="elementID"/>
            <param name="wrapper"/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.UnRegisterAssociation(`0,System.Object)">
            <summary>删除图元 ID 和以下对象之间的关联</summary>
            <param name="elementID"/>
            <param name="wrapper"/>
            <returns>剩余关联的数量</returns>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.GetRegisteredCount(`0)">
            <summary>返回已注册的包装器数</summary>
            <param name="id"/>
            <returns/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.IsRevitDeleted(`0)">
            <summary>检查 Revit 中是否已删除图元</summary>
            <param name="id"/>
            <returns/>
        </member>
        <member name="M:FFITarget.ElementIDLifecycleManager`1.NotifyOfRevitDeletion(`0)">
            <summary>设置 Revit 图元的删除状态</summary>
            <param name="id">需要删除的图元&gt;</param>
        </member>
        <member name="M:FFITarget.IncrementerTracedClass.#ctor(System.Int32)">
            <summary>请注意，x 在这里是一个虚拟变量，旨在强制复制分派
            它实际未使用</summary>
            <param name="x"/>
        </member>
        <member name="M:FFITarget.IncrementerTracedClass.#ctor(System.Int32,System.Boolean)">
            <summary>请注意，x 在这里是一个虚拟变量，旨在强制复制分派
            它实际未使用</summary>
            <param name="x">用于强制复制调度的虚拟变量</param>
            <param name="failWithException">分派失败时出现异常，而不是</param>
        </member>
        <member name="T:FFITarget.OverloadTarget">
            <summary>重载方法的测试目标</summary>
        </member>
        <member name="M:FFITarget.TestData.ReturnNestedDictionary">
            <summary>返回嵌套词典。</summary>
            <returns name="col">column</returns>
            <returns name="dict">dictionary</returns>
            <returns name="num">number</returns>
            <returns name="wt">weight</returns>
            <returns name="ok">okay</returns>
        </member>
    </members>
</doc>